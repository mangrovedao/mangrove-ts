{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract AbstractMangrove",
          "name": "_mgv",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_base",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_quote",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "k",
          "type": "uint256"
        }
      ],
      "name": "deploy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dispatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "getMaker",
      "outputs": [
        {
          "internalType": "contract TestMaker",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "length",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5060405161206d38038061206d83398101604081905261002f91610092565b600180546001600160a01b0394851661010002610100600160a81b0319909116179055600280549284166001600160a01b0319938416179055600380549190931691161790556100df565b6001600160a01b038116811461008f57600080fd5b50565b6000806000606084860312156100a757600080fd5b83516100b28161007a565b60208501519093506100c38161007a565b60408501519092506100d48161007a565b809150509250925092565b611f7f806100ee6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631f7b6d32146100515780635686153214610067578063a5e3875114610092578063e9c4a3ac146100a7575b600080fd5b6000546040519081526020015b60405180910390f35b61007a61007536600461047a565b6100af565b6040516001600160a01b03909116815260200161005e565b6100a56100a036600461047a565b6100de565b005b6100a5610320565b60008082815481106100c3576100c3610493565b6000918252602090912001546001600160a01b031692915050565b60015460ff16610311578067ffffffffffffffff811115610101576101016104a9565b60405190808252806020026020018201604052801561012a578160200160208202803683370190505b50805161013f916000916020909101906103f3565b5060005b8181101561030f576001546002546003546040516101009093046001600160a01b03908116939281169291169061017990610458565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f0801580156101b5573d6000803e3d6000fd5b50600082815481106101c9576101c9610493565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506000818154811061020a5761020a610493565b60009182526020909120015460025460405163a3cfe14d60e01b81526001600160a01b039182166004820152678ac7230489e80000602482015291169063a3cfe14d90604401600060405180830381600087803b15801561026a57600080fd5b505af115801561027e573d6000803e3d6000fd5b505050506000818154811061029557610295610493565b600091825260209091200154604051635239cafb60e11b8152821560048201526001600160a01b039091169063a47395f690602401600060405180830381600087803b1580156102e457600080fd5b505af11580156102f8573d6000803e3d6000fd5b505050508080610307906104bf565b915050610143565b505b506001805460ff191681179055565b600080549061032f82476104e6565b90506000811161037b5760405162461bcd60e51b8152602060048201526013602482015272181032ba3432b9103a37903a3930b739b332b960691b604482015260640160405180910390fd5b60005b828110156103ee57600080828154811061039a5761039a610493565b60009182526020822001546040516001600160a01b039091169250829085156108fc0290869084818181858888f193505050509050806103d957600080fd5b505080806103e6906104bf565b91505061037e565b505050565b828054828255906000526020600020908101928215610448579160200282015b8281111561044857825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610413565b50610454929150610465565b5090565b611a418061050983390190565b5b808211156104545760008155600101610466565b60006020828403121561048c57600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6000600182016104df57634e487b7160e01b600052601160045260246000fd5b5060010190565b60008261050357634e487b7160e01b600052601260045260246000fd5b50049056fe60806040526004805463ff00ff00191663010001001790553480156200002457600080fd5b5060405162001a4138038062001a418339810160408190526200004791620000a3565b600080546001600160a01b039485166001600160a01b031991821617909155600180549385169382169390931790925560028054919093169116179055620000f7565b6001600160a01b0381168114620000a057600080fd5b50565b600080600060608486031215620000b957600080fd5b8351620000c6816200008a565b6020850151909350620000d9816200008a565b6040850151909250620000ec816200008a565b809150509250925092565b61193a80620001076000396000f3fe6080604052600436106101bb5760003560e01c8063ba414fa6116100ec578063e923c6511161008a578063fa7626d411610064578063fa7626d414610550578063fc3816c81461056f578063fc8349f21461058f578063ffae399e146105af57600080fd5b8063e923c651146104ef578063f5537ede1461050f578063f8ccbf471461052f57600080fd5b8063ccfbf94d116100c6578063ccfbf94d1461046f578063cda30c3b1461048f578063d3845fea146104af578063e67ecda1146104cf57600080fd5b8063ba414fa61461040a578063c4c6c87d1461042f578063cafffca81461044f57600080fd5b80635a4924e8116101595780637ec95ff3116101335780637ec95ff31461037c5780638b0af9bb1461039c578063a3cfe14d146103b1578063a47395f6146103d157600080fd5b80635a4924e8146102f55780636c49c32c146103235780637a943a371461034357600080fd5b80633a768463116101955780633a768463146102295780633d3d130d1461026e57806353e575ac1461028e578063557f49c3146102bc57600080fd5b80630cc9d656146101c75780632644c05c146101e957806333ac5efd1461020957600080fd5b366101c257005b600080fd5b3480156101d357600080fd5b506101e76101e236600461142d565b6105e8565b005b3480156101f557600080fd5b506101e7610204366004611492565b610631565b34801561021557600080fd5b506101e76102243660046114cd565b6106af565b34801561023557600080fd5b50610251737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561027a57600080fd5b506101e7610289366004611529565b610731565b34801561029a57600080fd5b506102ae6102a9366004611492565b61078d565b604051908152602001610265565b3480156102c857600080fd5b506101e76102d736600461157a565b60028054911515600160a81b0260ff60a81b19909216919091179055565b34801561030157600080fd5b506101e761031036600461157a565b6004805460ff1916911515919091179055565b34801561032f57600080fd5b506102ae61033e36600461159e565b610821565b34801561034f57600080fd5b506101e761035e36600461157a565b60028054911515600160b81b0260ff60b81b19909216919091179055565b34801561038857600080fd5b506102ae6103973660046114cd565b610988565b3480156103a857600080fd5b506102ae610a1d565b3480156103bd57600080fd5b506101e76103cc3660046115bb565b610a8f565b3480156103dd57600080fd5b506101e76103ec36600461157a565b60028054911515600160a01b0260ff60a01b19909216919091179055565b34801561041657600080fd5b5061041f610b0b565b6040519015158152602001610265565b34801561043b57600080fd5b506102ae61044a3660046115e7565b610c3a565b34801561045b57600080fd5b506102ae61046a3660046115e7565b610ccd565b34801561047b57600080fd5b506102ae61048a366004611600565b610d1e565b34801561049b57600080fd5b506102ae6104aa366004611659565b610d9e565b3480156104bb57600080fd5b506101e76104ca3660046115e7565b610e30565b3480156104db57600080fd5b506101e76104ea3660046115e7565b600355565b3480156104fb57600080fd5b506102ae61050a366004611492565b610e92565b34801561051b57600080fd5b506101e761052a36600461168b565b610f1b565b34801561053b57600080fd5b5060045461041f906301000000900460ff1681565b34801561055c57600080fd5b5060045461041f90610100900460ff1681565b34801561057b57600080fd5b506102ae61058a3660046116cc565b610f94565b34801561059b57600080fd5b5061041f6105aa3660046115e7565b611022565b3480156105bb57600080fd5b506101e76105ca36600461157a565b60028054911515600160b01b0260ff60b01b19909216919091179055565b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c28686868686866040516106219695949392919061172e565b60405180910390a1505050505050565b60008054600154600254604051636a4f769160e01b81526001600160a01b0393841694636a4f7691946106769481169316918b918b918b91908b908b90600401611767565b600060405180830381600087803b15801561069057600080fd5b505af11580156106a4573d6000803e3d6000fd5b505050505050505050565b60008054600154600254604051636a4f769160e01b81526001600160a01b0393841694636a4f76919487946106f794908216939116918d918d918d918d908d90600401611767565b6000604051808303818588803b15801561071057600080fd5b505af1158015610724573d6000803e3d6000fd5b5050505050505050505050565b6003541561077f5761077f81602001356003546040518060400160405280601881526020017f496e636f727265637420737461747573206d6573736167650000000000000000815250611092565b61078982826110da565b5050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc9387936107d4939183169216908c908c908c908a908d906004016117ab565b60206040518083038185885af11580156107f2573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061081791906117e9565b9695505050505050565b600254600090600160b01b900460ff161561085c576040805160208082019092526f1d195cdd13585ad95c8bdc995d995c9d60821b81529081fd5b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c23361088b6020850185611802565b61089b6040860160208701611802565b856040013586608001358760a001356040516108bc9695949392919061172e565b60405180910390a1600254600160a01b900460ff161561095f576108e36020830183611802565b6000805460405163095ea7b360e01b81526001600160a01b0391821660048201526024810192909252919091169063095ea7b3906044016020604051808303816000875af1158015610939573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095d919061181f565b505b600254600160a81b900460ff161561098057506418589bdc9d60da1b919050565b506000919050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc9387936109cf939183169216908d908d908d908d908d906004016117ab565b60206040518083038185885af11580156109ed573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610a1291906117e9565b979650505050505050565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610a66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8a91906117e9565b905090565b60005460405163095ea7b360e01b81526001600160a01b039182166004820152602481018390529083169063095ea7b3906044016020604051808303816000875af1158015610ae2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b06919061181f565b505050565b60045460009062010000900460ff1615610b2f575060045462010000900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610c355760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610bbd917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611868565b60408051601f1981840301815290829052610bd791611899565b6000604051808303816000865af19150503d8060008114610c14576040519150601f19603f3d011682016040523d82523d6000602084013e610c19565b606091505b5091505080806020019051810190610c31919061181f565b9150505b919050565b6000805460015460025460405163ad97db1b60e01b81526001600160a01b0392831660048201529082166024820152604481018590526064810184905291169063ad97db1b906084015b6020604051808303816000875af1158015610ca3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc791906117e9565b92915050565b600080546001805460025460405163ad97db1b60e01b81526001600160a01b03928316600482015290821660248201526044810186905260648101929092529091169063ad97db1b90608401610c84565b6000805460405163127db4b760e21b81526001600160a01b03909116906349f6d2dc90610d5b908a908a908a908a908a9089908b906004016117ab565b6020604051808303816000875af1158015610d7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1291906117e9565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc93610de493908216929116908a908a908a9089908b906004016117ab565b6020604051808303816000875af1158015610e03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2791906117e9565b95945050505050565b600054604051630460488160e31b81523060048201526001600160a01b039091169063230244089083906024016000604051808303818588803b158015610e7657600080fd5b505af1158015610e8a573d6000803e3d6000fd5b505050505050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc93610ed893908216929116908b908b908b908b908b906004016117ab565b6020604051808303816000875af1158015610ef7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081791906117e9565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af1158015610f6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8e919061181f565b50505050565b6000805460405163127db4b760e21b81526001600160a01b03909116906349f6d2dc908490610fd3908c908c908c908c908c908a908d906004016117ab565b60206040518083038185885af1158015610ff1573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061101691906117e9565b98975050505050505050565b60008054604051632e1a7d4d60e01b8152600481018490526001600160a01b0390911690632e1a7d4d906024016020604051808303816000875af115801561106e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc7919061181f565b818314610b06577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583816040516110c891906118b5565b60405180910390a1610b0683836111e2565b60045460ff16156111205760405162461bcd60e51b815260206004820152600c60248201526b1c1bdcdd1a1bdbdad1985a5b60a21b604482015260640160405180910390fd5b600254600160b81b900460ff1615610789576000546001600160a01b0316636a4f76916111506020850185611802565b6111606040860160208701611802565b606080870135901c6bffffffffffffffffffffffff166bffffffffffffffffffffffff60608801351660c088013560481c62ffffff16600060608a013560e01c8a604001356040518963ffffffff1660e01b81526004016111c8989796959493929190611767565b600060405180830381600087803b158015610e7657600080fd5b808214610789577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516112569060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974604082015264657333325d60d81b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a1610789737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156114025760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526113a19291602001611868565b60408051601f19818403018152908290526113bb91611899565b6000604051808303816000865af19150503d80600081146113f8576040519150601f19603f3d011682016040523d82523d6000602084013e6113fd565b606091505b505050505b6004805462ff0000191662010000179055565b6001600160a01b038116811461142a57600080fd5b50565b60008060008060008060c0878903121561144657600080fd5b863561145181611415565b9550602087013561146181611415565b9450604087013561147181611415565b959894975094956060810135955060808101359460a0909101359350915050565b600080600080600060a086880312156114aa57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b60008060008060008060c087890312156114e657600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b6000610120828403121561152357600080fd5b50919050565b60008082840361016081121561153e57600080fd5b6115488585611510565b9250604061011f198201121561155d57600080fd5b50610120830190509250929050565b801515811461142a57600080fd5b60006020828403121561158c57600080fd5b81356115978161156c565b9392505050565b600061012082840312156115b157600080fd5b6115978383611510565b600080604083850312156115ce57600080fd5b82356115d981611415565b946020939093013593505050565b6000602082840312156115f957600080fd5b5035919050565b60008060008060008060c0878903121561161957600080fd5b863561162481611415565b9550602087013561163481611415565b95989597505050506040840135936060810135936080820135935060a0909101359150565b6000806000806080858703121561166f57600080fd5b5050823594602084013594506040840135936060013592509050565b6000806000606084860312156116a057600080fd5b83356116ab81611415565b925060208401356116bb81611415565b929592945050506040919091013590565b600080600080600080600060e0888a0312156116e757600080fd5b87356116f281611415565b9650602088013561170281611415565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b6001600160a01b03968716815294861660208601529290941660408401526060830152608082019290925260a081019190915260c00190565b6001600160a01b03988916815296909716602087015260408601949094526060850192909252608084015260a083015260c082015260e08101919091526101000190565b6001600160a01b03978816815295909616602086015260408501939093526060840191909152608083015260a082015260c081019190915260e00190565b6000602082840312156117fb57600080fd5b5051919050565b60006020828403121561181457600080fd5b813561159781611415565b60006020828403121561183157600080fd5b81516115978161156c565b60005b8381101561185757818101518382015260200161183f565b83811115610f8e5750506000910152565b6001600160e01b031983168152815160009061188b81600485016020870161183c565b919091016004019392505050565b600082516118ab81846020870161183c565b9190910192915050565b60408152600560408201526422b93937b960d91b606082015260806020820152600082518060808401526118f08160a085016020870161183c565b601f01601f19169190910160a0019291505056fea2646970667358221220758e228e653deeab2b14f8b888185a342a3bf92b0afc7614c92763efafc6472a64736f6c634300080e0033a264697066735822122028664c34373e72c49123f9c3469bcfa72398b0533b5bf2e6737015883ecc80b564736f6c634300080e0033",
    "sourceMap": "166:1185:97:-:0;;;296:141;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;384:3;:10;;-1:-1:-1;;;;;384:10:97;;;;;-1:-1:-1;;;;;;384:10:97;;;;;;400:4;:12;;;;;-1:-1:-1;;;;;;400:12:97;;;;;;418:5;:14;;;;;;;;;;;166:1185;;14:149:113;-1:-1:-1;;;;;107:31:113;;97:42;;87:70;;153:1;150;143:12;87:70;14:149;:::o;168:599::-;282:6;290;298;351:2;339:9;330:7;326:23;322:32;319:52;;;367:1;364;357:12;319:52;399:9;393:16;418:49;461:5;418:49;:::i;:::-;536:2;521:18;;515:25;486:5;;-1:-1:-1;549:51:113;515:25;549:51;:::i;:::-;671:2;656:18;;650:25;619:7;;-1:-1:-1;684:51:113;650:25;684:51;:::i;:::-;754:7;744:17;;;168:599;;;;;:::o;:::-;166:1185:97;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80631f7b6d32146100515780635686153214610067578063a5e3875114610092578063e9c4a3ac146100a7575b600080fd5b6000546040519081526020015b60405180910390f35b61007a61007536600461047a565b6100af565b6040516001600160a01b03909116815260200161005e565b6100a56100a036600461047a565b6100de565b005b6100a5610320565b60008082815481106100c3576100c3610493565b6000918252602090912001546001600160a01b031692915050565b60015460ff16610311578067ffffffffffffffff811115610101576101016104a9565b60405190808252806020026020018201604052801561012a578160200160208202803683370190505b50805161013f916000916020909101906103f3565b5060005b8181101561030f576001546002546003546040516101009093046001600160a01b03908116939281169291169061017990610458565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f0801580156101b5573d6000803e3d6000fd5b50600082815481106101c9576101c9610493565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506000818154811061020a5761020a610493565b60009182526020909120015460025460405163a3cfe14d60e01b81526001600160a01b039182166004820152678ac7230489e80000602482015291169063a3cfe14d90604401600060405180830381600087803b15801561026a57600080fd5b505af115801561027e573d6000803e3d6000fd5b505050506000818154811061029557610295610493565b600091825260209091200154604051635239cafb60e11b8152821560048201526001600160a01b039091169063a47395f690602401600060405180830381600087803b1580156102e457600080fd5b505af11580156102f8573d6000803e3d6000fd5b505050508080610307906104bf565b915050610143565b505b506001805460ff191681179055565b600080549061032f82476104e6565b90506000811161037b5760405162461bcd60e51b8152602060048201526013602482015272181032ba3432b9103a37903a3930b739b332b960691b604482015260640160405180910390fd5b60005b828110156103ee57600080828154811061039a5761039a610493565b60009182526020822001546040516001600160a01b039091169250829085156108fc0290869084818181858888f193505050509050806103d957600080fd5b505080806103e6906104bf565b91505061037e565b505050565b828054828255906000526020600020908101928215610448579160200282015b8281111561044857825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610413565b50610454929150610465565b5090565b611a418061050983390190565b5b808211156104545760008155600101610466565b60006020828403121561048c57600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6000600182016104df57634e487b7160e01b600052601160045260246000fd5b5060010190565b60008261050357634e487b7160e01b600052601260045260246000fd5b50049056fe60806040526004805463ff00ff00191663010001001790553480156200002457600080fd5b5060405162001a4138038062001a418339810160408190526200004791620000a3565b600080546001600160a01b039485166001600160a01b031991821617909155600180549385169382169390931790925560028054919093169116179055620000f7565b6001600160a01b0381168114620000a057600080fd5b50565b600080600060608486031215620000b957600080fd5b8351620000c6816200008a565b6020850151909350620000d9816200008a565b6040850151909250620000ec816200008a565b809150509250925092565b61193a80620001076000396000f3fe6080604052600436106101bb5760003560e01c8063ba414fa6116100ec578063e923c6511161008a578063fa7626d411610064578063fa7626d414610550578063fc3816c81461056f578063fc8349f21461058f578063ffae399e146105af57600080fd5b8063e923c651146104ef578063f5537ede1461050f578063f8ccbf471461052f57600080fd5b8063ccfbf94d116100c6578063ccfbf94d1461046f578063cda30c3b1461048f578063d3845fea146104af578063e67ecda1146104cf57600080fd5b8063ba414fa61461040a578063c4c6c87d1461042f578063cafffca81461044f57600080fd5b80635a4924e8116101595780637ec95ff3116101335780637ec95ff31461037c5780638b0af9bb1461039c578063a3cfe14d146103b1578063a47395f6146103d157600080fd5b80635a4924e8146102f55780636c49c32c146103235780637a943a371461034357600080fd5b80633a768463116101955780633a768463146102295780633d3d130d1461026e57806353e575ac1461028e578063557f49c3146102bc57600080fd5b80630cc9d656146101c75780632644c05c146101e957806333ac5efd1461020957600080fd5b366101c257005b600080fd5b3480156101d357600080fd5b506101e76101e236600461142d565b6105e8565b005b3480156101f557600080fd5b506101e7610204366004611492565b610631565b34801561021557600080fd5b506101e76102243660046114cd565b6106af565b34801561023557600080fd5b50610251737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561027a57600080fd5b506101e7610289366004611529565b610731565b34801561029a57600080fd5b506102ae6102a9366004611492565b61078d565b604051908152602001610265565b3480156102c857600080fd5b506101e76102d736600461157a565b60028054911515600160a81b0260ff60a81b19909216919091179055565b34801561030157600080fd5b506101e761031036600461157a565b6004805460ff1916911515919091179055565b34801561032f57600080fd5b506102ae61033e36600461159e565b610821565b34801561034f57600080fd5b506101e761035e36600461157a565b60028054911515600160b81b0260ff60b81b19909216919091179055565b34801561038857600080fd5b506102ae6103973660046114cd565b610988565b3480156103a857600080fd5b506102ae610a1d565b3480156103bd57600080fd5b506101e76103cc3660046115bb565b610a8f565b3480156103dd57600080fd5b506101e76103ec36600461157a565b60028054911515600160a01b0260ff60a01b19909216919091179055565b34801561041657600080fd5b5061041f610b0b565b6040519015158152602001610265565b34801561043b57600080fd5b506102ae61044a3660046115e7565b610c3a565b34801561045b57600080fd5b506102ae61046a3660046115e7565b610ccd565b34801561047b57600080fd5b506102ae61048a366004611600565b610d1e565b34801561049b57600080fd5b506102ae6104aa366004611659565b610d9e565b3480156104bb57600080fd5b506101e76104ca3660046115e7565b610e30565b3480156104db57600080fd5b506101e76104ea3660046115e7565b600355565b3480156104fb57600080fd5b506102ae61050a366004611492565b610e92565b34801561051b57600080fd5b506101e761052a36600461168b565b610f1b565b34801561053b57600080fd5b5060045461041f906301000000900460ff1681565b34801561055c57600080fd5b5060045461041f90610100900460ff1681565b34801561057b57600080fd5b506102ae61058a3660046116cc565b610f94565b34801561059b57600080fd5b5061041f6105aa3660046115e7565b611022565b3480156105bb57600080fd5b506101e76105ca36600461157a565b60028054911515600160b01b0260ff60b01b19909216919091179055565b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c28686868686866040516106219695949392919061172e565b60405180910390a1505050505050565b60008054600154600254604051636a4f769160e01b81526001600160a01b0393841694636a4f7691946106769481169316918b918b918b91908b908b90600401611767565b600060405180830381600087803b15801561069057600080fd5b505af11580156106a4573d6000803e3d6000fd5b505050505050505050565b60008054600154600254604051636a4f769160e01b81526001600160a01b0393841694636a4f76919487946106f794908216939116918d918d918d918d908d90600401611767565b6000604051808303818588803b15801561071057600080fd5b505af1158015610724573d6000803e3d6000fd5b5050505050505050505050565b6003541561077f5761077f81602001356003546040518060400160405280601881526020017f496e636f727265637420737461747573206d6573736167650000000000000000815250611092565b61078982826110da565b5050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc9387936107d4939183169216908c908c908c908a908d906004016117ab565b60206040518083038185885af11580156107f2573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061081791906117e9565b9695505050505050565b600254600090600160b01b900460ff161561085c576040805160208082019092526f1d195cdd13585ad95c8bdc995d995c9d60821b81529081fd5b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c23361088b6020850185611802565b61089b6040860160208701611802565b856040013586608001358760a001356040516108bc9695949392919061172e565b60405180910390a1600254600160a01b900460ff161561095f576108e36020830183611802565b6000805460405163095ea7b360e01b81526001600160a01b0391821660048201526024810192909252919091169063095ea7b3906044016020604051808303816000875af1158015610939573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095d919061181f565b505b600254600160a81b900460ff161561098057506418589bdc9d60da1b919050565b506000919050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc9387936109cf939183169216908d908d908d908d908d906004016117ab565b60206040518083038185885af11580156109ed573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610a1291906117e9565b979650505050505050565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610a66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8a91906117e9565b905090565b60005460405163095ea7b360e01b81526001600160a01b039182166004820152602481018390529083169063095ea7b3906044016020604051808303816000875af1158015610ae2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b06919061181f565b505050565b60045460009062010000900460ff1615610b2f575060045462010000900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610c355760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610bbd917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611868565b60408051601f1981840301815290829052610bd791611899565b6000604051808303816000865af19150503d8060008114610c14576040519150601f19603f3d011682016040523d82523d6000602084013e610c19565b606091505b5091505080806020019051810190610c31919061181f565b9150505b919050565b6000805460015460025460405163ad97db1b60e01b81526001600160a01b0392831660048201529082166024820152604481018590526064810184905291169063ad97db1b906084015b6020604051808303816000875af1158015610ca3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc791906117e9565b92915050565b600080546001805460025460405163ad97db1b60e01b81526001600160a01b03928316600482015290821660248201526044810186905260648101929092529091169063ad97db1b90608401610c84565b6000805460405163127db4b760e21b81526001600160a01b03909116906349f6d2dc90610d5b908a908a908a908a908a9089908b906004016117ab565b6020604051808303816000875af1158015610d7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1291906117e9565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc93610de493908216929116908a908a908a9089908b906004016117ab565b6020604051808303816000875af1158015610e03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2791906117e9565b95945050505050565b600054604051630460488160e31b81523060048201526001600160a01b039091169063230244089083906024016000604051808303818588803b158015610e7657600080fd5b505af1158015610e8a573d6000803e3d6000fd5b505050505050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc93610ed893908216929116908b908b908b908b908b906004016117ab565b6020604051808303816000875af1158015610ef7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081791906117e9565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af1158015610f6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8e919061181f565b50505050565b6000805460405163127db4b760e21b81526001600160a01b03909116906349f6d2dc908490610fd3908c908c908c908c908c908a908d906004016117ab565b60206040518083038185885af1158015610ff1573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061101691906117e9565b98975050505050505050565b60008054604051632e1a7d4d60e01b8152600481018490526001600160a01b0390911690632e1a7d4d906024016020604051808303816000875af115801561106e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc7919061181f565b818314610b06577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583816040516110c891906118b5565b60405180910390a1610b0683836111e2565b60045460ff16156111205760405162461bcd60e51b815260206004820152600c60248201526b1c1bdcdd1a1bdbdad1985a5b60a21b604482015260640160405180910390fd5b600254600160b81b900460ff1615610789576000546001600160a01b0316636a4f76916111506020850185611802565b6111606040860160208701611802565b606080870135901c6bffffffffffffffffffffffff166bffffffffffffffffffffffff60608801351660c088013560481c62ffffff16600060608a013560e01c8a604001356040518963ffffffff1660e01b81526004016111c8989796959493929190611767565b600060405180830381600087803b158015610e7657600080fd5b808214610789577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516112569060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974604082015264657333325d60d81b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a1610789737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156114025760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526113a19291602001611868565b60408051601f19818403018152908290526113bb91611899565b6000604051808303816000865af19150503d80600081146113f8576040519150601f19603f3d011682016040523d82523d6000602084013e6113fd565b606091505b505050505b6004805462ff0000191662010000179055565b6001600160a01b038116811461142a57600080fd5b50565b60008060008060008060c0878903121561144657600080fd5b863561145181611415565b9550602087013561146181611415565b9450604087013561147181611415565b959894975094956060810135955060808101359460a0909101359350915050565b600080600080600060a086880312156114aa57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b60008060008060008060c087890312156114e657600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b6000610120828403121561152357600080fd5b50919050565b60008082840361016081121561153e57600080fd5b6115488585611510565b9250604061011f198201121561155d57600080fd5b50610120830190509250929050565b801515811461142a57600080fd5b60006020828403121561158c57600080fd5b81356115978161156c565b9392505050565b600061012082840312156115b157600080fd5b6115978383611510565b600080604083850312156115ce57600080fd5b82356115d981611415565b946020939093013593505050565b6000602082840312156115f957600080fd5b5035919050565b60008060008060008060c0878903121561161957600080fd5b863561162481611415565b9550602087013561163481611415565b95989597505050506040840135936060810135936080820135935060a0909101359150565b6000806000806080858703121561166f57600080fd5b5050823594602084013594506040840135936060013592509050565b6000806000606084860312156116a057600080fd5b83356116ab81611415565b925060208401356116bb81611415565b929592945050506040919091013590565b600080600080600080600060e0888a0312156116e757600080fd5b87356116f281611415565b9650602088013561170281611415565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b6001600160a01b03968716815294861660208601529290941660408401526060830152608082019290925260a081019190915260c00190565b6001600160a01b03988916815296909716602087015260408601949094526060850192909252608084015260a083015260c082015260e08101919091526101000190565b6001600160a01b03978816815295909616602086015260408501939093526060840191909152608083015260a082015260c081019190915260e00190565b6000602082840312156117fb57600080fd5b5051919050565b60006020828403121561181457600080fd5b813561159781611415565b60006020828403121561183157600080fd5b81516115978161156c565b60005b8381101561185757818101518382015260200161183f565b83811115610f8e5750506000910152565b6001600160e01b031983168152815160009061188b81600485016020870161183c565b919091016004019392505050565b600082516118ab81846020870161183c565b9190910192915050565b60408152600560408201526422b93937b960d91b606082015260806020820152600082518060808401526118f08160a085016020870161183c565b601f01601f19169190910160a0019291505056fea2646970667358221220758e228e653deeab2b14f8b888185a342a3bf92b0afc7614c92763efafc6472a64736f6c634300080e0033a264697066735822122028664c34373e72c49123f9c3469bcfa72398b0533b5bf2e6737015883ecc80b564736f6c634300080e0033",
    "sourceMap": "166:1185:97:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;743:78;784:4;803:13;743:78;;160:25:113;;;148:2;133:18;743:78:97;;;;;;;;825:98;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;572:32:113;;;554:51;;542:2;527:18;825:98:97;381:230:113;927:422:97;;;;;;:::i;:::-;;:::i;:::-;;441:298;;;:::i;825:98::-;874:9;908:6;915:1;908:9;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;908:9:97;;825:98;-1:-1:-1;;825:98:97:o;927:422::-;971:8;;;;966:358;;1020:1;998:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;998:24:97;-1:-1:-1;989:33:97;;;;:6;;:33;;;;;;:::i;:::-;;1035:6;1030:288;1051:1;1047;:5;1030:288;;;1122:3;;1137:4;;1154:5;;1108:53;;1122:3;;;;-1:-1:-1;;;;;1122:3:97;;;;1137:4;;;;1154:5;;;1108:53;;;:::i;:::-;-1:-1:-1;;;;;1210:15:113;;;1192:34;;1262:15;;;1257:2;1242:18;;1235:43;1314:15;;;1309:2;1294:18;;1287:43;1142:2;1127:18;1108:53:97;;;;;;;;;;;;;;;;;;;;;;;1069:6;1076:1;1069:9;;;;;;;;:::i;:::-;;;;;;;;;:103;;;;;-1:-1:-1;;;;;1069:103:97;;;;;-1:-1:-1;;;;;1069:103:97;;;;;;1192:6;1199:1;1192:9;;;;;;;;:::i;:::-;;;;;;;;;;;1224:4;;1182:58;;-1:-1:-1;;;1182:58:97;;-1:-1:-1;;;;;1224:4:97;;;1182:58;;;1561:51:113;1231:8:97;1628:18:113;;;1621:34;1192:9:97;;;1182:31;;1534:18:113;;1182:58:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1260:6;1267:1;1260:9;;;;;;;;:::i;:::-;;;;;;;;;;;1250:39;;-1:-1:-1;;;1250:39:97;;1282:6;;1250:39;;;1806:41:113;-1:-1:-1;;;;;1260:9:97;;;;1250:31;;1779:18:113;;1250:39:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1054:3;;;;;:::i;:::-;;;;1030:288;;;;966:358;-1:-1:-1;1340:4:97;1329:15;;-1:-1:-1;;1329:15:97;;;;;927:422::o;441:298::-;476:6;485:13;;;520:25;485:13;520:21;:25;:::i;:::-;504:41;;570:1;559:8;:12;551:44;;;;-1:-1:-1;;;551:44:97;;2519:2:113;551:44:97;;;2501:21:113;2558:2;2538:18;;;2531:30;-1:-1:-1;;;2577:18:113;;;2570:49;2636:18;;551:44:97;;;;;;;;606:6;601:134;622:1;618;:5;601:134;;;638:21;662:6;669:1;662:9;;;;;;;;:::i;:::-;;;;;;;;;;689:20;;-1:-1:-1;;;;;662:9:97;;;;-1:-1:-1;662:9:97;;689:20;;;;;700:8;;662:9;689:20;662:9;689:20;700:8;662:9;689:20;;;;;;;679:30;;725:2;717:11;;;;;;630:105;;625:3;;;;;:::i;:::-;;;;601:134;;;;470:269;;441:298::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;196:180:113;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;347:23:113;;196:180;-1:-1:-1;196:180:113:o;616:127::-;677:10;672:3;668:20;665:1;658:31;708:4;705:1;698:15;732:4;729:1;722:15;748:127;809:10;804:3;800:20;797:1;790:31;840:4;837:1;830:15;864:4;861:1;854:15;1858:232;1897:3;1918:17;;;1915:140;;1977:10;1972:3;1968:20;1965:1;1958:31;2012:4;2009:1;2002:15;2040:4;2037:1;2030:15;1915:140;-1:-1:-1;2082:1:113;2071:13;;1858:232::o;2095:217::-;2135:1;2161;2151:132;;2205:10;2200:3;2196:20;2193:1;2186:31;2240:4;2237:1;2230:15;2268:4;2265:1;2258:15;2151:132;-1:-1:-1;2297:9:113;;2095:217::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "deploy(uint256)": "a5e38751",
    "dispatch()": "e9c4a3ac",
    "getMaker(uint256)": "56861532",
    "length()": "1f7b6d32"
  },
  "ast": {
    "absolutePath": "packages/mangrove-solidity/test/lib/agents/MakerDeployer.sol",
    "id": 71683,
    "exportedSymbols": {
      "AbstractMangrove": [22211],
      "Context": [74194],
      "Counters": [74894],
      "ECDSA": [74598],
      "EIP712": [75045],
      "ERC20": [73994],
      "ERC20BL": [74172],
      "ERC20Base": [73834],
      "IERC20": [24224],
      "IMaker": [24106],
      "ML": [23913],
      "MakerDeployer": [71682],
      "Mangrove": [23080],
      "MgvGovernable": [23557],
      "MgvOfferMaking": [25545],
      "MgvOfferTakingWithPermit": [27849],
      "P": [23884],
      "SimpleTestMaker": [72341],
      "Strings": [74822],
      "Test": [3455],
      "TestMaker": [72397],
      "TestToken": [75210],
      "TrivialTestMaker": [71717]
    },
    "nodeType": "SourceUnit",
    "src": "38:1314:97",
    "nodes": [
      {
        "id": 71485,
        "nodeType": "PragmaDirective",
        "src": "38:24:97",
        "literals": ["solidity", "^", "0.8", ".10"]
      },
      {
        "id": 71486,
        "nodeType": "ImportDirective",
        "src": "64:30:97",
        "absolutePath": "packages/mangrove-solidity/src/Mangrove.sol",
        "file": "mgv_src/Mangrove.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 71683,
        "sourceUnit": 23081,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 71487,
        "nodeType": "ImportDirective",
        "src": "95:25:97",
        "absolutePath": "packages/mangrove-solidity/test/lib/agents/TestMaker.sol",
        "file": "./TestMaker.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 71683,
        "sourceUnit": 72398,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 71488,
        "nodeType": "ImportDirective",
        "src": "121:43:97",
        "absolutePath": "packages/mangrove-solidity/test/lib/tokens/TestToken.sol",
        "file": "mgv_test/lib/tokens/TestToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 71683,
        "sourceUnit": 75211,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 71682,
        "nodeType": "ContractDefinition",
        "src": "166:1185:97",
        "nodes": [
          {
            "id": 71491,
            "nodeType": "VariableDeclaration",
            "src": "193:24:97",
            "constant": false,
            "mutability": "mutable",
            "name": "makers",
            "nameLocation": "211:6:97",
            "scope": 71682,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
              "typeString": "address payable[]"
            },
            "typeName": {
              "baseType": {
                "id": 71489,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "193:15:97",
                "stateMutability": "payable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                }
              },
              "id": 71490,
              "nodeType": "ArrayTypeName",
              "src": "193:17:97",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                "typeString": "address payable[]"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 71493,
            "nodeType": "VariableDeclaration",
            "src": "221:13:97",
            "constant": false,
            "mutability": "mutable",
            "name": "deployed",
            "nameLocation": "226:8:97",
            "scope": 71682,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 71492,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "221:4:97",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 71496,
            "nodeType": "VariableDeclaration",
            "src": "238:20:97",
            "constant": false,
            "mutability": "mutable",
            "name": "mgv",
            "nameLocation": "255:3:97",
            "scope": 71682,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
              "typeString": "contract AbstractMangrove"
            },
            "typeName": {
              "id": 71495,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 71494,
                "name": "AbstractMangrove",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 22211,
                "src": "238:16:97"
              },
              "referencedDeclaration": 22211,
              "src": "238:16:97",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                "typeString": "contract AbstractMangrove"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 71498,
            "nodeType": "VariableDeclaration",
            "src": "262:12:97",
            "constant": false,
            "mutability": "mutable",
            "name": "base",
            "nameLocation": "270:4:97",
            "scope": 71682,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 71497,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "262:7:97",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 71500,
            "nodeType": "VariableDeclaration",
            "src": "278:13:97",
            "constant": false,
            "mutability": "mutable",
            "name": "quote",
            "nameLocation": "286:5:97",
            "scope": 71682,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 71499,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "278:7:97",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 71523,
            "nodeType": "FunctionDefinition",
            "src": "296:141:97",
            "body": {
              "id": 71522,
              "nodeType": "Block",
              "src": "378:59:97",
              "statements": [
                {
                  "expression": {
                    "id": 71512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 71510,
                      "name": "mgv",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71496,
                      "src": "384:3:97",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                        "typeString": "contract AbstractMangrove"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 71511,
                      "name": "_mgv",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71503,
                      "src": "390:4:97",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                        "typeString": "contract AbstractMangrove"
                      }
                    },
                    "src": "384:10:97",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                      "typeString": "contract AbstractMangrove"
                    }
                  },
                  "id": 71513,
                  "nodeType": "ExpressionStatement",
                  "src": "384:10:97"
                },
                {
                  "expression": {
                    "id": 71516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 71514,
                      "name": "base",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71498,
                      "src": "400:4:97",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 71515,
                      "name": "_base",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71505,
                      "src": "407:5:97",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "400:12:97",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 71517,
                  "nodeType": "ExpressionStatement",
                  "src": "400:12:97"
                },
                {
                  "expression": {
                    "id": 71520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 71518,
                      "name": "quote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71500,
                      "src": "418:5:97",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 71519,
                      "name": "_quote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71507,
                      "src": "426:6:97",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "418:14:97",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 71521,
                  "nodeType": "ExpressionStatement",
                  "src": "418:14:97"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 71508,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71503,
                  "mutability": "mutable",
                  "name": "_mgv",
                  "nameLocation": "330:4:97",
                  "nodeType": "VariableDeclaration",
                  "scope": 71523,
                  "src": "313:21:97",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                    "typeString": "contract AbstractMangrove"
                  },
                  "typeName": {
                    "id": 71502,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 71501,
                      "name": "AbstractMangrove",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 22211,
                      "src": "313:16:97"
                    },
                    "referencedDeclaration": 22211,
                    "src": "313:16:97",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                      "typeString": "contract AbstractMangrove"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71505,
                  "mutability": "mutable",
                  "name": "_base",
                  "nameLocation": "348:5:97",
                  "nodeType": "VariableDeclaration",
                  "scope": 71523,
                  "src": "340:13:97",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 71504,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "340:7:97",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71507,
                  "mutability": "mutable",
                  "name": "_quote",
                  "nameLocation": "367:6:97",
                  "nodeType": "VariableDeclaration",
                  "scope": 71523,
                  "src": "359:14:97",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 71506,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "359:7:97",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "307:70:97"
            },
            "returnParameters": {
              "id": 71509,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "378:0:97"
            },
            "scope": 71682,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 71578,
            "nodeType": "FunctionDefinition",
            "src": "441:298:97",
            "body": {
              "id": 71577,
              "nodeType": "Block",
              "src": "470:269:97",
              "statements": [
                {
                  "assignments": [71527],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 71527,
                      "mutability": "mutable",
                      "name": "k",
                      "nameLocation": "481:1:97",
                      "nodeType": "VariableDeclaration",
                      "scope": 71577,
                      "src": "476:6:97",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 71526,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "476:4:97",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 71530,
                  "initialValue": {
                    "expression": {
                      "id": 71528,
                      "name": "makers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71491,
                      "src": "485:6:97",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                        "typeString": "address payable[] storage ref"
                      }
                    },
                    "id": 71529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "485:13:97",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "476:22:97"
                },
                {
                  "assignments": [71532],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 71532,
                      "mutability": "mutable",
                      "name": "perMaker",
                      "nameLocation": "509:8:97",
                      "nodeType": "VariableDeclaration",
                      "scope": 71577,
                      "src": "504:13:97",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 71531,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "504:4:97",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 71540,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 71539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 71535,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "528:4:97",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MakerDeployer_$71682",
                              "typeString": "contract MakerDeployer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MakerDeployer_$71682",
                              "typeString": "contract MakerDeployer"
                            }
                          ],
                          "id": 71534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "520:7:97",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 71533,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "520:7:97",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 71536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "520:13:97",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 71537,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "src": "520:21:97",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 71538,
                      "name": "k",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71527,
                      "src": "544:1:97",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "520:25:97",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "504:41:97"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 71544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 71542,
                          "name": "perMaker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71532,
                          "src": "559:8:97",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 71543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "570:1:97",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "559:12:97",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "3020657468657220746f207472616e73666572",
                        "id": 71545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "573:21:97",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_120c3668aeddc2e8bd573b9075a90f802b4fd572bc62ee4ad7a709f4e7206b82",
                          "typeString": "literal_string \"0 ether to transfer\""
                        },
                        "value": "0 ether to transfer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_120c3668aeddc2e8bd573b9075a90f802b4fd572bc62ee4ad7a709f4e7206b82",
                          "typeString": "literal_string \"0 ether to transfer\""
                        }
                      ],
                      "id": 71541,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "551:7:97",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 71546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "551:44:97",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 71547,
                  "nodeType": "ExpressionStatement",
                  "src": "551:44:97"
                },
                {
                  "body": {
                    "id": 71575,
                    "nodeType": "Block",
                    "src": "630:105:97",
                    "statements": [
                      {
                        "assignments": [71559],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 71559,
                            "mutability": "mutable",
                            "name": "maker",
                            "nameLocation": "654:5:97",
                            "nodeType": "VariableDeclaration",
                            "scope": 71575,
                            "src": "638:21:97",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            "typeName": {
                              "id": 71558,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "638:15:97",
                              "stateMutability": "payable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 71563,
                        "initialValue": {
                          "baseExpression": {
                            "id": 71560,
                            "name": "makers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 71491,
                            "src": "662:6:97",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                              "typeString": "address payable[] storage ref"
                            }
                          },
                          "id": 71562,
                          "indexExpression": {
                            "id": 71561,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 71549,
                            "src": "669:1:97",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "662:9:97",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "638:33:97"
                      },
                      {
                        "assignments": [71565],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 71565,
                            "mutability": "mutable",
                            "name": "ok",
                            "nameLocation": "684:2:97",
                            "nodeType": "VariableDeclaration",
                            "scope": 71575,
                            "src": "679:7:97",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 71564,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "679:4:97",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 71570,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 71568,
                              "name": "perMaker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 71532,
                              "src": "700:8:97",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 71566,
                              "name": "maker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 71559,
                              "src": "689:5:97",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 71567,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "send",
                            "nodeType": "MemberAccess",
                            "src": "689:10:97",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) returns (bool)"
                            }
                          },
                          "id": 71569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "689:20:97",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "679:30:97"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 71572,
                              "name": "ok",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 71565,
                              "src": "725:2:97",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 71571,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "717:7:97",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 71573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "717:11:97",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 71574,
                        "nodeType": "ExpressionStatement",
                        "src": "717:11:97"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 71554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 71552,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71549,
                      "src": "618:1:97",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 71553,
                      "name": "k",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71527,
                      "src": "622:1:97",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "618:5:97",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 71576,
                  "initializationExpression": {
                    "assignments": [71549],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 71549,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "611:1:97",
                        "nodeType": "VariableDeclaration",
                        "scope": 71576,
                        "src": "606:6:97",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 71548,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "606:4:97",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 71551,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 71550,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "615:1:97",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "606:10:97"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 71556,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "625:3:97",
                      "subExpression": {
                        "id": 71555,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71549,
                        "src": "625:1:97",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 71557,
                    "nodeType": "ExpressionStatement",
                    "src": "625:3:97"
                  },
                  "nodeType": "ForStatement",
                  "src": "601:134:97"
                }
              ]
            },
            "functionSelector": "e9c4a3ac",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "dispatch",
            "nameLocation": "450:8:97",
            "parameters": {
              "id": 71524,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "458:2:97"
            },
            "returnParameters": {
              "id": 71525,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "470:0:97"
            },
            "scope": 71682,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 71587,
            "nodeType": "FunctionDefinition",
            "src": "743:78:97",
            "body": {
              "id": 71586,
              "nodeType": "Block",
              "src": "790:31:97",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 71583,
                      "name": "makers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71491,
                      "src": "803:6:97",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                        "typeString": "address payable[] storage ref"
                      }
                    },
                    "id": 71584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "803:13:97",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 71582,
                  "id": 71585,
                  "nodeType": "Return",
                  "src": "796:20:97"
                }
              ]
            },
            "functionSelector": "1f7b6d32",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "length",
            "nameLocation": "752:6:97",
            "parameters": {
              "id": 71579,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "758:2:97"
            },
            "returnParameters": {
              "id": 71582,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71581,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 71587,
                  "src": "784:4:97",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 71580,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "784:4:97",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "783:6:97"
            },
            "scope": 71682,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 71602,
            "nodeType": "FunctionDefinition",
            "src": "825:98:97",
            "body": {
              "id": 71601,
              "nodeType": "Block",
              "src": "885:38:97",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 71596,
                          "name": "makers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71491,
                          "src": "908:6:97",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                            "typeString": "address payable[] storage ref"
                          }
                        },
                        "id": 71598,
                        "indexExpression": {
                          "id": 71597,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71589,
                          "src": "915:1:97",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "908:9:97",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 71595,
                      "name": "TestMaker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72397,
                      "src": "898:9:97",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_TestMaker_$72397_$",
                        "typeString": "type(contract TestMaker)"
                      }
                    },
                    "id": 71599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "898:20:97",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestMaker_$72397",
                      "typeString": "contract TestMaker"
                    }
                  },
                  "functionReturnParameters": 71594,
                  "id": 71600,
                  "nodeType": "Return",
                  "src": "891:27:97"
                }
              ]
            },
            "functionSelector": "56861532",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMaker",
            "nameLocation": "834:8:97",
            "parameters": {
              "id": 71590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71589,
                  "mutability": "mutable",
                  "name": "i",
                  "nameLocation": "848:1:97",
                  "nodeType": "VariableDeclaration",
                  "scope": 71602,
                  "src": "843:6:97",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 71588,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "843:4:97",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "842:8:97"
            },
            "returnParameters": {
              "id": 71594,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71593,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 71602,
                  "src": "874:9:97",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_TestMaker_$72397",
                    "typeString": "contract TestMaker"
                  },
                  "typeName": {
                    "id": 71592,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 71591,
                      "name": "TestMaker",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 72397,
                      "src": "874:9:97"
                    },
                    "referencedDeclaration": 72397,
                    "src": "874:9:97",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestMaker_$72397",
                      "typeString": "contract TestMaker"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "873:11:97"
            },
            "scope": 71682,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 71681,
            "nodeType": "FunctionDefinition",
            "src": "927:422:97",
            "body": {
              "id": 71680,
              "nodeType": "Block",
              "src": "960:389:97",
              "statements": [
                {
                  "condition": {
                    "id": 71608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "970:9:97",
                    "subExpression": {
                      "id": 71607,
                      "name": "deployed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71493,
                      "src": "971:8:97",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 71675,
                  "nodeType": "IfStatement",
                  "src": "966:358:97",
                  "trueBody": {
                    "id": 71674,
                    "nodeType": "Block",
                    "src": "981:343:97",
                    "statements": [
                      {
                        "expression": {
                          "id": 71615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 71609,
                            "name": "makers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 71491,
                            "src": "989:6:97",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                              "typeString": "address payable[] storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 71613,
                                "name": "k",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 71604,
                                "src": "1020:1:97",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 71612,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "998:21:97",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_payable_$dyn_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (address payable[] memory)"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 71610,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1002:15:97",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "id": 71611,
                                "nodeType": "ArrayTypeName",
                                "src": "1002:17:97",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                                  "typeString": "address payable[]"
                                }
                              }
                            },
                            "id": 71614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "998:24:97",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                              "typeString": "address payable[] memory"
                            }
                          },
                          "src": "989:33:97",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                            "typeString": "address payable[] storage ref"
                          }
                        },
                        "id": 71616,
                        "nodeType": "ExpressionStatement",
                        "src": "989:33:97"
                      },
                      {
                        "body": {
                          "id": 71672,
                          "nodeType": "Block",
                          "src": "1059:259:97",
                          "statements": [
                            {
                              "expression": {
                                "id": 71647,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 71627,
                                    "name": "makers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 71491,
                                    "src": "1069:6:97",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                      "typeString": "address payable[] storage ref"
                                    }
                                  },
                                  "id": 71629,
                                  "indexExpression": {
                                    "id": 71628,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 71618,
                                    "src": "1076:1:97",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "1069:9:97",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 71637,
                                              "name": "mgv",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 71496,
                                              "src": "1122:3:97",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                                                "typeString": "contract AbstractMangrove"
                                              }
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "id": 71639,
                                                  "name": "base",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 71498,
                                                  "src": "1137:4:97",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                ],
                                                "id": 71638,
                                                "name": "TestToken",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 75210,
                                                "src": "1127:9:97",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_contract$_TestToken_$75210_$",
                                                  "typeString": "type(contract TestToken)"
                                                }
                                              },
                                              "id": 71640,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "1127:15:97",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                                "typeString": "contract TestToken"
                                              }
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "id": 71642,
                                                  "name": "quote",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 71500,
                                                  "src": "1154:5:97",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                ],
                                                "id": 71641,
                                                "name": "TestToken",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 75210,
                                                "src": "1144:9:97",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_contract$_TestToken_$75210_$",
                                                  "typeString": "type(contract TestToken)"
                                                }
                                              },
                                              "id": 71643,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "1144:16:97",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                                "typeString": "contract TestToken"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                                                "typeString": "contract AbstractMangrove"
                                              },
                                              {
                                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                                "typeString": "contract TestToken"
                                              },
                                              {
                                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                                "typeString": "contract TestToken"
                                              }
                                            ],
                                            "id": 71636,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "NewExpression",
                                            "src": "1108:13:97",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_AbstractMangrove_$22211_$_t_contract$_IERC20_$24224_$_t_contract$_IERC20_$24224_$returns$_t_contract$_TestMaker_$72397_$",
                                              "typeString": "function (contract AbstractMangrove,contract IERC20,contract IERC20) returns (contract TestMaker)"
                                            },
                                            "typeName": {
                                              "id": 71635,
                                              "nodeType": "UserDefinedTypeName",
                                              "pathNode": {
                                                "id": 71634,
                                                "name": "TestMaker",
                                                "nodeType": "IdentifierPath",
                                                "referencedDeclaration": 72397,
                                                "src": "1112:9:97"
                                              },
                                              "referencedDeclaration": 72397,
                                              "src": "1112:9:97",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_TestMaker_$72397",
                                                "typeString": "contract TestMaker"
                                              }
                                            }
                                          },
                                          "id": 71644,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "1108:53:97",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_TestMaker_$72397",
                                            "typeString": "contract TestMaker"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_TestMaker_$72397",
                                            "typeString": "contract TestMaker"
                                          }
                                        ],
                                        "id": 71633,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "1100:7:97",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 71632,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "1100:7:97",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 71645,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1100:62:97",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 71631,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1081:8:97",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_payable_$",
                                      "typeString": "type(address payable)"
                                    },
                                    "typeName": {
                                      "id": 71630,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1081:8:97",
                                      "stateMutability": "payable",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 71646,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1081:91:97",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "src": "1069:103:97",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 71648,
                              "nodeType": "ExpressionStatement",
                              "src": "1069:103:97"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 71656,
                                        "name": "base",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 71498,
                                        "src": "1224:4:97",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 71655,
                                      "name": "TestToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 75210,
                                      "src": "1214:9:97",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_TestToken_$75210_$",
                                        "typeString": "type(contract TestToken)"
                                      }
                                    },
                                    "id": 71657,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1214:15:97",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestToken_$75210",
                                      "typeString": "contract TestToken"
                                    }
                                  },
                                  {
                                    "hexValue": "3130",
                                    "id": 71658,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1231:8:97",
                                    "subdenomination": "ether",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10000000000000000000_by_1",
                                      "typeString": "int_const 10000000000000000000"
                                    },
                                    "value": "10"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestToken_$75210",
                                      "typeString": "contract TestToken"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_10000000000000000000_by_1",
                                      "typeString": "int_const 10000000000000000000"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "baseExpression": {
                                          "id": 71650,
                                          "name": "makers",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 71491,
                                          "src": "1192:6:97",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                            "typeString": "address payable[] storage ref"
                                          }
                                        },
                                        "id": 71652,
                                        "indexExpression": {
                                          "id": 71651,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 71618,
                                          "src": "1199:1:97",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "1192:9:97",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      ],
                                      "id": 71649,
                                      "name": "TestMaker",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 72397,
                                      "src": "1182:9:97",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_TestMaker_$72397_$",
                                        "typeString": "type(contract TestMaker)"
                                      }
                                    },
                                    "id": 71653,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1182:20:97",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestMaker_$72397",
                                      "typeString": "contract TestMaker"
                                    }
                                  },
                                  "id": 71654,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "approveMgv",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 71869,
                                  "src": "1182:31:97",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$24224_$_t_uint256_$returns$__$",
                                    "typeString": "function (contract IERC20,uint256) external"
                                  }
                                },
                                "id": 71659,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1182:58:97",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 71660,
                              "nodeType": "ExpressionStatement",
                              "src": "1182:58:97"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 71669,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 71667,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 71618,
                                      "src": "1282:1:97",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 71668,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1287:1:97",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "1282:6:97",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "baseExpression": {
                                          "id": 71662,
                                          "name": "makers",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 71491,
                                          "src": "1260:6:97",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                            "typeString": "address payable[] storage ref"
                                          }
                                        },
                                        "id": 71664,
                                        "indexExpression": {
                                          "id": 71663,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 71618,
                                          "src": "1267:1:97",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "1260:9:97",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      ],
                                      "id": 71661,
                                      "name": "TestMaker",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 72397,
                                      "src": "1250:9:97",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_TestMaker_$72397_$",
                                        "typeString": "type(contract TestMaker)"
                                      }
                                    },
                                    "id": 71665,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1250:20:97",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestMaker_$72397",
                                      "typeString": "contract TestMaker"
                                    }
                                  },
                                  "id": 71666,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "shouldFail",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 71830,
                                  "src": "1250:31:97",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                                    "typeString": "function (bool) external"
                                  }
                                },
                                "id": 71670,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1250:39:97",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 71671,
                              "nodeType": "ExpressionStatement",
                              "src": "1250:39:97"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 71623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 71621,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 71618,
                            "src": "1047:1:97",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 71622,
                            "name": "k",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 71604,
                            "src": "1051:1:97",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1047:5:97",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 71673,
                        "initializationExpression": {
                          "assignments": [71618],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 71618,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "1040:1:97",
                              "nodeType": "VariableDeclaration",
                              "scope": 71673,
                              "src": "1035:6:97",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 71617,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "1035:4:97",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 71620,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 71619,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1044:1:97",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "1035:10:97"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 71625,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "1054:3:97",
                            "subExpression": {
                              "id": 71624,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 71618,
                              "src": "1054:1:97",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 71626,
                          "nodeType": "ExpressionStatement",
                          "src": "1054:3:97"
                        },
                        "nodeType": "ForStatement",
                        "src": "1030:288:97"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 71678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 71676,
                      "name": "deployed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71493,
                      "src": "1329:8:97",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 71677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1340:4:97",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1329:15:97",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 71679,
                  "nodeType": "ExpressionStatement",
                  "src": "1329:15:97"
                }
              ]
            },
            "functionSelector": "a5e38751",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deploy",
            "nameLocation": "936:6:97",
            "parameters": {
              "id": 71605,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71604,
                  "mutability": "mutable",
                  "name": "k",
                  "nameLocation": "948:1:97",
                  "nodeType": "VariableDeclaration",
                  "scope": 71681,
                  "src": "943:6:97",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 71603,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "943:4:97",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "942:8:97"
            },
            "returnParameters": {
              "id": 71606,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "960:0:97"
            },
            "scope": 71682,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "MakerDeployer",
        "contractDependencies": [72397],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [71682],
        "name": "MakerDeployer",
        "nameLocation": "175:13:97",
        "scope": 71683,
        "usedErrors": []
      }
    ],
    "license": "AGPL-3.0"
  },
  "id": 97
}
