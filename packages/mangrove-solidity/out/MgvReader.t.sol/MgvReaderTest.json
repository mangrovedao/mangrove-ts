{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Credit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Debit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Kill",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "NewMgv",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "base",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "quote",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "offerIds",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "wants",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "gives",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "makerAddr",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "gasreqs",
          "type": "uint256[]"
        }
      ],
      "name": "OBState",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerWants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGives",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "mgvData",
          "type": "bytes32"
        }
      ],
      "name": "OfferFail",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "OfferRetract",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerWants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGives",
          "type": "uint256"
        }
      ],
      "name": "OfferSuccess",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gives",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasprice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasreq",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "prev",
          "type": "uint256"
        }
      ],
      "name": "OfferWrite",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGot",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGave",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "penalty",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feePaid",
          "type": "uint256"
        }
      ],
      "name": "OrderComplete",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "OrderStart",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "posthookData",
          "type": "bytes32"
        }
      ],
      "name": "PosthookFail",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "SetActive",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetDensity",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "offer_gasbase",
          "type": "uint256"
        }
      ],
      "name": "SetGasbase",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetGasmax",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetGasprice",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "SetGovernance",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "SetMonitor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "SetNotify",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "SetUseOracle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "SetVault",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "outbound",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "inbound",
          "type": "address"
        }
      ],
      "name": "offers_head",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gives",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasreq",
          "type": "uint256"
        }
      ],
      "name": "offers_line",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "t",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "power",
          "type": "uint256"
        }
      ],
      "name": "cash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "t",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "cash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "echoSender",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256[]",
          "name": "ints",
          "type": "int256[]"
        }
      ],
      "name": "logary",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "uints",
          "type": "uint256[]"
        }
      ],
      "name": "logary",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "$out",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "$in",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "label",
          "type": "string"
        }
      ],
      "name": "setupMaker",
      "outputs": [
        {
          "internalType": "contract TestMaker",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "$out",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "$in",
          "type": "address"
        }
      ],
      "name": "setupMakerDeployer",
      "outputs": [
        {
          "internalType": "contract MakerDeployer",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "inverted",
          "type": "bool"
        }
      ],
      "name": "setupMangrove",
      "outputs": [
        {
          "internalType": "contract AbstractMangrove",
          "name": "_mgv",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "inverted",
          "type": "bool"
        }
      ],
      "name": "setupMangrove",
      "outputs": [
        {
          "internalType": "contract AbstractMangrove",
          "name": "_mgv",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setupMangrove",
      "outputs": [
        {
          "internalType": "contract AbstractMangrove",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "inbound_tkn",
          "type": "address"
        }
      ],
      "name": "setupMangrove",
      "outputs": [
        {
          "internalType": "contract AbstractMangrove",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "$out",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "$in",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "label",
          "type": "string"
        }
      ],
      "name": "setupTaker",
      "outputs": [
        {
          "internalType": "contract TestTaker",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_correct_endpoints_0",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_correct_endpoints_1",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_no_wasted_time",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_provision_0",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_provision_1",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_provision_oracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_read_packed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_returns_zero_on_nonexisting_offer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1368:26:0:-:0;;;-1:-1:-1;;163:28:1;;;;;-1:-1:-1;2152:20:100;;;;3904:34;;;;226:5494:114;1728:237:99;;;1793:64;;;;-1:-1:-1;;;1793:64:99;;;;1368:26:0;1793:64:99;;;;;;;;-1:-1:-1;;;1793:64:99;;;;1853:2;-1:-1:-1;1793:64:99;;;-1:-1:-1;1728:237:99;;;1872:65;;;;-1:-1:-1;;;1872:65:99;;1793:64;1872:65;;;;-1:-1:-1;1872:65:99;;;;;-1:-1:-1;;;1872:65:99;;-1:-1:-1;1872:65:99;;;;-1:-1:-1;1872:65:99;-1:-1:-1;1728:237:99;;;;-1:-1:-1;1728:237:99;;;;1694:271;;;-1:-1:-1;;1694:271:99;;;226:5494:114;;1694:271:99;;1368:26:0;;1694:271:99;;;;;;1793:64;1694:271;:::i;:::-;-1:-1:-1;1694:271:99;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1694:271:99;;;;;;;;;;;;-1:-1:-1;;1694:271:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1694:271:99;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1694:271:99;;;;;;;;;;;;-1:-1:-1;;1694:271:99;;;;;;;;;;;;;;;;;;;;;;226:5494:114;;;;;;;;;-1:-1:-1;2020:32:99;;;-1:-1:-1;;;2020:32:99;;2029:9;2020:32;;;226:51:125;293:18;;;286:30;;;;352:1;332:18;;;325:29;-1:-1:-1;;;370:18:125;;;363:39;237:61:1;;2020:8:99;;419:19:125;;2020:32:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2058:32:99;;;-1:-1:-1;;;2058:32:99;;2069:4;2058:32;;;669:51:125;736:18;;;729:30;;;795:2;775:18;;;768:30;-1:-1:-1;;;814:18:125;;;807:41;2058:32:99;;237:61:1;;-1:-1:-1;2058:8:99;;-1:-1:-1;865:19:125;;;;;-1:-1:-1;;2058:32:99;;;;;;;-1:-1:-1;237:61:1;2058:32:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;226:5494:114;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;226:5494:114;;;-1:-1:-1;226:5494:114;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;895:380:125;974:1;970:12;;;;1017;;;1038:61;;1092:4;1084:6;1080:17;1070:27;;1038:61;1145:2;1137:6;1134:14;1114:18;1111:38;1108:161;;1191:10;1186:3;1182:20;1179:1;1172:31;1226:4;1223:1;1216:15;1254:4;1251:1;1244:15;1108:161;;895:380;;;:::o;:::-;226:5494:114;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620001925760003560e01c80636cc12a2411620000f0578063bfdc358811620000a3578063edca5da7116200007a578063edca5da71462000334578063f4655536146200033e578063f8ccbf471462000348578063fa7626d4146200035c57600080fd5b8063bfdc358814620002ef578063d56a22f01462000306578063ea14b5c3146200031d57600080fd5b80636cc12a24146200026c5780638c0048321462000292578063b84e3eda146200029c578063b8566b3d14620002b3578063ba414fa614620002bd578063bbab0fac14620002d857600080fd5b80633336a63f11620001495780633336a63f146200020957806336ba0cfc14620002205780633a768463146200022a5780633ba5eaa91462000241578063521606d2146200024b578063628f4e2f146200026257600080fd5b80630645f2be14620001975780630a9254e414620001cb5780630b3d8c4214620001d757806318653e3814620001ee5780631e91f8cb14620001f8578063241799ed14620001ff575b600080fd5b620001ae620001a8366004620046d0565b6200036a565b6040516001600160a01b0390911681526020015b60405180910390f35b620001d562000494565b005b620001ae620001e836600462004706565b620006c0565b620001d5620006e3565b33620001ae565b620001d562000b68565b620001ae6200021a366004620047f9565b62000c36565b620001d562000d8c565b620001ae6000805160206201769583398151915281565b620001d562000f4d565b620001d56200025c366004620048d1565b62001153565b620001d56200128f565b620002836200027d3660046200496b565b6200148d565b604051908152602001620001c2565b620001ae620014bc565b620001d5620002ad366004620048d1565b620014cf565b620001d5620015ff565b620002c762001fa5565b6040519015158152602001620001c2565b620001ae620002e9366004620049a3565b620020d0565b620001ae62000300366004620047f9565b62002153565b6200028362000317366004620049e1565b6200217c565b620001ae6200032e366004620049a3565b62002217565b620001d562002227565b620001d562002231565b600054620002c79062010000900460ff1681565b600054620002c79060ff1681565b60008115620003bc57306028621e848060405162000388906200462a565b620003969392919062004a10565b604051809103906000f080158015620003b3573d6000803e3d6000fd5b50905062000400565b306028621e8480604051620003d19062004638565b620003df9392919062004a10565b604051809103906000f080158015620003fc573d6000803e3d6000fd5b5090505b6000805160206201769583398151915263c657c71882604080516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260086044820152674d616e67726f766560c01b6064820152608401600060405180830381600087803b1580156200047657600080fd5b505af11580156200048b573d6000803e3d6000fd5b50505050919050565b6200049e62002279565b620004c7604051806040016040528060068152602001656f7261636c6560d01b815250620024e0565b601a80546001600160a01b0319166001600160a01b03929092169182179055604080516020808201835260008083528351918201819052818401528251808203840181526060820193849052632e5884f960e21b909352600080516020620176958339815191529363b96213e4936200054593919260640162004a8e565b600060405180830381600087803b1580156200056057600080fd5b505af115801562000575573d6000803e3d6000fd5b5050600e54620005bb92506001600160a01b03169050600f546001600160a01b03166040518060400160405280600581526020016436b0b5b2b960d91b81525062002153565b601880546001600160a01b0319166001600160a01b03928316179055600d5416604051620005e99062004646565b6001600160a01b039091168152602001604051809103906000f08015801562000616573d6000803e3d6000fd5b50601980546001600160a01b0319166001600160a01b039283161790556018546040516369c22ff560e11b8152674563918244f40000600482015291169063d3845fea90602401600060405180830381600087803b1580156200067857600080fd5b505af11580156200068d573d6000803e3d6000fd5b5050600f54620006be92506001600160a01b031690506018546001600160a01b0316670de0b6b3a7640000620024ed565b565b6000620006cd826200036a565b9050620006dc848483620024fc565b9392505050565b60185460405163cda30c3b60e01b8152670de0b6b3a764000060048201819052602482015261c350604482015260006064820181905291829182916001600160a01b03169063cda30c3b906084016020604051808303816000875af115801562000751573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000777919062004ad2565b601954600e54600f54604051633206d59560e21b81529394506001600160a01b039283169363c81b565493620007ba938116921690600090819060040162004aec565b6040805180830381865afa158015620007d7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007fd919062004b15565b80935081945050506200083c836001604051806040016040528060118152602001700c4b8c081ddc9bdb99c81cdd185c9d1259607a1b815250620027e1565b620008728260006040518060400160405280601081526020016f0625c6040eee4dedcce40d8cadccee8d60831b815250620027e1565b601954600e54600f54604051633206d59560e21b81526001600160a01b039384169363c81b565493620008b49390821692911690600190819060040162004aec565b6040805180830381865afa158015620008d1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008f7919062004b15565b809350819450505062000936836001604051806040016040528060118152602001700c4b8c481ddc9bdb99c81cdd185c9d1259607a1b815250620027e1565b6200096c8260016040518060400160405280601081526020016f0625c6240eee4dedcce40d8cadccee8d60831b815250620027e1565b601954600e54600f54604051633206d59560e21b81526001600160a01b039384169363c81b565493620009b093908216929116906001906105299060040162004aec565b6040805180830381865afa158015620009cd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009f3919062004b15565b809350819450505062000a32836001604051806040016040528060118152602001700c4b8c881ddc9bdb99c81cdd185c9d1259607a1b815250620027e1565b62000a688260016040518060400160405280601081526020016f0625c6440eee4dedcce40d8cadccee8d60831b815250620027e1565b601954600e54600f54604051633206d59560e21b81526001600160a01b039384169363c81b56549362000aab9390821692911690600290600c9060040162004aec565b6040805180830381865afa15801562000ac8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000aee919062004b15565b809350819450505062000b2d836000604051806040016040528060118152602001700c4b8c081ddc9bdb99c81cdd185c9d1259607a1b815250620027e1565b62000b638260006040518060400160405280601081526020016f0625c6040eee4dedcce40d8cadccee8d60831b815250620027e1565b505050565b600d54601a546040516305cd823960e41b81526001600160a01b039182166004820152911690635cd8239090602401600060405180830381600087803b15801562000bb257600080fd5b505af115801562000bc7573d6000803e3d6000fd5b5050600d54604051636804f61360e01b8152600160048201526001600160a01b039091169250636804f61391506024015b600060405180830381600087803b15801562000c1357600080fd5b505af115801562000c28573d6000803e3d6000fd5b50505050620006be6200282e565b600080600d60009054906101000a90046001600160a01b0316858560405162000c5f9062004654565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f08015801562000c9c573d6000803e3d6000fd5b5060405163c88a5e6d60e01b81526001600160a01b038216600482015268056bc75e2d631000006024820152909150600080516020620176958339815191529063c88a5e6d90604401600060405180830381600087803b15801562000d0057600080fd5b505af115801562000d15573d6000803e3d6000fd5b50506040516318caf8e360e31b815260008051602062017695833981519152925063c657c718915062000d4f908490879060040162004b3a565b600060405180830381600087803b15801562000d6a57600080fd5b505af115801562000d7f573d6000803e3d6000fd5b5092979650505050505050565b60185460405163cda30c3b60e01b8152670de0b6b3a76400006004820181905260248201526127106044820152600060648201819052916001600160a01b03169063cda30c3b906084016020604051808303816000875af115801562000df6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e1c919062004ad2565b60185460405163c4c6c87d60e01b8152600481018390529192506001600160a01b03169063c4c6c87d906024016020604051808303816000875af115801562000e69573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e8f919062004ad2565b50601954600e54600f54604051632c7e545f60e01b81526000936001600160a01b0390811693632c7e545f9362000ed493918316921690879060329060040162004aec565b600060405180830381865afa15801562000ef2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000f1c919081019062004cb0565b505091505062000f49815160006040518060600160405280603c8152602001620176fc603c9139620027e1565b5050565b601954600e5460009182916001600160a01b039182169163c81b56549116600f546001600160a01b03166000620186a06040518563ffffffff1660e01b815260040162000f9e949392919062004aec565b6040805180830381865afa15801562000fbb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000fe1919062004b15565b809250819350505062001020826000604051806040016040528060118152602001700c0b8c081ddc9bdb99c81cdd185c9d1259607a1b815250620027e1565b620010568160006040518060400160405280601081526020016f0605c6040eee4dedcce40d8cadccee8d60831b815250620027e1565b601954600e54600f54604051633206d59560e21b81526001600160a01b039384169363c81b5654936200109b9390821692911690602090620186a09060040162004aec565b6040805180830381865afa158015620010b8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010de919062004b15565b80925081935050506200111d826000604051806040016040528060118152602001700c0b8c481ddc9bdb99c81cdd185c9d1259607a1b815250620027e1565b62000f498160006040518060400160405280601081526020016f0605c6240eee4dedcce40d8cadccee8d60831b815250620027e1565b604080516020810190915260008082525b82518110156200128357825182906000805160206201769583398151915290636900a3ae908690859081106200119e576200119e62004da9565b60200260200101516040518263ffffffff1660e01b8152600401620011c591815260200190565b600060405180830381865afa158015620011e3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200120d919081019062004dbf565b6040516020016200122092919062004e3f565b60405160208183030381529060405291506001835162001241919062004e88565b8110156200126e57816040516020016200125c919062004ea2565b60405160208183030381529060405291505b806200127a8162004eca565b91505062001164565b5062000f498162002a85565b601954600e54600f54604051632c7e545f60e01b81526001600160a01b0393841693632c7e545f93620012d2939082169291169060009060329060040162004aec565b600060405180830381865afa158015620012f0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200131a919081019062004cb0565b5050505060005a601954600e54600f54604051632c7e545f60e01b81529394506001600160a01b0392831693632c7e545f936200136593811692169060009060329060040162004aec565b600060405180830381865afa15801562001383573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620013ad919081019062004cb0565b5050505060005a620013c0908362004e88565b90505a601954600e54600f54604051632c7e545f60e01b81529395506001600160a01b0392831693632c7e545f936200140a9381169216906000906302faf0809060040162004aec565b600060405180830381865afa15801562001428573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001452919081019062004cb0565b5050505060005a62001465908462004e88565b905062000b6382826040518060800160405280604781526020016201777860479139620027e1565b60006200149c82600a62004fe3565b620014a885856200217c565b620014b4919062004ff1565b949350505050565b6000620014ca60006200036a565b905090565b604080516020810190915260008082525b82518110156200128357825182906000805160206201769583398151915290636900a3ae908690859081106200151a576200151a62004da9565b60200260200101516040518263ffffffff1660e01b81526004016200154191815260200190565b600060405180830381865afa1580156200155f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001589919081019062004dbf565b6040516020016200159c92919062004e3f565b604051602081830303815290604052915060018351620015bd919062004e88565b811015620015ea5781604051602001620015d8919062004ea2565b60405160208183030381529060405291505b80620015f68162004eca565b915050620014e0565b601954600e54600f54604051632c7e545f60e01b81526000938493849384936001600160a01b0393841693632c7e545f936200164a9390821692911690869060329060040162004aec565b600060405180830381865afa15801562001668573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001692919081019062004cb0565b9350935093509350620016de835160006040518060400160405280601a81526020017f6964733a2077726f6e67206c656e677468206f6e2032656c656d000000000000815250620027e1565b62001711825160006040518060400160405280601d8152602001600080516020620176b5833981519152815250620027e1565b62001744815160006040518060400160405280601e815260200160008051602062017758833981519152815250620027e1565b60185460405163cda30c3b60e01b8152670de0b6b3a76400006004820181905260248201526127106044820152600060648201526001600160a01b039091169063cda30c3b906084016020604051808303816000875af1158015620017ad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620017d3919062004ad2565b50601954600e54600f54604051632c7e545f60e01b81526001600160a01b0393841693632c7e545f9362001817939082169291169060009060329060040162004aec565b600060405180830381865afa15801562001835573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200185f919081019062004cb0565b825160408051808201909152601a81527f6964733a2077726f6e67206c656e677468206f6e2031656c656d00000000000060208201529498509296509094509250620018ae91600190620027e1565b620018e1825160016040518060400160405280601d8152602001600080516020620176b5833981519152815250620027e1565b62001914815160016040518060400160405280601e815260200160008051602062017758833981519152815250620027e1565b60185460405163cda30c3b60e01b8152670c7d713b49da00006004820152670de0b6b3a764000060248201526127106044820152600060648201526001600160a01b039091169063cda30c3b906084016020604051808303816000875af115801562001984573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620019aa919062004ad2565b50601954600e54600f54604051632c7e545f60e01b81526001600160a01b0393841693632c7e545f93620019ee939082169291169060009060329060040162004aec565b600060405180830381865afa15801562001a0c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001a36919081019062004cb0565b825160408051808201909152601a81527f6964733a2077726f6e67206c656e677468206f6e2032656c656d0000000000006020820152949850929650909450925062001a8591600290620027e1565b62001ab8825160026040518060400160405280601d8152602001600080516020620176b5833981519152815250620027e1565b62001aeb815160026040518060400160405280601e815260200160008051602062017758833981519152815250620027e1565b601954600e54600f54604051632c7e545f60e01b81526001600160a01b0393841693632c7e545f9362001b2e939082169291169060019060329060040162004aec565b600060405180830381865afa15801562001b4c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001b76919081019062004cb0565b8094508195508296508397505050505062001bae83516001604051806060016040528060278152602001620177bf60279139620027e1565b62001be1825160016040518060400160405280601d8152602001600080516020620176b5833981519152815250620027e1565b62001c14815160016040518060400160405280601e815260200160008051602062017758833981519152815250620027e1565b60185460405163cda30c3b60e01b8152670b1a2bc2ec5000006004820152670de0b6b3a764000060248201526127106044820152600060648201526001600160a01b039091169063cda30c3b906084016020604051808303816000875af115801562001c84573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001caa919062004ad2565b50601954600e54600f54604051632c7e545f60e01b81526001600160a01b0393841693632c7e545f9362001cee939082169291169060009060029060040162004aec565b600060405180830381865afa15801562001d0c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001d36919081019062004cb0565b8094508195508296508397505050505062001d6e83516002604051806060016040528060278152602001620176d560279139620027e1565b62001da1825160026040518060400160405280601d8152602001600080516020620176b5833981519152815250620027e1565b62001dd4815160026040518060400160405280601e815260200160008051602062017758833981519152815250620027e1565b601954600e54600f54604051632c7e545f60e01b81526001600160a01b0393841693632c7e545f9362001e17939082169291169060009060329060040162004aec565b600060405180830381865afa15801562001e35573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001e5f919081019062004cb0565b81519397509195509350915062001ed190839060009062001e845762001e8462004da9565b602002602001015160400151670b1a2bc2ec5000006040518060400160405280601981526020017877726f6e672077616e747320666f72206f66666572735b305d60381b815250620027e1565b62001f388260018151811062001eeb5762001eeb62004da9565b602002602001015160400151670c7d713b49da00006040518060400160405280601981526020017877726f6e672077616e747320666f72206f66666572735b305d60381b815250620027e1565b62001f9f8260028151811062001f525762001f5262004da9565b602002602001015160400151670de0b6b3a76400006040518060400160405280601981526020017877726f6e672077616e747320666f72206f66666572735b305d60381b815250620027e1565b50505050565b60008054610100900460ff161562001fc65750600054610100900460ff1690565b6000600080516020620176958339815191523b15620020cb576040805160008051602062017695833981519152602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916200204d917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162005014565b60408051601f1981840301815290829052620020699162005047565b6000604051808303816000865af19150503d8060008114620020a8576040519150601f19603f3d011682016040523d82523d6000602084013e620020ad565b606091505b5091505080806020019051810190620020c7919062005065565b9150505b919050565b600d54600090620020ea906001600160a01b031662002acc565b50600d546040516001600160a01b0390911690849084906200210c9062004662565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f08015801562002149573d6000803e3d6000fd5b5090505b92915050565b600080600d60009054906101000a90046001600160a01b0316858560405162000c5f9062004670565b60006200218862002bb6565b6000836001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015620021c9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620021ef919062005085565b60ff169050620021fe62002bc2565b6200220b81600a62004fe3565b620014b49084620050aa565b6000620006dc83836000620006c0565b620006be6200282e565b600d54600e54600f546040516313e84be360e11b81526001600160a01b039283166004820152908216602482015261426860448201529116906327d097c69060640162000bf8565b601354604051309160119160129160ff169062002296906200467e565b620022a5949392919062005173565b604051809103906000f080158015620022c2573d6000803e3d6000fd5b50600e80546001600160a01b0319166001600160a01b03929092169190911790553060165460405160149160159160ff9091169062002301906200467e565b62002310949392919062005173565b604051809103906000f0801580156200232d573d6000803e3d6000fd5b50600f80546001600160a01b0319166001600160a01b03928316908117909155600e54601054620023679391909116919060ff16620006c0565b600d80546001600160a01b0319166001600160a01b03929092169182179055604080516316c1a85160e31b8152905163b60d428891678ac7230489e8000091600480830192600092919082900301818588803b158015620023c757600080fd5b505af1158015620023dc573d6000803e3d6000fd5b5050600e54600d5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116935063095ea7b3925060440190506020604051808303816000875af115801562002439573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200245f919062005065565b50600f54600d5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015620024b7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620024dd919062005065565b50565b6000620006dc8262002c83565b62000b63838383600062002e0a565b620025078362002acc565b50620025138262002acc565b50601754604051630b73a18f60e01b81526001600160a01b0385811660048301528481166024830152604482019290925260006064820152614e20608482015290821690630b73a18f9060a401600060405180830381600087803b1580156200257b57600080fd5b505af115801562002590573d6000803e3d6000fd5b5050601754604051630b73a18f60e01b81526001600160a01b0386811660048301528781166024830152604482019290925260006064820152614e2060848201529084169250630b73a18f915060a401600060405180830381600087803b158015620025fb57600080fd5b505af115801562002610573d6000803e3d6000fd5b505050506000805160206201773883398151915260001c60601b60601c6001600160a01b031663c657c71884856001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156200267b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620026a5919081019062004dbf565b6040518363ffffffff1660e01b8152600401620026c492919062004b3a565b600060405180830381600087803b158015620026df57600080fd5b505af1158015620026f4573d6000803e3d6000fd5b505050506000805160206201773883398151915260001c60601b60601c6001600160a01b031663c657c71883846001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156200275f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262002789919081019062004dbf565b6040518363ffffffff1660e01b8152600401620027a892919062004b3a565b600060405180830381600087803b158015620027c357600080fd5b505af1158015620027d8573d6000803e3d6000fd5b50505050505050565b81831462000b63577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583816040516200281a9190620051c2565b60405180910390a162000b6383836200304c565b601954600e54600f54604051636669097160e01b81526000936001600160a01b039081169363666909719362002871939183169216908690819060040162004aec565b602060405180830381865afa1580156200288f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620028b5919062004ad2565b600d546018546040516370a0823160e01b81526001600160a01b0391821660048201529293506000929116906370a0823190602401602060405180830381865afa15801562002908573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200292e919062004ad2565b60185460405163cda30c3b60e01b8152670de0b6b3a764000060048201819052602482015260006044820181905260648201529192506001600160a01b03169063cda30c3b906084016020604051808303816000875af115801562002997573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620029bd919062004ad2565b50600d546018546040516370a0823160e01b81526001600160a01b03918216600482015260009291909116906370a0823190602401602060405180830381865afa15801562002a10573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002a36919062004ad2565b905062000b6362002a48828462004e88565b846040518060400160405280601e81526020017f70726f766973696f6e20636f6d7075746174696f6e2069732077726f6e670000815250620027e1565b620024dd8160405160240162002a9c9190620051f3565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b17905262003177565b60006001600160a01b03821662002ba7577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162002b3d906020808252601e908201527f4572726f723a20616464726573732073686f756c64206e6f7420626520300000604082015260600190565b60405180910390a160408051818152600781830152664164647265737360c81b60608201526001600160a01b038416602082015290517f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f9181900360800190a162002ba762003198565b506001600160a01b0316151590565b620006be60006200329c565b60085460010362002c385760095460405163ca669fa760e01b81526001600160a01b039091166004820152600080516020620176958339815191529063ca669fa7906024015b600060405180830381600087803b15801562002c2357600080fd5b505af115801562001f9f573d6000803e3d6000fd5b600854600203620006be576009546040516303223eab60e11b81526001600160a01b03909116600482015260008051602062017695833981519152906306447d569060240162002c08565b80516020820120600a8054600181019091556040516001625e79b760e01b0319815291016004820181905290600090600080516020620176958339815191529063ffa18649906024016020604051808303816000875af115801562002cec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002d12919062005208565b60408051808201825260088152676e6f74207a65726f60c01b60208201529051635a6b63c160e11b8152919250600080516020620176958339815191529163b4d6c7829162002d679185919060040162004b3a565b600060405180830381600087803b15801562002d8257600080fd5b505af115801562002d97573d6000803e3d6000fd5b50506040516318caf8e360e31b815260008051602062017695833981519152925063c657c718915062002dd1908490879060040162004b3a565b600060405180830381600087803b15801562002dec57600080fd5b505af115801562002e01573d6000803e3d6000fd5b50505050915091565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b179052915160009287169162002e609162005047565b6000604051808303816000865af19150503d806000811462002e9f576040519150601f19603f3d011682016040523d82523d6000602084013e62002ea4565b606091505b5091505060008180602001905181019062002ec0919062004ad2565b905062002f328462002f2b8762002f026370a0823160e01b62002ee560018d6200341d565b9060038201805463ffffffff191660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b9062003442565b8215620030445760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b0389169162002f7d919062005047565b6000604051808303816000865af19150503d806000811462002fbc576040519150601f19603f3d011682016040523d82523d6000602084013e62002fc1565b606091505b5091505060008180602001905181019062002fdd919062004ad2565b905082861015620030085762002ff4868462004e88565b62003000908262004e88565b905062003023565b62003014838762004e88565b62003020908262005228565b90505b620030418162002f2b6318160ddd60e01b62002ee560018d6200341d565b50505b505050505050565b80821462000f49577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620030bf9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a162000f4962003198565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b600080516020620176958339815191523b156200328b5760405160009060008051602062017695833981519152907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490620032069083906519985a5b195960d21b9060019060200162004a10565b60408051601f198184030181529082905262003226929160200162005014565b60408051601f1981840301815290829052620032429162005047565b6000604051808303816000865af19150503d806000811462003281576040519150601f19603f3d011682016040523d82523d6000602084013e62003286565b606091505b505050505b6000805461ff001916610100179055565b600060085560408051631e91f8cb60e01b815290513091631e91f8cb9160048083019260209291908290030181865afa158015620032de573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003304919062005208565b600980546001600160a01b0319166001600160a01b039290921691821790553014620024dd57306001600160a01b0316631e91f8cb6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562003369573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200338f919062005208565b6009546001600160a01b03908116911614620033ad57600160085550565b8015620024dd576002600855604080516390c5013b60e01b8152905160008051602062017695833981519152916390c5013b91600480830192600092919082900301818387803b1580156200340157600080fd5b505af115801562003416573d6000803e3d6000fd5b5050505050565b6005820180546001600160a01b0319166001600160a01b039290921691909117905590565b62000f498282600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b9460009390929091830182828015620034bb57602002820191906000526020600020905b815481526020019060010190808311620034a6575b50505050509050600083620034d083620037c1565b604051602001620034e392919062005014565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a1683528152928120919450909290916200353791869188910162005243565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166200357257620035708762003875565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b0319881684528252808320905190918391620035b391879189910162005243565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b031684604051620035fa919062005047565b600060405180830381855afa9150503d806000811462003637576040519150601f19603f3d011682016040523d82523d6000602084013e6200363c565b606091505b5091506200365990508162003653886020620050aa565b620045a0565b604051630667f9d760e41b81526001600160a01b038a1660048201526024810185905290925060009150600080516020620176958339815191529063667f9d70906044016020604051808303816000875af1158015620036bd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620036e3919062004ad2565b9050808214620037105760405162461bcd60e51b815260040162003707906200527f565b60405180910390fd5b6040516370ca10bb60e01b815260008051602062017695833981519152906370ca10bb9062003748908b9087908e9060040162004a10565b600060405180830381600087803b1580156200376357600080fd5b505af115801562003778573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff19169055620037ad60028b0160006200468c565b896004016000905550505050505050505050565b6060600082516020620037d59190620050aa565b67ffffffffffffffff811115620037f057620037f062004758565b6040519080825280601f01601f1916602001820160405280156200381b576020820181803683370190505b50905060005b83518110156200386e57600084828151811062003842576200384262004da9565b602002602001015190508082602002602001840152508080620038659062004eca565b91505062003821565b5092915050565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b949387939192909190830182828015620038e757602002820191906000526020600020905b815481526020019060010190808311620038d2575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a1684528252808320905195965094919350620039339250859187910162005243565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff1615620039d2576001600160a01b0384166000908152602087815260408083206001600160e01b03198716845282528083209051909291620039a291859187910162005243565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b600083620039e083620037c1565b604051602001620039f392919062005014565b60405160208183030381529060405290506000805160206201773883398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562003a5257600080fd5b505af115801562003a67573d6000803e3d6000fd5b50505050600080866001600160a01b03168360405162003a88919062005047565b600060405180830381855afa9150503d806000811462003ac5576040519150601f19603f3d011682016040523d82523d6000602084013e62003aca565b606091505b50915062003ae190508162003653876020620050aa565b6040516365bc948160e01b81526001600160a01b03891660048201529092506000915060008051602062017695833981519152906365bc9481906024016000604051808303816000875af115801562003b3e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262003b6891908101906200537c565b509050805160010362003e4b5760006000805160206201773883398151915260001c6001600160a01b031663667f9d70898460008151811062003baf5762003baf62004da9565b60200260200101516040518363ffffffff1660e01b815260040162003be99291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af115801562003c09573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003c2f919062004ad2565b90508062003c9a577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5888360008151811062003c6f5762003c6f62004da9565b602090810291909101810151604080516001600160a01b039094168452918301520160405180910390a15b80831462003cbc5760405162461bcd60e51b815260040162003707906200527f565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8888878960405160200162003cf492919062005243565b604051602081830303815290604052805190602001208560008151811062003d205762003d2062004da9565b602002602001015160001c60405162003d3d9493929190620053e7565b60405180910390a18160008151811062003d5b5762003d5b62004da9565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c168352845280822090519293909262003da6918a918c910162005243565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c1685528252828420925190939162003e10918a918c910162005243565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff19169115159190911790555062004423565b600181511115620043b25760005b8151811015620043ab5760006000805160206201773883398151915260001c6001600160a01b031663667f9d708a85858151811062003e9c5762003e9c62004da9565b60200260200101516040518363ffffffff1660e01b815260040162003ed69291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af115801562003ef6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003f1c919062004ad2565b90508062003f86577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a58984848151811062003f5b5762003f5b62004da9565b602090810291909101810151604080516001600160a01b039094168452918301520160405180910390a15b6000805160206201773883398151915260001c6001600160a01b03166370ca10bb8a85858151811062003fbd5762003fbd62004da9565b602002602001015161133760f01b6040518463ffffffff1660e01b815260040162003feb9392919062004a10565b600060405180830381600087803b1580156200400657600080fd5b505af11580156200401b573d6000803e3d6000fd5b50505050600060608a6001600160a01b0316876040516200403d919062005047565b600060405180830381855afa9150503d80600081146200407a576040519150601f19603f3d011682016040523d82523d6000602084013e6200407f565b606091505b5090925090506200409781620036538b6020620050aa565b9550818015620040ab575061133760f01b86145b15620042fe577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c604051602001620040e992919062005243565b6040516020818303038152906040528051906020012088888151811062004114576200411462004da9565b602002602001015160001c604051620041319493929190620053e7565b60405180910390a18484815181106200414e576200414e62004da9565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f168352845280822090519293909262004199918d918f910162005243565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c6040516020016200422692919062005243565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff0219169083151502179055506000805160206201773883398151915260001c6001600160a01b03166370ca10bb8c87878151811062004298576200429862004da9565b6020026020010151866040518463ffffffff1660e01b8152600401620042c19392919062004a10565b600060405180830381600087803b158015620042dc57600080fd5b505af1158015620042f1573d6000803e3d6000fd5b50505050505050620043ab565b6000805160206201773883398151915260001c6001600160a01b03166370ca10bb8c87878151811062004335576200433562004da9565b6020026020010151866040518463ffffffff1660e01b81526004016200435e9392919062004a10565b600060405180830381600087803b1580156200437957600080fd5b505af11580156200438e573d6000803e3d6000fd5b505050505050508080620043a29062004eca565b91505062003e59565b5062004423565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e606482015260840162003707565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051909291620044679188918a910162005243565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16620044f65760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201526e3a143994903737ba103337bab7321760891b606482015260840162003707565b6005890180546001600160a01b031916905560038901805463ffffffff191690556200452760028a0160006200468c565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a168452825280832090519092916200456d9188918a910162005243565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b60008060006020855111620045b7578451620045ba565b60205b905060005b818110156200462057620045d5816008620050aa565b86620045e2838862005228565b81518110620045f557620045f562004da9565b01602001516001600160f81b031916901c929092179180620046178162004eca565b915050620045bf565b5090949350505050565b61567e806200541883390190565b6155e4806200aa9683390190565b610daf806201007a83390190565b6112068062010e2983390190565b61206d806201202f83390190565b611a41806201409c83390190565b611bb88062015add83390190565b5080546000825590600052602060002090810190620024dd91905b80821115620046bd5760008155600101620046a7565b5090565b8015158114620024dd57600080fd5b600060208284031215620046e357600080fd5b8135620006dc81620046c1565b6001600160a01b0381168114620024dd57600080fd5b6000806000606084860312156200471c57600080fd5b83356200472981620046f0565b925060208401356200473b81620046f0565b915060408401356200474d81620046c1565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff8111828210171562004794576200479462004758565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715620047c657620047c662004758565b604052919050565b600067ffffffffffffffff821115620047eb57620047eb62004758565b50601f01601f191660200190565b6000806000606084860312156200480f57600080fd5b83356200481c81620046f0565b925060208401356200482e81620046f0565b9150604084013567ffffffffffffffff8111156200484b57600080fd5b8401601f810186136200485d57600080fd5b8035620048746200486e82620047ce565b6200479a565b8181528760208385010111156200488a57600080fd5b816020840160208301376000602083830101528093505050509250925092565b600067ffffffffffffffff821115620048c757620048c762004758565b5060051b60200190565b60006020808385031215620048e557600080fd5b823567ffffffffffffffff811115620048fd57600080fd5b8301601f810185136200490f57600080fd5b8035620049206200486e82620048aa565b81815260059190911b820183019083810190878311156200494057600080fd5b928401925b82841015620049605783358252928401929084019062004945565b979650505050505050565b6000806000606084860312156200498157600080fd5b83356200498e81620046f0565b95602085013595506040909401359392505050565b60008060408385031215620049b757600080fd5b8235620049c481620046f0565b91506020830135620049d681620046f0565b809150509250929050565b60008060408385031215620049f557600080fd5b823562004a0281620046f0565b946020939093013593505050565b6001600160a01b039390931683526020830191909152604082015260600190565b60005b8381101562004a4e57818101518382015260200162004a34565b8381111562001f9f5750506000910152565b6000815180845262004a7a81602086016020860162004a31565b601f01601f19169290920160200192915050565b6001600160a01b038416815260606020820181905260009062004ab49083018562004a60565b828103604084015262004ac8818562004a60565b9695505050505050565b60006020828403121562004ae557600080fd5b5051919050565b6001600160a01b0394851681529290931660208301526040820152606081019190915260800190565b6000806040838503121562004b2957600080fd5b505080516020909101519092909150565b6001600160a01b0383168152604060208201819052600090620014b49083018462004a60565b600082601f83011262004b7257600080fd5b8151602062004b856200486e83620048aa565b82815260079290921b8401810191818101908684111562004ba557600080fd5b8286015b8481101562004bfd576080818903121562004bc45760008081fd5b62004bce6200476e565b815181528482015185820152604080830151908201526060808301519082015283529183019160800162004ba9565b509695505050505050565b600082601f83011262004c1a57600080fd5b8151602062004c2d6200486e83620048aa565b82815260079290921b8401810191818101908684111562004c4d57600080fd5b8286015b8481101562004bfd576080818903121562004c6c5760008081fd5b62004c766200476e565b815162004c8381620046f0565b81528185015185820152604080830151908201526060808301519082015283529183019160800162004c51565b6000806000806080858703121562004cc757600080fd5b8451935060208086015167ffffffffffffffff8082111562004ce857600080fd5b818801915088601f83011262004cfd57600080fd5b815162004d0e6200486e82620048aa565b81815260059190911b8301840190848101908b83111562004d2e57600080fd5b938501935b8285101562004d4e5784518252938501939085019062004d33565b60408b0151909850945050508083111562004d6857600080fd5b62004d7689848a0162004b60565b9450606088015192508083111562004d8d57600080fd5b505062004d9d8782880162004c08565b91505092959194509250565b634e487b7160e01b600052603260045260246000fd5b60006020828403121562004dd257600080fd5b815167ffffffffffffffff81111562004dea57600080fd5b8201601f8101841362004dfc57600080fd5b805162004e0d6200486e82620047ce565b81815285602083850101111562004e2357600080fd5b62004e3682602083016020860162004a31565b95945050505050565b6000835162004e5381846020880162004a31565b83519083019062004e6981836020880162004a31565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b60008282101562004e9d5762004e9d62004e72565b500390565b6000825162004eb681846020870162004a31565b61016160f51b920191825250600201919050565b60006001820162004edf5762004edf62004e72565b5060010190565b600181815b8085111562004f2757816000190482111562004f0b5762004f0b62004e72565b8085161562004f1957918102915b93841c939080029062004eeb565b509250929050565b60008262004f40575060016200214d565b8162004f4f575060006200214d565b816001811462004f68576002811462004f735762004f93565b60019150506200214d565b60ff84111562004f875762004f8762004e72565b50506001821b6200214d565b5060208310610133831016604e8410600b841016171562004fb8575081810a6200214d565b62004fc4838362004ee6565b806000190482111562004fdb5762004fdb62004e72565b029392505050565b6000620006dc838362004f2f565b6000826200500f57634e487b7160e01b600052601260045260246000fd5b500490565b6001600160e01b03198316815281516000906200503981600485016020870162004a31565b919091016004019392505050565b600082516200505b81846020870162004a31565b9190910192915050565b6000602082840312156200507857600080fd5b8151620006dc81620046c1565b6000602082840312156200509857600080fd5b815160ff81168114620006dc57600080fd5b6000816000190483118215151615620050c757620050c762004e72565b500290565b8054600090600181811c9080831680620050e757607f831692505b602080841082036200510957634e487b7160e01b600052602260045260246000fd5b83885260208801828015620051275760018114620051395762005166565b60ff1987168252828201975062005166565b60008981526020902060005b87811015620051605781548482015290860190840162005145565b83019850505b5050505050505092915050565b6001600160a01b03851681526080602082018190526000906200519990830186620050cc565b8281036040840152620051ad8186620050cc565b91505060ff8316606083015295945050505050565b60408152600560408201526422b93937b960d91b6060820152608060208201526000620006dc608083018462004a60565b602081526000620006dc602083018462004a60565b6000602082840312156200521b57600080fd5b8151620006dc81620046f0565b600082198211156200523e576200523e62004e72565b500190565b825160009082906020808701845b838110156200526f5781518552938201939082019060010162005251565b5050948252509092019392505050565b6020808252606f908201527f73746453746f726167652066696e642853746453746f72616765293a2050616360408201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560608201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960808201526e39b713ba1039bab83837b93a32b21760891b60a082015260c00190565b600082601f8301126200532c57600080fd5b815160206200533f6200486e83620048aa565b82815260059290921b840181019181810190868411156200535f57600080fd5b8286015b8481101562004bfd578051835291830191830162005363565b600080604083850312156200539057600080fd5b825167ffffffffffffffff80821115620053a957600080fd5b620053b7868387016200531a565b93506020850151915080821115620053ce57600080fd5b50620053dd858286016200531a565b9150509250929050565b6001600160a01b039490941684526001600160e01b0319929092166020840152604083015260608201526080019056fe60a06040523480156200001157600080fd5b506040516200567e3803806200567e83398101604081905262000034916200048c565b8282826040518060400160405280601081526020016f496e7665727465644d616e67726f766560801b815250808484847f72201d073f249840099a96530e189c4291c1852040b1e96ff1f606db656be4ff60405160405180910390a16200009b836200016d565b620000a682620001cc565b620000b1816200027f565b620000bc836200032f565b5050815160208084019190912060408051808201825260018152603160f81b9084015280517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f938101939093528201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c001905060408051601f19818403018152919052805160209091012060805250620004d19650505050505050565b62000177620003e0565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f30906020015b60405180910390a150565b620001d6620003e0565b61ffff811681146200022f5760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f31366269747300000000000060448201526064015b60405180910390fd5b6200024b816001546200045160201b62001d4e1790919060201c565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001620001c1565b62000289620003e0565b808162ffffff1614620002df5760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f3234626974730000000000000000604482015260640162000226565b620002fb816001546200046f60201b62001d711790919060201c565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001620001c1565b62000339620003e0565b6001600160a01b038116620003915760405162461bcd60e51b815260206004820152601360248201527f6d67762f636f6e6669672f676f762f6e6f743000000000000000000000000000604482015260640162000226565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001620001c1565b6003546001600160a01b0316331480620003f957503330145b806200040e57506003546001600160a01b0316155b6200044f5760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b604482015260640162000226565b565b60401b69ffff00000000000000001661ffff60401b19919091161790565b60281b67ffffff00000000001662ffffff60281b19919091161790565b600080600060608486031215620004a257600080fd5b83516001600160a01b0381168114620004ba57600080fd5b602085015160409095015190969495509392505050565b60805161518a620004f46000396000818161036401526116aa015261518a6000f3fe60806040526004361061024a5760003560e01c80636d27de6711610139578063b60d4288116100b6578063dc7e98df1161007a578063dc7e98df146108a8578063def5ddaa146108c8578063fbb66910146108e8578063fbfa77cf14610908578063fbffe5fd14610928578063fcaa7e2e1461094857600080fd5b8063b60d4288146107e4578063c7bb25d0146107ec578063cbf75c9a14610833578063d0ee509914610868578063db20266f1461088857600080fd5b8063aa4dd282116100fd578063aa4dd28214610744578063ab033ea914610764578063ad97db1b14610784578063b09d2a16146107a4578063b2b12057146107c457600080fd5b80636d27de671461061457806370a08231146106545780637ecebe00146106815780638c66715c146106ae57806395999ee31461072457600080fd5b80635722647b116101c7578063644e67031161018b578063644e6703146104cc5780636804f613146105835780636817031b146105a357806368c13d6b146105c35780636a4f76911461060157600080fd5b80635722647b146103f657806359eba454146104345780635a611f4e146104545780635aa6e675146104745780635cd82390146104ac57600080fd5b806330adf81f1161020e57806330adf81f146103105780633644e5151461035257806341c0e1b51461038657806346e142fa1461039b57806349f6d2dc146103e357600080fd5b80630b73a18f1461025f578063230244081461027f578063275074581461029257806327d097c6146102d05780632e1a7d4d146102f057600080fd5b3661025a5761025833610968565b005b600080fd5b34801561026b57600080fd5b5061025861027a3660046149b8565b61098f565b61025861028d366004614a05565b610968565b34801561029e57600080fd5b506102bb6102ad366004614a20565b6001600160601b0316151590565b60405190151581526020015b60405180910390f35b3480156102dc57600080fd5b506102586102eb366004614a39565b610a2d565b3480156102fc57600080fd5b506102bb61030b366004614a20565b610b08565b34801561031c57600080fd5b506103447fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a281565b6040519081526020016102c7565b34801561035e57600080fd5b506103447f000000000000000000000000000000000000000000000000000000000000000081565b34801561039257600080fd5b50610258610b62565b3480156103a757600080fd5b506103bb6103b6366004614ac8565b610baa565b604080519586526020860194909452928401919091526060830152608082015260a0016102c7565b6103446103f1366004614b41565b610bd6565b34801561040257600080fd5b50610344610411366004614a39565b600560209081526000938452604080852082529284528284209052825290205481565b34801561044057600080fd5b506102bb61044f366004614b9f565b610d41565b34801561046057600080fd5b5061025861046f366004614bea565b610dca565b34801561048057600080fd5b50600354610494906001600160a01b031681565b6040516001600160a01b0390911681526020016102c7565b3480156104b857600080fd5b506102586104c7366004614a05565b610e24565b3480156104d857600080fd5b506104ec6104e7366004614c07565b610e84565b6040805183516001600160a01b0316815260208085015115158183015284830151151582840152606080860151818401526080808701518185015260a0968701511515878501528551151560c0808601919091529286015160e0850152938501516101008401528401516101208301529183015115156101408201529282015161016084015201516101808201526101a0016102c7565b34801561058f57600080fd5b5061025861059e366004614bea565b610f87565b3480156105af57600080fd5b506102586105be366004614a05565b610fd1565b3480156105cf57600080fd5b506103446105de366004614a39565b600460209081526000938452604080852082529284528284209052825290205481565b61025861060f366004614c3a565b611027565b34801561062057600080fd5b5061063461062f366004614ca1565b61113a565b6040805194855260208501939093529183015260608201526080016102c7565b34801561066057600080fd5b5061034461066f366004614a05565b60066020526000908152604090205481565b34801561068d57600080fd5b5061034461069c366004614a05565b60086020526000908152604090205481565b3480156106ba57600080fd5b506106ce6106c9366004614a39565b611171565b60408051835181526020808501518183015284830151828401526060948501518583015283516001600160a01b0316608083015283015160a08201529082015160c082015291015160e0820152610100016102c7565b34801561073057600080fd5b5061025861073f366004614a20565b61124d565b34801561075057600080fd5b5061034461075f366004614d09565b6112e9565b34801561077057600080fd5b5061025861077f366004614a05565b61134a565b34801561079057600080fd5b5061034461079f366004614d3c565b6113ec565b3480156107b057600080fd5b506102586107bf366004614d8b565b6115be565b3480156107d057600080fd5b506103bb6107df366004614e21565b6118b7565b6102586118f3565b3480156107f857600080fd5b50610344610807366004614e9b565b600760209081526000948552604080862082529385528385208152918452828420909152825290205481565b34801561083f57600080fd5b5061085361084e366004614c07565b6118fe565b604080519283526020830191909152016102c7565b34801561087457600080fd5b50610258610883366004614c07565b6119fb565b34801561089457600080fd5b506102bb6108a3366004614c07565b611a6c565b3480156108b457600080fd5b506102586108c3366004614a39565b611aa7565b3480156108d457600080fd5b506103446108e3366004614c07565b611b67565b3480156108f457600080fd5b50610258610903366004614a39565b611b9f565b34801561091457600080fd5b50600054610494906001600160a01b031681565b34801561093457600080fd5b50610634610943366004614eef565b611c8c565b34801561095457600080fd5b50610258610963366004614a20565b611cb3565b60006109756000806118fe565b50905061098181611d90565b61098b8234611dd3565b5050565b610997611e2f565b6001600160a01b0385811660008181526002602090815260408083209489168084529482529182902080546001600160f81b0316600160f81b17905581516001815291517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a3610a10858585611aa7565b610a1b858584611b9f565b610a26858583610a2d565b5050505050565b610a35611e2f565b808162ffffff1614610a8e5760405162461bcd60e51b815260206004820152601f60248201527f6d67762f636f6e6669672f6f666665725f676173626173652f3234626974730060448201526064015b60405180910390fd5b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805462ffffff60601b191662ffffff60601b606088901b1617905590518481527fc5859916e5f3fc1ed4d2cfb8c7a6cf709580f228fa0c9d9e0fa468744c7e4a9191015b60405180910390a3505050565b6000610b143383611e9a565b60405133908390600081818185875af1925050503d8060008114610b54576040519150601f19603f3d011682016040523d82523d6000602084013e610b59565b606091505b50909392505050565b610b6a611e2f565b60015464ff000000001916640100000000176001556040517fbe26733c2bf6ff3ea5ba8cfe744422bd49052ff9ed5685c9e81e6f9321dbaddd90600090a1565b6000806000806000610bc08a8a8a8a8a33611f5f565b939e929d50909b50995090975095505050505050565b6000610be0614864565b610bea89896118fe565b6101208301819052610100830191909152610c04906120ac565b610c188161010001518261012001516120f8565b3415610c2857610c283334611dd3565b61012081015160181c63ffffffff166001016080820181905263ffffffff811614610c8b5760405162461bcd60e51b81526020600482015260136024820152726d67762f6f6666657249644f766572666c6f7760681b6044820152606401610a85565b6080810151610120820151610cb79160181b66ffffffff0000001666ffffffff00000019919091161790565b6101208201526001600160a01b03808a16825288166020820152604081018790526060810186905260a0810185905260c0810184905260e08101839052610cff816000612148565b61012081015181516001600160a01b03908116600090815260026020908152604080832082870151909416835292905220556080015198975050505050505050565b6001600160a01b038085166000818152600760209081526040808320888616808552908352818420338086529084528285209689168552959092528083208690555191939092917f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d91610db79188908890614f3c565b60405180910390a3506001949350505050565b610dd2611e2f565b60015460ff60501b191660ff60501b605083901b161760015560405181151581527f9b84fe4d9ffc14a6f7ec50c18884ee0d4bb8165aa718a28558df12ab4bd32b14906020015b60405180910390a150565b610e2c611e2f565b6001546001600160601b03166001600160601b0319606083901b16176001556040516001600160a01b03821681527ff592e42c32883b35bebfbf9d9b801570a25d5ccbba452310746ad2cfd20d548f90602001610e19565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152610efa6040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b600080610f0786866118fe565b91509150610f71826040805160c081018252606083811c8252605884901c60ff9081161515602080850191909152605086901c82161515848601529385901c61ffff1691830191909152602884901c62ffffff1660808301529290911c909116151560a082015290565b9350610f7c816128c5565b925050509250929050565b610f8f611e2f565b600154610f9c9082612973565b60015560405181151581527fbf39fbfab835c119637f4dbc4fb0f428c559c210200405d1ec25ddb50a93f9d490602001610e19565b610fd9611e2f565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f3090602001610e19565b61102f614864565b61103989896118fe565b6101208301819052610100830191909152611053906120ac565b6110678161010001518261012001516120f8565b3415611077576110773334611dd3565b6001600160a01b03808a16808352908916602080840182905260408085018b9052606085018a90526080850186905260a0850189905260c0850188905260e0850187905260009384526004825280842092845291815281832085845290529020546101408201526101208101516110ef826001612148565b610120820151811461112e5761012082015182516001600160a01b03908116600090815260026020908152604080832082880151909416835292905220555b50505050505050505050565b60008060008061114e8a8a8a8a8a8a61298a565b929650909450925090506111648a8a8786612c72565b9650965096509692505050565b61119c6040518060800160405280600081526020016000815260200160008152602001600081525090565b6111d0604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b6001600160a01b03808616600090815260046020908152604080832093881683529281528282208683529052205461120781612d72565b6001600160a01b038088166000908152600560209081526040808320938a1683529281528282208883529052205490935061124181612dd4565b92505050935093915050565b611255611e2f565b808162ffffff16146112a95760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f32346269747300000000000000006044820152606401610a85565b6001546112b69082611d71565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001610e19565b600033301461133a5760405162461bcd60e51b815260206004820152601f60248201527f6d67762f696e766572746564466c6173686c6f616e2f70726f746563746564006044820152606401610a85565b61134383612e43565b9392505050565b611352611e2f565b6001600160a01b03811661139e5760405162461bcd60e51b815260206004820152601360248201527206d67762f636f6e6669672f676f762f6e6f743606c1b6044820152606401610a85565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001610e19565b6000806113f986866118fe565b915050611405816120ac565b6001600160a01b038087166000818152600460209081526040808320948a16808452948252808320898452825280832054938352600582528083209483529381528382208883529052919091205461145d8160601c90565b6001600160a01b0316336001600160a01b0316146114bd5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f726574726163744f666665722f756e617574686f72697a65640000006044820152606401610a85565b6001600160601b0382161561152157826114ed89896114dc8660e01c90565b60c087901c63ffffffff1688612fc4565b935080841461151f576001600160a01b03808a166000908152600260209081526040808320938c168352929052208490555b505b61152f88888885858a6130a4565b841561156657603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca00020293506115663385611dd3565b866001600160a01b0316886001600160a01b03167fe2ce51fba856682424155a2d89b2ad1d2adde6ea0a9e3115b4b474cd6cb1798b886040516115ab91815260200190565b60405180910390a3505050949350505050565b428410156116035760405162461bcd60e51b81526020600482015260126024820152711b59dd8bdc195c9b5a5d0bd95e1c1a5c995960721b6044820152606401610a85565b6001600160a01b03878116600081815260086020908152604080832080546001810190915581517fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a2818501528f8716818401528e871660608201526080810195909552948b1660a085015260c084018a905260e084018590526101008085018a9052815180860390910181526101208501909152805191012061190160f01b6101408401527f0000000000000000000000000000000000000000000000000000000000000000610142840152610162830152906101820160408051601f198184030181528282528051602091820120600080855291840180845281905260ff89169284019290925260608301879052608083018690529092509060019060a0016020604051602081039080840390855afa158015611745573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381161580159061177b5750896001600160a01b0316816001600160a01b0316145b6117c75760405162461bcd60e51b815260206004820152601b60248201527f6d67762f7065726d69742f696e76616c69645369676e617475726500000000006044820152606401610a85565b87600760008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008b6001600160a01b03166001600160a01b03168152602001908152602001600020819055508a6001600160a01b03168c6001600160a01b03167f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d8c8c8c6040516118a193929190614f3c565b60405180910390a3505050505050505050505050565b60008060008060006118cd8b8b8b8b8b8b611f5f565b9398509196509450925090506118e58b8b8886612c72565b965096509650965096915050565b6118fc33610968565b565b6001546001600160a01b03838116600090815260026020908152604080832093861683529290522054605882901c60ff16156119f4576000806119418460601c90565b604051636968abd360e01b81526001600160a01b03888116600483015287811660248301529190911690636968abd3906044016040805180830381865afa158015611990573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119b49190614f60565b915091506119c58261ffff81161490565b156119d7576119d48483611d4e565b93505b6001600160701b03811681036119f157610f7c8382613119565b50505b9250929050565b611a03611e2f565b6001600160a01b03828116600081815260026020908152604080832094861680845294825280832080546001600160f81b031690558051928352517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a35050565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054605881901c60ff1615155b949350505050565b611aaf611e2f565b6101f4811115611af85760405162461bcd60e51b815260206004820152601460248201527306d67762f636f6e6669672f6665652f3c3d3530360641b6044820152606401610a85565b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805461ffff60e81b191661ffff60e81b60e888901b1617905590518481527f44a6d70a601a6f8a85c075467e9d7245897140cbf6dd505c9d9d764459f5fb649101610afb565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054603881901c63ffffffff16611a9f565b611ba7611e2f565b6001600160701b0381168114611bff5760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f64656e736974792f313132626974730000000000006044820152606401610a85565b6001600160a01b03808416600090815260026020908152604080832093861683529290522054611c2f9082613119565b6001600160a01b038481166000818152600260209081526040808320948816808452948252918290209490945551848152919290917f95f1a495c6d9d1a215995408f6ad898c2b33798d6eb3cf3220b4c6cc8b61b0649101610afb565b600080600080611ca089898989893361298a565b929c919b50995090975095505050505050565b611cbb611e2f565b61ffff81168114611d0e5760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f3136626974730000000000006044820152606401610a85565b600154611d1b9082611d4e565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001610e19565b60401b69ffff00000000000000001669ffff000000000000000019919091161790565b60281b67ffffff00000000001667ffffff000000000019919091161790565b602081901c60ff1615611dd05760405162461bcd60e51b81526020600482015260086024820152671b59dd8bd919585960c21b6044820152606401610a85565b50565b6001600160a01b03821660008181526006602052604090819020805484019055517f1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa09490611e239084815260200190565b60405180910390a25050565b6003546001600160a01b0316331480611e4757503330145b80611e5b57506003546001600160a01b0316155b6118fc5760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b6044820152606401610a85565b6001600160a01b03821660009081526006602052604090205481811015611f035760405162461bcd60e51b815260206004820152601960248201527f6d67762f696e73756666696369656e7450726f766973696f6e000000000000006044820152606401610a85565b6001600160a01b038316600081815260066020526040908190208484039055517f59c79d79be0fadf59fe689b6952b7ebe90201a3a1f00d4a31982377890bc604690611f529085815260200190565b60405180910390a2505050565b6000806000806000611f6f6148d0565b6001600160a01b03808d1682528b166020820152611f8d8c8c6118fe565b61010083015260e0820152611fa061492e565b6001600160a01b03881660a082015288151560c082015260e0820151610100830151611fcc91906120f8565b611fda8261010001516120ac565b6040517fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b990600090a161200f81838d8d61314a565b60808401519299509097509550612025906135d9565b602080830151835160808085015160e0860151604080518d81529687018c905286019190915260608501526001600160a01b03808d1694938116939216917ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec47910160405180910390a4806080015193508060e0015192505050965096509650965096915050565b605881901c60ff1615611dd05760405162461bcd60e51b81526020600482015260146024820152731b59dd8bdc99595b9d1c985b98de531bd8dad95960621b6044820152606401610a85565b61210182611d90565b61210d8160f81c151590565b61098b5760405162461bcd60e51b815260206004820152600c60248201526b6d67762f696e61637469766560a01b6044820152606401610a85565b60c082015161ffff81161461219f5760405162461bcd60e51b815260206004820152601e60248201527f6d67762f77726974654f666665722f67617370726963652f31366269747300006044820152606401610a85565b61010082015160401c61ffff168260c0015110156121ca5761010082015160401c61ffff1660c08301525b61010082015160281c62ffffff168260a00151111561222b5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f6761737265712f746f6f486967680000006044820152606401610a85565b600082606001511161227f5760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f746f6f4c6f7700000000006044820152606401610a85565b61012082015160781c6001600160701b031661012083015160601c62ffffff168360a001510102826060015110156122f95760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f64656e736974792f746f6f4c6f770000006044820152606401610a85565b60608201516001600160601b038116146123555760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f39366269747300000000006044820152606401610a85565b60408201516001600160601b038116146123b15760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f77616e74732f39366269747300000000006044820152606401610a85565b6000806123bd84613677565b9150915083602001516001600160a01b031684600001516001600160a01b03167f2b101f9ef8ca2761d91bea55ab50a4d051e9248088ff7314ddb8826839544c2a33876040015188606001518960c001518a60a001518b608001518a60405161246297969594939291906001600160a01b03979097168752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b60405180910390a383516001600160a01b03908116600090815260056020908152604080832082890151909416835292815282822060808801518352905290812054841561253c576124b48160601c90565b6001600160a01b0316336001600160a01b0316146125145760405162461bcd60e51b815260206004820152601c60248201527f6d67762f7570646174654f666665722f756e617574686f72697a6564000000006044820152606401610a85565b603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca00020291505b841580612556575060a0860151604882901c62ffffff1614155b8061256d575060c0860151602082901c61ffff1614155b8061258e575061012086015160601c62ffffff16603082901c62ffffff1614155b156126385761012086015160009060601c62ffffff1690506125fe338860a00151838a60c0015160201b65ffff000000001660309190911b68ffffff0000000000001660489290921b6bffffff0000000000000000001660609390931b6001600160601b03191692909217171790565b87516001600160a01b039081166000908152600560209081526040808320828d0151909416835292815282822060808c0151835290522055505b5060c08501516101208601516000919060601c62ffffff168760a001510102633b9aca00029050818111156126785761267333838303611e9a565b61268c565b8181101561268c5761268c33828403611dd3565b506101408501516001600160601b031615806126b0575061014085015160e01c8314155b1561283c57821561273657608085015185516001600160a01b039081166000908152600460209081526040808320828b01519094168352928152828220878352905220546126fd916138a3565b85516001600160a01b039081166000908152600460209081526040808320828b0151909416835292815282822087835290522055612769565b60808501516101208601516127629160381b63ffffffff60381b1663ffffffff60381b19919091161790565b6101208601525b81156127e057608085015185516001600160a01b039081166000908152600460208181526040808420828c018051871686529083528185208986528352818520548c518716865293835281852090519095168452938152838320878452905291902060e09290921b6001600160e01b039091161790555b8380156127fa57506101408501516001600160601b031615155b1561283c576128358560000151866020015161281b88610140015160e01c90565b61014089015160c01c63ffffffff16896101200151612fc4565b6101208601525b60408501516060808701516000926001600160601b03909116911b6bffffffffffffffffffffffff60601b1660c085901b63ffffffff60c01b1660e087901b17171786516001600160a01b039081166000908152600460209081526040808320828c015190941683529281528282206080909a0151825298909852909620959095555050505050565b6129096040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b60f882901c1515815260e882901c61ffff166020820152607882901c6001600160701b03166040820152606082811c62ffffff1690820152605882901c60ff1615156080820152603882901c63ffffffff90811660a083015260189290921c90911660c082015290565b60581b60ff60581b1660ff60581b19919091161790565b60008060008087886001600160a01b0316146129e85760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657257616e74732f313630626974730000006044820152606401610a85565b86876001600160a01b031614612a405760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657247697665732f313630626974730000006044820152606401610a85565b612a486148d0565b6001600160a01b03808c1682528a166020820152612a668b8b6118fe565b610100830181905260e083019190915260381c63ffffffff1660408083019182526001600160a01b03808e16600090815260046020908152838220928f1682529182528281209351815292905290205460608201526080810189905260a08101889052612ad161492e565b898152602081018990526001600160a01b03871660a082015287151560c082015260e0820151610100830151612b0791906120f8565b612b158261010001516120ac565b610100820151612b26906001612973565b82610100018181525050816101000151600260008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020819055507fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b960405160405180910390a1612bba818360016138c0565b612bc781608001516135d9565b866001600160a01b03168b6001600160a01b03168d6001600160a01b03167ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec478460400151856060015186608001518760e00151604051612c40949392919093845260208401929092526040830152606082015260800190565b60405180910390a460408101516060820151608083015160e090930151919e909d50919b509950975050505050505050565b6001600160a01b0380851660009081526007602090815260408083208785168452825280832093861683529281528282203383529052205481811015612ced5760405162461bcd60e51b815260206004820152601060248201526f6d67762f6c6f77416c6c6f77616e636560801b6044820152606401610a85565b6001600160a01b0380861660008181526007602090815260408083208986168085529083528184209589168452948252808320338085529252918290208686039081905591517f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d92612d63928992909190614f3c565b60405180910390a35050505050565b612d9d6040518060800160405280600081526020016000815260200160008152602001600081525090565b60e082901c815263ffffffff60c083901c1660208201526001600160601b03606083811c8216604084015292169181019190915290565b612e08604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b606082811c8252604883901c62ffffff908116602080850191909152603085901c90911660408401529290921c61ffff169181019190915290565b600080636c49c32c60e01b83604051602401612e5f9190614f84565b60408051808303601f190181529190526020810180516001600160e01b0319939093166001600160e01b0390931692909217909152905060c0830135604881901c62ffffff169060601c60005a9050826040820482031015612f0157604080516060810182527f6d67762f6e6f74456e6f756768476173466f724d616b65725472616465000000815260006020820181905291810191909152612f0190606081fd5b600080612f0f848688613b32565b915091505a8303965081612f5557612f5560405180606001604052806e1b59dd8bdb585ad95c94995d995c9d608a1b81526020018960001b815260200183815250606081fd5b6000612f73612f6760208b018b614a05565b86308c60800135613b60565b905080612fb857612fb86040518060600160405280741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b81526020018a60001b815260200184815250606081fd5b50505050505050919050565b60008315613037576001600160a01b03808716600090815260046020908152604080832093891683529281528282208783529052205461300490846138a3565b6001600160a01b038088166000908152600460209081526040808320938a16835292815282822088835290522055613054565b63ffffffff60381b19821663ffffffff60381b603885901b161791505b821561309b576001600160a01b038681166000908152600460209081526040808320938916835292815282822086835290522080546001600160e01b031660e086901b1790555b50949350505050565b6001600160601b03198316925080156130c45765ffff0000000019821691505b506001600160a01b039485166000818152600460209081526040808320979098168083529681528782208683528152878220949094559081526005835285812094815293825284842092845291905291902055565b60781b6dffffffffffffffffffffffffffff60781b166dffffffffffffffffffffffffffff60781b19919091161790565b60008080805b848110156135ce57600060408901819052606089015285858281811061317857613178615016565b90506080020160006004811061319057613190615016565b60209081029190910135604089810191825289516001600160a01b039081166000908152600485528281208c86018051841683529086528382208551835286528382205460608e019081528d518416835260058752848320915190931682528552828120935181529290935290205460c0890152516001600160601b0316158061325c575085858281811061322757613227615016565b90506080020160036004811061323f5761323f615016565b602002013561325a8860c0015162ffffff60489190911c1690565b115b6135c65785858281811061327257613272615016565b90506080020160016004811061328a5761328a615016565b60200201358686838181106132a1576132a1615016565b9050608002016001600481106132b9576132b9615016565b60200201356001600160601b0316146133145760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657257616e74732f393662697473000000006044820152606401610a85565b85858281811061332657613326615016565b90506080020160026004811061333e5761333e615016565b602002013586868381811061335557613355615016565b90506080020160026004811061336d5761336d615016565b60200201356001600160601b0316146133c85760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657247697665732f393662697473000000006044820152606401610a85565b8585828181106133da576133da615016565b9050608002016001600481106133f2576133f2615016565b6020020135608088015285858281811061340e5761340e615016565b90506080020160026004811061342657613426615016565b602002013560a0880152610100870151613441906001612973565b610100880181905287516001600160a01b039081166000908152600260209081526040808320828d015190941683529290529081209190915580806134868b8b613c48565b925092509250806f6d67762f74726164655375636365737360801b036134ad576001870196505b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b14613501576134fa8a600001518b602001516134e18d6060015160e01c90565b60608e015160c01c63ffffffff168e6101000151612fc4565b6101008b01525b6101008a0151613512906000612973565b8a610100018181525050896101000151600260008c600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008c602001516001600160a01b03166001600160a01b03168152602001908152602001600020819055506135808b8b614248565b61358a8b8b61434a565b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b146135b0576135b08b8b858585614436565b8a60400151860195508a60600151850194505050505b600101613150565b509450945094915050565b8015611dd057604051600090339083908381818185875af1925050503d8060008114613621576040519150601f19603f3d011682016040523d82523d6000602084013e613626565b606091505b505090508061098b5760405162461bcd60e51b815260206004820152601760248201527f6d67762f73656e6450656e616c747952657665727465640000000000000000006044820152606401610a85565b60008060008060008560e0015190506000866080015182146136cc5786516001600160a01b039081166000908152600460209081526040808320828c01519094168352928152828220858352905220546136d3565b8661014001515b90506001600160601b03811661372c5761012087015160381c63ffffffff1687516001600160a01b039081166000908152600460209081526040808320828d015190941683529281528282208483529052205490925090505b6137378782846144bc565b156137d15760005b60c082901c63ffffffff16156137b9575086516001600160a01b039081166000908152600460209081526040808320828c0151909416835292815282822063ffffffff60c086901c168084529152919020549061379d8983836144bc565b156137ad578093508192506137b3565b506137b9565b5061373f565b8260c083901c63ffffffff16909550935061385a9050565b60005b6137de8260e01c90565b156138475760006137ef8360e01c90565b89516001600160a01b039081166000908152600460209081526040808320828f0151909416835292815282822084835290522054925090506138328983836144bc565b1561383d5750613847565b92509050806137d4565b6138518260e01c90565b94509192508291505b8660800151841461386b5783613875565b61014087015160e01c5b876080015184146138865783613896565b61014088015160c01c63ffffffff165b9550955050505050915091565b60c01b63ffffffff60c01b1663ffffffff60c01b19919091161790565b8080156138e757508260c001516138de5760008260a00151116138e7565b60008260800151115b80156138f7575060008260400151115b15613ab35781516001600160a01b03908116600090815260056020908152604080832082870151909416835292815282822083860151835290529081205460c084015280806139468686613c48565b608088015160a089015160408a015160608b015160c08c015196995094975092955090939092906e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613a3d5760408b01518b51116139995760006139a2565b60408b01518b51035b60808b015260608b81015160208d01510360a08c01528a015160c01c63ffffffff168a6040018181525050600460008b600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b602001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b604001518152602001908152602001600020548a60600181815250505b613a5d8b8b886e1b59dd8bdb9bdd115e1958dd5d1959608a1b14156138c0565b60408a0183905260808a0185905260a08a0184905260608a0182905260c08a018190526e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613aa657613aa68b8b8a8a8a614436565b5050505050505050505050565b613ad28260000151836020015160008560400151866101000151612fc4565b6101008301819052613ae5906000612973565b610100830181905282516001600160a01b0390811660009081526002602090815260408083208288015190941683529290522055613b238383614248565b613b2d838361434a565b505050565b600080613b3d61497e565b60648185516020870160008a8af192508060448415020151915050935093915050565b6000806323b872dd60e01b858585604051602401613b8093929190614f3c565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509050600080876001600160a01b031683604051613bd0919061502c565b6000604051808303816000865af19150503d8060008114613c0d576040519150601f19603f3d011682016040523d82523d6000602084013e613c12565b606091505b5091509150818015613c3c575080511580613c3c575080806020019051810190613c3c9190615067565b98975050505050505050565b600080600080613c6885606001516001600160601b0360609190911c1690565b90506000613c8086606001516001600160601b031690565b608087015160a0880151919250908083028483021115613cc05750600095508594506e1b59dd8bdb9bdd115e1958dd5d1959608a1b935061424192505050565b8860c001518015613cd057508183105b80613ce757508860c00151158015613ce757508084105b15613cff576080880183905260a08801849052613d76565b8860c0015115613d4a57838202838181613d1b57613d1b615000565b0615613d28576001613d2b565b60005b60ff16848281613d3d57613d3d615000565b040160a08a015250613d76565b83600003613d5e5760808801839052613d76565b8381840281613d6f57613d6f615000565b0460808901525b50505050600080306001600160a01b031663aa4dd28260e01b878960a00151604051602401613da69291906150ea565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051613de4919061502c565b6000604051808303816000865af19150503d8060008114613e21576040519150601f19603f3d011682016040523d82523d6000602084013e613e26565b606091505b50915091508115613f805780806020019051810190613e459190615112565b94506f6d67762f74726164655375636365737360801b925085602001516001600160a01b031686600001516001600160a01b03167f1d81940ff2c3ac549c8acefd7c1b2ffb24aacc8b3cfa309c22abc3de79727f9d88604001518a60a001518a608001518b60a00151604051613edd94939291909384526001600160a01b039290921660208401526040830152606082015260800190565b60405180910390a360e086015160501c60ff1615613f5b5760e086015160a088015160405163cac1827160e01b815260609290921c9163cac1827191613f28918a91906004016150ea565b600060405180830381600087803b158015613f4257600080fd5b505af1158015613f56573d6000803e3d6000fd5b505050505b6080860151604088018051909101905260a08601516060880180519091019052614206565b602081015160408201516060830151909650945092506e1b59dd8bdb585ad95c94995d995c9d608a1b831480613fcd575082741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b145b80613fee575082731b59dd8bdb585ad95c949958d95a5d9951985a5b60621b145b156141005785602001516001600160a01b031686600001516001600160a01b03167f1d59c048edb5397821854bd12cbe02242b82101c677f949d076d14eb7bd8343688604001518a60a001518a608001518b60a001518960405161407d9594939291909485526001600160a01b0393909316602085015260408401919091526060830152608082015260a00190565b60405180910390a360e086015160501c60ff16156140fb5760e086015160a0880151604051631159507360e01b815260609290921c916311595073916140c8918a91906004016150ea565b600060405180830381600087803b1580156140e257600080fd5b505af11580156140f6573d6000803e3d6000fd5b505050505b614206565b827f6d67762f6e6f74456e6f756768476173466f724d616b657254726164650000000361416f5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6e6f74456e6f756768476173466f724d616b657254726164650000006044820152606401610a85565b82741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b036141ce5760405162461bcd60e51b81526020600482015260156024820152741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b6044820152606401610a85565b60405162461bcd60e51b815260206004820152600d60248201526c36b3bb17b9bbb0b822b93937b960991b6044820152606401610a85565b61423e86600001518760200151886040015189606001518a60c00151886f6d67762f74726164655375636365737360801b14156130a4565b50505b9250925092565b6101008101516000906127109060e81c61ffff168460400151028161426f5761426f615000565b04905080156142e557604083018051829003905260e0830181905281516000546142a391906001600160a01b031683614562565b6142e55760405162461bcd60e51b81526020600482015260136024820152721b59dd8bd99959551c985b9cd9995c91985a5b606a1b6044820152606401610a85565b604083015115613b2d5761430682600001518460a001518560400151614562565b613b2d5760405162461bcd60e51b815260206004820152601560248201527436b3bb17a6b3bb2330b4b62a37a830bcaa30b5b2b960591b6044820152606401610a85565b60a08201518151602083015160408086015160608701519151631154020b60e01b81526001600160a01b039485166004820152928416602484015260448301526064820152911690631154020b90608401600060405180830381600087803b1580156143b557600080fd5b505af11580156143c9573d6000803e3d6000fd5b5050505060006143e782602001518460a00151308660600151613b60565b905080613b2d5760405162461bcd60e51b815260206004820152601760248201527f6d67762f74616b65724661696c546f506179546f74616c0000000000000000006044820152606401610a85565b806f6d67762f74726164655375636365737360801b036144595761445984614637565b60c084015160481c62ffffff1680841115614472578093505b61448085858303858561467c565b84019350816f6d67762f74726164655375636365737360801b146144b4576144a885856147d2565b60808701805190910190525b505050505050565b6000816000036144ce57506001611343565b60408401516060858101516001600160601b039186901c82169291861691908084028284028082036145555789516001600160a01b039081166000908152600560209081526040808320828f015190941683529281528282208b835290529081205460481c62ffffff1660a08c015194029590930294909410159550611343945050505050565b1194506113439350505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839182918816906145c090859061502c565b6000604051808303816000865af19150503d80600081146145fd576040519150601f19603f3d011682016040523d82523d6000602084013e614602565b606091505b509150915081801561462c57508051158061462c57508080602001905181019061462c9190615067565b979650505050505050565b614657816020015161464d8360c0015160601c90565b8360a00151614562565b611dd057602081015160005460a083015161098b92916001600160a01b031690614562565b600080633d3d130d60e01b866040518060400160405280878152602001868152506040516024016146ae92919061512b565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319939093169290921790915260c087015190915060601c60005a90508660408204820310156147465760405162461bcd60e51b815260206004820181905260248201527f6d67762f6e6f74456e6f756768476173466f724d616b6572506f7374686f6f6b6044820152606401610a85565b600080614754848a87613b32565b915091505a83039550816147c55789602001516001600160a01b03168a600001516001600160a01b03167f51d5a3ecf332626d83c8207fe9bd22f38801f578c7eb222e2d811cd1b4c629a58c60400151846040516147bc929190918252602082015260400190565b60405180910390a35b5050505050949350505050565b60c082015160009062ffffff604882901c81169161ffff602082901c1660309190911c909116820102633b9aca00028184111561480d578193505b61010085015160009060601c62ffffff1660e08701519086019060401c61ffff16633b9aca0002029050818111156148425750805b61485b6148538760c0015160601c90565b828403611dd3565b95945050505050565b60405180610160016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60405180610120016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806101000160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001600015158152602001600081525090565b60405180608001604052806004906020820280368337509192915050565b80356001600160a01b03811681146149b357600080fd5b919050565b600080600080600060a086880312156149d057600080fd5b6149d98661499c565b94506149e76020870161499c565b94979496505050506040830135926060810135926080909101359150565b600060208284031215614a1757600080fd5b6113438261499c565b600060208284031215614a3257600080fd5b5035919050565b600080600060608486031215614a4e57600080fd5b614a578461499c565b9250614a656020850161499c565b9150604084013590509250925092565b60008083601f840112614a8757600080fd5b50813567ffffffffffffffff811115614a9f57600080fd5b6020830191508360208260071b85010111156119f457600080fd5b8015158114611dd057600080fd5b600080600080600060808688031215614ae057600080fd5b614ae98661499c565b9450614af76020870161499c565b9350604086013567ffffffffffffffff811115614b1357600080fd5b614b1f88828901614a75565b9094509250506060860135614b3381614aba565b809150509295509295909350565b600080600080600080600060e0888a031215614b5c57600080fd5b614b658861499c565b9650614b736020890161499c565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b60008060008060808587031215614bb557600080fd5b614bbe8561499c565b9350614bcc6020860161499c565b9250614bda6040860161499c565b9396929550929360600135925050565b600060208284031215614bfc57600080fd5b813561134381614aba565b60008060408385031215614c1a57600080fd5b614c238361499c565b9150614c316020840161499c565b90509250929050565b600080600080600080600080610100898b031215614c5757600080fd5b614c608961499c565b9750614c6e60208a0161499c565b979a9799505050506040860135956060810135956080820135955060a0820135945060c0820135935060e0909101359150565b60008060008060008060c08789031215614cba57600080fd5b614cc38761499c565b9550614cd16020880161499c565b945060408701359350606087013592506080870135614cef81614aba565b9150614cfd60a0880161499c565b90509295509295509295565b600080828403610140811215614d1e57600080fd5b61012080821215614d2e57600080fd5b849350610f7c81860161499c565b60008060008060808587031215614d5257600080fd5b614d5b8561499c565b9350614d696020860161499c565b9250604085013591506060850135614d8081614aba565b939692955090935050565b60008060008060008060008060006101208a8c031215614daa57600080fd5b614db38a61499c565b9850614dc160208b0161499c565b9750614dcf60408b0161499c565b9650614ddd60608b0161499c565b955060808a0135945060a08a0135935060c08a013560ff81168114614e0157600080fd5b8093505060e08a013591506101008a013590509295985092959850929598565b60008060008060008060a08789031215614e3a57600080fd5b614e438761499c565b9550614e516020880161499c565b9450604087013567ffffffffffffffff811115614e6d57600080fd5b614e7989828a01614a75565b9095509350506060870135614e8d81614aba565b9150614cfd6080880161499c565b60008060008060808587031215614eb157600080fd5b614eba8561499c565b9350614ec86020860161499c565b9250614ed66040860161499c565b9150614ee46060860161499c565b905092959194509250565b600080600080600060a08688031215614f0757600080fd5b614f108661499c565b9450614f1e6020870161499c565b935060408601359250606086013591506080860135614b3381614aba565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60008060408385031215614f7357600080fd5b505080516020909101519092909150565b61012081016001600160a01b0380614f9b8561499c565b16835280614fab6020860161499c565b1660208401525060408301356040830152606083013560608301526080830135608083015260a083013560a083015260c083013560c083015260e083013560e083015261010080840135818401525092915050565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000825160005b8181101561504d5760208186018101518583015201615033565b8181111561505c576000828501525b509190910192915050565b60006020828403121561507957600080fd5b815161134381614aba565b60018060a01b038082511683528060208301511660208401525060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152505050565b61014081016150f98285615084565b6001600160a01b03929092166101209190910152919050565b60006020828403121561512457600080fd5b5051919050565b610160810161513a8285615084565b82516101208301526020830151610140830152939250505056fea2646970667358221220f1963d9c2b3d628f1434924334993b3b07ae40980b0db947c650656b65407bf364736f6c634300080e003360a06040523480156200001157600080fd5b50604051620055e4380380620055e4833981016040819052620000349162000484565b828282604051806040016040528060088152602001674d616e67726f766560c01b815250808484847f72201d073f249840099a96530e189c4291c1852040b1e96ff1f606db656be4ff60405160405180910390a1620000938362000165565b6200009e82620001c4565b620000a98162000277565b620000b48362000327565b5050815160208084019190912060408051808201825260018152603160f81b9084015280517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f938101939093528201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c001905060408051601f19818403018152919052805160209091012060805250620004c99650505050505050565b6200016f620003d8565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f30906020015b60405180910390a150565b620001ce620003d8565b61ffff81168114620002275760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f31366269747300000000000060448201526064015b60405180910390fd5b62000243816001546200044960201b62001e221790919060201c565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001620001b9565b62000281620003d8565b808162ffffff1614620002d75760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f323462697473000000000000000060448201526064016200021e565b620002f3816001546200046760201b62001e451790919060201c565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001620001b9565b62000331620003d8565b6001600160a01b038116620003895760405162461bcd60e51b815260206004820152601360248201527f6d67762f636f6e6669672f676f762f6e6f74300000000000000000000000000060448201526064016200021e565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001620001b9565b6003546001600160a01b0316331480620003f157503330145b806200040657506003546001600160a01b0316155b620004475760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b60448201526064016200021e565b565b60401b69ffff00000000000000001661ffff60401b19919091161790565b60281b67ffffff00000000001662ffffff60281b19919091161790565b6000806000606084860312156200049a57600080fd5b83516001600160a01b0381168114620004b257600080fd5b602085015160409095015190969495509392505050565b6080516150f8620004ec60003960008181610364015261177e01526150f86000f3fe60806040526004361061024a5760003560e01c80636d27de6711610139578063b60d4288116100b6578063dc7e98df1161007a578063dc7e98df146108a8578063def5ddaa146108c8578063fbb66910146108e8578063fbfa77cf14610908578063fbffe5fd14610928578063fcaa7e2e1461094857600080fd5b8063b60d4288146107e4578063c7bb25d0146107ec578063cbf75c9a14610833578063d0ee509914610868578063db20266f1461088857600080fd5b8063aa4dd282116100fd578063aa4dd28214610744578063ab033ea914610764578063ad97db1b14610784578063b09d2a16146107a4578063b2b12057146107c457600080fd5b80636d27de671461061457806370a08231146106545780637ecebe00146106815780638c66715c146106ae57806395999ee31461072457600080fd5b80635722647b116101c7578063644e67031161018b578063644e6703146104cc5780636804f613146105835780636817031b146105a357806368c13d6b146105c35780636a4f76911461060157600080fd5b80635722647b146103f657806359eba454146104345780635a611f4e146104545780635aa6e675146104745780635cd82390146104ac57600080fd5b806330adf81f1161020e57806330adf81f146103105780633644e5151461035257806341c0e1b51461038657806346e142fa1461039b57806349f6d2dc146103e357600080fd5b80630b73a18f1461025f578063230244081461027f578063275074581461029257806327d097c6146102d05780632e1a7d4d146102f057600080fd5b3661025a5761025833610968565b005b600080fd5b34801561026b57600080fd5b5061025861027a366004614926565b61098f565b61025861028d366004614973565b610968565b34801561029e57600080fd5b506102bb6102ad36600461498e565b6001600160601b0316151590565b60405190151581526020015b60405180910390f35b3480156102dc57600080fd5b506102586102eb3660046149a7565b610a2d565b3480156102fc57600080fd5b506102bb61030b36600461498e565b610b08565b34801561031c57600080fd5b506103447fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a281565b6040519081526020016102c7565b34801561035e57600080fd5b506103447f000000000000000000000000000000000000000000000000000000000000000081565b34801561039257600080fd5b50610258610b62565b3480156103a757600080fd5b506103bb6103b6366004614a36565b610baa565b604080519586526020860194909452928401919091526060830152608082015260a0016102c7565b6103446103f1366004614aaf565b610bd6565b34801561040257600080fd5b506103446104113660046149a7565b600560209081526000938452604080852082529284528284209052825290205481565b34801561044057600080fd5b506102bb61044f366004614b0d565b610d41565b34801561046057600080fd5b5061025861046f366004614b58565b610dca565b34801561048057600080fd5b50600354610494906001600160a01b031681565b6040516001600160a01b0390911681526020016102c7565b3480156104b857600080fd5b506102586104c7366004614973565b610e24565b3480156104d857600080fd5b506104ec6104e7366004614b75565b610e84565b6040805183516001600160a01b0316815260208085015115158183015284830151151582840152606080860151818401526080808701518185015260a0968701511515878501528551151560c0808601919091529286015160e0850152938501516101008401528401516101208301529183015115156101408201529282015161016084015201516101808201526101a0016102c7565b34801561058f57600080fd5b5061025861059e366004614b58565b610f87565b3480156105af57600080fd5b506102586105be366004614973565b610fd1565b3480156105cf57600080fd5b506103446105de3660046149a7565b600460209081526000938452604080852082529284528284209052825290205481565b61025861060f366004614ba8565b611027565b34801561062057600080fd5b5061063461062f366004614c0f565b61113a565b6040805194855260208501939093529183015260608201526080016102c7565b34801561066057600080fd5b5061034461066f366004614973565b60066020526000908152604090205481565b34801561068d57600080fd5b5061034461069c366004614973565b60086020526000908152604090205481565b3480156106ba57600080fd5b506106ce6106c93660046149a7565b611171565b60408051835181526020808501518183015284830151828401526060948501518583015283516001600160a01b0316608083015283015160a08201529082015160c082015291015160e0820152610100016102c7565b34801561073057600080fd5b5061025861073f36600461498e565b61124d565b34801561075057600080fd5b5061034461075f366004614c77565b6112e9565b34801561077057600080fd5b5061025861077f366004614973565b61141e565b34801561079057600080fd5b5061034461079f366004614caa565b6114c0565b3480156107b057600080fd5b506102586107bf366004614cf9565b611692565b3480156107d057600080fd5b506103bb6107df366004614d8f565b61198b565b6102586119c7565b3480156107f857600080fd5b50610344610807366004614e09565b600760209081526000948552604080862082529385528385208152918452828420909152825290205481565b34801561083f57600080fd5b5061085361084e366004614b75565b6119d2565b604080519283526020830191909152016102c7565b34801561087457600080fd5b50610258610883366004614b75565b611acf565b34801561089457600080fd5b506102bb6108a3366004614b75565b611b40565b3480156108b457600080fd5b506102586108c33660046149a7565b611b7b565b3480156108d457600080fd5b506103446108e3366004614b75565b611c3b565b3480156108f457600080fd5b506102586109033660046149a7565b611c73565b34801561091457600080fd5b50600054610494906001600160a01b031681565b34801561093457600080fd5b50610634610943366004614e5d565b611d60565b34801561095457600080fd5b5061025861096336600461498e565b611d87565b60006109756000806119d2565b50905061098181611e64565b61098b8234611ea7565b5050565b610997611f03565b6001600160a01b0385811660008181526002602090815260408083209489168084529482529182902080546001600160f81b0316600160f81b17905581516001815291517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a3610a10858585611b7b565b610a1b858584611c73565b610a26858583610a2d565b5050505050565b610a35611f03565b808162ffffff1614610a8e5760405162461bcd60e51b815260206004820152601f60248201527f6d67762f636f6e6669672f6f666665725f676173626173652f3234626974730060448201526064015b60405180910390fd5b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805462ffffff60601b191662ffffff60601b606088901b1617905590518481527fc5859916e5f3fc1ed4d2cfb8c7a6cf709580f228fa0c9d9e0fa468744c7e4a9191015b60405180910390a3505050565b6000610b143383611f6e565b60405133908390600081818185875af1925050503d8060008114610b54576040519150601f19603f3d011682016040523d82523d6000602084013e610b59565b606091505b50909392505050565b610b6a611f03565b60015464ff000000001916640100000000176001556040517fbe26733c2bf6ff3ea5ba8cfe744422bd49052ff9ed5685c9e81e6f9321dbaddd90600090a1565b6000806000806000610bc08a8a8a8a8a33612033565b939e929d50909b50995090975095505050505050565b6000610be06147d2565b610bea89896119d2565b6101208301819052610100830191909152610c0490612180565b610c188161010001518261012001516121cc565b3415610c2857610c283334611ea7565b61012081015160181c63ffffffff166001016080820181905263ffffffff811614610c8b5760405162461bcd60e51b81526020600482015260136024820152726d67762f6f6666657249644f766572666c6f7760681b6044820152606401610a85565b6080810151610120820151610cb79160181b66ffffffff0000001666ffffffff00000019919091161790565b6101208201526001600160a01b03808a16825288166020820152604081018790526060810186905260a0810185905260c0810184905260e08101839052610cff81600061221c565b61012081015181516001600160a01b03908116600090815260026020908152604080832082870151909416835292905220556080015198975050505050505050565b6001600160a01b038085166000818152600760209081526040808320888616808552908352818420338086529084528285209689168552959092528083208690555191939092917f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d91610db79188908890614eaa565b60405180910390a3506001949350505050565b610dd2611f03565b60015460ff60501b191660ff60501b605083901b161760015560405181151581527f9b84fe4d9ffc14a6f7ec50c18884ee0d4bb8165aa718a28558df12ab4bd32b14906020015b60405180910390a150565b610e2c611f03565b6001546001600160601b03166001600160601b0319606083901b16176001556040516001600160a01b03821681527ff592e42c32883b35bebfbf9d9b801570a25d5ccbba452310746ad2cfd20d548f90602001610e19565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152610efa6040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b600080610f0786866119d2565b91509150610f71826040805160c081018252606083811c8252605884901c60ff9081161515602080850191909152605086901c82161515848601529385901c61ffff1691830191909152602884901c62ffffff1660808301529290911c909116151560a082015290565b9350610f7c81612999565b925050509250929050565b610f8f611f03565b600154610f9c9082612a47565b60015560405181151581527fbf39fbfab835c119637f4dbc4fb0f428c559c210200405d1ec25ddb50a93f9d490602001610e19565b610fd9611f03565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f3090602001610e19565b61102f6147d2565b61103989896119d2565b610120830181905261010083019190915261105390612180565b6110678161010001518261012001516121cc565b3415611077576110773334611ea7565b6001600160a01b03808a16808352908916602080840182905260408085018b9052606085018a90526080850186905260a0850189905260c0850188905260e0850187905260009384526004825280842092845291815281832085845290529020546101408201526101208101516110ef82600161221c565b610120820151811461112e5761012082015182516001600160a01b03908116600090815260026020908152604080832082880151909416835292905220555b50505050505050505050565b60008060008061114e8a8a8a8a8a8a612a5e565b929650909450925090506111648a8a8786612d46565b9650965096509692505050565b61119c6040518060800160405280600081526020016000815260200160008152602001600081525090565b6111d0604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b6001600160a01b03808616600090815260046020908152604080832093881683529281528282208683529052205461120781612e46565b6001600160a01b038088166000908152600560209081526040808320938a1683529281528282208883529052205490935061124181612ea8565b92505050935093915050565b611255611f03565b808162ffffff16146112a95760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f32346269747300000000000000006044820152606401610a85565b6001546112b69082611e45565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001610e19565b600033301461133a5760405162461bcd60e51b815260206004820152601760248201527f6d67762f666c6173686c6f616e2f70726f7465637465640000000000000000006044820152606401610a85565b61135961134d6040850160208601614973565b83308660a00135612f17565b156113da576113836113716040850160208601614973565b60c085013560601c8560a00135612fff565b1561139857611391836130d6565b9050611418565b60408051606081018252731b59dd8bdb585ad95c949958d95a5d9951985a5b60621b8152600060208201819052918101919091526113d590606081fd5b611418565b60408051606081018252741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b81526000602082018190529181019190915261141890606081fd5b92915050565b611426611f03565b6001600160a01b0381166114725760405162461bcd60e51b815260206004820152601360248201527206d67762f636f6e6669672f676f762f6e6f743606c1b6044820152606401610a85565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001610e19565b6000806114cd86866119d2565b9150506114d981612180565b6001600160a01b038087166000818152600460209081526040808320948a1680845294825280832089845282528083205493835260058252808320948352938152838220888352905291909120546115318160601c90565b6001600160a01b0316336001600160a01b0316146115915760405162461bcd60e51b815260206004820152601d60248201527f6d67762f726574726163744f666665722f756e617574686f72697a65640000006044820152606401610a85565b6001600160601b038216156115f557826115c189896115b08660e01c90565b60c087901c63ffffffff1688613257565b93508084146115f3576001600160a01b03808a166000908152600260209081526040808320938c168352929052208490555b505b61160388888885858a613337565b841561163a57603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca000202935061163a3385611ea7565b866001600160a01b0316886001600160a01b03167fe2ce51fba856682424155a2d89b2ad1d2adde6ea0a9e3115b4b474cd6cb1798b8860405161167f91815260200190565b60405180910390a3505050949350505050565b428410156116d75760405162461bcd60e51b81526020600482015260126024820152711b59dd8bdc195c9b5a5d0bd95e1c1a5c995960721b6044820152606401610a85565b6001600160a01b03878116600081815260086020908152604080832080546001810190915581517fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a2818501528f8716818401528e871660608201526080810195909552948b1660a085015260c084018a905260e084018590526101008085018a9052815180860390910181526101208501909152805191012061190160f01b6101408401527f0000000000000000000000000000000000000000000000000000000000000000610142840152610162830152906101820160408051601f198184030181528282528051602091820120600080855291840180845281905260ff89169284019290925260608301879052608083018690529092509060019060a0016020604051602081039080840390855afa158015611819573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381161580159061184f5750896001600160a01b0316816001600160a01b0316145b61189b5760405162461bcd60e51b815260206004820152601b60248201527f6d67762f7065726d69742f696e76616c69645369676e617475726500000000006044820152606401610a85565b87600760008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008b6001600160a01b03166001600160a01b03168152602001908152602001600020819055508a6001600160a01b03168c6001600160a01b03167f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d8c8c8c60405161197593929190614eaa565b60405180910390a3505050505050505050505050565b60008060008060006119a18b8b8b8b8b8b612033565b9398509196509450925090506119b98b8b8886612d46565b965096509650965096915050565b6119d033610968565b565b6001546001600160a01b03838116600090815260026020908152604080832093861683529290522054605882901c60ff1615611ac857600080611a158460601c90565b604051636968abd360e01b81526001600160a01b03888116600483015287811660248301529190911690636968abd3906044016040805180830381865afa158015611a64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a889190614ece565b91509150611a998261ffff81161490565b15611aab57611aa88483611e22565b93505b6001600160701b0381168103611ac557610f7c83826133ac565b50505b9250929050565b611ad7611f03565b6001600160a01b03828116600081815260026020908152604080832094861680845294825280832080546001600160f81b031690558051928352517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a35050565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054605881901c60ff1615155b949350505050565b611b83611f03565b6101f4811115611bcc5760405162461bcd60e51b815260206004820152601460248201527306d67762f636f6e6669672f6665652f3c3d3530360641b6044820152606401610a85565b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805461ffff60e81b191661ffff60e81b60e888901b1617905590518481527f44a6d70a601a6f8a85c075467e9d7245897140cbf6dd505c9d9d764459f5fb649101610afb565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054603881901c63ffffffff16611b73565b611c7b611f03565b6001600160701b0381168114611cd35760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f64656e736974792f313132626974730000000000006044820152606401610a85565b6001600160a01b03808416600090815260026020908152604080832093861683529290522054611d0390826133ac565b6001600160a01b038481166000818152600260209081526040808320948816808452948252918290209490945551848152919290917f95f1a495c6d9d1a215995408f6ad898c2b33798d6eb3cf3220b4c6cc8b61b0649101610afb565b600080600080611d74898989898933612a5e565b929c919b50995090975095505050505050565b611d8f611f03565b61ffff81168114611de25760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f3136626974730000000000006044820152606401610a85565b600154611def9082611e22565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001610e19565b60401b69ffff00000000000000001669ffff000000000000000019919091161790565b60281b67ffffff00000000001667ffffff000000000019919091161790565b602081901c60ff1615611ea45760405162461bcd60e51b81526020600482015260086024820152671b59dd8bd919585960c21b6044820152606401610a85565b50565b6001600160a01b03821660008181526006602052604090819020805484019055517f1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa09490611ef79084815260200190565b60405180910390a25050565b6003546001600160a01b0316331480611f1b57503330145b80611f2f57506003546001600160a01b0316155b6119d05760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b6044820152606401610a85565b6001600160a01b03821660009081526006602052604090205481811015611fd75760405162461bcd60e51b815260206004820152601960248201527f6d67762f696e73756666696369656e7450726f766973696f6e000000000000006044820152606401610a85565b6001600160a01b038316600081815260066020526040908190208484039055517f59c79d79be0fadf59fe689b6952b7ebe90201a3a1f00d4a31982377890bc6046906120269085815260200190565b60405180910390a2505050565b600080600080600061204361483e565b6001600160a01b03808d1682528b1660208201526120618c8c6119d2565b61010083015260e082015261207461489c565b6001600160a01b03881660a082015288151560c082015260e08201516101008301516120a091906121cc565b6120ae826101000151612180565b6040517fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b990600090a16120e381838d8d6133dd565b608084015192995090975095506120f990613862565b602080830151835160808085015160e0860151604080518d81529687018c905286019190915260608501526001600160a01b03808d1694938116939216917ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec47910160405180910390a4806080015193508060e0015192505050965096509650965096915050565b605881901c60ff1615611ea45760405162461bcd60e51b81526020600482015260146024820152731b59dd8bdc99595b9d1c985b98de531bd8dad95960621b6044820152606401610a85565b6121d582611e64565b6121e18160f81c151590565b61098b5760405162461bcd60e51b815260206004820152600c60248201526b6d67762f696e61637469766560a01b6044820152606401610a85565b60c082015161ffff8116146122735760405162461bcd60e51b815260206004820152601e60248201527f6d67762f77726974654f666665722f67617370726963652f31366269747300006044820152606401610a85565b61010082015160401c61ffff168260c00151101561229e5761010082015160401c61ffff1660c08301525b61010082015160281c62ffffff168260a0015111156122ff5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f6761737265712f746f6f486967680000006044820152606401610a85565b60008260600151116123535760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f746f6f4c6f7700000000006044820152606401610a85565b61012082015160781c6001600160701b031661012083015160601c62ffffff168360a001510102826060015110156123cd5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f64656e736974792f746f6f4c6f770000006044820152606401610a85565b60608201516001600160601b038116146124295760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f39366269747300000000006044820152606401610a85565b60408201516001600160601b038116146124855760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f77616e74732f39366269747300000000006044820152606401610a85565b60008061249184613900565b9150915083602001516001600160a01b031684600001516001600160a01b03167f2b101f9ef8ca2761d91bea55ab50a4d051e9248088ff7314ddb8826839544c2a33876040015188606001518960c001518a60a001518b608001518a60405161253697969594939291906001600160a01b03979097168752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b60405180910390a383516001600160a01b039081166000908152600560209081526040808320828901519094168352928152828220608088015183529052908120548415612610576125888160601c90565b6001600160a01b0316336001600160a01b0316146125e85760405162461bcd60e51b815260206004820152601c60248201527f6d67762f7570646174654f666665722f756e617574686f72697a6564000000006044820152606401610a85565b603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca00020291505b84158061262a575060a0860151604882901c62ffffff1614155b80612641575060c0860151602082901c61ffff1614155b80612662575061012086015160601c62ffffff16603082901c62ffffff1614155b1561270c5761012086015160009060601c62ffffff1690506126d2338860a00151838a60c0015160201b65ffff000000001660309190911b68ffffff0000000000001660489290921b6bffffff0000000000000000001660609390931b6001600160601b03191692909217171790565b87516001600160a01b039081166000908152600560209081526040808320828d0151909416835292815282822060808c0151835290522055505b5060c08501516101208601516000919060601c62ffffff168760a001510102633b9aca000290508181111561274c5761274733838303611f6e565b612760565b818110156127605761276033828403611ea7565b506101408501516001600160601b03161580612784575061014085015160e01c8314155b1561291057821561280a57608085015185516001600160a01b039081166000908152600460209081526040808320828b01519094168352928152828220878352905220546127d191613b2c565b85516001600160a01b039081166000908152600460209081526040808320828b015190941683529281528282208783529052205561283d565b60808501516101208601516128369160381b63ffffffff60381b1663ffffffff60381b19919091161790565b6101208601525b81156128b457608085015185516001600160a01b039081166000908152600460208181526040808420828c018051871686529083528185208986528352818520548c518716865293835281852090519095168452938152838320878452905291902060e09290921b6001600160e01b039091161790555b8380156128ce57506101408501516001600160601b031615155b1561291057612909856000015186602001516128ef88610140015160e01c90565b61014089015160c01c63ffffffff16896101200151613257565b6101208601525b60408501516060808701516000926001600160601b03909116911b6bffffffffffffffffffffffff60601b1660c085901b63ffffffff60c01b1660e087901b17171786516001600160a01b039081166000908152600460209081526040808320828c015190941683529281528282206080909a0151825298909852909620959095555050505050565b6129dd6040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b60f882901c1515815260e882901c61ffff166020820152607882901c6001600160701b03166040820152606082811c62ffffff1690820152605882901c60ff1615156080820152603882901c63ffffffff90811660a083015260189290921c90911660c082015290565b60581b60ff60581b1660ff60581b19919091161790565b60008060008087886001600160a01b031614612abc5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657257616e74732f313630626974730000006044820152606401610a85565b86876001600160a01b031614612b145760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657247697665732f313630626974730000006044820152606401610a85565b612b1c61483e565b6001600160a01b03808c1682528a166020820152612b3a8b8b6119d2565b610100830181905260e083019190915260381c63ffffffff1660408083019182526001600160a01b03808e16600090815260046020908152838220928f1682529182528281209351815292905290205460608201526080810189905260a08101889052612ba561489c565b898152602081018990526001600160a01b03871660a082015287151560c082015260e0820151610100830151612bdb91906121cc565b612be9826101000151612180565b610100820151612bfa906001612a47565b82610100018181525050816101000151600260008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020819055507fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b960405160405180910390a1612c8e81836001613b49565b612c9b8160800151613862565b866001600160a01b03168b6001600160a01b03168d6001600160a01b03167ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec478460400151856060015186608001518760e00151604051612d14949392919093845260208401929092526040830152606082015260800190565b60405180910390a460408101516060820151608083015160e090930151919e909d50919b509950975050505050505050565b6001600160a01b0380851660009081526007602090815260408083208785168452825280832093861683529281528282203383529052205481811015612dc15760405162461bcd60e51b815260206004820152601060248201526f6d67762f6c6f77416c6c6f77616e636560801b6044820152606401610a85565b6001600160a01b0380861660008181526007602090815260408083208986168085529083528184209589168452948252808320338085529252918290208686039081905591517f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d92612e37928992909190614eaa565b60405180910390a35050505050565b612e716040518060800160405280600081526020016000815260200160008152602001600081525090565b60e082901c815263ffffffff60c083901c1660208201526001600160601b03606083811c8216604084015292169181019190915290565b612edc604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b606082811c8252604883901c62ffffff908116602080850191909152603085901c90911660408401529290921c61ffff169181019190915290565b6000806323b872dd60e01b858585604051602401612f3793929190614eaa565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509050600080876001600160a01b031683604051612f879190614ef2565b6000604051808303816000865af19150503d8060008114612fc4576040519150601f19603f3d011682016040523d82523d6000602084013e612fc9565b606091505b5091509150818015612ff3575080511580612ff3575080806020019051810190612ff39190614f2d565b98975050505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928391829188169061305d908590614ef2565b6000604051808303816000865af19150503d806000811461309a576040519150601f19603f3d011682016040523d82523d6000602084013e61309f565b606091505b50915091508180156130c95750805115806130c95750808060200190518101906130c99190614f2d565b93505050505b9392505050565b600080636c49c32c60e01b836040516024016130f29190614f4a565b60408051808303601f190181529190526020810180516001600160e01b0319939093166001600160e01b0390931692909217909152905060c0830135604881901c62ffffff169060601c60005a905082604082048203101561319457604080516060810182527f6d67762f6e6f74456e6f756768476173466f724d616b6572547261646500000081526000602082018190529181019190915261319490606081fd5b6000806131a2848688613db1565b915091505a83039650816131e8576131e860405180606001604052806e1b59dd8bdb585ad95c94995d995c9d608a1b81526020018960001b815260200183815250606081fd5b60006132066131fa60208b018b614973565b86308c60800135612f17565b90508061324b5761324b6040518060600160405280741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b81526020018a60001b815260200184815250606081fd5b50505050505050919050565b600083156132ca576001600160a01b0380871660009081526004602090815260408083209389168352928152828220878352905220546132979084613b2c565b6001600160a01b038088166000908152600460209081526040808320938a168352928152828220888352905220556132e7565b63ffffffff60381b19821663ffffffff60381b603885901b161791505b821561332e576001600160a01b038681166000908152600460209081526040808320938916835292815282822086835290522080546001600160e01b031660e086901b1790555b50949350505050565b6001600160601b03198316925080156133575765ffff0000000019821691505b506001600160a01b039485166000818152600460209081526040808320979098168083529681528782208683528152878220949094559081526005835285812094815293825284842092845291905291902055565b60781b6dffffffffffffffffffffffffffff60781b166dffffffffffffffffffffffffffff60781b19919091161790565b60008080805b8481101561385757600060408901819052606089015285858281811061340b5761340b614fdc565b90506080020160006004811061342357613423614fdc565b60209081029190910135604089810191825289516001600160a01b039081166000908152600485528281208c86018051841683529086528382208551835286528382205460608e019081528d518416835260058752848320915190931682528552828120935181529290935290205460c0890152516001600160601b031615806134ef57508585828181106134ba576134ba614fdc565b9050608002016003600481106134d2576134d2614fdc565b60200201356134ed8860c0015162ffffff60489190911c1690565b115b61384f5785858281811061350557613505614fdc565b90506080020160016004811061351d5761351d614fdc565b602002013586868381811061353457613534614fdc565b90506080020160016004811061354c5761354c614fdc565b60200201356001600160601b0316146135a75760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657257616e74732f393662697473000000006044820152606401610a85565b8585828181106135b9576135b9614fdc565b9050608002016002600481106135d1576135d1614fdc565b60200201358686838181106135e8576135e8614fdc565b90506080020160026004811061360057613600614fdc565b60200201356001600160601b03161461365b5760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657247697665732f393662697473000000006044820152606401610a85565b85858281811061366d5761366d614fdc565b90506080020160016004811061368557613685614fdc565b602002013560808801528585828181106136a1576136a1614fdc565b9050608002016002600481106136b9576136b9614fdc565b602002013560a08801526101008701516136d4906001612a47565b610100880181905287516001600160a01b039081166000908152600260209081526040808320828d015190941683529290529081209190915580806137198b8b613ddf565b925092509250806f6d67762f74726164655375636365737360801b03613740576001870196505b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b146137945761378d8a600001518b602001516137748d6060015160e01c90565b60608e015160c01c63ffffffff168e6101000151613257565b6101008b01525b6101008a01516137a5906000612a47565b8a610100018181525050896101000151600260008c600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008c602001516001600160a01b03166001600160a01b03168152602001908152602001600020819055506138138b8b6143df565b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b14613839576138398b8b8585856144e1565b8a60400151860195508a60600151850194505050505b6001016133e3565b509450945094915050565b8015611ea457604051600090339083908381818185875af1925050503d80600081146138aa576040519150601f19603f3d011682016040523d82523d6000602084013e6138af565b606091505b505090508061098b5760405162461bcd60e51b815260206004820152601760248201527f6d67762f73656e6450656e616c747952657665727465640000000000000000006044820152606401610a85565b60008060008060008560e0015190506000866080015182146139555786516001600160a01b039081166000908152600460209081526040808320828c015190941683529281528282208583529052205461395c565b8661014001515b90506001600160601b0381166139b55761012087015160381c63ffffffff1687516001600160a01b039081166000908152600460209081526040808320828d015190941683529281528282208483529052205490925090505b6139c0878284614544565b15613a5a5760005b60c082901c63ffffffff1615613a42575086516001600160a01b039081166000908152600460209081526040808320828c0151909416835292815282822063ffffffff60c086901c1680845291529190205490613a26898383614544565b15613a3657809350819250613a3c565b50613a42565b506139c8565b8260c083901c63ffffffff169095509350613ae39050565b60005b613a678260e01c90565b15613ad0576000613a788360e01c90565b89516001600160a01b039081166000908152600460209081526040808320828f015190941683529281528282208483529052205492509050613abb898383614544565b15613ac65750613ad0565b9250905080613a5d565b613ada8260e01c90565b94509192508291505b86608001518414613af45783613afe565b61014087015160e01c5b87608001518414613b0f5783613b1f565b61014088015160c01c63ffffffff165b9550955050505050915091565b60c01b63ffffffff60c01b1663ffffffff60c01b19919091161790565b808015613b7057508260c00151613b675760008260a0015111613b70565b60008260800151115b8015613b80575060008260400151115b15613d3c5781516001600160a01b03908116600090815260056020908152604080832082870151909416835292815282822083860151835290529081205460c08401528080613bcf8686613ddf565b608088015160a089015160408a015160608b015160c08c015196995094975092955090939092906e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613cc65760408b01518b5111613c22576000613c2b565b60408b01518b51035b60808b015260608b81015160208d01510360a08c01528a015160c01c63ffffffff168a6040018181525050600460008b600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b602001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b604001518152602001908152602001600020548a60600181815250505b613ce68b8b886e1b59dd8bdb9bdd115e1958dd5d1959608a1b1415613b49565b60408a0183905260808a0185905260a08a0184905260608a0182905260c08a018190526e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613d2f57613d2f8b8b8a8a8a6144e1565b5050505050505050505050565b613d5b8260000151836020015160008560400151866101000151613257565b6101008301819052613d6e906000612a47565b610100830181905282516001600160a01b0390811660009081526002602090815260408083208288015190941683529290522055613dac83836143df565b505050565b600080613dbc6148ec565b60648185516020870160008a8af192508060448415020151915050935093915050565b600080600080613dff85606001516001600160601b0360609190911c1690565b90506000613e1786606001516001600160601b031690565b608087015160a0880151919250908083028483021115613e575750600095508594506e1b59dd8bdb9bdd115e1958dd5d1959608a1b93506143d892505050565b8860c001518015613e6757508183105b80613e7e57508860c00151158015613e7e57508084105b15613e96576080880183905260a08801849052613f0d565b8860c0015115613ee157838202838181613eb257613eb2614fc6565b0615613ebf576001613ec2565b60005b60ff16848281613ed457613ed4614fc6565b040160a08a015250613f0d565b83600003613ef55760808801839052613f0d565b8381840281613f0657613f06614fc6565b0460808901525b50505050600080306001600160a01b031663aa4dd28260e01b878960a00151604051602401613f3d929190615058565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051613f7b9190614ef2565b6000604051808303816000865af19150503d8060008114613fb8576040519150601f19603f3d011682016040523d82523d6000602084013e613fbd565b606091505b509150915081156141175780806020019051810190613fdc9190615080565b94506f6d67762f74726164655375636365737360801b925085602001516001600160a01b031686600001516001600160a01b03167f1d81940ff2c3ac549c8acefd7c1b2ffb24aacc8b3cfa309c22abc3de79727f9d88604001518a60a001518a608001518b60a0015160405161407494939291909384526001600160a01b039290921660208401526040830152606082015260800190565b60405180910390a360e086015160501c60ff16156140f25760e086015160a088015160405163cac1827160e01b815260609290921c9163cac18271916140bf918a9190600401615058565b600060405180830381600087803b1580156140d957600080fd5b505af11580156140ed573d6000803e3d6000fd5b505050505b6080860151604088018051909101905260a0860151606088018051909101905261439d565b602081015160408201516060830151909650945092506e1b59dd8bdb585ad95c94995d995c9d608a1b831480614164575082741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b145b80614185575082731b59dd8bdb585ad95c949958d95a5d9951985a5b60621b145b156142975785602001516001600160a01b031686600001516001600160a01b03167f1d59c048edb5397821854bd12cbe02242b82101c677f949d076d14eb7bd8343688604001518a60a001518a608001518b60a00151896040516142149594939291909485526001600160a01b0393909316602085015260408401919091526060830152608082015260a00190565b60405180910390a360e086015160501c60ff16156142925760e086015160a0880151604051631159507360e01b815260609290921c9163115950739161425f918a9190600401615058565b600060405180830381600087803b15801561427957600080fd5b505af115801561428d573d6000803e3d6000fd5b505050505b61439d565b827f6d67762f6e6f74456e6f756768476173466f724d616b65725472616465000000036143065760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6e6f74456e6f756768476173466f724d616b657254726164650000006044820152606401610a85565b82741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b036143655760405162461bcd60e51b81526020600482015260156024820152741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b6044820152606401610a85565b60405162461bcd60e51b815260206004820152600d60248201526c36b3bb17b9bbb0b822b93937b960991b6044820152606401610a85565b6143d586600001518760200151886040015189606001518a60c00151886f6d67762f74726164655375636365737360801b1415613337565b50505b9250925092565b6101008101516000906127109060e81c61ffff168460400151028161440657614406614fc6565b049050801561447c57604083018051829003905260e08301819052815160005461443a91906001600160a01b031683612fff565b61447c5760405162461bcd60e51b81526020600482015260136024820152721b59dd8bd99959551c985b9cd9995c91985a5b606a1b6044820152606401610a85565b604083015115613dac5761449d82600001518460a001518560400151612fff565b613dac5760405162461bcd60e51b815260206004820152601560248201527436b3bb17a6b3bb2330b4b62a37a830bcaa30b5b2b960591b6044820152606401610a85565b60c084015160481c62ffffff16808411156144fa578093505b6145088585830385856145ea565b84019350816f6d67762f74726164655375636365737360801b1461453c576145308585614740565b60808701805190910190525b505050505050565b600081600003614556575060016130cf565b60408401516060858101516001600160601b039186901c82169291861691908084028284028082036145dd5789516001600160a01b039081166000908152600560209081526040808320828f015190941683529281528282208b835290529081205460481c62ffffff1660a08c0151940295909302949094101595506130cf945050505050565b1194506130cf9350505050565b600080633d3d130d60e01b8660405180604001604052808781526020018681525060405160240161461c929190615099565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319939093169290921790915260c087015190915060601c60005a90508660408204820310156146b45760405162461bcd60e51b815260206004820181905260248201527f6d67762f6e6f74456e6f756768476173466f724d616b6572506f7374686f6f6b6044820152606401610a85565b6000806146c2848a87613db1565b915091505a83039550816147335789602001516001600160a01b03168a600001516001600160a01b03167f51d5a3ecf332626d83c8207fe9bd22f38801f578c7eb222e2d811cd1b4c629a58c604001518460405161472a929190918252602082015260400190565b60405180910390a35b5050505050949350505050565b60c082015160009062ffffff604882901c81169161ffff602082901c1660309190911c909116820102633b9aca00028184111561477b578193505b61010085015160009060601c62ffffff1660e08701519086019060401c61ffff16633b9aca0002029050818111156147b05750805b6147c96147c18760c0015160601c90565b828403611ea7565b95945050505050565b60405180610160016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60405180610120016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806101000160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001600015158152602001600081525090565b60405180608001604052806004906020820280368337509192915050565b80356001600160a01b038116811461492157600080fd5b919050565b600080600080600060a0868803121561493e57600080fd5b6149478661490a565b94506149556020870161490a565b94979496505050506040830135926060810135926080909101359150565b60006020828403121561498557600080fd5b6130cf8261490a565b6000602082840312156149a057600080fd5b5035919050565b6000806000606084860312156149bc57600080fd5b6149c58461490a565b92506149d36020850161490a565b9150604084013590509250925092565b60008083601f8401126149f557600080fd5b50813567ffffffffffffffff811115614a0d57600080fd5b6020830191508360208260071b8501011115611ac857600080fd5b8015158114611ea457600080fd5b600080600080600060808688031215614a4e57600080fd5b614a578661490a565b9450614a656020870161490a565b9350604086013567ffffffffffffffff811115614a8157600080fd5b614a8d888289016149e3565b9094509250506060860135614aa181614a28565b809150509295509295909350565b600080600080600080600060e0888a031215614aca57600080fd5b614ad38861490a565b9650614ae16020890161490a565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b60008060008060808587031215614b2357600080fd5b614b2c8561490a565b9350614b3a6020860161490a565b9250614b486040860161490a565b9396929550929360600135925050565b600060208284031215614b6a57600080fd5b81356130cf81614a28565b60008060408385031215614b8857600080fd5b614b918361490a565b9150614b9f6020840161490a565b90509250929050565b600080600080600080600080610100898b031215614bc557600080fd5b614bce8961490a565b9750614bdc60208a0161490a565b979a9799505050506040860135956060810135956080820135955060a0820135945060c0820135935060e0909101359150565b60008060008060008060c08789031215614c2857600080fd5b614c318761490a565b9550614c3f6020880161490a565b945060408701359350606087013592506080870135614c5d81614a28565b9150614c6b60a0880161490a565b90509295509295509295565b600080828403610140811215614c8c57600080fd5b61012080821215614c9c57600080fd5b849350610f7c81860161490a565b60008060008060808587031215614cc057600080fd5b614cc98561490a565b9350614cd76020860161490a565b9250604085013591506060850135614cee81614a28565b939692955090935050565b60008060008060008060008060006101208a8c031215614d1857600080fd5b614d218a61490a565b9850614d2f60208b0161490a565b9750614d3d60408b0161490a565b9650614d4b60608b0161490a565b955060808a0135945060a08a0135935060c08a013560ff81168114614d6f57600080fd5b8093505060e08a013591506101008a013590509295985092959850929598565b60008060008060008060a08789031215614da857600080fd5b614db18761490a565b9550614dbf6020880161490a565b9450604087013567ffffffffffffffff811115614ddb57600080fd5b614de789828a016149e3565b9095509350506060870135614dfb81614a28565b9150614c6b6080880161490a565b60008060008060808587031215614e1f57600080fd5b614e288561490a565b9350614e366020860161490a565b9250614e446040860161490a565b9150614e526060860161490a565b905092959194509250565b600080600080600060a08688031215614e7557600080fd5b614e7e8661490a565b9450614e8c6020870161490a565b935060408601359250606086013591506080860135614aa181614a28565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60008060408385031215614ee157600080fd5b505080516020909101519092909150565b6000825160005b81811015614f135760208186018101518583015201614ef9565b81811115614f22576000828501525b509190910192915050565b600060208284031215614f3f57600080fd5b81516130cf81614a28565b61012081016001600160a01b0380614f618561490a565b16835280614f716020860161490a565b1660208401525060408301356040830152606083013560608301526080830135608083015260a083013560a083015260c083013560c083015260e083013560e083015261010080840135818401525092915050565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60018060a01b038082511683528060208301511660208401525060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152505050565b61014081016150678285614ff2565b6001600160a01b03929092166101209190910152919050565b60006020828403121561509257600080fd5b5051919050565b61016081016150a88285614ff2565b82516101208301526020830151610140830152939250505056fea2646970667358221220606ee9d9815e4c17941d70526d6fb9577a74084308c36927d5d3f4357268a87964736f6c634300080e003360a060405234801561001057600080fd5b50604051610daf380380610daf83398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b608051610cfa6100b56000396000818161027e015281816104ae0152818161055d0152818161066e01528181610752015281816107cb01526108ac0152610cfa6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632c7e545f1461005157806365c99b231461007d57806366690971146100a0578063c81b5654146100c1575b600080fd5b61006461005f366004610961565b6100e9565b6040516100749493929190610a3b565b60405180910390f35b61009061008b366004610961565b610388565b6040516100749493929190610acb565b6100b36100ae366004610961565b610640565b604051908152602001610074565b6100d46100cf366004610961565b610720565b60408051928352602083019190915201610074565b600060608060606000806100ff8a8a8a8a610720565b9150915060008167ffffffffffffffff81111561011e5761011e610b5e565b604051908082528060200260200182016040528015610147578160200160208202803683370190505b50905060008267ffffffffffffffff81111561016557610165610b5e565b6040519080825280602002602001820160405280156101c157816020015b6101ae6040518060800160405280600081526020016000815260200160008152602001600081525090565b8152602001906001900390816101835790505b50905060008367ffffffffffffffff8111156101df576101df610b5e565b60405190808252806020026020018201604052801561024457816020015b610231604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b8152602001906001900390816101fd5790505b50905060005b851580159061025857508481105b15610373578584828151811061027057610270610b74565b6020026020010181815250507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638c66715c8f8f896040518463ffffffff1660e01b81526004016102cc93929190610b8a565b61010060405180830381865afa1580156102ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030e9190610be5565b84838151811061032057610320610b74565b6020026020010184848151811061033957610339610b74565b60200260200101829052829052505082818151811061035a5761035a610b74565b602002602001015160200151955080600101905061024a565b50939c919b5099509197509095505050505050565b6000606080606060008061039e8a8a8a8a610720565b9150915060008167ffffffffffffffff8111156103bd576103bd610b5e565b6040519080825280602002602001820160405280156103e6578160200160208202803683370190505b50905060008267ffffffffffffffff81111561040457610404610b5e565b60405190808252806020026020018201604052801561042d578160200160208202803683370190505b50905060008367ffffffffffffffff81111561044b5761044b610b5e565b604051908082528060200260200182016040528015610474578160200160208202803683370190505b50905060005b851580159061048857508481105b1561037357858482815181106104a0576104a0610b74565b6020026020010181815250507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166368c13d6b8f8f896040518463ffffffff1660e01b81526004016104fc93929190610b8a565b602060405180830381865afa158015610519573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053d9190610c87565b83828151811061054f5761054f610b74565b6020026020010181815250507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635722647b8f8f896040518463ffffffff1660e01b81526004016105ab93929190610b8a565b602060405180830381865afa1580156105c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ec9190610c87565b8282815181106105fe576105fe610b74565b60200260200101818152505061063683828151811061061f5761061f610b74565b602002602001015163ffffffff60c09190911c1690565b955060010161047a565b6040516365fbae4d60e11b81526001600160a01b0385811660048301528481166024830152600091829182917f00000000000000000000000000000000000000000000000000000000000000009091169063cbf75c9a906044016040805180830381865afa1580156106b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106da9190610ca0565b9092509050600061ffff604084901c16858111156106fa578091506106fe565b8591505b81606084901c62ffffff16880102633b9aca0002945050505050949350505050565b600080836000036107c457604051636f7aeed560e11b81526001600160a01b03878116600483015286811660248301527f0000000000000000000000000000000000000000000000000000000000000000169063def5ddaa90604401602060405180830381865afa158015610799573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bd9190610c87565b915061087c565b600061086b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166368c13d6b8989896040518463ffffffff1660e01b815260040161081993929190610b8a565b602060405180830381865afa158015610836573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085a9190610c87565b6bffffffffffffffffffffffff1690565b11610877576000610879565b835b91505b815b801580159061088c57508382105b1561093f576040516368c13d6b60e01b8152610932906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906368c13d6b906108e5908b908b908790600401610b8a565b602060405180830381865afa158015610902573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109269190610c87565b60c01c63ffffffff1690565b905081600101915061087e565b5094509492505050565b6001600160a01b038116811461095e57600080fd5b50565b6000806000806080858703121561097757600080fd5b843561098281610949565b9350602085013561099281610949565b93969395505050506040820135916060013590565b600081518084526020808501945080840160005b838110156109d7578151875295820195908201906001016109bb565b509495945050505050565b600081518084526020808501945080840160005b838110156109d757815180516001600160a01b0316885283810151848901526040808201519089015260609081015190880152608090960195908201906001016109f6565b6000608086835260208181850152610a55828501886109a7565b84810360408681019190915287518083528389019284019060005b81811015610aa85784518051845286810151878501528481015185850152606090810151908401529385019391860191600101610a70565b50508681036060880152610abc81896109e2565b9b9a5050505050505050505050565b84815260006020608081840152610ae560808401876109a7565b838103604085015285518082528287019183019060005b81811015610b1857835183529284019291840191600101610afc565b50508481036060860152855180825290830191508286019060005b81811015610b4f57825184529284019291840191600101610b33565b50919998505050505050505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6001600160a01b039384168152919092166020820152604081019190915260600190565b6040516080810167ffffffffffffffff81118282101715610bdf57634e487b7160e01b600052604160045260246000fd5b60405290565b600080828403610100811215610bfa57600080fd5b6080811215610c0857600080fd5b610c10610bae565b84518152602085015160208201526040850151604082015260608501516060820152809350506080607f1982011215610c4857600080fd5b50610c51610bae565b6080840151610c5f81610949565b815260a0840151602082015260c0840151604082015260e09093015160608401525092909150565b600060208284031215610c9957600080fd5b5051919050565b60008060408385031215610cb357600080fd5b50508051602090910151909290915056fea26469706673582212209c2ac2ec1d16337e33ecb2db4607133ff3691de347343e4a779dfe456a8fe40864736f6c634300080e003360806040526000805460ff1916600117905534801561001d57600080fd5b5060405161120638038061120683398101604081905261003c9161009f565b600080546001600160a01b0394851661010002610100600160a81b0319909116179055600180549284166001600160a01b0319938416179055600280549190931691161790556100ec565b6001600160a01b038116811461009c57600080fd5b50565b6000806000606084860312156100b457600080fd5b83516100bf81610087565b60208501519093506100d081610087565b60408501519092506100e181610087565b809150509250925092565b61110b806100fb6000396000f3fe6080604052600436106100e15760003560e01c8063a3cfe14d1161007f578063b84e3eda11610059578063b84e3eda14610284578063e1f21c67146102a4578063f8ccbf47146102c4578063ff2e2d33146102de57600080fd5b8063a3cfe14d14610244578063aa2cc08b14610264578063b04220dd1461013057600080fd5b80633a768463116100bb5780633a7684631461016a5780634d1d2b66146101aa578063521606d2146101f4578063978b7c021461021457600080fd5b8063080d7c4d146100ed5780631154020b1461010f5780632d24c42f1461013057600080fd5b366100e857005b600080fd5b3480156100f957600080fd5b5061010d610108366004610b09565b6102fe565b005b34801561011b57600080fd5b5061010d61012a366004610b35565b50505050565b34801561013c57600080fd5b5061015061014b366004610b7b565b610395565b604080519283526020830191909152015b60405180910390f35b34801561017657600080fd5b50610192737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b039091168152602001610161565b3480156101b657600080fd5b506101ca6101c5366004610b7b565b61043d565b6040805195151586526020860194909452928401919091526060830152608082015260a001610161565b34801561020057600080fd5b5061010d61020f366004610c08565b610539565b34801561022057600080fd5b5061023461022f366004610b7b565b61066a565b6040519015158152602001610161565b34801561025057600080fd5b5061010d61025f366004610b09565b6106e2565b34801561027057600080fd5b5061015061027f366004610c9e565b610720565b34801561029057600080fd5b5061010d61029f366004610c08565b6107be565b3480156102b057600080fd5b5061010d6102bf366004610cf9565b6108e1565b3480156102d057600080fd5b506000546102349060ff1681565b3480156102ea57600080fd5b506102346102f9366004610d3a565b610954565b60005460015460025460405163167ae91560e21b81526001600160a01b039283166004820152908216602482015284821660448201526064810184905261010090920416906359eba454906084015b6020604051808303816000875af115801561036c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103909190610dbd565b505050565b600080546001805460025460405163fbffe5fd60e01b81526001600160a01b03928316600482015290821660248201526044810187905260648101869052608481019290925283926101009004169063fbffe5fd9060a4016080604051808303816000875af115801561040c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104309190610ddf565b5091969095509350505050565b60008060008060008061048560405180608001604052808a81526020018981526020016bffffffffffffffffffffffff8016815260200165ffffffffffff8016815250610a12565b6000805460018054600254604051632370a17d60e11b8152959650939485948594859485946001600160a01b036101009093048316946346e142fa946104d694928316939216918c91600401610e15565b60a0604051808303816000875af11580156104f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105199190610eaa565b60019094149e50919c509a50985096505050505050509295509295909350565b604080516020810190915260008082525b825181101561065c5782518290737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae9086908590811061058557610585610eea565b60200260200101516040518263ffffffff1660e01b81526004016105ab91815260200190565b600060405180830381865afa1580156105c8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105f09190810190610f2c565b604051602001610601929190610fc0565b6040516020818303038152906040529150600183516106209190611005565b81101561064a5781604051602001610638919061101c565b60405160208183030381529060405291505b8061065481611042565b91505061054a565b5061066681610a6f565b5050565b60405163268e95b360e11b815260048101839052602481018290526000903090634d1d2b669060440160a0604051808303816000875af11580156106b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d6919061105b565b50929695505050505050565b60005460405163095ea7b360e01b81526101009091046001600160a01b0390811660048301526024820183905283169063095ea7b39060440161034d565b60405163fbffe5fd60e01b81526001600160a01b0385811660048301528481166024830152604482018490526064820183905260016084830152600091829188169063fbffe5fd9060a4016080604051808303816000875af115801561078a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ae9190610ddf565b5091999098509650505050505050565b604080516020810190915260008082525b825181101561065c5782518290737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae9086908590811061080a5761080a610eea565b60200260200101516040518263ffffffff1660e01b815260040161083091815260200190565b600060405180830381865afa15801561084d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108759190810190610f2c565b604051602001610886929190610fc0565b6040516020818303038152906040529150600183516108a59190611005565b8110156108cf57816040516020016108bd919061101c565b60405160208183030381529060405291505b806108d981611042565b9150506107cf565b60405163095ea7b360e01b81526001600160a01b0383811660048301526024820183905284169063095ea7b3906044016020604051808303816000875af1158015610930573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012a9190610dbd565b600080610980604051806080016040528088815260200187815260200186815260200185815250610a12565b90506000896001600160a01b03166346e142fa8a8a8560016040518563ffffffff1660e01b81526004016109b79493929190610e15565b60a0604051808303816000875af11580156109d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fa9190610eaa565b50506001909214945050505050979650505050505050565b60408051600180825281830190925260609160009190816020015b610a35610ad6565b815260200190600190039081610a2d5790505090508281600081518110610a5e57610a5e610eea565b602090810291909101015292915050565b610ab281604051602401610a8391906110a2565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052610ab5565b50565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60405180608001604052806004906020820280368337509192915050565b6001600160a01b0381168114610ab257600080fd5b60008060408385031215610b1c57600080fd5b8235610b2781610af4565b946020939093013593505050565b60008060008060808587031215610b4b57600080fd5b8435610b5681610af4565b93506020850135610b6681610af4565b93969395505050506040820135916060013590565b60008060408385031215610b8e57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610bdc57610bdc610b9d565b604052919050565b600067ffffffffffffffff821115610bfe57610bfe610b9d565b5060051b60200190565b60006020808385031215610c1b57600080fd5b823567ffffffffffffffff811115610c3257600080fd5b8301601f81018513610c4357600080fd5b8035610c56610c5182610be4565b610bb3565b81815260059190911b82018301908381019087831115610c7557600080fd5b928401925b82841015610c9357833582529284019290840190610c7a565b979650505050505050565b600080600080600060a08688031215610cb657600080fd5b8535610cc181610af4565b94506020860135610cd181610af4565b93506040860135610ce181610af4565b94979396509394606081013594506080013592915050565b600080600060608486031215610d0e57600080fd5b8335610d1981610af4565b92506020840135610d2981610af4565b929592945050506040919091013590565b600080600080600080600060e0888a031215610d5557600080fd5b8735610d6081610af4565b96506020880135610d7081610af4565b95506040880135610d8081610af4565b969995985095966060810135965060808101359560a0820135955060c0909101359350915050565b80518015158114610db857600080fd5b919050565b600060208284031215610dcf57600080fd5b610dd882610da8565b9392505050565b60008060008060808587031215610df557600080fd5b505082516020840151604085015160609095015191969095509092509050565b6001600160a01b038581168252841660208083019190915260806040830181905284518382018190526000928681019160a08601919085805b82811015610e8b57855185835b6004811015610e7857825182529186019190860190600101610e5b565b5050509483019493860193600101610e4e565b5050505085151560608601529250610ea1915050565b95945050505050565b600080600080600060a08688031215610ec257600080fd5b5050835160208501516040860151606087015160809097015192989197509594509092509050565b634e487b7160e01b600052603260045260246000fd5b60005b83811015610f1b578181015183820152602001610f03565b8381111561012a5750506000910152565b600060208284031215610f3e57600080fd5b815167ffffffffffffffff80821115610f5657600080fd5b818401915084601f830112610f6a57600080fd5b815181811115610f7c57610f7c610b9d565b610f8f601f8201601f1916602001610bb3565b9150808252856020828501011115610fa657600080fd5b610fb7816020840160208601610f00565b50949350505050565b60008351610fd2818460208801610f00565b835190830190610fe6818360208801610f00565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b60008282101561101757611017610fef565b500390565b6000825161102e818460208701610f00565b61016160f51b920191825250600201919050565b60006001820161105457611054610fef565b5060010190565b600080600080600060a0868803121561107357600080fd5b61107c86610da8565b602087015160408801516060890151608090990151929a91995097965090945092505050565b60208152600082518060208401526110c1816040850160208701610f00565b601f01601f1916919091016040019291505056fea2646970667358221220fe05e77654585728cf63d927b792919a9b4528889d07a63176801add83a0055b64736f6c634300080e0033608060405234801561001057600080fd5b5060405161206d38038061206d83398101604081905261002f91610092565b600180546001600160a01b0394851661010002610100600160a81b0319909116179055600280549284166001600160a01b0319938416179055600380549190931691161790556100df565b6001600160a01b038116811461008f57600080fd5b50565b6000806000606084860312156100a757600080fd5b83516100b28161007a565b60208501519093506100c38161007a565b60408501519092506100d48161007a565b809150509250925092565b611f7f806100ee6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631f7b6d32146100515780635686153214610067578063a5e3875114610092578063e9c4a3ac146100a7575b600080fd5b6000546040519081526020015b60405180910390f35b61007a61007536600461047a565b6100af565b6040516001600160a01b03909116815260200161005e565b6100a56100a036600461047a565b6100de565b005b6100a5610320565b60008082815481106100c3576100c3610493565b6000918252602090912001546001600160a01b031692915050565b60015460ff16610311578067ffffffffffffffff811115610101576101016104a9565b60405190808252806020026020018201604052801561012a578160200160208202803683370190505b50805161013f916000916020909101906103f3565b5060005b8181101561030f576001546002546003546040516101009093046001600160a01b03908116939281169291169061017990610458565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f0801580156101b5573d6000803e3d6000fd5b50600082815481106101c9576101c9610493565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506000818154811061020a5761020a610493565b60009182526020909120015460025460405163a3cfe14d60e01b81526001600160a01b039182166004820152678ac7230489e80000602482015291169063a3cfe14d90604401600060405180830381600087803b15801561026a57600080fd5b505af115801561027e573d6000803e3d6000fd5b505050506000818154811061029557610295610493565b600091825260209091200154604051635239cafb60e11b8152821560048201526001600160a01b039091169063a47395f690602401600060405180830381600087803b1580156102e457600080fd5b505af11580156102f8573d6000803e3d6000fd5b505050508080610307906104bf565b915050610143565b505b506001805460ff191681179055565b600080549061032f82476104e6565b90506000811161037b5760405162461bcd60e51b8152602060048201526013602482015272181032ba3432b9103a37903a3930b739b332b960691b604482015260640160405180910390fd5b60005b828110156103ee57600080828154811061039a5761039a610493565b60009182526020822001546040516001600160a01b039091169250829085156108fc0290869084818181858888f193505050509050806103d957600080fd5b505080806103e6906104bf565b91505061037e565b505050565b828054828255906000526020600020908101928215610448579160200282015b8281111561044857825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610413565b50610454929150610465565b5090565b611a418061050983390190565b5b808211156104545760008155600101610466565b60006020828403121561048c57600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6000600182016104df57634e487b7160e01b600052601160045260246000fd5b5060010190565b60008261050357634e487b7160e01b600052601260045260246000fd5b50049056fe60806040526004805463ff00ff00191663010001001790553480156200002457600080fd5b5060405162001a4138038062001a418339810160408190526200004791620000a3565b600080546001600160a01b039485166001600160a01b031991821617909155600180549385169382169390931790925560028054919093169116179055620000f7565b6001600160a01b0381168114620000a057600080fd5b50565b600080600060608486031215620000b957600080fd5b8351620000c6816200008a565b6020850151909350620000d9816200008a565b6040850151909250620000ec816200008a565b809150509250925092565b61193a80620001076000396000f3fe6080604052600436106101bb5760003560e01c8063ba414fa6116100ec578063e923c6511161008a578063fa7626d411610064578063fa7626d414610550578063fc3816c81461056f578063fc8349f21461058f578063ffae399e146105af57600080fd5b8063e923c651146104ef578063f5537ede1461050f578063f8ccbf471461052f57600080fd5b8063ccfbf94d116100c6578063ccfbf94d1461046f578063cda30c3b1461048f578063d3845fea146104af578063e67ecda1146104cf57600080fd5b8063ba414fa61461040a578063c4c6c87d1461042f578063cafffca81461044f57600080fd5b80635a4924e8116101595780637ec95ff3116101335780637ec95ff31461037c5780638b0af9bb1461039c578063a3cfe14d146103b1578063a47395f6146103d157600080fd5b80635a4924e8146102f55780636c49c32c146103235780637a943a371461034357600080fd5b80633a768463116101955780633a768463146102295780633d3d130d1461026e57806353e575ac1461028e578063557f49c3146102bc57600080fd5b80630cc9d656146101c75780632644c05c146101e957806333ac5efd1461020957600080fd5b366101c257005b600080fd5b3480156101d357600080fd5b506101e76101e236600461142d565b6105e8565b005b3480156101f557600080fd5b506101e7610204366004611492565b610631565b34801561021557600080fd5b506101e76102243660046114cd565b6106af565b34801561023557600080fd5b50610251737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561027a57600080fd5b506101e7610289366004611529565b610731565b34801561029a57600080fd5b506102ae6102a9366004611492565b61078d565b604051908152602001610265565b3480156102c857600080fd5b506101e76102d736600461157a565b60028054911515600160a81b0260ff60a81b19909216919091179055565b34801561030157600080fd5b506101e761031036600461157a565b6004805460ff1916911515919091179055565b34801561032f57600080fd5b506102ae61033e36600461159e565b610821565b34801561034f57600080fd5b506101e761035e36600461157a565b60028054911515600160b81b0260ff60b81b19909216919091179055565b34801561038857600080fd5b506102ae6103973660046114cd565b610988565b3480156103a857600080fd5b506102ae610a1d565b3480156103bd57600080fd5b506101e76103cc3660046115bb565b610a8f565b3480156103dd57600080fd5b506101e76103ec36600461157a565b60028054911515600160a01b0260ff60a01b19909216919091179055565b34801561041657600080fd5b5061041f610b0b565b6040519015158152602001610265565b34801561043b57600080fd5b506102ae61044a3660046115e7565b610c3a565b34801561045b57600080fd5b506102ae61046a3660046115e7565b610ccd565b34801561047b57600080fd5b506102ae61048a366004611600565b610d1e565b34801561049b57600080fd5b506102ae6104aa366004611659565b610d9e565b3480156104bb57600080fd5b506101e76104ca3660046115e7565b610e30565b3480156104db57600080fd5b506101e76104ea3660046115e7565b600355565b3480156104fb57600080fd5b506102ae61050a366004611492565b610e92565b34801561051b57600080fd5b506101e761052a36600461168b565b610f1b565b34801561053b57600080fd5b5060045461041f906301000000900460ff1681565b34801561055c57600080fd5b5060045461041f90610100900460ff1681565b34801561057b57600080fd5b506102ae61058a3660046116cc565b610f94565b34801561059b57600080fd5b5061041f6105aa3660046115e7565b611022565b3480156105bb57600080fd5b506101e76105ca36600461157a565b60028054911515600160b01b0260ff60b01b19909216919091179055565b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c28686868686866040516106219695949392919061172e565b60405180910390a1505050505050565b60008054600154600254604051636a4f769160e01b81526001600160a01b0393841694636a4f7691946106769481169316918b918b918b91908b908b90600401611767565b600060405180830381600087803b15801561069057600080fd5b505af11580156106a4573d6000803e3d6000fd5b505050505050505050565b60008054600154600254604051636a4f769160e01b81526001600160a01b0393841694636a4f76919487946106f794908216939116918d918d918d918d908d90600401611767565b6000604051808303818588803b15801561071057600080fd5b505af1158015610724573d6000803e3d6000fd5b5050505050505050505050565b6003541561077f5761077f81602001356003546040518060400160405280601881526020017f496e636f727265637420737461747573206d6573736167650000000000000000815250611092565b61078982826110da565b5050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc9387936107d4939183169216908c908c908c908a908d906004016117ab565b60206040518083038185885af11580156107f2573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061081791906117e9565b9695505050505050565b600254600090600160b01b900460ff161561085c576040805160208082019092526f1d195cdd13585ad95c8bdc995d995c9d60821b81529081fd5b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c23361088b6020850185611802565b61089b6040860160208701611802565b856040013586608001358760a001356040516108bc9695949392919061172e565b60405180910390a1600254600160a01b900460ff161561095f576108e36020830183611802565b6000805460405163095ea7b360e01b81526001600160a01b0391821660048201526024810192909252919091169063095ea7b3906044016020604051808303816000875af1158015610939573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095d919061181f565b505b600254600160a81b900460ff161561098057506418589bdc9d60da1b919050565b506000919050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc9387936109cf939183169216908d908d908d908d908d906004016117ab565b60206040518083038185885af11580156109ed573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610a1291906117e9565b979650505050505050565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610a66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8a91906117e9565b905090565b60005460405163095ea7b360e01b81526001600160a01b039182166004820152602481018390529083169063095ea7b3906044016020604051808303816000875af1158015610ae2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b06919061181f565b505050565b60045460009062010000900460ff1615610b2f575060045462010000900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610c355760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610bbd917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611868565b60408051601f1981840301815290829052610bd791611899565b6000604051808303816000865af19150503d8060008114610c14576040519150601f19603f3d011682016040523d82523d6000602084013e610c19565b606091505b5091505080806020019051810190610c31919061181f565b9150505b919050565b6000805460015460025460405163ad97db1b60e01b81526001600160a01b0392831660048201529082166024820152604481018590526064810184905291169063ad97db1b906084015b6020604051808303816000875af1158015610ca3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc791906117e9565b92915050565b600080546001805460025460405163ad97db1b60e01b81526001600160a01b03928316600482015290821660248201526044810186905260648101929092529091169063ad97db1b90608401610c84565b6000805460405163127db4b760e21b81526001600160a01b03909116906349f6d2dc90610d5b908a908a908a908a908a9089908b906004016117ab565b6020604051808303816000875af1158015610d7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1291906117e9565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc93610de493908216929116908a908a908a9089908b906004016117ab565b6020604051808303816000875af1158015610e03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2791906117e9565b95945050505050565b600054604051630460488160e31b81523060048201526001600160a01b039091169063230244089083906024016000604051808303818588803b158015610e7657600080fd5b505af1158015610e8a573d6000803e3d6000fd5b505050505050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc93610ed893908216929116908b908b908b908b908b906004016117ab565b6020604051808303816000875af1158015610ef7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081791906117e9565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af1158015610f6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8e919061181f565b50505050565b6000805460405163127db4b760e21b81526001600160a01b03909116906349f6d2dc908490610fd3908c908c908c908c908c908a908d906004016117ab565b60206040518083038185885af1158015610ff1573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061101691906117e9565b98975050505050505050565b60008054604051632e1a7d4d60e01b8152600481018490526001600160a01b0390911690632e1a7d4d906024016020604051808303816000875af115801561106e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc7919061181f565b818314610b06577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583816040516110c891906118b5565b60405180910390a1610b0683836111e2565b60045460ff16156111205760405162461bcd60e51b815260206004820152600c60248201526b1c1bdcdd1a1bdbdad1985a5b60a21b604482015260640160405180910390fd5b600254600160b81b900460ff1615610789576000546001600160a01b0316636a4f76916111506020850185611802565b6111606040860160208701611802565b606080870135901c6bffffffffffffffffffffffff166bffffffffffffffffffffffff60608801351660c088013560481c62ffffff16600060608a013560e01c8a604001356040518963ffffffff1660e01b81526004016111c8989796959493929190611767565b600060405180830381600087803b158015610e7657600080fd5b808214610789577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516112569060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974604082015264657333325d60d81b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a1610789737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156114025760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526113a19291602001611868565b60408051601f19818403018152908290526113bb91611899565b6000604051808303816000865af19150503d80600081146113f8576040519150601f19603f3d011682016040523d82523d6000602084013e6113fd565b606091505b505050505b6004805462ff0000191662010000179055565b6001600160a01b038116811461142a57600080fd5b50565b60008060008060008060c0878903121561144657600080fd5b863561145181611415565b9550602087013561146181611415565b9450604087013561147181611415565b959894975094956060810135955060808101359460a0909101359350915050565b600080600080600060a086880312156114aa57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b60008060008060008060c087890312156114e657600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b6000610120828403121561152357600080fd5b50919050565b60008082840361016081121561153e57600080fd5b6115488585611510565b9250604061011f198201121561155d57600080fd5b50610120830190509250929050565b801515811461142a57600080fd5b60006020828403121561158c57600080fd5b81356115978161156c565b9392505050565b600061012082840312156115b157600080fd5b6115978383611510565b600080604083850312156115ce57600080fd5b82356115d981611415565b946020939093013593505050565b6000602082840312156115f957600080fd5b5035919050565b60008060008060008060c0878903121561161957600080fd5b863561162481611415565b9550602087013561163481611415565b95989597505050506040840135936060810135936080820135935060a0909101359150565b6000806000806080858703121561166f57600080fd5b5050823594602084013594506040840135936060013592509050565b6000806000606084860312156116a057600080fd5b83356116ab81611415565b925060208401356116bb81611415565b929592945050506040919091013590565b600080600080600080600060e0888a0312156116e757600080fd5b87356116f281611415565b9650602088013561170281611415565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b6001600160a01b03968716815294861660208601529290941660408401526060830152608082019290925260a081019190915260c00190565b6001600160a01b03988916815296909716602087015260408601949094526060850192909252608084015260a083015260c082015260e08101919091526101000190565b6001600160a01b03978816815295909616602086015260408501939093526060840191909152608083015260a082015260c081019190915260e00190565b6000602082840312156117fb57600080fd5b5051919050565b60006020828403121561181457600080fd5b813561159781611415565b60006020828403121561183157600080fd5b81516115978161156c565b60005b8381101561185757818101518382015260200161183f565b83811115610f8e5750506000910152565b6001600160e01b031983168152815160009061188b81600485016020870161183c565b919091016004019392505050565b600082516118ab81846020870161183c565b9190910192915050565b60408152600560408201526422b93937b960d91b606082015260806020820152600082518060808401526118f08160a085016020870161183c565b601f01601f19169190910160a0019291505056fea2646970667358221220363d825a62e7711a222b729367aea22c71c496027732c66afce572665829ed6264736f6c634300080e0033a2646970667358221220bc7d9d438cd5627bd00d066b2f3b1acd90318af6a7a9515bd2a5d7aaffa9dcd064736f6c634300080e003360806040526004805463ff00ff00191663010001001790553480156200002457600080fd5b5060405162001a4138038062001a418339810160408190526200004791620000a3565b600080546001600160a01b039485166001600160a01b031991821617909155600180549385169382169390931790925560028054919093169116179055620000f7565b6001600160a01b0381168114620000a057600080fd5b50565b600080600060608486031215620000b957600080fd5b8351620000c6816200008a565b6020850151909350620000d9816200008a565b6040850151909250620000ec816200008a565b809150509250925092565b61193a80620001076000396000f3fe6080604052600436106101bb5760003560e01c8063ba414fa6116100ec578063e923c6511161008a578063fa7626d411610064578063fa7626d414610550578063fc3816c81461056f578063fc8349f21461058f578063ffae399e146105af57600080fd5b8063e923c651146104ef578063f5537ede1461050f578063f8ccbf471461052f57600080fd5b8063ccfbf94d116100c6578063ccfbf94d1461046f578063cda30c3b1461048f578063d3845fea146104af578063e67ecda1146104cf57600080fd5b8063ba414fa61461040a578063c4c6c87d1461042f578063cafffca81461044f57600080fd5b80635a4924e8116101595780637ec95ff3116101335780637ec95ff31461037c5780638b0af9bb1461039c578063a3cfe14d146103b1578063a47395f6146103d157600080fd5b80635a4924e8146102f55780636c49c32c146103235780637a943a371461034357600080fd5b80633a768463116101955780633a768463146102295780633d3d130d1461026e57806353e575ac1461028e578063557f49c3146102bc57600080fd5b80630cc9d656146101c75780632644c05c146101e957806333ac5efd1461020957600080fd5b366101c257005b600080fd5b3480156101d357600080fd5b506101e76101e236600461142d565b6105e8565b005b3480156101f557600080fd5b506101e7610204366004611492565b610631565b34801561021557600080fd5b506101e76102243660046114cd565b6106af565b34801561023557600080fd5b50610251737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561027a57600080fd5b506101e7610289366004611529565b610731565b34801561029a57600080fd5b506102ae6102a9366004611492565b61078d565b604051908152602001610265565b3480156102c857600080fd5b506101e76102d736600461157a565b60028054911515600160a81b0260ff60a81b19909216919091179055565b34801561030157600080fd5b506101e761031036600461157a565b6004805460ff1916911515919091179055565b34801561032f57600080fd5b506102ae61033e36600461159e565b610821565b34801561034f57600080fd5b506101e761035e36600461157a565b60028054911515600160b81b0260ff60b81b19909216919091179055565b34801561038857600080fd5b506102ae6103973660046114cd565b610988565b3480156103a857600080fd5b506102ae610a1d565b3480156103bd57600080fd5b506101e76103cc3660046115bb565b610a8f565b3480156103dd57600080fd5b506101e76103ec36600461157a565b60028054911515600160a01b0260ff60a01b19909216919091179055565b34801561041657600080fd5b5061041f610b0b565b6040519015158152602001610265565b34801561043b57600080fd5b506102ae61044a3660046115e7565b610c3a565b34801561045b57600080fd5b506102ae61046a3660046115e7565b610ccd565b34801561047b57600080fd5b506102ae61048a366004611600565b610d1e565b34801561049b57600080fd5b506102ae6104aa366004611659565b610d9e565b3480156104bb57600080fd5b506101e76104ca3660046115e7565b610e30565b3480156104db57600080fd5b506101e76104ea3660046115e7565b600355565b3480156104fb57600080fd5b506102ae61050a366004611492565b610e92565b34801561051b57600080fd5b506101e761052a36600461168b565b610f1b565b34801561053b57600080fd5b5060045461041f906301000000900460ff1681565b34801561055c57600080fd5b5060045461041f90610100900460ff1681565b34801561057b57600080fd5b506102ae61058a3660046116cc565b610f94565b34801561059b57600080fd5b5061041f6105aa3660046115e7565b611022565b3480156105bb57600080fd5b506101e76105ca36600461157a565b60028054911515600160b01b0260ff60b01b19909216919091179055565b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c28686868686866040516106219695949392919061172e565b60405180910390a1505050505050565b60008054600154600254604051636a4f769160e01b81526001600160a01b0393841694636a4f7691946106769481169316918b918b918b91908b908b90600401611767565b600060405180830381600087803b15801561069057600080fd5b505af11580156106a4573d6000803e3d6000fd5b505050505050505050565b60008054600154600254604051636a4f769160e01b81526001600160a01b0393841694636a4f76919487946106f794908216939116918d918d918d918d908d90600401611767565b6000604051808303818588803b15801561071057600080fd5b505af1158015610724573d6000803e3d6000fd5b5050505050505050505050565b6003541561077f5761077f81602001356003546040518060400160405280601881526020017f496e636f727265637420737461747573206d6573736167650000000000000000815250611092565b61078982826110da565b5050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc9387936107d4939183169216908c908c908c908a908d906004016117ab565b60206040518083038185885af11580156107f2573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061081791906117e9565b9695505050505050565b600254600090600160b01b900460ff161561085c576040805160208082019092526f1d195cdd13585ad95c8bdc995d995c9d60821b81529081fd5b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c23361088b6020850185611802565b61089b6040860160208701611802565b856040013586608001358760a001356040516108bc9695949392919061172e565b60405180910390a1600254600160a01b900460ff161561095f576108e36020830183611802565b6000805460405163095ea7b360e01b81526001600160a01b0391821660048201526024810192909252919091169063095ea7b3906044016020604051808303816000875af1158015610939573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095d919061181f565b505b600254600160a81b900460ff161561098057506418589bdc9d60da1b919050565b506000919050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc9387936109cf939183169216908d908d908d908d908d906004016117ab565b60206040518083038185885af11580156109ed573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610a1291906117e9565b979650505050505050565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610a66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8a91906117e9565b905090565b60005460405163095ea7b360e01b81526001600160a01b039182166004820152602481018390529083169063095ea7b3906044016020604051808303816000875af1158015610ae2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b06919061181f565b505050565b60045460009062010000900460ff1615610b2f575060045462010000900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610c355760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610bbd917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611868565b60408051601f1981840301815290829052610bd791611899565b6000604051808303816000865af19150503d8060008114610c14576040519150601f19603f3d011682016040523d82523d6000602084013e610c19565b606091505b5091505080806020019051810190610c31919061181f565b9150505b919050565b6000805460015460025460405163ad97db1b60e01b81526001600160a01b0392831660048201529082166024820152604481018590526064810184905291169063ad97db1b906084015b6020604051808303816000875af1158015610ca3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc791906117e9565b92915050565b600080546001805460025460405163ad97db1b60e01b81526001600160a01b03928316600482015290821660248201526044810186905260648101929092529091169063ad97db1b90608401610c84565b6000805460405163127db4b760e21b81526001600160a01b03909116906349f6d2dc90610d5b908a908a908a908a908a9089908b906004016117ab565b6020604051808303816000875af1158015610d7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1291906117e9565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc93610de493908216929116908a908a908a9089908b906004016117ab565b6020604051808303816000875af1158015610e03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2791906117e9565b95945050505050565b600054604051630460488160e31b81523060048201526001600160a01b039091169063230244089083906024016000604051808303818588803b158015610e7657600080fd5b505af1158015610e8a573d6000803e3d6000fd5b505050505050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc93610ed893908216929116908b908b908b908b908b906004016117ab565b6020604051808303816000875af1158015610ef7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081791906117e9565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af1158015610f6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8e919061181f565b50505050565b6000805460405163127db4b760e21b81526001600160a01b03909116906349f6d2dc908490610fd3908c908c908c908c908c908a908d906004016117ab565b60206040518083038185885af1158015610ff1573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061101691906117e9565b98975050505050505050565b60008054604051632e1a7d4d60e01b8152600481018490526001600160a01b0390911690632e1a7d4d906024016020604051808303816000875af115801561106e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc7919061181f565b818314610b06577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583816040516110c891906118b5565b60405180910390a1610b0683836111e2565b60045460ff16156111205760405162461bcd60e51b815260206004820152600c60248201526b1c1bdcdd1a1bdbdad1985a5b60a21b604482015260640160405180910390fd5b600254600160b81b900460ff1615610789576000546001600160a01b0316636a4f76916111506020850185611802565b6111606040860160208701611802565b606080870135901c6bffffffffffffffffffffffff166bffffffffffffffffffffffff60608801351660c088013560481c62ffffff16600060608a013560e01c8a604001356040518963ffffffff1660e01b81526004016111c8989796959493929190611767565b600060405180830381600087803b158015610e7657600080fd5b808214610789577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516112569060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974604082015264657333325d60d81b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a1610789737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156114025760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526113a19291602001611868565b60408051601f19818403018152908290526113bb91611899565b6000604051808303816000865af19150503d80600081146113f8576040519150601f19603f3d011682016040523d82523d6000602084013e6113fd565b606091505b505050505b6004805462ff0000191662010000179055565b6001600160a01b038116811461142a57600080fd5b50565b60008060008060008060c0878903121561144657600080fd5b863561145181611415565b9550602087013561146181611415565b9450604087013561147181611415565b959894975094956060810135955060808101359460a0909101359350915050565b600080600080600060a086880312156114aa57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b60008060008060008060c087890312156114e657600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b6000610120828403121561152357600080fd5b50919050565b60008082840361016081121561153e57600080fd5b6115488585611510565b9250604061011f198201121561155d57600080fd5b50610120830190509250929050565b801515811461142a57600080fd5b60006020828403121561158c57600080fd5b81356115978161156c565b9392505050565b600061012082840312156115b157600080fd5b6115978383611510565b600080604083850312156115ce57600080fd5b82356115d981611415565b946020939093013593505050565b6000602082840312156115f957600080fd5b5035919050565b60008060008060008060c0878903121561161957600080fd5b863561162481611415565b9550602087013561163481611415565b95989597505050506040840135936060810135936080820135935060a0909101359150565b6000806000806080858703121561166f57600080fd5b5050823594602084013594506040840135936060013592509050565b6000806000606084860312156116a057600080fd5b83356116ab81611415565b925060208401356116bb81611415565b929592945050506040919091013590565b600080600080600080600060e0888a0312156116e757600080fd5b87356116f281611415565b9650602088013561170281611415565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b6001600160a01b03968716815294861660208601529290941660408401526060830152608082019290925260a081019190915260c00190565b6001600160a01b03988916815296909716602087015260408601949094526060850192909252608084015260a083015260c082015260e08101919091526101000190565b6001600160a01b03978816815295909616602086015260408501939093526060840191909152608083015260a082015260c081019190915260e00190565b6000602082840312156117fb57600080fd5b5051919050565b60006020828403121561181457600080fd5b813561159781611415565b60006020828403121561183157600080fd5b81516115978161156c565b60005b8381101561185757818101518382015260200161183f565b83811115610f8e5750506000910152565b6001600160e01b031983168152815160009061188b81600485016020870161183c565b919091016004019392505050565b600082516118ab81846020870161183c565b9190910192915050565b60408152600560408201526422b93937b960d91b606082015260806020820152600082518060808401526118f08160a085016020870161183c565b601f01601f19169190910160a0019291505056fea2646970667358221220363d825a62e7711a222b729367aea22c71c496027732c66afce572665829ed6264736f6c634300080e00336101406040523480156200001257600080fd5b5060405162001bb838038062001bb88339810160408190526200003591620002c1565b82828180604051806040016040528060018152602001603160f81b815250848481600390805190602001906200006d9291906200014e565b508051620000839060049060208401906200014e565b5050825160208085019190912083518483012060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81880181905281830187905260608201869052608082019490945230818401528151808203909301835260c0019052805194019390932091935091906080523060c05261012052505050506001600160a01b03969096166000908152600860205260409020805460ff19166001179055505060ff1660095550620003a1915050565b8280546200015c9062000365565b90600052602060002090601f016020900481019282620001805760008555620001cb565b82601f106200019b57805160ff1916838001178555620001cb565b82800160010185558215620001cb579182015b82811115620001cb578251825591602001919060010190620001ae565b50620001d9929150620001dd565b5090565b5b80821115620001d95760008155600101620001de565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200021c57600080fd5b81516001600160401b0380821115620002395762000239620001f4565b604051601f8301601f19908116603f01168101908282118183101715620002645762000264620001f4565b816040528381526020925086838588010111156200028157600080fd5b600091505b83821015620002a5578582018301518183018401529082019062000286565b83821115620002b75760008385830101525b9695505050505050565b60008060008060808587031215620002d857600080fd5b84516001600160a01b0381168114620002f057600080fd5b60208601519094506001600160401b03808211156200030e57600080fd5b6200031c888389016200020a565b945060408701519150808211156200033357600080fd5b5062000342878288016200020a565b925050606085015160ff811681146200035a57600080fd5b939692955090935050565b600181811c908216806200037a57607f821691505b6020821081036200039b57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e05161010051610120516117c7620003f160003960006109290152600061097801526000610953015260006108ac015260006108d60152600061090001526117c76000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806340c10f19116100c357806395d89b411161007c57806395d89b41146102c45780639dc29fac146102cc578063a457c2d7146102df578063a9059cbb146102f2578063d505accf14610305578063dd62ed3e1461031857600080fd5b806340c10f1914610236578063704802751461024957806370a082311461025c5780637a6d69b4146102855780637ecebe00146102a85780638ea2da7d146102bb57600080fd5b80631e7be210116101155780631e7be210146101cd57806323b872dd146101e057806325db769e146101f3578063313ce567146102065780633644e5151461021b578063395093511461022357600080fd5b806306fdde0314610152578063095ea7b31461017057806316c02129146101935780631785f53c146101a857806318160ddd146101bb575b600080fd5b61015a61032b565b604051610167919061140b565b60405180910390f35b61018361017e36600461147c565b6103bd565b6040519015158152602001610167565b6101a66101a13660046114a6565b610444565b005b6101a66101b63660046114a6565b610477565b6002545b604051908152602001610167565b6101a66101db3660046114a6565b6104a0565b6101836101ee3660046114c8565b6104cd565b6101bf610201366004611504565b610589565b60095460405160ff9091168152602001610167565b6101bf6105af565b61018361023136600461147c565b6105be565b6101a661024436600461147c565b6105ea565b6101a66102573660046114a6565b610600565b6101bf61026a3660046114a6565b6001600160a01b031660009081526020819052604090205490565b6101836102933660046114a6565b60076020526000908152604090205460ff1681565b6101bf6102b63660046114a6565b61062c565b6101bf60095481565b61015a61064a565b6101a66102da36600461147c565b610659565b6101836102ed36600461147c565b61066b565b61018361030036600461147c565b6106f1565b6101a661031336600461151d565b610766565b6101bf610326366004611590565b6107f6565b60606003805461033a906115c3565b80601f0160208091040260200160405190810160405280929190818152602001828054610366906115c3565b80156103b35780601f10610388576101008083540402835291602001916103b3565b820191906000526020600020905b81548152906001019060200180831161039657829003601f168201915b5050505050905090565b6001600160a01b038216600090815260076020526040812054839060ff16156104015760405162461bcd60e51b81526004016103f8906115f7565b60405180910390fd5b3360008181526007602052604090205460ff16156104315760405162461bcd60e51b81526004016103f8906115f7565b61043b8585610821565b95945050505050565b61044c61082f565b610474816001600160a01b03166000908152600760205260409020805460ff19166001179055565b50565b61047f61082f565b6001600160a01b03166000908152600860205260409020805460ff19169055565b6104a861082f565b610474816001600160a01b03166000908152600760205260409020805460ff19169055565b6001600160a01b038316600090815260076020526040812054849060ff16156105085760405162461bcd60e51b81526004016103f8906115f7565b6001600160a01b038416600090815260076020526040902054849060ff16156105435760405162461bcd60e51b81526004016103f8906115f7565b3360008181526007602052604090205460ff16156105735760405162461bcd60e51b81526004016103f8906115f7565b61057e878787610886565b979650505050505050565b600061059460095490565b61059f90600a61171e565b6105a9908361172d565b92915050565b60006105b961089f565b905090565b6000336105e08185856105d183836107f6565b6105db919061174c565b6109c6565b5060019392505050565b6105f261082f565b6105fc8282610aeb565b5050565b61060861082f565b6001600160a01b03166000908152600860205260409020805460ff19166001179055565b6001600160a01b0381166000908152600560205260408120546105a9565b60606004805461033a906115c3565b61066161082f565b6105fc8282610bca565b6000338161067982866107f6565b9050838110156106d95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103f8565b6106e682868684036109c6565b506001949350505050565b6001600160a01b038216600090815260076020526040812054839060ff161561072c5760405162461bcd60e51b81526004016103f8906115f7565b3360008181526007602052604090205460ff161561075c5760405162461bcd60e51b81526004016103f8906115f7565b61043b8585610d10565b6001600160a01b038716600090815260076020526040902054879060ff16156107a15760405162461bcd60e51b81526004016103f8906115f7565b6001600160a01b038716600090815260076020526040902054879060ff16156107dc5760405162461bcd60e51b81526004016103f8906115f7565b6107eb89898989898989610d1e565b505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6000336105e08185856109c6565b3360009081526008602052604090205460ff166108845760405162461bcd60e51b815260206004820152601360248201527254657374546f6b656e2f61646d696e4f6e6c7960681b60448201526064016103f8565b565b600033610894858285610e82565b6106e6858585610efc565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156108f857507f000000000000000000000000000000000000000000000000000000000000000046145b1561092257507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6001600160a01b038316610a285760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103f8565b6001600160a01b038216610a895760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103f8565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038216610b415760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103f8565b8060026000828254610b53919061174c565b90915550506001600160a01b03821660009081526020819052604081208054839290610b8090849061174c565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610c2a5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103f8565b6001600160a01b03821660009081526020819052604090205481811015610c9e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103f8565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610ccd908490611764565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610ade565b6000336105e0818585610efc565b83421115610d6e5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016103f8565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610d9d8c6110ca565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610df8826110f2565b90506000610e0882878787611140565b9050896001600160a01b0316816001600160a01b031614610e6b5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016103f8565b610e768a8a8a6109c6565b50505050505050505050565b6000610e8e84846107f6565b90506000198114610ef65781811015610ee95760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103f8565b610ef684848484036109c6565b50505050565b6001600160a01b038316610f605760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103f8565b6001600160a01b038216610fc25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103f8565b6001600160a01b0383166000908152602081905260409020548181101561103a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103f8565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061107190849061174c565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110bd91815260200190565b60405180910390a3610ef6565b6001600160a01b03811660009081526005602052604090208054600181018255905b50919050565b60006105a96110ff61089f565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061115187878787611168565b9150915061115e81611255565b5095945050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561119f575060009050600361124c565b8460ff16601b141580156111b757508460ff16601c14155b156111c8575060009050600461124c565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561121c573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166112455760006001925092505061124c565b9150600090505b94509492505050565b60008160048111156112695761126961177b565b036112715750565b60018160048111156112855761128561177b565b036112d25760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016103f8565b60028160048111156112e6576112e661177b565b036113335760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016103f8565b60038160048111156113475761134761177b565b0361139f5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016103f8565b60048160048111156113b3576113b361177b565b036104745760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016103f8565b600060208083528351808285015260005b818110156114385785810183015185820160400152820161141c565b8181111561144a576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461147757600080fd5b919050565b6000806040838503121561148f57600080fd5b61149883611460565b946020939093013593505050565b6000602082840312156114b857600080fd5b6114c182611460565b9392505050565b6000806000606084860312156114dd57600080fd5b6114e684611460565b92506114f460208501611460565b9150604084013590509250925092565b60006020828403121561151657600080fd5b5035919050565b600080600080600080600060e0888a03121561153857600080fd5b61154188611460565b965061154f60208901611460565b95506040880135945060608801359350608088013560ff8116811461157357600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156115a357600080fd5b6115ac83611460565b91506115ba60208401611460565b90509250929050565b600181811c908216806115d757607f821691505b6020821081036110ec57634e487b7160e01b600052602260045260246000fd5b602080825260139082015272115490cc8c10930bd09b1858dadb1a5cdd1959606a1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561167557816000190482111561165b5761165b611624565b8085161561166857918102915b93841c939080029061163f565b509250929050565b60008261168c575060016105a9565b81611699575060006105a9565b81600181146116af57600281146116b9576116d5565b60019150506105a9565b60ff8411156116ca576116ca611624565b50506001821b6105a9565b5060208310610133831016604e8410600b84101617156116f8575081810a6105a9565b611702838361163a565b806000190482111561171657611716611624565b029392505050565b60006114c160ff84168361167d565b600081600019048311821515161561174757611747611624565b500290565b6000821982111561175f5761175f611624565b500190565b60008282101561177657611776611624565b500390565b634e487b7160e01b600052602160045260246000fdfea26469706673582212204d0d7db92a47baa4b3863a7c3d90bb9ff2f03be8b62d59c0eeec4def4486554564736f6c634300080e00330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d6f66666572733a2077726f6e67206c656e677468206f6e2031656c656d0000006964733a2077726f6e67206c656e677468206f6e2033656c656d206368756e6b2073697a65203273686f756c6420686176652030206f66666572732073696e6365207374617274696e6720706f696e74206973206f7574206f662074686520626f6f6b885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d64657461696c733a2077726f6e67206c656e677468206f6e2031656c656d0000676173207370656e742073686f756c64206e6f7420646570656e64206f6e206d61784f6666657273207768656e206f6666657273206c656e677468203c206d61784f66666572736964733a2077726f6e67206c656e6774682032656c656d2073746172742066726f6d2069642031a26469706673582212202bcdbcc76e7fd302a331ed2792f361a0137e1ee0cf1ab65494bbd82a209a263d64736f6c634300080e0033",
    "sourceMap": "226:5494:114:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7192:411:99;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;581:32:125;;;563:51;;551:2;536:18;7192:411:99;;;;;;;;325:310:114;;;:::i;:::-;;7867:243:99;;;;;;:::i;:::-;;:::i;4281:830:114:-;;;:::i;780:82:100:-;847:10;780:82;;5596:122:114;;;:::i;9115:268:99:-;;;;;;:::i;:::-;;:::i;2975:382:114:-;;;:::i;303:38:1:-;;-1:-1:-1;;;;;;;;;;;303:38:1;;3816:461:114;;;:::i;746:282:101:-;;;;;;:::i;:::-;;:::i;3361:451:114:-;;;:::i;9928:132:99:-;;;;;;:::i;:::-;;:::i;:::-;;;5478:25:125;;;5466:2;5451:18;9928:132:99;5332:177:125;7053:97:99;;;:::i;461:281:101:-;;;;;;:::i;:::-;;:::i;639:2332:114:-;;;:::i;1610:472:0:-;;;:::i;:::-;;;6574:14:125;;6567:22;6549:41;;6537:2;6522:18;1610:472:0;6409:187:125;8937:174:99;;;;;;:::i;:::-;;:::i;8665:268::-;;;;;;:::i;:::-;;:::i;9600:169::-;;;;;;:::i;:::-;;:::i;7640:173::-;;;;;;:::i;:::-;;:::i;5419:61:114:-;;;:::i;5484:108::-;;;:::i;163:28:1:-;;;;;;;;;;;;1368:26:0;;;;;;;;;7192:411:99;7246:21;7279:8;7275:272;;;7349:4;7374:2;7394:9;7304:108;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;7297:115;;7275:272;;;7477:4;7502:2;7522:9;7440:100;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;7433:107;;7275:272;-1:-1:-1;;;;;;;;;;;7552:8:99;7563:4;7552:29;;;-1:-1:-1;;;;;;7552:29:99;;;;;;;-1:-1:-1;;;;;9035:32:125;;;7552:29:99;;;9017:51:125;9084:18;;;9077:30;9143:1;9123:18;;;9116:29;-1:-1:-1;;;9161:18:125;;;9154:38;9209:19;;7552:29:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7192:411;;;:::o;325:310:114:-;364:13;:11;:13::i;:::-;392:22;;;;;;;;;;;;;;-1:-1:-1;;;392:22:114;;;:12;:22::i;:::-;383:6;:31;;-1:-1:-1;;;;;;383:31:114;-1:-1:-1;;;;;383:31:114;;;;;;;;;440:9;;;;;;;;;-1:-1:-1;440:9:114;;;451:16;;;;;9425:36:125;;;9477:18;;;9470:45;451:16:114;;;;;;;;;9398:18:125;;;451:16:114;;;;-1:-1:-1;;;420:48:114;;;-1:-1:-1;;;;;;;;;;;237:61:1;420:11:114;;:48;;383:31;;420:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;494:4:114;;481:38;;-1:-1:-1;;;;;;494:4:114;;-1:-1:-1;503:5:114;;-1:-1:-1;;;;;503:5:114;481:38;;;;;;;;;;;;;-1:-1:-1;;;481:38:114;;;:10;:38::i;:::-;475:3;:44;;-1:-1:-1;;;;;;475:44:114;-1:-1:-1;;;;;475:44:114;;;;;;550:3;;;534:21;;;;;:::i;:::-;-1:-1:-1;;;;;581:32:125;;;563:51;;551:2;536:18;534:21:114;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;525:6:114;:30;;-1:-1:-1;;;;;;525:30:114;-1:-1:-1;;;;;525:30:114;;;;;;561:3;;:25;;-1:-1:-1;;;561:25:114;;578:7;561:25;;;5478::125;561:3:114;;;:16;;5451:18:125;;561:25:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;600:5:114;;593:37;;-1:-1:-1;;;;;;600:5:114;;-1:-1:-1;616:3:114;;-1:-1:-1;;;;;616:3:114;622:7;593:4;:37::i;:::-;325:310::o;7867:243:99:-;7978:21;8014:23;8028:8;8014:13;:23::i;:::-;8007:30;;8043:62;8063:12;8086:11;8100:4;8043:11;:62::i;:::-;7867:243;;;;;:::o;4281:830:114:-;4385:3;;:41;;-1:-1:-1;;;4385:41:114;;4398:7;4385:41;;;11257:25:125;;;11298:18;;;11291:34;4416:6:114;11341:18:125;;;11334:34;4330:12:114;11384:18:125;;;11377:34;;;4330:12:114;;;;;-1:-1:-1;;;;;4385:3:114;;:12;;11229:19:125;;4385:41:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4453:6;;4481:4;;4490:5;;4453:50;;-1:-1:-1;;;4453:50:114;;4379:47;;-1:-1:-1;;;;;;4453:6:114;;;;:25;;:50;;4481:4;;;4490:5;;4498:1;;;;4453:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4433:70;;;;;;;;4509:41;4518:7;4527:1;4509:41;;;;;;;;;;;;;-1:-1:-1;;;4509:41:114;;;:8;:41::i;:::-;4556:39;4565:6;4573:1;4556:39;;;;;;;;;;;;;-1:-1:-1;;;4556:39:114;;;:8;:39::i;:::-;4622:6;;4650:4;;4659:5;;4622:50;;-1:-1:-1;;;4622:50:114;;-1:-1:-1;;;;;4622:6:114;;;;:25;;:50;;4650:4;;;;4659:5;;;4667:1;;;;4622:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4602:70;;;;;;;;4678:41;4687:7;4696:1;4678:41;;;;;;;;;;;;;-1:-1:-1;;;4678:41:114;;;:8;:41::i;:::-;4725:39;4734:6;4742:1;4725:39;;;;;;;;;;;;;-1:-1:-1;;;4725:39:114;;;:8;:39::i;:::-;4791:6;;4819:4;;4828:5;;4791:53;;-1:-1:-1;;;4791:53:114;;-1:-1:-1;;;;;4791:6:114;;;;:25;;:53;;4819:4;;;;4828:5;;;4836:1;;4839:4;;4791:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4771:73;;;;;;;;4850:41;4859:7;4868:1;4850:41;;;;;;;;;;;;;-1:-1:-1;;;4850:41:114;;;:8;:41::i;:::-;4897:39;4906:6;4914:1;4897:39;;;;;;;;;;;;;-1:-1:-1;;;4897:39:114;;;:8;:39::i;:::-;4963:6;;4991:4;;5000:5;;4963:51;;-1:-1:-1;;;4963:51:114;;-1:-1:-1;;;;;4963:6:114;;;;:25;;:51;;4991:4;;;;5000:5;;;5008:1;;5011:2;;4963:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4943:71;;;;;;;;5020:41;5029:7;5038:1;5020:41;;;;;;;;;;;;;-1:-1:-1;;;5020:41:114;;;:8;:41::i;:::-;5067:39;5076:6;5084:1;5067:39;;;;;;;;;;;;;-1:-1:-1;;;5067:39:114;;;:8;:39::i;:::-;4324:787;;;4281:830::o;5596:122::-;5642:3;;5657:6;;5642:22;;-1:-1:-1;;;5642:22:114;;-1:-1:-1;;;;;5657:6:114;;;5642:22;;;563:51:125;5642:3:114;;;:14;;536:18:125;;5642:22:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5670:3:114;;:22;;-1:-1:-1;;;5670:22:114;;:3;:22;;;6549:41:125;-1:-1:-1;;;;;5670:3:114;;;;-1:-1:-1;5670:16:114;;-1:-1:-1;6522:18:125;;5670:22:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5698:15;:13;:15::i;9115:268:99:-;9215:9;9232:12;9261:3;;;;;;;;;-1:-1:-1;;;;;9261:3:99;9273:4;9287:3;9247:45;;;;;:::i;:::-;-1:-1:-1;;;;;14125:15:125;;;14107:34;;14177:15;;;14172:2;14157:18;;14150:43;14229:15;;;14224:2;14209:18;;14202:43;14057:2;14042:18;9247:45:99;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9298:31:99;;-1:-1:-1;;;9298:31:99;;-1:-1:-1;;;;;14476:32:125;;9298:31:99;;;14458:51:125;9319:9:99;14525:18:125;;;14518:34;9232:60:99;;-1:-1:-1;;;;;;;;;;;;237:61:1;9298:7:99;;14431:18:125;;9298:31:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9335:28:99;;-1:-1:-1;;;9335:28:99;;-1:-1:-1;;;;;;;;;;;237:61:1;-1:-1:-1;9335:8:99;;-1:-1:-1;9335:28:99;;9352:2;;9357:5;;9335:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9376:2:99;;9115:268;-1:-1:-1;;;;;;;9115:268:99:o;2975:382:114:-;3049:3;;:41;;-1:-1:-1;;;3049:41:114;;3062:7;3049:41;;;11257:25:125;;;11298:18;;;11291:34;3080:6:114;11341:18:125;;;11334:34;3038:8:114;11384:18:125;;;11377:34;;;3038:8:114;-1:-1:-1;;;;;3049:3:114;;:12;;11229:19:125;;3049:41:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3096:3;;:21;;-1:-1:-1;;;3096:21:114;;;;;5478:25:125;;;3038:52:114;;-1:-1:-1;;;;;;3096:3:114;;:16;;5451:18:125;;3096:21:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3156:6:114;;3182:4;;3197:5;;3156:74;;-1:-1:-1;;;3156:74:114;;3126:22;;-1:-1:-1;;;;;3156:6:114;;;;:16;;:74;;3182:4;;;;3197:5;;3211:3;;3222:2;;3156:74;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3156:74:114;;;;;;;;;;;;:::i;:::-;3123:107;;;;;3236:116;3252:8;:15;3275:1;3236:116;;;;;;;;;;;;;;;;;:8;:116::i;:::-;3032:325;;2975:382::o;3816:461::-;3920:6;;3948:4;;3865:12;;;;-1:-1:-1;;;;;3920:6:114;;;;:25;;3948:4;3957:5;;-1:-1:-1;;;;;3957:5:114;3965:1;3968:6;3920:55;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3900:75;;;;;;;;3981:41;3990:7;3999:1;3981:41;;;;;;;;;;;;;-1:-1:-1;;;3981:41:114;;;:8;:41::i;:::-;4028:39;4037:6;4045:1;4028:39;;;;;;;;;;;;;-1:-1:-1;;;4028:39:114;;;:8;:39::i;:::-;4094:6;;4129:4;;4144:5;;4094:86;;-1:-1:-1;;;4094:86:114;;-1:-1:-1;;;;;4094:6:114;;;;:25;;:86;;4129:4;;;;4144:5;;;4158:2;;4168:6;;4094:86;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4074:106;;;;;;;;4186:41;4195:7;4204:1;4186:41;;;;;;;;;;;;;-1:-1:-1;;;4186:41:114;;;:8;:41::i;:::-;4233:39;4242:6;4250:1;4233:39;;;;;;;;;;;;;-1:-1:-1;;;4233:39:114;;;:8;:39::i;746:282:101:-;799:20;;;;;;;;;:15;:20;;;825:179;846:4;:11;842:1;:15;825:179;;;910:7;;890:1;;-1:-1:-1;;;;;;;;;;;237:61:1;893:11:101;;910:4;;915:1;;910:7;;;;;;:::i;:::-;;;;;;;893:26;;;;;;;;;;;;;5478:25:125;;5466:2;5451:18;;5332:177;893:26:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;893:26:101;;;;;;;;;;;;:::i;:::-;876:44;;;;;;;;;:::i;:::-;;;;;;;;;;;;;872:48;;950:1;936:4;:11;:15;;;;:::i;:::-;932:1;:19;928:70;;;981:1;967:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;963:26;;928:70;859:3;;;;:::i;:::-;;;;825:179;;;;1009:14;1021:1;1009:11;:14::i;3361:451:114:-;3405:6;;3424:4;;3433:5;;3405:42;;-1:-1:-1;;;3405:42:114;;-1:-1:-1;;;;;3405:6:114;;;;:16;;:42;;3424:4;;;;3433:5;;;3441:1;;3444:2;;3405:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3405:42:114;;;;;;;;;;;;:::i;:::-;;;;;3475:6;3484:9;3499:6;;3518:4;;3527:5;;3499:42;;-1:-1:-1;;;3499:42:114;;3475:18;;-1:-1:-1;;;;;;3499:6:114;;;;:16;;:42;;3518:4;;;3527:5;;3535:1;;3538:2;;3499:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3499:42:114;;;;;;;;;;;;:::i;:::-;;;;;3547:10;3564:9;3560:13;;:1;:13;:::i;:::-;3547:26;;3584:9;3599:6;;3618:4;;3627:5;;3599:48;;-1:-1:-1;;;3599:48:114;;3580:13;;-1:-1:-1;;;;;;3599:6:114;;;;:16;;:48;;3618:4;;;3627:5;;3635:1;;3638:8;;3599:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3599:48:114;;;;;;;;;;;;:::i;:::-;;;;;3653:10;3670:9;3666:13;;:1;:13;:::i;:::-;3653:26;;3686:121;3702:5;3715;3686:121;;;;;;;;;;;;;;;;;:8;:121::i;9928:132:99:-;10009:4;10046:9;10050:5;10046:2;:9;:::i;:::-;10028:15;10033:1;10036:6;10028:4;:15::i;:::-;:27;;;;:::i;:::-;10021:34;9928:132;-1:-1:-1;;;;9928:132:99:o;7053:97::-;7094:16;7125:20;7139:5;7125:13;:20::i;:::-;7118:27;;7053:97;:::o;461:281:101:-;516:20;;;;;;;;;:15;:20;;;542:176;563:5;:12;559:1;:16;542:176;;;623:8;;608:1;;-1:-1:-1;;;;;;;;;;;237:61:1;611:11:101;;623:5;;629:1;;623:8;;;;;;:::i;:::-;;;;;;;611:21;;;;;;;;;;;;;5478:25:125;;5466:2;5451:18;;5332:177;611:21:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;611:21:101;;;;;;;;;;;;:::i;:::-;594:39;;;;;;;;;:::i;:::-;;;;;;;;;;;;;590:43;;664:1;649:5;:12;:16;;;;:::i;:::-;645:1;:20;641:71;;;695:1;681:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;677:26;;641:71;577:3;;;;:::i;:::-;;;;542:176;;639:2332:114;822:6;;841:4;;850:5;;822:42;;-1:-1:-1;;;822:42:114;;688:14;;;;;;;;-1:-1:-1;;;;;822:6:114;;;;:16;;:42;;841:4;;;;850:5;;;688:14;;861:2;;822:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;822:42:114;;;;;;;;;;;;:::i;:::-;680:184;;;;;;;;871:58;880:8;:15;897:1;871:58;;;;;;;;;;;;;;;;;:8;:58::i;:::-;935:59;944:6;:13;959:1;935:59;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;935:59:114;;;:8;:59::i;:::-;1000:61;1009:7;:14;1025:1;1000:61;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1000:61:114;;;:8;:61::i;:::-;1086:3;;:41;;-1:-1:-1;;;1086:41:114;;1099:7;1086:41;;;11257:25:125;;;11298:18;;;11291:34;1117:6:114;11341:18:125;;;11334:34;1086:3:114;11384:18:125;;;11377:34;-1:-1:-1;;;;;1086:3:114;;;;:12;;11229:19:125;;1086:41:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1175:6:114;;1201:4;;1216:5;;1175:72;;-1:-1:-1;;;1175:72:114;;-1:-1:-1;;;;;1175:6:114;;;;:16;;:72;;1201:4;;;;1216:5;;;1230:1;;1239:2;;1175:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1175:72:114;;;;;;;;;;;;:::i;:::-;1263:15;;1254:58;;;;;;;;;;;;;;;;;1134:113;;-1:-1:-1;1134:113:114;;-1:-1:-1;1134:113:114;;-1:-1:-1;1134:113:114;-1:-1:-1;1254:58:114;;1280:1;;1254:8;:58::i;:::-;1318:59;1327:6;:13;1342:1;1318:59;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1318:59:114;;;:8;:59::i;:::-;1383:61;1392:7;:14;1408:1;1383:61;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1383:61:114;;;:8;:61::i;:::-;1470:3;;:43;;-1:-1:-1;;;1470:43:114;;1483:9;1470:43;;;11257:25:125;1494:7:114;11298:18:125;;;11291:34;1503:6:114;11341:18:125;;;11334:34;1470:3:114;11384:18:125;;;11377:34;-1:-1:-1;;;;;1470:3:114;;;;:12;;11229:19:125;;1470:43:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1561:6:114;;1587:4;;1602:5;;1561:72;;-1:-1:-1;;;1561:72:114;;-1:-1:-1;;;;;1561:6:114;;;;:16;;:72;;1587:4;;;;1602:5;;;1616:1;;1625:2;;1561:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1561:72:114;;;;;;;;;;;;:::i;:::-;1649:15;;1640:58;;;;;;;;;;;;;;;;;1520:113;;-1:-1:-1;1520:113:114;;-1:-1:-1;1520:113:114;;-1:-1:-1;1520:113:114;-1:-1:-1;1640:58:114;;1666:1;;1640:8;:58::i;:::-;1704:59;1713:6;:13;1728:1;1704:59;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1704:59:114;;;:8;:59::i;:::-;1769:61;1778:7;:14;1794:1;1769:61;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1769:61:114;;;:8;:61::i;:::-;1914:6;;1940:4;;1955:5;;1914:72;;-1:-1:-1;;;1914:72:114;;-1:-1:-1;;;;;1914:6:114;;;;:16;;:72;;1940:4;;;;1955:5;;;1969:1;;1978:2;;1914:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1914:72:114;;;;;;;;;;;;:::i;:::-;1873:113;;;;;;;;;;;;;;;;1992:71;2001:8;:15;2018:1;1992:71;;;;;;;;;;;;;;;;;:8;:71::i;:::-;2069:59;2078:6;:13;2093:1;2069:59;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2069:59:114;;;:8;:59::i;:::-;2134:61;2143:7;:14;2159:1;2134:61;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2134:61:114;;;:8;:61::i;:::-;2241:3;;:43;;-1:-1:-1;;;2241:43:114;;2254:9;2241:43;;;11257:25:125;2265:7:114;11298:18:125;;;11291:34;2274:6:114;11341:18:125;;;11334:34;2241:3:114;11384:18:125;;;11377:34;-1:-1:-1;;;;;2241:3:114;;;;:12;;11229:19:125;;2241:43:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2331:6:114;;2357:4;;2372:5;;2331:71;;-1:-1:-1;;;2331:71:114;;-1:-1:-1;;;;;2331:6:114;;;;:16;;:71;;2357:4;;;;2372:5;;;2386:1;;2395;;2331:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2331:71:114;;;;;;;;;;;;:::i;:::-;2290:112;;;;;;;;;;;;;;;;2408:71;2417:8;:15;2434:1;2408:71;;;;;;;;;;;;;;;;;:8;:71::i;:::-;2485:59;2494:6;:13;2509:1;2485:59;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2485:59:114;;;:8;:59::i;:::-;2550:61;2559:7;:14;2575:1;2550:61;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2550:61:114;;;:8;:61::i;:::-;2683:6;;2709:4;;2724:5;;2683:72;;-1:-1:-1;;;2683:72:114;;-1:-1:-1;;;;;2683:6:114;;;;:16;;:72;;2709:4;;;;2724:5;;;2738:1;;2747:2;;2683:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2683:72:114;;;;;;;;;;;;:::i;:::-;2770:9;;2642:113;;-1:-1:-1;2642:113:114;;-1:-1:-1;2642:113:114;-1:-1:-1;2642:113:114;-1:-1:-1;2761:65:114;;2642:113;;2777:1;;2770:9;;;;:::i;:::-;;;;;;;:15;;;2787:9;2761:65;;;;;;;;;;;;;-1:-1:-1;;;2761:65:114;;;:8;:65::i;:::-;2832;2841:6;2848:1;2841:9;;;;;;;;:::i;:::-;;;;;;;:15;;;2858:9;2832:65;;;;;;;;;;;;;-1:-1:-1;;;2832:65:114;;;:8;:65::i;:::-;2903:63;2912:6;2919:1;2912:9;;;;;;;;:::i;:::-;;;;;;;:15;;;2929:7;2903:63;;;;;;;;;;;;;-1:-1:-1;;;2903:63:114;;;:8;:63::i;:::-;674:2297;;;;639:2332::o;1610:472:0:-;1644:4;1660:7;;;;;;;1656:422;;;-1:-1:-1;1684:7:0;;;;;;;;1610:472::o;1656:422::-;1712:17;-1:-1:-1;;;;;;;;;;;2564:55:0;2637:16;1745:300;;1919:43;;;-1:-1:-1;;;;;;;;;;;1919:43:0;;;14458:51:125;;;-1:-1:-1;;;14525:18:125;;;14518:34;1919:43:0;;;;;;;;;14431:18:125;;;1919:43:0;;;-1:-1:-1;;1459:61:0;;1833:141;;1870:34;;1833:141;;;:::i;:::-;;;;-1:-1:-1;;1833:141:0;;;;;;;;;;1804:180;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1777:207;;;2020:7;2009:27;;;;;;;;;;;;:::i;:::-;1994:42;;1767:278;1745:300;2059:12;1610:472;-1:-1:-1;1610:472:0:o;8937:174:99:-;9053:3;;9016:13;;9039:19;;-1:-1:-1;;;;;9053:3:99;9039:11;:19::i;:::-;-1:-1:-1;9090:3:99;;9072:33;;-1:-1:-1;;;;;9090:3:99;;;;9095:4;;9101:3;;9072:33;;;:::i;:::-;-1:-1:-1;;;;;14125:15:125;;;14107:34;;14177:15;;;14172:2;14157:18;;14150:43;14229:15;;;14224:2;14209:18;;14202:43;14057:2;14042:18;9072:33:99;;;;;;;;;;;;;;;;;;;;;;;9064:42;;8937:174;;;;;:::o;8665:268::-;8765:9;8782:12;8811:3;;;;;;;;;-1:-1:-1;;;;;8811:3:99;8823:4;8837:3;8797:45;;;;;:::i;9600:169::-;9653:4;9665:11;:9;:11::i;:::-;9682:13;9698:1;-1:-1:-1;;;;;9698:10:99;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9682:28;;;;9716:14;:12;:14::i;:::-;9752:12;9756:8;9752:2;:12;:::i;:::-;9743:21;;:6;:21;:::i;7640:173::-;7728:16;7761:47;7775:12;7789:11;7802:5;7761:13;:47::i;5419:61:114:-;5460:15;:13;:15::i;5484:108::-;5525:3;;5542:4;;5551:5;;5525:41;;-1:-1:-1;;;5525:41:114;;-1:-1:-1;;;;;5542:4:114;;;5525:41;;;29514:34:125;5551:5:114;;;29564:18:125;;;29557:43;5559:6:114;29616:18:125;;;29609:34;5525:3:114;;;:14;;29449:18:125;;5525:41:114;29246:403:125;2244:802:99;2391:21;;2303:115;;2326:4;;2339:12;;2364:19;;2391:21;;;2303:115;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2296:4:99;:122;;-1:-1:-1;;;;;;2296:122:99;-1:-1:-1;;;;;2296:122:99;;;;;;;;;;2455:4;2522:22;;2432:118;;2468:13;;2494:20;;2522:22;;;;;2432:118;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2424:5:99;:126;;-1:-1:-1;;;;;;2424:126:99;-1:-1:-1;;;;;2424:126:99;;;;;;;;;2599:4;;2612:7;:24;2585:52;;2599:4;;;;;2424:126;2612:24;;2585:13;:52::i;:::-;2579:3;:58;;-1:-1:-1;;;;;;2579:58:99;-1:-1:-1;;;;;2579:58:99;;;;;;;;;2858:27;;;-1:-1:-1;;;2858:27:99;;;;:8;;2874;;2858:27;;;;;-1:-1:-1;;2858:27:99;;;;;;;2874:8;2579:58;2858:27;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2962:4:99;;2977:3;;2962:36;;-1:-1:-1;;;2962:36:99;;-1:-1:-1;;;;;2977:3:99;;;2962:36;;;14458:51:125;-1:-1:-1;;14525:18:125;;;14518:34;2962:4:99;;;-1:-1:-1;2962:12:99;;-1:-1:-1;14431:18:125;;;-1:-1:-1;2962:36:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3004:5:99;;3020:3;;3004:37;;-1:-1:-1;;;3004:37:99;;-1:-1:-1;;;;;3020:3:99;;;3004:37;;;14458:51:125;-1:-1:-1;;14525:18:125;;;14518:34;3004:5:99;;;:13;;14431:18:125;;3004:37:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2244:802::o;3225:134:100:-;3294:20;3335:19;3348:5;3335:12;:19::i;3611:116:2:-;3694:28;3699:5;3706:2;3710:4;3716:5;3694:4;:28::i;8114:349:99:-;8213:15;8225:2;8213:11;:15::i;:::-;;8234;8246:2;8234:11;:15::i;:::-;-1:-1:-1;8277:18:99;;8255:52;;-1:-1:-1;;;8255:52:99;;-1:-1:-1;;;;;32032:15:125;;;8255:52:99;;;32014:34:125;32084:15;;;32064:18;;;32057:43;32116:18;;;32109:34;;;;8297:1:99;32159:18:125;;;32152:34;8300:6:99;32202:19:125;;;32195:35;8255:13:99;;;;;;31948:19:125;;8255:52:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8335:18:99;;8313:52;;-1:-1:-1;;;8313:52:99;;-1:-1:-1;;;;;32032:15:125;;;8313:52:99;;;32014:34:125;32084:15;;;32064:18;;;32057:43;32116:18;;;32109:34;;;;8355:1:99;32159:18:125;;;32152:34;8358:6:99;32202:19:125;;;32195:35;8313:13:99;;;;-1:-1:-1;8313:13:99;;-1:-1:-1;31948:19:125;;8313:52:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;261:34:1;;245:52;;237:61;;-1:-1:-1;;;;;8386:8:99;;8395:2;8406;-1:-1:-1;;;;;8399:17:99;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8399:19:99;;;;;;;;;;;;:::i;:::-;8386:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;261:34:1;;245:52;;237:61;;-1:-1:-1;;;;;8425:8:99;;8434:2;8445;-1:-1:-1;;;;;8438:17:99;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8438:19:99;;;;;;;;;;;;:::i;:::-;8425:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8114:349;;;:::o;4812:172:0:-;4905:1;4900;:6;4896:84;;4921:30;4947:3;4921:30;;;;;;:::i;:::-;;;;;;;;4959:14;4968:1;4971;4959:8;:14::i;5115:300:114:-;5167:6;;5189:4;;5198:5;;5167:44;;-1:-1:-1;;;5167:44:114;;5155:9;;-1:-1:-1;;;;;5167:6:114;;;;:19;;:44;;5189:4;;;;5198:5;;5155:9;;;;5167:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5229:3;;5251;;5229:27;;-1:-1:-1;;;5229:27:114;;-1:-1:-1;;;;;5251:3:114;;;5229:27;;;563:51:125;5155:56:114;;-1:-1:-1;5217:9:114;;5229:3;;;:13;;536:18:125;;5229:27:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5262:3;;:36;;-1:-1:-1;;;5262:36:114;;5275:7;5262:36;;;11257:25:125;;;11298:18;;;11291:34;5262:3:114;11341:18:125;;;11334:34;;;11384:18;;;11377:34;5217:39:114;;-1:-1:-1;;;;;;5262:3:114;;:12;;11229:19:125;;5262:36:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5316:3:114;;5338;;5316:27;;-1:-1:-1;;;5316:27:114;;-1:-1:-1;;;;;5338:3:114;;;5316:27;;;563:51:125;5304:9:114;;5316:3;;;;;:13;;536:18:125;;5316:27:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5304:39;-1:-1:-1;5349:61:114;5358:11;5304:39;5358:4;:11;:::i;:::-;5371:4;5349:61;;;;;;;;;;;;;;;;;:8;:61::i;5747:115:5:-;5798:59;5853:2;5814:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5814:42:5;;;;;;;;;;;;;;-1:-1:-1;;;;;5814:42:5;-1:-1:-1;;;5814:42:5;;;5798:15;:59::i;3638:232:100:-;3688:4;-1:-1:-1;;;;;3704:15:100;;3700:136;;3734:37;;;;;33581:2:125;33563:21;;;33620:2;33600:18;;;33593:30;33659:32;33654:2;33639:18;;33632:60;33724:2;33709:18;;33379:354;3734:37:100;;;;;;;;3784:31;;;33950:21:125;;;34007:1;33987:18;;;33980:29;-1:-1:-1;;;34040:2:125;34025:18;;34018:37;-1:-1:-1;;;;;34129:32:125;;34122:4;34107:20;;34100:62;3784:31:100;;;;;;;34087:3:125;3784:31:100;;;3823:6;:4;:6::i;:::-;-1:-1:-1;;;;;;3849:15:100;;;;3638:232::o;1434:57::-;1470:16;1480:5;1470:9;:16::i;1517:186::-;1560:10;:15;1579:1;1560:20;1556:143;;1599:15;;1590:25;;-1:-1:-1;;;1590:25:100;;-1:-1:-1;;;;;1599:15:100;;;1590:25;;;563:51:125;-1:-1:-1;;;;;;;;;;;237:61:1;1590:8:100;;536:18:125;;1590:25:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1556:143;1632:10;:15;1651:1;1632:20;1628:71;;1676:15;;1662:30;;-1:-1:-1;;;1662:30:100;;-1:-1:-1;;;;;1676:15:100;;;1662:30;;;563:51:125;-1:-1:-1;;;;;;;;;;;237:61:1;1662:13:100;;536:18:125;;1662:30:100;383:237:125;2616:393:100;2772:23;;;;;;2750:11;:13;;;;;;;;2823:12;;-1:-1:-1;;;;;;2823:12:100;;2749:47;;2823:12;;;5478:25:125;;;2749:47:100;-1:-1:-1;;;;;;;;;;;;;237:61:1;2823:7:100;;5451:18:125;;2823:12:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2935:17;;;;;;;;;;;-1:-1:-1;;;2935:17:100;;;;2921:32;;-1:-1:-1;;;2921:32:100;;2808:28;;-1:-1:-1;;;;;;;;;;;;237:61:1;2921:7:100;;:32;;2808:28;;2935:17;2921:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2959:21:100;;-1:-1:-1;;;2959:21:100;;-1:-1:-1;;;;;;;;;;;237:61:1;-1:-1:-1;2959:8:100;;-1:-1:-1;2959:21:100;;2968:4;;2974:5;;2959:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2616:393;;;:::o;3731:764:2:-;3903:38;;;-1:-1:-1;;;;;581:32:125;;;3903:38:2;;;;563:51:125;;;;3903:38:2;;;;;;;;;;536:18:125;;;;3903:38:2;;;;;;;-1:-1:-1;;;;;3903:38:2;-1:-1:-1;;;3903:38:2;;;3885:62;;3861:20;;3885:10;;;:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3858:89;;;3953:12;3979:7;3968:27;;;;;;;;;;;;:::i;:::-;3953:42;-1:-1:-1;4024:71:2;4090:4;4024:51;4072:2;4024:38;-1:-1:-1;;;4024:22:2;:8;4040:5;4024:15;:22::i;:::-;:26;19133:9;;;:16;;-1:-1:-1;;19133:16:2;;;;;;;;;;;;:9;19028:143;4024:38;:47;19445:10;;;:44;;;;;;;-1:-1:-1;19445:44:2;;;;;;;-1:-1:-1;;;;;19469:18:2;;;;19445:44;;;:10;19335:176;4024:51;:65;;:71::i;:::-;4133:6;4129:362;;;4199:34;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4199:34:2;-1:-1:-1;;;4199:34:2;;;4179:62;;4152:23;;-1:-1:-1;;;;;4179:10:2;;;:62;;4199:34;4179:62;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4149:92;;;4249:11;4274:10;4263:30;;;;;;;;;;;;:::i;:::-;4249:44;;4312:7;4305:4;:14;4301:116;;;4342:14;4352:4;4342:7;:14;:::i;:::-;4331:26;;;;:::i;:::-;;;4301:116;;;4393:14;4400:7;4393:4;:14;:::i;:::-;4382:26;;;;:::i;:::-;;;4301:116;4424:60;4477:6;4424:38;-1:-1:-1;;;4424:22:2;:8;4440:5;4424:15;:22::i;:60::-;4141:350;;4129:362;3825:670;;3731:764;;;;:::o;4580:228:0:-;4638:1;4633;:6;4629:175;;4654:41;;;;;35428:2:125;35410:21;;;35467:2;35447:18;;;35440:30;35506:34;35501:2;35486:18;;35479:62;-1:-1:-1;;;35572:2:125;35557:18;;35550:32;35614:3;35599:19;;35226:398;4654:41:0;;;;;;;;4708:31;;;35841:21:125;;;35898:2;35878:18;;;35871:30;-1:-1:-1;;;35932:2:125;35917:18;;35910:40;36017:4;36002:20;;35995:36;;;4708:31:0;;;;;;;35982:3:125;4708:31:0;;;4752;;;36254:21:125;;;36311:2;36291:18;;;36284:30;-1:-1:-1;;;36345:2:125;36330:18;;36323:40;36430:4;36415:20;;36408:36;;;4752:31:0;;;;;;;36395:3:125;4752:31:0;;;4791:6;:4;:6::i;631:356:5:-;718:14;;583:42;834:2;821:16;;697:18;;718:14;821:16;583:42;873:5;853:124;844:133;;793:190;;631:356;:::o;2086:353:0:-;-1:-1:-1;;;;;;;;;;;2564:55:0;2637:16;2117:298;;2283:64;;2148:11;;-1:-1:-1;;;;;;;;;;;1459:61:0;2227:43;;2283:64;;1459:61;;-1:-1:-1;;;2308:17:0;2340:4;;2283:64;;;:::i;:::-;;;;-1:-1:-1;;2283:64:0;;;;;;;;;;2192:165;;;2283:64;2192:165;;:::i;:::-;;;;-1:-1:-1;;2192:165:0;;;;;;;;;;2165:200;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2117:298:0;2420:7;:14;;-1:-1:-1;;2420:14:0;;;;;2086:353::o;959:444:100:-;1025:1;1007:10;:19;1050:17;;;-1:-1:-1;;;1050:17:100;;;;:4;;:15;;:17;;;;;;;;;;;;;;:4;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1032:15;:35;;-1:-1:-1;;;;;;1032:35:100;-1:-1:-1;;;;;1032:35:100;;;;;;;;;1104:4;1077:32;1073:326;;1180:4;-1:-1:-1;;;;;1180:15:100;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1161:15;;-1:-1:-1;;;;;1161:15:100;;;:36;;;1157:236;;1260:1;1242:10;:19;3004:37:99;2244:802::o;1157:236:100:-;1280:7;1276:117;;;1359:1;1341:10;:19;1370:14;;;-1:-1:-1;;;1370:14:100;;;;-1:-1:-1;;;;;;;;;;;237:61:1;1370:12:100;;:14;;;;;1341:15;;1370:14;;;;;;;1341:15;237:61:1;1370:14:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;959:444;:::o;18868:156:2:-;18980:12;;;:22;;-1:-1:-1;;;;;;18980:22:2;-1:-1:-1;;;;;18980:22:2;;;;;;;;;;:12;18868:156::o;20119:111::-;20192:33;20206:4;20220:3;20522:12;;;;20554:9;;;;20588:11;;;;20628:10;;;20605:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;20522:12:2;;;;20554:9;;;;;;20508:11;;20605:33;;20628:10;;20605:33;;20628:10;20605:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20645:17;20682:4;20688:12;20696:3;20688:7;:12::i;:::-;20665:36;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;20665:36:2;;;;;;;;;-1:-1:-1;;;;;20712:15:2;;;;;;:10;;;20665:36;20712:15;;;;;;-1:-1:-1;;;;;;20712:21:2;;;;;;;;;20665:36;;-1:-1:-1;20712:21:2;;:15;;20744:34;;20761:3;;20766:11;;20744:34;;:::i;:::-;;;;-1:-1:-1;;20744:34:2;;;;;;;;;20734:45;;20744:34;20734:45;;;;20712:68;;;;;;;;;;-1:-1:-1;20712:68:2;;;;20707:100;;20790:10;20795:4;20790;:10::i;:::-;;20707:100;-1:-1:-1;;;;;20842:15:2;;20812:12;20842:15;;;;;;;;;;;-1:-1:-1;;;;;;20842:21:2;;;;;;;;;20874:34;;20842:21;;20812:12;;20874:34;;20891:3;;20896:11;;20874:34;;:::i;:::-;;;;;;;;;;;;;20864:45;;;;;;20842:68;;;;;;;;;;;;20827:89;;20812:104;;20923:12;20952:17;20973:3;-1:-1:-1;;;;;20973:14:2;20988:4;20973:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20949:44:2;-1:-1:-1;21008:38:2;;-1:-1:-1;20949:44:2;21029:16;21034:11;21029:2;:16;:::i;:::-;21008:14;:38::i;:::-;21073:28;;-1:-1:-1;;;21073:28:2;;-1:-1:-1;;;;;14476:32:125;;21073:28:2;;;14458:51:125;14525:18;;;14518:34;;;21001:45:2;;-1:-1:-1;21058:12:2;;-1:-1:-1;;;;;;;;;;;;21073:17:2;;;14431:18:125;;21073:28:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21058:43;;21120:4;21112;:12;21108:186;;21134:153;;-1:-1:-1;;;21134:153:2;;;;;;;:::i;:::-;;;;;;;;;21299:34;;-1:-1:-1;;;21299:34:2;;-1:-1:-1;;;;;;;;;;;21299:18:2;;;:34;;21318:3;;21323:4;;21329:3;;21299:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;21346:12:2;;;21339:19;;-1:-1:-1;;;;;;21339:19:2;;;-1:-1:-1;21371:9:2;;;21364:16;;-1:-1:-1;;21364:16:2;;;21386:17;-1:-1:-1;21393:10:2;;21346:12;21386:17;:::i;:::-;21416:4;:11;;21409:18;;;20502:930;;;;;;;;20432:1000;;:::o;22680:340::-;22739:12;22759:19;22791:1;:8;22802:2;22791:13;;;;:::i;:::-;22781:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22781:24:2;;22759:46;;22816:6;22811:185;22832:1;:8;22828:1;:12;22811:185;;;22855:9;22867:1;22869;22867:4;;;;;;;;:::i;:::-;;;;;;;22855:16;;22980:1;22974;22970:2;22966:10;22962:2;22958:19;22950:6;22946:32;22939:43;22929:61;22842:3;;;;;:::i;:::-;;;;22811:185;;;-1:-1:-1;23009:6:2;22680:340;-1:-1:-1;;22680:340:2:o;15827:3037::-;15910:12;;;;15942:9;;;;15976:11;;;;16016:10;;;15993:33;;;;;;;;;;;;;;;;;;;15884:4;;-1:-1:-1;;;;;15910:12:2;;15942:9;;;15976:11;15884:4;;15993:33;;16016:10;;15993:33;;;16016:10;15993:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;16069:15:2;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;16069:21:2;;;;;;;;;16101:34;;15993:33;;-1:-1:-1;16069:21:2;:15;;-1:-1:-1;16101:34:2;;-1:-1:-1;15993:33:2;;16123:11;;16101:34;;:::i;:::-;;;;-1:-1:-1;;16101:34:2;;;;;;;;;16091:45;;16101:34;16091:45;;;;16069:68;;;;;;;;;;-1:-1:-1;16069:68:2;;;;16065:172;;;-1:-1:-1;;;;;16162:15:2;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;16162:21:2;;;;;;;;;16194:34;;16162:21;;:10;16194:34;;16211:3;;16216:11;;16194:34;;:::i;:::-;;;;;;;;;;;;;16184:45;;;;;;16162:68;;;;;;;;;;;;16147:83;;;;;;15827:3037;;;:::o;16065:172::-;16242:17;16279:4;16285:12;16293:3;16285:7;:12::i;:::-;16262:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16242:56;;-1:-1:-1;;;;;;;;;;;15168:34:2;;-1:-1:-1;;;;;16304:19:2;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16331:12;16360:17;16381:3;-1:-1:-1;;;;;16381:14:2;16396:4;16381:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16357:44:2;-1:-1:-1;16416:38:2;;-1:-1:-1;16357:44:2;16437:16;16442:11;16437:2;:16;:::i;16416:38::-;16496:35;;-1:-1:-1;;;16496:35:2;;-1:-1:-1;;;;;581:32:125;;16496:35:2;;;563:51:125;16409:45:2;;-1:-1:-1;16468:22:2;;-1:-1:-1;;;;;;;;;;;;16496:21:2;;;536:18:125;;16496:35:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16496:35:2;;;;;;;;;;;;:::i;:::-;16467:64;;;16541:5;:12;16557:1;16541:17;16537:1993;;16568:12;-1:-1:-1;;;;;;;;;;;15168:34:2;;-1:-1:-1;;;;;16583:17:2;;16601:3;16606:5;16612:1;16606:8;;;;;;;;:::i;:::-;;;;;;;16583:32;;;;;;;;;;;;;;;-1:-1:-1;;;;;14476:32:125;;;;14458:51;;14540:2;14525:18;;14518:34;14446:2;14431:18;;14256:302;16583:32:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16568:47;-1:-1:-1;16568:47:2;16623:89;;16662:41;16683:3;16693:5;16699:1;16693:8;;;;;;;;:::i;:::-;;;;;;;;;;;;16662:41;;;-1:-1:-1;;;;;14476:32:125;;;14458:51;;14525:18;;;14518:34;14431:18;16662:41:2;;;;;;;16623:89;16731:4;16723;:12;16719:196;;16747:159;;-1:-1:-1;;;16747:159:2;;;;;;;:::i;:::-;16927:123;16946:3;16959:4;17000:3;17005:11;16983:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16973:45;;;;;;17033:5;17039:1;17033:8;;;;;;;;:::i;:::-;;;;;;;17028:14;;16927:123;;;;;;;;;:::i;:::-;;;;;;;;17150:5;17156:1;17150:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;17058:15:2;;17145:14;17058:15;;;;;;;;;;-1:-1:-1;;;;;;17058:21:2;;;;;;;;;17099:34;;17150:8;;17058:21;;17099:34;;17116:3;;17121:11;;17099:34;;:::i;:::-;;;;-1:-1:-1;;17099:34:2;;;;;;;;;17089:45;;17099:34;17089:45;;;;17058:84;;;;;;;;;;;;-1:-1:-1;17058:84:2;;;:101;;;;-1:-1:-1;;;;;17167:15:2;;;;17254:4;17167:10;;;:15;;;;;-1:-1:-1;;;;;;17167:21:2;;;;;;;;;17208:34;;17254:4;;-1:-1:-1;17208:34:2;;17225:3;;17230:11;;17208:34;;:::i;:::-;;;;;;;-1:-1:-1;;17208:34:2;;;;;;17198:45;;17208:34;17198:45;;;;17167:84;;;;;;;;;;-1:-1:-1;17167:84:2;:91;;-1:-1:-1;;17167:91:2;;;;;;;;;;-1:-1:-1;16537:1993:2;;;17290:1;17275:5;:12;:16;17271:1259;;;17306:6;17301:1096;17322:5;:12;17318:1;:16;17301:1096;;;17351:12;-1:-1:-1;;;;;;;;;;;15168:34:2;;-1:-1:-1;;;;;17366:17:2;;17384:3;17389:5;17395:1;17389:8;;;;;;;;:::i;:::-;;;;;;;17366:32;;;;;;;;;;;;;;;-1:-1:-1;;;;;14476:32:125;;;;14458:51;;14540:2;14525:18;;14518:34;14446:2;14431:18;;14256:302;17366:32:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17351:47;-1:-1:-1;17351:47:2;17408:93;;17449:41;17470:3;17480:5;17486:1;17480:8;;;;;;;;:::i;:::-;;;;;;;;;;;;17449:41;;;-1:-1:-1;;;;;14476:32:125;;;14458:51;;14525:18;;;14518:34;14431:18;17449:41:2;;;;;;;17408:93;-1:-1:-1;;;;;;;;;;;15168:34:2;;-1:-1:-1;;;;;17527:18:2;;17546:3;17551:5;17557:1;17551:8;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;17527:53:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17590:12;17612:17;17669:3;-1:-1:-1;;;;;17669:14:2;17684:4;17669:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17651:38:2;;-1:-1:-1;17651:38:2;-1:-1:-1;17708:38:2;17651;17729:16;17734:11;17729:2;:16;:::i;17708:38::-;17701:45;;17771:7;:37;;;;;-1:-1:-1;;;17782:4:2;:26;17771:37;17767:573;;;17886:143;17909:3;17926:4;17971:3;17976:11;17954:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;17944:45;;;;;;18008:5;18014:1;18008:8;;;;;;;;:::i;:::-;;;;;;;18003:14;;17886:143;;;;;;;;;:::i;:::-;;;;;;;;18141:5;18147:1;18141:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;18041:15:2;;18136:14;18041:15;;;;;;;;;;-1:-1:-1;;;;;;18041:21:2;;;;;;;;;18086:34;;18141:8;;18041:21;;18086:34;;18103:3;;18108:11;;18086:34;;:::i;:::-;;;;;;;;;;;;;18076:45;;;;;;18041:92;;;;;;;;;;;:109;;;;18257:4;18162;:10;;:15;18173:3;-1:-1:-1;;;;;18162:15:2;-1:-1:-1;;;;;18162:15:2;;;;;;;;;;;;:21;18178:4;-1:-1:-1;;;;;18162:21:2;;-1:-1:-1;;;;;18162:21:2;;;;;;;;;;;;;:92;18224:3;18229:11;18207:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;18197:45;;;;;;18162:92;;;;;;;;;;;;:99;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;15168:34:2;;-1:-1:-1;;;;;18273:18:2;;18292:3;18297:5;18303:1;18297:8;;;;;;;;:::i;:::-;;;;;;;18307:4;18273:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18324:5;;;;;17767:573;-1:-1:-1;;;;;;;;;;;15168:34:2;;-1:-1:-1;;;;;18349:18:2;;18368:3;18373:5;18379:1;18373:8;;;;;;;;:::i;:::-;;;;;;;18383:4;18349:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17341:1056;;;17336:3;;;;;:::i;:::-;;;;17301:1096;;;;17271:1259;;;18417:106;;;-1:-1:-1;;;18417:106:2;;40380:2:125;18417:106:2;;;40362:21:125;40399:18;;;40392:30;;;;40458:34;40438:18;;;40431:62;40529:34;40509:18;;;40502:62;40581:19;;18417:106:2;40178:428:125;18417:106:2;-1:-1:-1;;;;;18551:15:2;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;18551:21:2;;;;;;;;;18583:34;;18551:21;;:15;18583:34;;18600:3;;18605:11;;18583:34;;:::i;:::-;;;;-1:-1:-1;;18583:34:2;;;;;;;;;18573:45;;18583:34;18573:45;;;;18551:68;;;;;;;;;;-1:-1:-1;18551:68:2;;;;18536:146;;;;-1:-1:-1;;;18536:146:2;;40813:2:125;18536:146:2;;;40795:21:125;40852:2;40832:18;;;40825:30;40891:34;40871:18;;;40864:62;-1:-1:-1;;;40942:18:125;;;40935:45;40997:19;;18536:146:2;40611:411:125;18536:146:2;18696:12;;;18689:19;;-1:-1:-1;;;;;;18689:19:2;;;18721:9;;;18714:16;;-1:-1:-1;;18714:16:2;;;18736:17;-1:-1:-1;18743:10:2;;18696:12;18736:17;:::i;:::-;18759:18;18766:11;;;18759:18;;;-1:-1:-1;;;;;18791:15:2;;;;;;;;;;;;-1:-1:-1;;;;;;18791:21:2;;;;;;;;;18823:34;;18791:21;;18759:18;18823:34;;18840:3;;18845:11;;18823:34;;:::i;:::-;;;;;;;;;;;;;18813:45;;;;;;18791:68;;;;;;;;;;;;18784:75;;;;;;;;;15827:3037;;;:::o;22396:280::-;22482:7;22499:11;22517:8;22539:2;22528:1;:8;:13;:29;;22549:1;:8;22528:29;;;22544:2;22528:29;22517:40;;22568:6;22563:93;22584:3;22580:1;:7;22563:93;;;22643:5;:1;22647;22643:5;:::i;:::-;22617:1;22619:10;22628:1;22619:6;:10;:::i;:::-;22617:13;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;22617:13:2;22609:40;;22602:47;;;;;22589:3;;;;:::i;:::-;;;;22563:93;;;-1:-1:-1;22668:3:2;;22396:280;-1:-1:-1;;;;22396:280:2:o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:118:125:-;100:5;93:13;86:21;79:5;76:32;66:60;;122:1;119;112:12;137:241;193:6;246:2;234:9;225:7;221:23;217:32;214:52;;;262:1;259;252:12;214:52;301:9;288:23;320:28;342:5;320:28;:::i;625:139::-;-1:-1:-1;;;;;708:31:125;;698:42;;688:70;;754:1;751;744:12;769:571;875:6;883;891;944:2;932:9;923:7;919:23;915:32;912:52;;;960:1;957;950:12;912:52;999:9;986:23;1018:39;1051:5;1018:39;:::i;:::-;1076:5;-1:-1:-1;1133:2:125;1118:18;;1105:32;1146:41;1105:32;1146:41;:::i;:::-;1206:7;-1:-1:-1;1265:2:125;1250:18;;1237:32;1278:30;1237:32;1278:30;:::i;:::-;1327:7;1317:17;;;769:571;;;;;:::o;1553:127::-;1614:10;1609:3;1605:20;1602:1;1595:31;1645:4;1642:1;1635:15;1669:4;1666:1;1659:15;1685:253;1757:2;1751:9;1799:4;1787:17;;1834:18;1819:34;;1855:22;;;1816:62;1813:88;;;1881:18;;:::i;:::-;1917:2;1910:22;1685:253;:::o;1943:275::-;2014:2;2008:9;2079:2;2060:13;;-1:-1:-1;;2056:27:125;2044:40;;2114:18;2099:34;;2135:22;;;2096:62;2093:88;;;2161:18;;:::i;:::-;2197:2;2190:22;1943:275;;-1:-1:-1;1943:275:125:o;2223:187::-;2272:4;2305:18;2297:6;2294:30;2291:56;;;2327:18;;:::i;:::-;-1:-1:-1;2393:2:125;2372:15;-1:-1:-1;;2368:29:125;2399:4;2364:40;;2223:187::o;2415:965::-;2502:6;2510;2518;2571:2;2559:9;2550:7;2546:23;2542:32;2539:52;;;2587:1;2584;2577:12;2539:52;2626:9;2613:23;2645:39;2678:5;2645:39;:::i;:::-;2703:5;-1:-1:-1;2760:2:125;2745:18;;2732:32;2773:41;2732:32;2773:41;:::i;:::-;2833:7;-1:-1:-1;2891:2:125;2876:18;;2863:32;2918:18;2907:30;;2904:50;;;2950:1;2947;2940:12;2904:50;2973:22;;3026:4;3018:13;;3014:27;-1:-1:-1;3004:55:125;;3055:1;3052;3045:12;3004:55;3091:2;3078:16;3116:49;3132:32;3161:2;3132:32;:::i;:::-;3116:49;:::i;:::-;3188:2;3181:5;3174:17;3228:7;3223:2;3218;3214;3210:11;3206:20;3203:33;3200:53;;;3249:1;3246;3239:12;3200:53;3304:2;3299;3295;3291:11;3286:2;3279:5;3275:14;3262:45;3348:1;3343:2;3338;3331:5;3327:14;3323:23;3316:34;3369:5;3359:15;;;;;2415:965;;;;;:::o;3839:182::-;3898:4;3931:18;3923:6;3920:30;3917:56;;;3953:18;;:::i;:::-;-1:-1:-1;3998:1:125;3994:14;4010:4;3990:25;;3839:182::o;4026:889::-;4109:6;4140:2;4183;4171:9;4162:7;4158:23;4154:32;4151:52;;;4199:1;4196;4189:12;4151:52;4239:9;4226:23;4272:18;4264:6;4261:30;4258:50;;;4304:1;4301;4294:12;4258:50;4327:22;;4380:4;4372:13;;4368:27;-1:-1:-1;4358:55:125;;4409:1;4406;4399:12;4358:55;4445:2;4432:16;4468:59;4484:42;4523:2;4484:42;:::i;4468:59::-;4561:15;;;4643:1;4639:10;;;;4631:19;;4627:28;;;4592:12;;;;4667:19;;;4664:39;;;4699:1;4696;4689:12;4664:39;4723:11;;;;4743:142;4759:6;4754:3;4751:15;4743:142;;;4825:17;;4813:30;;4776:12;;;;4863;;;;4743:142;;;4904:5;4026:889;-1:-1:-1;;;;;;;4026:889:125:o;4920:407::-;5013:6;5021;5029;5082:2;5070:9;5061:7;5057:23;5053:32;5050:52;;;5098:1;5095;5088:12;5050:52;5137:9;5124:23;5156:39;5189:5;5156:39;:::i;:::-;5214:5;5266:2;5251:18;;5238:32;;-1:-1:-1;5317:2:125;5302:18;;;5289:32;;4920:407;-1:-1:-1;;;4920:407:125:o;6601:404::-;6669:6;6677;6730:2;6718:9;6709:7;6705:23;6701:32;6698:52;;;6746:1;6743;6736:12;6698:52;6785:9;6772:23;6804:39;6837:5;6804:39;:::i;:::-;6862:5;-1:-1:-1;6919:2:125;6904:18;;6891:32;6932:41;6891:32;6932:41;:::i;:::-;6992:7;6982:17;;;6601:404;;;;;:::o;7476:339::-;7560:6;7568;7621:2;7609:9;7600:7;7596:23;7592:32;7589:52;;;7637:1;7634;7627:12;7589:52;7676:9;7663:23;7695:39;7728:5;7695:39;:::i;:::-;7753:5;7805:2;7790:18;;;;7777:32;;-1:-1:-1;;;7476:339:125:o;8261:376::-;-1:-1:-1;;;;;8512:32:125;;;;8494:51;;8576:2;8561:18;;8554:34;;;;8619:2;8604:18;;8597:34;8482:2;8467:18;;8261:376::o;9526:258::-;9598:1;9608:113;9622:6;9619:1;9616:13;9608:113;;;9698:11;;;9692:18;9679:11;;;9672:39;9644:2;9637:10;9608:113;;;9739:6;9736:1;9733:13;9730:48;;;-1:-1:-1;;9774:1:125;9756:16;;9749:27;9526:258::o;9789:257::-;9830:3;9868:5;9862:12;9895:6;9890:3;9883:19;9911:63;9967:6;9960:4;9955:3;9951:14;9944:4;9937:5;9933:16;9911:63;:::i;:::-;10028:2;10007:15;-1:-1:-1;;10003:29:125;9994:39;;;;10035:4;9990:50;;9789:257;-1:-1:-1;;9789:257:125:o;10051:474::-;-1:-1:-1;;;;;10272:32:125;;10254:51;;10341:2;10336;10321:18;;10314:30;;;-1:-1:-1;;10367:44:125;;10392:18;;10384:6;10367:44;:::i;:::-;10459:9;10451:6;10447:22;10442:2;10431:9;10427:18;10420:50;10487:32;10512:6;10504;10487:32;:::i;:::-;10479:40;10051:474;-1:-1:-1;;;;;;10051:474:125:o;11422:184::-;11492:6;11545:2;11533:9;11524:7;11520:23;11516:32;11513:52;;;11561:1;11558;11551:12;11513:52;-1:-1:-1;11584:16:125;;11422:184;-1:-1:-1;11422:184:125:o;11611:479::-;-1:-1:-1;;;;;11930:15:125;;;11912:34;;11982:15;;;;11977:2;11962:18;;11955:43;12029:2;12014:18;;12007:34;12072:2;12057:18;;12050:34;;;;11861:3;11846:19;;11611:479::o;12095:245::-;12174:6;12182;12235:2;12223:9;12214:7;12210:23;12206:32;12203:52;;;12251:1;12248;12241:12;12203:52;-1:-1:-1;;12274:16:125;;12330:2;12315:18;;;12309:25;12274:16;;12309:25;;-1:-1:-1;12095:245:125:o;14563:316::-;-1:-1:-1;;;;;14740:32:125;;14722:51;;14809:2;14804;14789:18;;14782:30;;;-1:-1:-1;;14829:44:125;;14854:18;;14846:6;14829:44;:::i;15829:1097::-;15905:5;15958:3;15951:4;15943:6;15939:17;15935:27;15925:55;;15976:1;15973;15966:12;15925:55;16005:6;15999:13;16031:4;16055:59;16071:42;16110:2;16071:42;:::i;16055:59::-;16148:15;;;16234:1;16230:10;;;;16218:23;;16214:32;;;16179:12;;;;16258:15;;;16255:35;;;16286:1;16283;16276:12;16255:35;16322:2;16314:6;16310:15;16334:563;16350:6;16345:3;16342:15;16334:563;;;16428:4;16422:3;16417;16413:13;16409:24;16406:114;;;16474:1;16503:2;16499;16492:14;16406:114;16546:22;;:::i;:::-;16595:10;;16581:25;;16648:12;;;16642:19;16626:14;;;16619:43;16685:2;16729:12;;;16723:19;16707:14;;;16700:43;16766:2;16810:12;;;16804:19;16788:14;;;16781:43;16837:18;;16875:12;;;;16376:4;16367:14;16334:563;;;-1:-1:-1;16915:5:125;15829:1097;-1:-1:-1;;;;;;15829:1097:125:o;16931:1192::-;17013:5;17066:3;17059:4;17051:6;17047:17;17043:27;17033:55;;17084:1;17081;17074:12;17033:55;17113:6;17107:13;17139:4;17163:59;17179:42;17218:2;17179:42;:::i;17163:59::-;17256:15;;;17342:1;17338:10;;;;17326:23;;17322:32;;;17287:12;;;;17366:15;;;17363:35;;;17394:1;17391;17384:12;17363:35;17430:2;17422:6;17418:15;17442:652;17458:6;17453:3;17450:15;17442:652;;;17536:4;17530:3;17525;17521:13;17517:24;17514:114;;;17582:1;17611:2;17607;17600:14;17514:114;17654:22;;:::i;:::-;17710:3;17704:10;17727:41;17760:7;17727:41;:::i;:::-;17781:22;;17845:12;;;17839:19;17823:14;;;17816:43;17882:2;17926:12;;;17920:19;17904:14;;;17897:43;17963:2;18007:12;;;18001:19;17985:14;;;17978:43;18034:18;;18072:12;;;;17484:4;17475:14;17442:652;;18128:1517;18366:6;18374;18382;18390;18443:3;18431:9;18422:7;18418:23;18414:33;18411:53;;;18460:1;18457;18450:12;18411:53;18489:9;18483:16;18473:26;;18518:2;18564;18553:9;18549:18;18543:25;18587:18;18628:2;18620:6;18617:14;18614:34;;;18644:1;18641;18634:12;18614:34;18682:6;18671:9;18667:22;18657:32;;18727:7;18720:4;18716:2;18712:13;18708:27;18698:55;;18749:1;18746;18739:12;18698:55;18778:2;18772:9;18801:59;18817:42;18856:2;18817:42;:::i;18801:59::-;18894:15;;;18976:1;18972:10;;;;18964:19;;18960:28;;;18925:12;;;;19000:19;;;18997:39;;;19032:1;19029;19022:12;18997:39;19056:11;;;;19076:135;19092:6;19087:3;19084:15;19076:135;;;19158:10;;19146:23;;19109:12;;;;19189;;;;19076:135;;;19281:2;19266:18;;19260:25;19230:5;;-1:-1:-1;19260:25:125;-1:-1:-1;;;19297:16:125;;;19294:36;;;19326:1;19323;19316:12;19294:36;19349:85;19426:7;19415:8;19404:9;19400:24;19349:85;:::i;:::-;19339:95;;19480:2;19469:9;19465:18;19459:25;19443:41;;19509:2;19499:8;19496:16;19493:36;;;19525:1;19522;19515:12;19493:36;;;19548:91;19631:7;19620:8;19609:9;19605:24;19548:91;:::i;:::-;19538:101;;;18128:1517;;;;;;;:::o;20629:127::-;20690:10;20685:3;20681:20;20678:1;20671:31;20721:4;20718:1;20711:15;20745:4;20742:1;20735:15;20761:636;20841:6;20894:2;20882:9;20873:7;20869:23;20865:32;20862:52;;;20910:1;20907;20900:12;20862:52;20943:9;20937:16;20976:18;20968:6;20965:30;20962:50;;;21008:1;21005;20998:12;20962:50;21031:22;;21084:4;21076:13;;21072:27;-1:-1:-1;21062:55:125;;21113:1;21110;21103:12;21062:55;21142:2;21136:9;21167:49;21183:32;21212:2;21183:32;:::i;21167:49::-;21239:2;21232:5;21225:17;21279:7;21274:2;21269;21265;21261:11;21257:20;21254:33;21251:53;;;21300:1;21297;21290:12;21251:53;21313:54;21364:2;21359;21352:5;21348:14;21343:2;21339;21335:11;21313:54;:::i;:::-;21386:5;20761:636;-1:-1:-1;;;;;20761:636:125:o;21402:470::-;21581:3;21619:6;21613:13;21635:53;21681:6;21676:3;21669:4;21661:6;21657:17;21635:53;:::i;:::-;21751:13;;21710:16;;;;21773:57;21751:13;21710:16;21807:4;21795:17;;21773:57;:::i;:::-;21846:20;;21402:470;-1:-1:-1;;;;21402:470:125:o;21877:127::-;21938:10;21933:3;21929:20;21926:1;21919:31;21969:4;21966:1;21959:15;21993:4;21990:1;21983:15;22009:125;22049:4;22077:1;22074;22071:8;22068:34;;;22082:18;;:::i;:::-;-1:-1:-1;22119:9:125;;22009:125::o;22139:429::-;22360:3;22398:6;22392:13;22414:53;22460:6;22455:3;22448:4;22440:6;22436:17;22414:53;:::i;:::-;-1:-1:-1;;;22489:16:125;;22514:19;;;-1:-1:-1;22560:1:125;22549:13;;22139:429;-1:-1:-1;22139:429:125:o;22573:135::-;22612:3;22633:17;;;22630:43;;22653:18;;:::i;:::-;-1:-1:-1;22700:1:125;22689:13;;22573:135::o;23689:422::-;23778:1;23821:5;23778:1;23835:270;23856:7;23846:8;23843:21;23835:270;;;23915:4;23911:1;23907:6;23903:17;23897:4;23894:27;23891:53;;;23924:18;;:::i;:::-;23974:7;23964:8;23960:22;23957:55;;;23994:16;;;;23957:55;24073:22;;;;24033:15;;;;23835:270;;;23839:3;23689:422;;;;;:::o;24116:806::-;24165:5;24195:8;24185:80;;-1:-1:-1;24236:1:125;24250:5;;24185:80;24284:4;24274:76;;-1:-1:-1;24321:1:125;24335:5;;24274:76;24366:4;24384:1;24379:59;;;;24452:1;24447:130;;;;24359:218;;24379:59;24409:1;24400:10;;24423:5;;;24447:130;24484:3;24474:8;24471:17;24468:43;;;24491:18;;:::i;:::-;-1:-1:-1;;24547:1:125;24533:16;;24562:5;;24359:218;;24661:2;24651:8;24648:16;24642:3;24636:4;24633:13;24629:36;24623:2;24613:8;24610:16;24605:2;24599:4;24596:12;24592:35;24589:77;24586:159;;;-1:-1:-1;24698:19:125;;;24730:5;;24586:159;24777:34;24802:8;24796:4;24777:34;:::i;:::-;24847:6;24843:1;24839:6;24835:19;24826:7;24823:32;24820:58;;;24858:18;;:::i;:::-;24896:20;;24116:806;-1:-1:-1;;;24116:806:125:o;24927:131::-;24987:5;25016:36;25043:8;25037:4;25016:36;:::i;25063:217::-;25103:1;25129;25119:132;;25173:10;25168:3;25164:20;25161:1;25154:31;25208:4;25205:1;25198:15;25236:4;25233:1;25226:15;25119:132;-1:-1:-1;25265:9:125;;25063:217::o;27467:371::-;-1:-1:-1;;;;;;27652:33:125;;27640:46;;27709:13;;27622:3;;27731:61;27709:13;27781:1;27772:11;;27765:4;27753:17;;27731:61;:::i;:::-;27812:16;;;;27830:1;27808:24;;27467:371;-1:-1:-1;;;27467:371:125:o;27843:274::-;27972:3;28010:6;28004:13;28026:53;28072:6;28067:3;28060:4;28052:6;28048:17;28026:53;:::i;:::-;28095:16;;;;;27843:274;-1:-1:-1;;27843:274:125:o;28122:245::-;28189:6;28242:2;28230:9;28221:7;28217:23;28213:32;28210:52;;;28258:1;28255;28248:12;28210:52;28290:9;28284:16;28309:28;28331:5;28309:28;:::i;28795:273::-;28863:6;28916:2;28904:9;28895:7;28891:23;28887:32;28884:52;;;28932:1;28929;28922:12;28884:52;28964:9;28958:16;29014:4;29007:5;29003:16;28996:5;28993:27;28983:55;;29034:1;29031;29024:12;29073:168;29113:7;29179:1;29175;29171:6;29167:14;29164:1;29161:21;29156:1;29149:9;29142:17;29138:45;29135:71;;;29186:18;;:::i;:::-;-1:-1:-1;29226:9:125;;29073:168::o;29780:1042::-;29865:12;;29830:3;;29920:1;29940:18;;;;29993;;;;30020:61;;30074:4;30066:6;30062:17;30052:27;;30020:61;30100:2;30148;30140:6;30137:14;30117:18;30114:38;30111:161;;30194:10;30189:3;30185:20;30182:1;30175:31;30229:4;30226:1;30219:15;30257:4;30254:1;30247:15;30111:161;8729:19;;;8781:4;8772:14;;30358:18;30385:104;;;;30503:1;30498:318;;;;30351:465;;30385:104;-1:-1:-1;;30420:24:125;;30406:39;;30465:14;;;;-1:-1:-1;30385:104:125;;30498:318;29727:1;29720:14;;;29764:4;29751:18;;30592:1;30606:167;30620:6;30617:1;30614:13;30606:167;;;30700:14;;30685:13;;;30678:37;30743:16;;;;30635:10;;30606:167;;;30793:13;;;-1:-1:-1;;30351:465:125;;;;;;;;29780:1042;;;;:::o;30827:578::-;-1:-1:-1;;;;;31078:32:125;;31060:51;;31147:3;31142:2;31127:18;;31120:31;;;-1:-1:-1;;31174:54:125;;31208:19;;31200:6;31174:54;:::i;:::-;31276:9;31268:6;31264:22;31259:2;31248:9;31244:18;31237:50;31304:41;31338:6;31330;31304:41;:::i;:::-;31296:49;;;31393:4;31385:6;31381:17;31376:2;31365:9;31361:18;31354:45;30827:578;;;;;;;:::o;32241:445::-;32491:2;32480:9;32473:21;32530:1;32525:2;32514:9;32510:18;32503:29;-1:-1:-1;;;32563:2:125;32552:9;32548:18;32541:35;32614:3;32607:4;32596:9;32592:20;32585:33;32454:4;32635:45;32675:3;32664:9;32660:19;32652:6;32635:45;:::i;33155:219::-;33304:2;33293:9;33286:21;33267:4;33324:44;33364:2;33353:9;33349:18;33341:6;33324:44;:::i;34173:259::-;34243:6;34296:2;34284:9;34275:7;34271:23;34267:32;34264:52;;;34312:1;34309;34302:12;34264:52;34344:9;34338:16;34363:39;34396:5;34363:39;:::i;35093:128::-;35133:3;35164:1;35160:6;35157:1;35154:13;35151:39;;;35170:18;;:::i;:::-;-1:-1:-1;35206:9:125;;35093:128::o;36805:610::-;37051:13;;36994:3;;37025;;37104:4;37131:15;;;36994:3;37174:175;37188:6;37185:1;37182:13;37174:175;;;37251:13;;37237:28;;37287:14;;;;37324:15;;;;37210:1;37203:9;37174:175;;;-1:-1:-1;;37358:21:125;;;-1:-1:-1;37395:14:125;;;;;-1:-1:-1;;;36805:610:125:o;37609:556::-;37811:2;37793:21;;;37850:3;37830:18;;;37823:31;37890:34;37885:2;37870:18;;37863:62;37961:34;37956:2;37941:18;;37934:62;38033:34;38027:3;38012:19;;38005:63;-1:-1:-1;;;38099:3:125;38084:19;;38077:46;38155:3;38140:19;;37609:556::o;38170:658::-;38235:5;38288:3;38281:4;38273:6;38269:17;38265:27;38255:55;;38306:1;38303;38296:12;38255:55;38335:6;38329:13;38361:4;38385:59;38401:42;38440:2;38401:42;:::i;38385:59::-;38478:15;;;38564:1;38560:10;;;;38548:23;;38544:32;;;38509:12;;;;38588:15;;;38585:35;;;38616:1;38613;38606:12;38585:35;38652:2;38644:6;38640:15;38664:135;38680:6;38675:3;38672:15;38664:135;;;38746:10;;38734:23;;38777:12;;;;38697;;38664:135;;38833:614;38962:6;38970;39023:2;39011:9;39002:7;38998:23;38994:32;38991:52;;;39039:1;39036;39029:12;38991:52;39072:9;39066:16;39101:18;39142:2;39134:6;39131:14;39128:34;;;39158:1;39155;39148:12;39128:34;39181:72;39245:7;39236:6;39225:9;39221:22;39181:72;:::i;:::-;39171:82;;39299:2;39288:9;39284:18;39278:25;39262:41;;39328:2;39318:8;39315:16;39312:36;;;39344:1;39341;39334:12;39312:36;;39367:74;39433:7;39422:8;39411:9;39407:24;39367:74;:::i;:::-;39357:84;;;38833:614;;;;;:::o;39731:442::-;-1:-1:-1;;;;;39978:32:125;;;;39960:51;;-1:-1:-1;;;;;;40047:33:125;;;;40042:2;40027:18;;40020:61;40112:2;40097:18;;40090:34;40155:2;40140:18;;40133:34;39947:3;39932:19;;39731:442::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "cash(address,uint256)": "d56a22f0",
    "cash(address,uint256,uint256)": "6cc12a24",
    "echoSender()": "1e91f8cb",
    "failed()": "ba414fa6",
    "logary(int256[])": "521606d2",
    "logary(uint256[])": "b84e3eda",
    "setUp()": "0a9254e4",
    "setupMaker(address,address,string)": "bfdc3588",
    "setupMakerDeployer(address,address)": "bbab0fac",
    "setupMangrove()": "8c004832",
    "setupMangrove(address,address)": "ea14b5c3",
    "setupMangrove(address,address,bool)": "0b3d8c42",
    "setupMangrove(bool)": "0645f2be",
    "setupTaker(address,address,string)": "3336a63f",
    "test_correct_endpoints_0()": "3ba5eaa9",
    "test_correct_endpoints_1()": "18653e38",
    "test_no_wasted_time()": "628f4e2f",
    "test_provision_0()": "edca5da7",
    "test_provision_1()": "f4655536",
    "test_provision_oracle()": "241799ed",
    "test_read_packed()": "b8566b3d",
    "test_returns_zero_on_nonexisting_offer()": "36ba0cfc",
    "vm()": "3a768463"
  },
  "ast": {
    "absolutePath": "packages/mangrove-solidity/test/periphery/MgvReader.t.sol",
    "id": 79294,
    "exportedSymbols": {
      "AbstractMangrove": [22838],
      "AccessControlled": [43417],
      "DSTest": [1786],
      "HasMgvEvents": [24715],
      "IERC20": [24851],
      "IMaker": [24733],
      "IMgvMonitor": [24773],
      "ITaker": [24745],
      "InvertedMangrove": [23581],
      "MakerDeployer": [72689],
      "Mangrove": [23707],
      "MangroveTest": [70515],
      "MgvLib": [24540],
      "MgvReader": [30351],
      "MgvReaderTest": [79293],
      "P": [24511],
      "Script": [2022],
      "StdStorage": [3553],
      "Test": [3455],
      "Test2": [70890],
      "TestMaker": [73404],
      "TestMoriartyMaker": [73653],
      "TestTaker": [73996],
      "TestToken": [76251],
      "TrivialTestMaker": [72724],
      "Utilities": [72490],
      "Vm": [5425],
      "console": [13489],
      "console2": [21553],
      "csl": [21553],
      "stdError": [3525],
      "stdMath": [4796],
      "stdStorage": [4655]
    },
    "nodeType": "SourceUnit",
    "src": "38:5683:114",
    "nodes": [
      {
        "id": 78513,
        "nodeType": "PragmaDirective",
        "src": "38:24:114",
        "literals": ["solidity", "^", "0.8", ".10"]
      },
      {
        "id": 78514,
        "nodeType": "ImportDirective",
        "src": "64:39:114",
        "absolutePath": "packages/mangrove-solidity/test/lib/MangroveTest.sol",
        "file": "mgv_test/lib/MangroveTest.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 79294,
        "sourceUnit": 70516,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 78516,
        "nodeType": "ImportDirective",
        "src": "105:58:114",
        "absolutePath": "packages/mangrove-solidity/src/periphery/MgvReader.sol",
        "file": "mgv_src/periphery/MgvReader.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 79294,
        "sourceUnit": 30352,
        "symbolAliases": [
          {
            "foreign": {
              "id": 78515,
              "name": "MgvReader",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30351,
              "src": "113:9:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 79293,
        "nodeType": "ContractDefinition",
        "src": "226:5494:114",
        "nodes": [
          {
            "id": 78521,
            "nodeType": "VariableDeclaration",
            "src": "269:13:114",
            "constant": false,
            "mutability": "mutable",
            "name": "mkr",
            "nameLocation": "279:3:114",
            "scope": 79293,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestMaker_$73404",
              "typeString": "contract TestMaker"
            },
            "typeName": {
              "id": 78520,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 78519,
                "name": "TestMaker",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 73404,
                "src": "269:9:114"
              },
              "referencedDeclaration": 73404,
              "src": "269:9:114",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestMaker_$73404",
                "typeString": "contract TestMaker"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 78524,
            "nodeType": "VariableDeclaration",
            "src": "286:16:114",
            "constant": false,
            "mutability": "mutable",
            "name": "reader",
            "nameLocation": "296:6:114",
            "scope": 79293,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MgvReader_$30351",
              "typeString": "contract MgvReader"
            },
            "typeName": {
              "id": 78523,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 78522,
                "name": "MgvReader",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 30351,
                "src": "286:9:114"
              },
              "referencedDeclaration": 30351,
              "src": "286:9:114",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MgvReader_$30351",
                "typeString": "contract MgvReader"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 78526,
            "nodeType": "VariableDeclaration",
            "src": "306:14:114",
            "constant": false,
            "mutability": "mutable",
            "name": "oracle",
            "nameLocation": "314:6:114",
            "scope": 79293,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 78525,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "306:7:114",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 78596,
            "nodeType": "FunctionDefinition",
            "src": "325:310:114",
            "body": {
              "id": 78595,
              "nodeType": "Block",
              "src": "358:277:114",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 78530,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "364:5:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_MgvReaderTest_$79293_$",
                          "typeString": "type(contract super MgvReaderTest)"
                        }
                      },
                      "id": 78532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setUp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 69507,
                      "src": "364:11:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 78533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "364:13:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78534,
                  "nodeType": "ExpressionStatement",
                  "src": "364:13:114"
                },
                {
                  "expression": {
                    "id": 78539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 78535,
                      "name": "oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78526,
                      "src": "383:6:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "6f7261636c65",
                          "id": 78537,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "405:8:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_89cbf5af14e0328a3cd3a734f92c3832d729d431da79b7873a62cbeebd37beb6",
                            "typeString": "literal_string \"oracle\""
                          },
                          "value": "oracle"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_89cbf5af14e0328a3cd3a734f92c3832d729d431da79b7873a62cbeebd37beb6",
                            "typeString": "literal_string \"oracle\""
                          }
                        ],
                        "id": 78536,
                        "name": "freshAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [70789, 70801],
                        "referencedDeclaration": 70789,
                        "src": "392:12:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_payable_$",
                          "typeString": "function (string memory) returns (address payable)"
                        }
                      },
                      "id": 78538,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "392:22:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "383:31:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 78540,
                  "nodeType": "ExpressionStatement",
                  "src": "383:31:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78544,
                        "name": "oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78526,
                        "src": "432:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 78547,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "446:2:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 78546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "440:5:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 78545,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "440:5:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "440:9:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 78551,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "462:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "30",
                            "id": 78552,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "465:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 78549,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "451:3:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 78550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "451:10:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 78553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "451:16:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 78541,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "420:2:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 78543,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mockCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5112,
                      "src": "420:11:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory,bytes memory) external"
                      }
                    },
                    "id": 78554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "420:48:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78555,
                  "nodeType": "ExpressionStatement",
                  "src": "420:48:114"
                },
                {
                  "expression": {
                    "id": 78566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 78556,
                      "name": "mkr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78521,
                      "src": "475:3:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestMaker_$73404",
                        "typeString": "contract TestMaker"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 78559,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69382,
                              "src": "494:4:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 78558,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "492:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 78560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "492:7:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 78562,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69385,
                              "src": "503:5:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 78561,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "501:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 78563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "501:8:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "6d616b6572",
                          "id": 78564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "511:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_92f19e22fc1393ec30ea8872fc93139e9728e6d5119eab8fa503b247090ac4e0",
                            "typeString": "literal_string \"maker\""
                          },
                          "value": "maker"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_92f19e22fc1393ec30ea8872fc93139e9728e6d5119eab8fa503b247090ac4e0",
                            "typeString": "literal_string \"maker\""
                          }
                        ],
                        "id": 78557,
                        "name": "setupMaker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70302,
                        "src": "481:10:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$_t_contract$_TestMaker_$73404_$",
                          "typeString": "function (address,address,string memory) returns (contract TestMaker)"
                        }
                      },
                      "id": 78565,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "481:38:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestMaker_$73404",
                        "typeString": "contract TestMaker"
                      }
                    },
                    "src": "475:44:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestMaker_$73404",
                      "typeString": "contract TestMaker"
                    }
                  },
                  "id": 78567,
                  "nodeType": "ExpressionStatement",
                  "src": "475:44:114"
                },
                {
                  "expression": {
                    "id": 78576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 78568,
                      "name": "reader",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78524,
                      "src": "525:6:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MgvReader_$30351",
                        "typeString": "contract MgvReader"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 78573,
                              "name": "mgv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69379,
                              "src": "550:3:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                                "typeString": "contract AbstractMangrove"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                                "typeString": "contract AbstractMangrove"
                              }
                            ],
                            "id": 78572,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70446,
                            "src": "548:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                              "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                            }
                          },
                          "id": 78574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "548:6:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 78571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "534:13:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_MgvReader_$30351_$",
                          "typeString": "function (address) returns (contract MgvReader)"
                        },
                        "typeName": {
                          "id": 78570,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 78569,
                            "name": "MgvReader",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 30351,
                            "src": "538:9:114"
                          },
                          "referencedDeclaration": 30351,
                          "src": "538:9:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MgvReader_$30351",
                            "typeString": "contract MgvReader"
                          }
                        }
                      },
                      "id": 78575,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "534:21:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MgvReader_$30351",
                        "typeString": "contract MgvReader"
                      }
                    },
                    "src": "525:30:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MgvReader_$30351",
                      "typeString": "contract MgvReader"
                    }
                  },
                  "id": 78577,
                  "nodeType": "ExpressionStatement",
                  "src": "525:30:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "35",
                        "id": 78581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "578:7:114",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 78578,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78521,
                        "src": "561:3:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$73404",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 78580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "provisionMgv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73320,
                      "src": "561:16:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 78582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "561:25:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78583,
                  "nodeType": "ExpressionStatement",
                  "src": "561:25:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78586,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "600:5:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 78585,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "598:1:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 78587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "598:8:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 78590,
                            "name": "mkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78521,
                            "src": "616:3:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$73404",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$73404",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 78589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "608:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 78588,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "608:7:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "608:12:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 78592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "622:7:114",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 78584,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [2399, 2416, 2519],
                      "referencedDeclaration": 2416,
                      "src": "593:4:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 78593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "593:37:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78594,
                  "nodeType": "ExpressionStatement",
                  "src": "593:37:114"
                }
              ]
            },
            "baseFunctions": [69507],
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "334:5:114",
            "overrides": {
              "id": 78528,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "349:8:114"
            },
            "parameters": {
              "id": 78527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "339:2:114"
            },
            "returnParameters": {
              "id": 78529,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "358:0:114"
            },
            "scope": 79293,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 78874,
            "nodeType": "FunctionDefinition",
            "src": "639:2332:114",
            "body": {
              "id": 78873,
              "nodeType": "Block",
              "src": "674:2297:114",
              "statements": [
                {
                  "assignments": [78600, 78603, 78607, 78611],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78600,
                      "mutability": "mutable",
                      "name": "currentId",
                      "nameLocation": "693:9:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 78873,
                      "src": "688:14:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 78599,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "688:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 78603,
                      "mutability": "mutable",
                      "name": "offerIds",
                      "nameLocation": "724:8:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 78873,
                      "src": "710:22:114",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 78601,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "710:4:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 78602,
                        "nodeType": "ArrayTypeName",
                        "src": "710:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 78607,
                      "mutability": "mutable",
                      "name": "offers",
                      "nameLocation": "763:6:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 78873,
                      "src": "740:29:114",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_OfferStruct_$33325_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct OfferStruct[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 78605,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 78604,
                            "name": "P.OfferStruct",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 33325,
                            "src": "740:13:114"
                          },
                          "referencedDeclaration": 33325,
                          "src": "740:13:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OfferStruct_$33325_storage_ptr",
                            "typeString": "struct OfferStruct"
                          }
                        },
                        "id": 78606,
                        "nodeType": "ArrayTypeName",
                        "src": "740:15:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_OfferStruct_$33325_storage_$dyn_storage_ptr",
                          "typeString": "struct OfferStruct[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 78611,
                      "mutability": "mutable",
                      "name": "details",
                      "nameLocation": "806:7:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 78873,
                      "src": "777:36:114",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_OfferDetailStruct_$33334_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct OfferDetailStruct[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 78609,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 78608,
                            "name": "P.OfferDetailStruct",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 33334,
                            "src": "777:19:114"
                          },
                          "referencedDeclaration": 33334,
                          "src": "777:19:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OfferDetailStruct_$33334_storage_ptr",
                            "typeString": "struct OfferDetailStruct"
                          }
                        },
                        "id": 78610,
                        "nodeType": "ArrayTypeName",
                        "src": "777:21:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_OfferDetailStruct_$33334_storage_$dyn_storage_ptr",
                          "typeString": "struct OfferDetailStruct[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78623,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78615,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "841:4:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 78614,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "839:1:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 78616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "839:7:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 78618,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "850:5:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 78617,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "848:1:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 78619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "848:8:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 78620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "858:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "3530",
                        "id": 78621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "861:2:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50_by_1",
                          "typeString": "int_const 50"
                        },
                        "value": "50"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_50_by_1",
                          "typeString": "int_const 50"
                        }
                      ],
                      "expression": {
                        "id": 78612,
                        "name": "reader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78524,
                        "src": "822:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MgvReader_$30351",
                          "typeString": "contract MgvReader"
                        }
                      },
                      "id": 78613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "offerList",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30284,
                      "src": "822:16:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_struct$_OfferStruct_$33325_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_OfferDetailStruct_$33334_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (address,address,uint256,uint256) view external returns (uint256,uint256[] memory,struct OfferStruct memory[] memory,struct OfferDetailStruct memory[] memory)"
                      }
                    },
                    "id": 78622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "822:42:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_struct$_OfferStruct_$33325_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_OfferDetailStruct_$33334_memory_ptr_$dyn_memory_ptr_$",
                      "typeString": "tuple(uint256,uint256[] memory,struct OfferStruct memory[] memory,struct OfferDetailStruct memory[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "680:184:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 78625,
                          "name": "offerIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78603,
                          "src": "880:8:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 78626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "880:15:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 78627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "897:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "6964733a2077726f6e67206c656e677468206f6e2032656c656d",
                        "id": 78628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "900:28:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d8095d3ca9511f7cf992374594c95fa5e4c180f2ae64252f88362e76c054e5e5",
                          "typeString": "literal_string \"ids: wrong length on 2elem\""
                        },
                        "value": "ids: wrong length on 2elem"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d8095d3ca9511f7cf992374594c95fa5e4c180f2ae64252f88362e76c054e5e5",
                          "typeString": "literal_string \"ids: wrong length on 2elem\""
                        }
                      ],
                      "id": 78624,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "871:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 78629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "871:58:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78630,
                  "nodeType": "ExpressionStatement",
                  "src": "871:58:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 78632,
                          "name": "offers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78607,
                          "src": "944:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_OfferStruct_$33325_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OfferStruct memory[] memory"
                          }
                        },
                        "id": 78633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "944:13:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 78634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "959:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "6f66666572733a2077726f6e67206c656e677468206f6e2031656c656d",
                        "id": 78635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "962:31:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bea03a680e05a2c967564fd0c6542b974b30c761fc5f9bf89eec873c51910f72",
                          "typeString": "literal_string \"offers: wrong length on 1elem\""
                        },
                        "value": "offers: wrong length on 1elem"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bea03a680e05a2c967564fd0c6542b974b30c761fc5f9bf89eec873c51910f72",
                          "typeString": "literal_string \"offers: wrong length on 1elem\""
                        }
                      ],
                      "id": 78631,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "935:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 78636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "935:59:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78637,
                  "nodeType": "ExpressionStatement",
                  "src": "935:59:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 78639,
                          "name": "details",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78611,
                          "src": "1009:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_OfferDetailStruct_$33334_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OfferDetailStruct memory[] memory"
                          }
                        },
                        "id": 78640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1009:14:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 78641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1025:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "64657461696c733a2077726f6e67206c656e677468206f6e2031656c656d",
                        "id": 78642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1028:32:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8bd12900c77c3b0b3596e7565358435d1555c2ac0431eef4a4957d944150dd2b",
                          "typeString": "literal_string \"details: wrong length on 1elem\""
                        },
                        "value": "details: wrong length on 1elem"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8bd12900c77c3b0b3596e7565358435d1555c2ac0431eef4a4957d944150dd2b",
                          "typeString": "literal_string \"details: wrong length on 1elem\""
                        }
                      ],
                      "id": 78638,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "1000:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 78643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1000:61:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78644,
                  "nodeType": "ExpressionStatement",
                  "src": "1000:61:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 78648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1099:7:114",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 78649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1108:7:114",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31305f303030",
                        "id": 78650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1117:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "10_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 78651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1125:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 78645,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78521,
                        "src": "1086:3:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$73404",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 78647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73059,
                      "src": "1086:12:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 78652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1086:41:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 78653,
                  "nodeType": "ExpressionStatement",
                  "src": "1086:41:114"
                },
                {
                  "expression": {
                    "id": 78670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 78654,
                          "name": "currentId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78600,
                          "src": "1135:9:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 78655,
                          "name": "offerIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78603,
                          "src": "1146:8:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 78656,
                          "name": "offers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78607,
                          "src": "1156:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_OfferStruct_$33325_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OfferStruct memory[] memory"
                          }
                        },
                        {
                          "id": 78657,
                          "name": "details",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78611,
                          "src": "1164:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_OfferDetailStruct_$33334_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OfferDetailStruct memory[] memory"
                          }
                        }
                      ],
                      "id": 78658,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "1134:38:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_struct$_OfferStruct_$33325_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_OfferDetailStruct_$33334_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "tuple(uint256,uint256[] memory,struct OfferStruct memory[] memory,struct OfferDetailStruct memory[] memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 78662,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69382,
                              "src": "1201:4:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 78661,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "1199:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 78663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1199:7:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 78665,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69385,
                              "src": "1216:5:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 78664,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "1214:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 78666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1214:8:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 78667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1230:1:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "3530",
                          "id": 78668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1239:2:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          },
                          "value": "50"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          }
                        ],
                        "expression": {
                          "id": 78659,
                          "name": "reader",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78524,
                          "src": "1175:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MgvReader_$30351",
                            "typeString": "contract MgvReader"
                          }
                        },
                        "id": 78660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerList",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30284,
                        "src": "1175:16:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_struct$_OfferStruct_$33325_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_OfferDetailStruct_$33334_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (address,address,uint256,uint256) view external returns (uint256,uint256[] memory,struct OfferStruct memory[] memory,struct OfferDetailStruct memory[] memory)"
                        }
                      },
                      "id": 78669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1175:72:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_struct$_OfferStruct_$33325_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_OfferDetailStruct_$33334_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "tuple(uint256,uint256[] memory,struct OfferStruct memory[] memory,struct OfferDetailStruct memory[] memory)"
                      }
                    },
                    "src": "1134:113:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78671,
                  "nodeType": "ExpressionStatement",
                  "src": "1134:113:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 78673,
                          "name": "offerIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78603,
                          "src": "1263:8:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 78674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1263:15:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 78675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1280:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "6964733a2077726f6e67206c656e677468206f6e2031656c656d",
                        "id": 78676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1283:28:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f822da87cc13ca0ec0c5ca406a9216b4e195db932885d86ba887d0d326a4f511",
                          "typeString": "literal_string \"ids: wrong length on 1elem\""
                        },
                        "value": "ids: wrong length on 1elem"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f822da87cc13ca0ec0c5ca406a9216b4e195db932885d86ba887d0d326a4f511",
                          "typeString": "literal_string \"ids: wrong length on 1elem\""
                        }
                      ],
                      "id": 78672,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "1254:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 78677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1254:58:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78678,
                  "nodeType": "ExpressionStatement",
                  "src": "1254:58:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 78680,
                          "name": "offers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78607,
                          "src": "1327:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_OfferStruct_$33325_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OfferStruct memory[] memory"
                          }
                        },
                        "id": 78681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1327:13:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 78682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1342:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "6f66666572733a2077726f6e67206c656e677468206f6e2031656c656d",
                        "id": 78683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1345:31:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bea03a680e05a2c967564fd0c6542b974b30c761fc5f9bf89eec873c51910f72",
                          "typeString": "literal_string \"offers: wrong length on 1elem\""
                        },
                        "value": "offers: wrong length on 1elem"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bea03a680e05a2c967564fd0c6542b974b30c761fc5f9bf89eec873c51910f72",
                          "typeString": "literal_string \"offers: wrong length on 1elem\""
                        }
                      ],
                      "id": 78679,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "1318:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 78684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1318:59:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78685,
                  "nodeType": "ExpressionStatement",
                  "src": "1318:59:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 78687,
                          "name": "details",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78611,
                          "src": "1392:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_OfferDetailStruct_$33334_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OfferDetailStruct memory[] memory"
                          }
                        },
                        "id": 78688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1392:14:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 78689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1408:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "64657461696c733a2077726f6e67206c656e677468206f6e2031656c656d",
                        "id": 78690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1411:32:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8bd12900c77c3b0b3596e7565358435d1555c2ac0431eef4a4957d944150dd2b",
                          "typeString": "literal_string \"details: wrong length on 1elem\""
                        },
                        "value": "details: wrong length on 1elem"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8bd12900c77c3b0b3596e7565358435d1555c2ac0431eef4a4957d944150dd2b",
                          "typeString": "literal_string \"details: wrong length on 1elem\""
                        }
                      ],
                      "id": 78686,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "1383:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 78691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1383:61:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78692,
                  "nodeType": "ExpressionStatement",
                  "src": "1383:61:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "302e39",
                        "id": 78696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1483:9:114",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_900000000000000000_by_1",
                          "typeString": "int_const 900000000000000000"
                        },
                        "value": "0.9"
                      },
                      {
                        "hexValue": "31",
                        "id": 78697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1494:7:114",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31305f303030",
                        "id": 78698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1503:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "10_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 78699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1511:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_900000000000000000_by_1",
                          "typeString": "int_const 900000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 78693,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78521,
                        "src": "1470:3:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$73404",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 78695,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73059,
                      "src": "1470:12:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 78700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1470:43:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 78701,
                  "nodeType": "ExpressionStatement",
                  "src": "1470:43:114"
                },
                {
                  "expression": {
                    "id": 78718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 78702,
                          "name": "currentId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78600,
                          "src": "1521:9:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 78703,
                          "name": "offerIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78603,
                          "src": "1532:8:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 78704,
                          "name": "offers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78607,
                          "src": "1542:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_OfferStruct_$33325_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OfferStruct memory[] memory"
                          }
                        },
                        {
                          "id": 78705,
                          "name": "details",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78611,
                          "src": "1550:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_OfferDetailStruct_$33334_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OfferDetailStruct memory[] memory"
                          }
                        }
                      ],
                      "id": 78706,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "1520:38:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_struct$_OfferStruct_$33325_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_OfferDetailStruct_$33334_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "tuple(uint256,uint256[] memory,struct OfferStruct memory[] memory,struct OfferDetailStruct memory[] memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 78710,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69382,
                              "src": "1587:4:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 78709,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "1585:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 78711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1585:7:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 78713,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69385,
                              "src": "1602:5:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 78712,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "1600:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 78714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1600:8:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 78715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1616:1:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "3530",
                          "id": 78716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1625:2:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          },
                          "value": "50"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          }
                        ],
                        "expression": {
                          "id": 78707,
                          "name": "reader",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78524,
                          "src": "1561:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MgvReader_$30351",
                            "typeString": "contract MgvReader"
                          }
                        },
                        "id": 78708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerList",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30284,
                        "src": "1561:16:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_struct$_OfferStruct_$33325_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_OfferDetailStruct_$33334_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (address,address,uint256,uint256) view external returns (uint256,uint256[] memory,struct OfferStruct memory[] memory,struct OfferDetailStruct memory[] memory)"
                        }
                      },
                      "id": 78717,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1561:72:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_struct$_OfferStruct_$33325_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_OfferDetailStruct_$33334_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "tuple(uint256,uint256[] memory,struct OfferStruct memory[] memory,struct OfferDetailStruct memory[] memory)"
                      }
                    },
                    "src": "1520:113:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78719,
                  "nodeType": "ExpressionStatement",
                  "src": "1520:113:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 78721,
                          "name": "offerIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78603,
                          "src": "1649:8:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 78722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1649:15:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 78723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1666:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "6964733a2077726f6e67206c656e677468206f6e2032656c656d",
                        "id": 78724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1669:28:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d8095d3ca9511f7cf992374594c95fa5e4c180f2ae64252f88362e76c054e5e5",
                          "typeString": "literal_string \"ids: wrong length on 2elem\""
                        },
                        "value": "ids: wrong length on 2elem"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d8095d3ca9511f7cf992374594c95fa5e4c180f2ae64252f88362e76c054e5e5",
                          "typeString": "literal_string \"ids: wrong length on 2elem\""
                        }
                      ],
                      "id": 78720,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "1640:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 78725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1640:58:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78726,
                  "nodeType": "ExpressionStatement",
                  "src": "1640:58:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 78728,
                          "name": "offers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78607,
                          "src": "1713:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_OfferStruct_$33325_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OfferStruct memory[] memory"
                          }
                        },
                        "id": 78729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1713:13:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 78730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1728:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "6f66666572733a2077726f6e67206c656e677468206f6e2031656c656d",
                        "id": 78731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1731:31:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bea03a680e05a2c967564fd0c6542b974b30c761fc5f9bf89eec873c51910f72",
                          "typeString": "literal_string \"offers: wrong length on 1elem\""
                        },
                        "value": "offers: wrong length on 1elem"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bea03a680e05a2c967564fd0c6542b974b30c761fc5f9bf89eec873c51910f72",
                          "typeString": "literal_string \"offers: wrong length on 1elem\""
                        }
                      ],
                      "id": 78727,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "1704:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 78732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1704:59:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78733,
                  "nodeType": "ExpressionStatement",
                  "src": "1704:59:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 78735,
                          "name": "details",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78611,
                          "src": "1778:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_OfferDetailStruct_$33334_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OfferDetailStruct memory[] memory"
                          }
                        },
                        "id": 78736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1778:14:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 78737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1794:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "64657461696c733a2077726f6e67206c656e677468206f6e2031656c656d",
                        "id": 78738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1797:32:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8bd12900c77c3b0b3596e7565358435d1555c2ac0431eef4a4957d944150dd2b",
                          "typeString": "literal_string \"details: wrong length on 1elem\""
                        },
                        "value": "details: wrong length on 1elem"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8bd12900c77c3b0b3596e7565358435d1555c2ac0431eef4a4957d944150dd2b",
                          "typeString": "literal_string \"details: wrong length on 1elem\""
                        }
                      ],
                      "id": 78734,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "1769:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 78739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1769:61:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78740,
                  "nodeType": "ExpressionStatement",
                  "src": "1769:61:114"
                },
                {
                  "expression": {
                    "id": 78757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 78741,
                          "name": "currentId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78600,
                          "src": "1874:9:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 78742,
                          "name": "offerIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78603,
                          "src": "1885:8:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 78743,
                          "name": "offers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78607,
                          "src": "1895:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_OfferStruct_$33325_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OfferStruct memory[] memory"
                          }
                        },
                        {
                          "id": 78744,
                          "name": "details",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78611,
                          "src": "1903:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_OfferDetailStruct_$33334_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OfferDetailStruct memory[] memory"
                          }
                        }
                      ],
                      "id": 78745,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "1873:38:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_struct$_OfferStruct_$33325_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_OfferDetailStruct_$33334_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "tuple(uint256,uint256[] memory,struct OfferStruct memory[] memory,struct OfferDetailStruct memory[] memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 78749,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69382,
                              "src": "1940:4:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 78748,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "1938:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 78750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1938:7:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 78752,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69385,
                              "src": "1955:5:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 78751,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "1953:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 78753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1953:8:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 78754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1969:1:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "3530",
                          "id": 78755,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1978:2:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          },
                          "value": "50"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          }
                        ],
                        "expression": {
                          "id": 78746,
                          "name": "reader",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78524,
                          "src": "1914:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MgvReader_$30351",
                            "typeString": "contract MgvReader"
                          }
                        },
                        "id": 78747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerList",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30284,
                        "src": "1914:16:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_struct$_OfferStruct_$33325_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_OfferDetailStruct_$33334_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (address,address,uint256,uint256) view external returns (uint256,uint256[] memory,struct OfferStruct memory[] memory,struct OfferDetailStruct memory[] memory)"
                        }
                      },
                      "id": 78756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1914:72:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_struct$_OfferStruct_$33325_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_OfferDetailStruct_$33334_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "tuple(uint256,uint256[] memory,struct OfferStruct memory[] memory,struct OfferDetailStruct memory[] memory)"
                      }
                    },
                    "src": "1873:113:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78758,
                  "nodeType": "ExpressionStatement",
                  "src": "1873:113:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 78760,
                          "name": "offerIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78603,
                          "src": "2001:8:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 78761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2001:15:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 78762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2018:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "6964733a2077726f6e67206c656e6774682032656c656d2073746172742066726f6d2069642031",
                        "id": 78763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2021:41:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eb407818cb89aaf973a32f037f461addc260edf167c4311a5f719cabee37da8b",
                          "typeString": "literal_string \"ids: wrong length 2elem start from id 1\""
                        },
                        "value": "ids: wrong length 2elem start from id 1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eb407818cb89aaf973a32f037f461addc260edf167c4311a5f719cabee37da8b",
                          "typeString": "literal_string \"ids: wrong length 2elem start from id 1\""
                        }
                      ],
                      "id": 78759,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "1992:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 78764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1992:71:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78765,
                  "nodeType": "ExpressionStatement",
                  "src": "1992:71:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 78767,
                          "name": "offers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78607,
                          "src": "2078:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_OfferStruct_$33325_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OfferStruct memory[] memory"
                          }
                        },
                        "id": 78768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2078:13:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 78769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2093:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "6f66666572733a2077726f6e67206c656e677468206f6e2031656c656d",
                        "id": 78770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2096:31:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bea03a680e05a2c967564fd0c6542b974b30c761fc5f9bf89eec873c51910f72",
                          "typeString": "literal_string \"offers: wrong length on 1elem\""
                        },
                        "value": "offers: wrong length on 1elem"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bea03a680e05a2c967564fd0c6542b974b30c761fc5f9bf89eec873c51910f72",
                          "typeString": "literal_string \"offers: wrong length on 1elem\""
                        }
                      ],
                      "id": 78766,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "2069:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 78771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2069:59:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78772,
                  "nodeType": "ExpressionStatement",
                  "src": "2069:59:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 78774,
                          "name": "details",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78611,
                          "src": "2143:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_OfferDetailStruct_$33334_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OfferDetailStruct memory[] memory"
                          }
                        },
                        "id": 78775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2143:14:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 78776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2159:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "64657461696c733a2077726f6e67206c656e677468206f6e2031656c656d",
                        "id": 78777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2162:32:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8bd12900c77c3b0b3596e7565358435d1555c2ac0431eef4a4957d944150dd2b",
                          "typeString": "literal_string \"details: wrong length on 1elem\""
                        },
                        "value": "details: wrong length on 1elem"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8bd12900c77c3b0b3596e7565358435d1555c2ac0431eef4a4957d944150dd2b",
                          "typeString": "literal_string \"details: wrong length on 1elem\""
                        }
                      ],
                      "id": 78773,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "2134:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 78778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2134:61:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78779,
                  "nodeType": "ExpressionStatement",
                  "src": "2134:61:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "302e38",
                        "id": 78783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2254:9:114",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_800000000000000000_by_1",
                          "typeString": "int_const 800000000000000000"
                        },
                        "value": "0.8"
                      },
                      {
                        "hexValue": "31",
                        "id": 78784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2265:7:114",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31305f303030",
                        "id": 78785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2274:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "10_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 78786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2282:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_800000000000000000_by_1",
                          "typeString": "int_const 800000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 78780,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78521,
                        "src": "2241:3:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$73404",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 78782,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73059,
                      "src": "2241:12:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 78787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2241:43:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 78788,
                  "nodeType": "ExpressionStatement",
                  "src": "2241:43:114"
                },
                {
                  "expression": {
                    "id": 78805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 78789,
                          "name": "currentId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78600,
                          "src": "2291:9:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 78790,
                          "name": "offerIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78603,
                          "src": "2302:8:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 78791,
                          "name": "offers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78607,
                          "src": "2312:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_OfferStruct_$33325_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OfferStruct memory[] memory"
                          }
                        },
                        {
                          "id": 78792,
                          "name": "details",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78611,
                          "src": "2320:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_OfferDetailStruct_$33334_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OfferDetailStruct memory[] memory"
                          }
                        }
                      ],
                      "id": 78793,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2290:38:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_struct$_OfferStruct_$33325_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_OfferDetailStruct_$33334_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "tuple(uint256,uint256[] memory,struct OfferStruct memory[] memory,struct OfferDetailStruct memory[] memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 78797,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69382,
                              "src": "2357:4:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 78796,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "2355:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 78798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2355:7:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 78800,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69385,
                              "src": "2372:5:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 78799,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "2370:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 78801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2370:8:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 78802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2386:1:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "32",
                          "id": 78803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2395:1:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "expression": {
                          "id": 78794,
                          "name": "reader",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78524,
                          "src": "2331:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MgvReader_$30351",
                            "typeString": "contract MgvReader"
                          }
                        },
                        "id": 78795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerList",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30284,
                        "src": "2331:16:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_struct$_OfferStruct_$33325_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_OfferDetailStruct_$33334_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (address,address,uint256,uint256) view external returns (uint256,uint256[] memory,struct OfferStruct memory[] memory,struct OfferDetailStruct memory[] memory)"
                        }
                      },
                      "id": 78804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2331:71:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_struct$_OfferStruct_$33325_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_OfferDetailStruct_$33334_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "tuple(uint256,uint256[] memory,struct OfferStruct memory[] memory,struct OfferDetailStruct memory[] memory)"
                      }
                    },
                    "src": "2290:112:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78806,
                  "nodeType": "ExpressionStatement",
                  "src": "2290:112:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 78808,
                          "name": "offerIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78603,
                          "src": "2417:8:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 78809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2417:15:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 78810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2434:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "6964733a2077726f6e67206c656e677468206f6e2033656c656d206368756e6b2073697a652032",
                        "id": 78811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2437:41:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_53478101cea84e525272b756566e3936980ccf9446509b8441af4fc676fbbacf",
                          "typeString": "literal_string \"ids: wrong length on 3elem chunk size 2\""
                        },
                        "value": "ids: wrong length on 3elem chunk size 2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_53478101cea84e525272b756566e3936980ccf9446509b8441af4fc676fbbacf",
                          "typeString": "literal_string \"ids: wrong length on 3elem chunk size 2\""
                        }
                      ],
                      "id": 78807,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "2408:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 78812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2408:71:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78813,
                  "nodeType": "ExpressionStatement",
                  "src": "2408:71:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 78815,
                          "name": "offers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78607,
                          "src": "2494:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_OfferStruct_$33325_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OfferStruct memory[] memory"
                          }
                        },
                        "id": 78816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2494:13:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 78817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2509:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "6f66666572733a2077726f6e67206c656e677468206f6e2031656c656d",
                        "id": 78818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2512:31:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bea03a680e05a2c967564fd0c6542b974b30c761fc5f9bf89eec873c51910f72",
                          "typeString": "literal_string \"offers: wrong length on 1elem\""
                        },
                        "value": "offers: wrong length on 1elem"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bea03a680e05a2c967564fd0c6542b974b30c761fc5f9bf89eec873c51910f72",
                          "typeString": "literal_string \"offers: wrong length on 1elem\""
                        }
                      ],
                      "id": 78814,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "2485:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 78819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2485:59:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78820,
                  "nodeType": "ExpressionStatement",
                  "src": "2485:59:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 78822,
                          "name": "details",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78611,
                          "src": "2559:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_OfferDetailStruct_$33334_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OfferDetailStruct memory[] memory"
                          }
                        },
                        "id": 78823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2559:14:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 78824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2575:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "64657461696c733a2077726f6e67206c656e677468206f6e2031656c656d",
                        "id": 78825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2578:32:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8bd12900c77c3b0b3596e7565358435d1555c2ac0431eef4a4957d944150dd2b",
                          "typeString": "literal_string \"details: wrong length on 1elem\""
                        },
                        "value": "details: wrong length on 1elem"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8bd12900c77c3b0b3596e7565358435d1555c2ac0431eef4a4957d944150dd2b",
                          "typeString": "literal_string \"details: wrong length on 1elem\""
                        }
                      ],
                      "id": 78821,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "2550:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 78826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2550:61:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78827,
                  "nodeType": "ExpressionStatement",
                  "src": "2550:61:114"
                },
                {
                  "expression": {
                    "id": 78844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 78828,
                          "name": "currentId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78600,
                          "src": "2643:9:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 78829,
                          "name": "offerIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78603,
                          "src": "2654:8:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 78830,
                          "name": "offers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78607,
                          "src": "2664:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_OfferStruct_$33325_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OfferStruct memory[] memory"
                          }
                        },
                        {
                          "id": 78831,
                          "name": "details",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78611,
                          "src": "2672:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_OfferDetailStruct_$33334_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OfferDetailStruct memory[] memory"
                          }
                        }
                      ],
                      "id": 78832,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2642:38:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_struct$_OfferStruct_$33325_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_OfferDetailStruct_$33334_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "tuple(uint256,uint256[] memory,struct OfferStruct memory[] memory,struct OfferDetailStruct memory[] memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 78836,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69382,
                              "src": "2709:4:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 78835,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "2707:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 78837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2707:7:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 78839,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69385,
                              "src": "2724:5:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 78838,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "2722:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 78840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2722:8:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 78841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2738:1:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "3530",
                          "id": 78842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2747:2:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          },
                          "value": "50"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          }
                        ],
                        "expression": {
                          "id": 78833,
                          "name": "reader",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78524,
                          "src": "2683:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MgvReader_$30351",
                            "typeString": "contract MgvReader"
                          }
                        },
                        "id": 78834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerList",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30284,
                        "src": "2683:16:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_struct$_OfferStruct_$33325_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_OfferDetailStruct_$33334_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (address,address,uint256,uint256) view external returns (uint256,uint256[] memory,struct OfferStruct memory[] memory,struct OfferDetailStruct memory[] memory)"
                        }
                      },
                      "id": 78843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2683:72:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_struct$_OfferStruct_$33325_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_OfferDetailStruct_$33334_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "tuple(uint256,uint256[] memory,struct OfferStruct memory[] memory,struct OfferDetailStruct memory[] memory)"
                      }
                    },
                    "src": "2642:113:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78845,
                  "nodeType": "ExpressionStatement",
                  "src": "2642:113:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 78847,
                            "name": "offers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78607,
                            "src": "2770:6:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_OfferStruct_$33325_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct OfferStruct memory[] memory"
                            }
                          },
                          "id": 78849,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 78848,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2777:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2770:9:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OfferStruct_$33325_memory_ptr",
                            "typeString": "struct OfferStruct memory"
                          }
                        },
                        "id": 78850,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "wants",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33322,
                        "src": "2770:15:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "302e38",
                        "id": 78851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2787:9:114",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_800000000000000000_by_1",
                          "typeString": "int_const 800000000000000000"
                        },
                        "value": "0.8"
                      },
                      {
                        "hexValue": "77726f6e672077616e747320666f72206f66666572735b305d",
                        "id": 78852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2798:27:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ace803712795ccce6a03855d6a112d1be753f6a0cbbfdfc37ef330f81760f01",
                          "typeString": "literal_string \"wrong wants for offers[0]\""
                        },
                        "value": "wrong wants for offers[0]"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_800000000000000000_by_1",
                          "typeString": "int_const 800000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ace803712795ccce6a03855d6a112d1be753f6a0cbbfdfc37ef330f81760f01",
                          "typeString": "literal_string \"wrong wants for offers[0]\""
                        }
                      ],
                      "id": 78846,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "2761:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 78853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2761:65:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78854,
                  "nodeType": "ExpressionStatement",
                  "src": "2761:65:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 78856,
                            "name": "offers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78607,
                            "src": "2841:6:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_OfferStruct_$33325_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct OfferStruct memory[] memory"
                            }
                          },
                          "id": 78858,
                          "indexExpression": {
                            "hexValue": "31",
                            "id": 78857,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2848:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2841:9:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OfferStruct_$33325_memory_ptr",
                            "typeString": "struct OfferStruct memory"
                          }
                        },
                        "id": 78859,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "wants",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33322,
                        "src": "2841:15:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "302e39",
                        "id": 78860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2858:9:114",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_900000000000000000_by_1",
                          "typeString": "int_const 900000000000000000"
                        },
                        "value": "0.9"
                      },
                      {
                        "hexValue": "77726f6e672077616e747320666f72206f66666572735b305d",
                        "id": 78861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2869:27:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ace803712795ccce6a03855d6a112d1be753f6a0cbbfdfc37ef330f81760f01",
                          "typeString": "literal_string \"wrong wants for offers[0]\""
                        },
                        "value": "wrong wants for offers[0]"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_900000000000000000_by_1",
                          "typeString": "int_const 900000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ace803712795ccce6a03855d6a112d1be753f6a0cbbfdfc37ef330f81760f01",
                          "typeString": "literal_string \"wrong wants for offers[0]\""
                        }
                      ],
                      "id": 78855,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "2832:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 78862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2832:65:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78863,
                  "nodeType": "ExpressionStatement",
                  "src": "2832:65:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 78865,
                            "name": "offers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78607,
                            "src": "2912:6:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_OfferStruct_$33325_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct OfferStruct memory[] memory"
                            }
                          },
                          "id": 78867,
                          "indexExpression": {
                            "hexValue": "32",
                            "id": 78866,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2919:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2912:9:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OfferStruct_$33325_memory_ptr",
                            "typeString": "struct OfferStruct memory"
                          }
                        },
                        "id": 78868,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "wants",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33322,
                        "src": "2912:15:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 78869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2929:7:114",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "77726f6e672077616e747320666f72206f66666572735b305d",
                        "id": 78870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2938:27:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ace803712795ccce6a03855d6a112d1be753f6a0cbbfdfc37ef330f81760f01",
                          "typeString": "literal_string \"wrong wants for offers[0]\""
                        },
                        "value": "wrong wants for offers[0]"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ace803712795ccce6a03855d6a112d1be753f6a0cbbfdfc37ef330f81760f01",
                          "typeString": "literal_string \"wrong wants for offers[0]\""
                        }
                      ],
                      "id": 78864,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "2903:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 78871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2903:63:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78872,
                  "nodeType": "ExpressionStatement",
                  "src": "2903:63:114"
                }
              ]
            },
            "functionSelector": "b8566b3d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_read_packed",
            "nameLocation": "648:16:114",
            "parameters": {
              "id": 78597,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "664:2:114"
            },
            "returnParameters": {
              "id": 78598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "674:0:114"
            },
            "scope": 79293,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 78918,
            "nodeType": "FunctionDefinition",
            "src": "2975:382:114",
            "body": {
              "id": 78917,
              "nodeType": "Block",
              "src": "3032:325:114",
              "statements": [
                {
                  "assignments": [78878],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78878,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "3043:3:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 78917,
                      "src": "3038:8:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 78877,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3038:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78886,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 78881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3062:7:114",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 78882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3071:7:114",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31305f303030",
                        "id": 78883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3080:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "10_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 78884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3088:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 78879,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78521,
                        "src": "3049:3:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$73404",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 78880,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73059,
                      "src": "3049:12:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 78885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3049:41:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3038:52:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78890,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78878,
                        "src": "3113:3:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 78887,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78521,
                        "src": "3096:3:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$73404",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 78889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "retractOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73287,
                      "src": "3096:16:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) external returns (uint256)"
                      }
                    },
                    "id": 78891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3096:21:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 78892,
                  "nodeType": "ExpressionStatement",
                  "src": "3096:21:114"
                },
                {
                  "assignments": [null, 78897, null, null],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 78897,
                      "mutability": "mutable",
                      "name": "offerIds",
                      "nameLocation": "3140:8:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 78917,
                      "src": "3126:22:114",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 78895,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3126:4:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 78896,
                        "nodeType": "ArrayTypeName",
                        "src": "3126:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 78909,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78901,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "3182:4:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 78900,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "3180:1:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 78902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3180:7:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 78904,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "3197:5:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 78903,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "3195:1:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 78905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3195:8:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 78906,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78878,
                        "src": "3211:3:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3530",
                        "id": 78907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3222:2:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50_by_1",
                          "typeString": "int_const 50"
                        },
                        "value": "50"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_50_by_1",
                          "typeString": "int_const 50"
                        }
                      ],
                      "expression": {
                        "id": 78898,
                        "name": "reader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78524,
                        "src": "3156:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MgvReader_$30351",
                          "typeString": "contract MgvReader"
                        }
                      },
                      "id": 78899,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "offerList",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30284,
                      "src": "3156:16:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_struct$_OfferStruct_$33325_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_OfferDetailStruct_$33334_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (address,address,uint256,uint256) view external returns (uint256,uint256[] memory,struct OfferStruct memory[] memory,struct OfferDetailStruct memory[] memory)"
                      }
                    },
                    "id": 78908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3156:74:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_struct$_OfferStruct_$33325_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_OfferDetailStruct_$33334_memory_ptr_$dyn_memory_ptr_$",
                      "typeString": "tuple(uint256,uint256[] memory,struct OfferStruct memory[] memory,struct OfferDetailStruct memory[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3123:107:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 78911,
                          "name": "offerIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78897,
                          "src": "3252:8:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 78912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "3252:15:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 78913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3275:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "73686f756c6420686176652030206f66666572732073696e6365207374617274696e6720706f696e74206973206f7574206f662074686520626f6f6b",
                        "id": 78914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3284:62:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_84416610be4297bce346bdfa484442d4a1f6346c8383a09a5da37ae769eba59a",
                          "typeString": "literal_string \"should have 0 offers since starting point is out of the book\""
                        },
                        "value": "should have 0 offers since starting point is out of the book"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_84416610be4297bce346bdfa484442d4a1f6346c8383a09a5da37ae769eba59a",
                          "typeString": "literal_string \"should have 0 offers since starting point is out of the book\""
                        }
                      ],
                      "id": 78910,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "3236:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 78915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3236:116:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78916,
                  "nodeType": "ExpressionStatement",
                  "src": "3236:116:114"
                }
              ]
            },
            "functionSelector": "36ba0cfc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_returns_zero_on_nonexisting_offer",
            "nameLocation": "2984:38:114",
            "parameters": {
              "id": 78875,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3022:2:114"
            },
            "returnParameters": {
              "id": 78876,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3032:0:114"
            },
            "scope": 79293,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 78991,
            "nodeType": "FunctionDefinition",
            "src": "3361:451:114",
            "body": {
              "id": 78990,
              "nodeType": "Block",
              "src": "3399:413:114",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78925,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "3424:4:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 78924,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "3422:1:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 78926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3422:7:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 78928,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "3433:5:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 78927,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "3431:1:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 78929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3431:8:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 78930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3441:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "3530",
                        "id": 78931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3444:2:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50_by_1",
                          "typeString": "int_const 50"
                        },
                        "value": "50"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_50_by_1",
                          "typeString": "int_const 50"
                        }
                      ],
                      "expression": {
                        "id": 78921,
                        "name": "reader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78524,
                        "src": "3405:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MgvReader_$30351",
                          "typeString": "contract MgvReader"
                        }
                      },
                      "id": 78923,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "offerList",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30284,
                      "src": "3405:16:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_struct$_OfferStruct_$33325_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_OfferDetailStruct_$33334_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (address,address,uint256,uint256) view external returns (uint256,uint256[] memory,struct OfferStruct memory[] memory,struct OfferDetailStruct memory[] memory)"
                      }
                    },
                    "id": 78932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3405:42:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_struct$_OfferStruct_$33325_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_OfferDetailStruct_$33334_memory_ptr_$dyn_memory_ptr_$",
                      "typeString": "tuple(uint256,uint256[] memory,struct OfferStruct memory[] memory,struct OfferDetailStruct memory[] memory)"
                    }
                  },
                  "id": 78933,
                  "nodeType": "ExpressionStatement",
                  "src": "3405:42:114"
                },
                {
                  "assignments": [78935],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78935,
                      "mutability": "mutable",
                      "name": "g",
                      "nameLocation": "3480:1:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 78990,
                      "src": "3475:6:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 78934,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3475:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78938,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 78936,
                      "name": "gasleft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -7,
                      "src": "3484:7:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 78937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3484:9:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3475:18:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78943,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "3518:4:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 78942,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "3516:1:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 78944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3516:7:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 78946,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "3527:5:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 78945,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "3525:1:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 78947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3525:8:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 78948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3535:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "3530",
                        "id": 78949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3538:2:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50_by_1",
                          "typeString": "int_const 50"
                        },
                        "value": "50"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_50_by_1",
                          "typeString": "int_const 50"
                        }
                      ],
                      "expression": {
                        "id": 78939,
                        "name": "reader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78524,
                        "src": "3499:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MgvReader_$30351",
                          "typeString": "contract MgvReader"
                        }
                      },
                      "id": 78941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "offerList",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30284,
                      "src": "3499:16:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_struct$_OfferStruct_$33325_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_OfferDetailStruct_$33334_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (address,address,uint256,uint256) view external returns (uint256,uint256[] memory,struct OfferStruct memory[] memory,struct OfferDetailStruct memory[] memory)"
                      }
                    },
                    "id": 78950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3499:42:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_struct$_OfferStruct_$33325_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_OfferDetailStruct_$33334_memory_ptr_$dyn_memory_ptr_$",
                      "typeString": "tuple(uint256,uint256[] memory,struct OfferStruct memory[] memory,struct OfferDetailStruct memory[] memory)"
                    }
                  },
                  "id": 78951,
                  "nodeType": "ExpressionStatement",
                  "src": "3499:42:114"
                },
                {
                  "assignments": [78953],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78953,
                      "mutability": "mutable",
                      "name": "used1",
                      "nameLocation": "3552:5:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 78990,
                      "src": "3547:10:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 78952,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3547:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78958,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 78957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 78954,
                      "name": "g",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78935,
                      "src": "3560:1:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 78955,
                        "name": "gasleft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -7,
                        "src": "3564:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 78956,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3564:9:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3560:13:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3547:26:114"
                },
                {
                  "expression": {
                    "id": 78962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 78959,
                      "name": "g",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78935,
                      "src": "3580:1:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 78960,
                        "name": "gasleft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -7,
                        "src": "3584:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 78961,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3584:9:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3580:13:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 78963,
                  "nodeType": "ExpressionStatement",
                  "src": "3580:13:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78968,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "3618:4:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 78967,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "3616:1:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 78969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3616:7:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 78971,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "3627:5:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 78970,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "3625:1:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 78972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3625:8:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 78973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3635:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "3530303030303030",
                        "id": 78974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3638:8:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000_by_1",
                          "typeString": "int_const 50000000"
                        },
                        "value": "50000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_50000000_by_1",
                          "typeString": "int_const 50000000"
                        }
                      ],
                      "expression": {
                        "id": 78964,
                        "name": "reader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78524,
                        "src": "3599:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MgvReader_$30351",
                          "typeString": "contract MgvReader"
                        }
                      },
                      "id": 78966,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "offerList",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30284,
                      "src": "3599:16:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_struct$_OfferStruct_$33325_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_OfferDetailStruct_$33334_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (address,address,uint256,uint256) view external returns (uint256,uint256[] memory,struct OfferStruct memory[] memory,struct OfferDetailStruct memory[] memory)"
                      }
                    },
                    "id": 78975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3599:48:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_struct$_OfferStruct_$33325_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_OfferDetailStruct_$33334_memory_ptr_$dyn_memory_ptr_$",
                      "typeString": "tuple(uint256,uint256[] memory,struct OfferStruct memory[] memory,struct OfferDetailStruct memory[] memory)"
                    }
                  },
                  "id": 78976,
                  "nodeType": "ExpressionStatement",
                  "src": "3599:48:114"
                },
                {
                  "assignments": [78978],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78978,
                      "mutability": "mutable",
                      "name": "used2",
                      "nameLocation": "3658:5:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 78990,
                      "src": "3653:10:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 78977,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3653:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78983,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 78982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 78979,
                      "name": "g",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78935,
                      "src": "3666:1:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 78980,
                        "name": "gasleft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -7,
                        "src": "3670:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 78981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3670:9:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3666:13:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3653:26:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78985,
                        "name": "used1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78953,
                        "src": "3702:5:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 78986,
                        "name": "used2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78978,
                        "src": "3715:5:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "676173207370656e742073686f756c64206e6f7420646570656e64206f6e206d61784f6666657273207768656e206f6666657273206c656e677468203c206d61784f6666657273",
                        "id": 78987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3728:73:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e2a88f76817b0b7268b63f89b3fcc707a1b3b5844b9c52901460e4d4bf0deaf2",
                          "typeString": "literal_string \"gas spent should not depend on maxOffers when offers length < maxOffers\""
                        },
                        "value": "gas spent should not depend on maxOffers when offers length < maxOffers"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e2a88f76817b0b7268b63f89b3fcc707a1b3b5844b9c52901460e4d4bf0deaf2",
                          "typeString": "literal_string \"gas spent should not depend on maxOffers when offers length < maxOffers\""
                        }
                      ],
                      "id": 78984,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "3686:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 78988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3686:121:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78989,
                  "nodeType": "ExpressionStatement",
                  "src": "3686:121:114"
                }
              ]
            },
            "functionSelector": "628f4e2f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_no_wasted_time",
            "nameLocation": "3370:19:114",
            "parameters": {
              "id": 78919,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3389:2:114"
            },
            "returnParameters": {
              "id": 78920,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3399:0:114"
            },
            "scope": 79293,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 79057,
            "nodeType": "FunctionDefinition",
            "src": "3816:461:114",
            "body": {
              "id": 79056,
              "nodeType": "Block",
              "src": "3859:418:114",
              "statements": [
                {
                  "assignments": [78995],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78995,
                      "mutability": "mutable",
                      "name": "startId",
                      "nameLocation": "3870:7:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 79056,
                      "src": "3865:12:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 78994,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3865:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78996,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3865:12:114"
                },
                {
                  "assignments": [78998],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78998,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "3888:6:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 79056,
                      "src": "3883:11:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 78997,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3883:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78999,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3883:11:114"
                },
                {
                  "expression": {
                    "id": 79014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 79000,
                          "name": "startId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78995,
                          "src": "3901:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 79001,
                          "name": "length",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78998,
                          "src": "3910:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 79002,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "3900:17:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 79006,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69382,
                              "src": "3948:4:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 79005,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "3946:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 79007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3946:7:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 79009,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69385,
                              "src": "3957:5:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 79008,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "3955:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 79010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3955:8:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 79011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3965:1:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "313030303030",
                          "id": 79012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3968:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000_by_1",
                            "typeString": "int_const 100000"
                          },
                          "value": "100000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_100000_by_1",
                            "typeString": "int_const 100000"
                          }
                        ],
                        "expression": {
                          "id": 79003,
                          "name": "reader",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78524,
                          "src": "3920:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MgvReader_$30351",
                            "typeString": "contract MgvReader"
                          }
                        },
                        "id": 79004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerListEndPoints",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30020,
                        "src": "3920:25:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,address,uint256,uint256) view external returns (uint256,uint256)"
                        }
                      },
                      "id": 79013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3920:55:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "3900:75:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79015,
                  "nodeType": "ExpressionStatement",
                  "src": "3900:75:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79017,
                        "name": "startId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78995,
                        "src": "3990:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 79018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3999:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "302e302077726f6e672073746172744964",
                        "id": 79019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4002:19:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3ea79cc91ed27500ef69b6e8091ca52fbb18f06b134c01ff4330b755431ef9ce",
                          "typeString": "literal_string \"0.0 wrong startId\""
                        },
                        "value": "0.0 wrong startId"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3ea79cc91ed27500ef69b6e8091ca52fbb18f06b134c01ff4330b755431ef9ce",
                          "typeString": "literal_string \"0.0 wrong startId\""
                        }
                      ],
                      "id": 79016,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "3981:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 79020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3981:41:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79021,
                  "nodeType": "ExpressionStatement",
                  "src": "3981:41:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79023,
                        "name": "length",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78998,
                        "src": "4037:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 79024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4045:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "302e302077726f6e67206c656e677468",
                        "id": 79025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4048:18:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8633ff78f4213b4a5ab1ca00fb9d9288b19baedbecd5155d5df07c14c860c880",
                          "typeString": "literal_string \"0.0 wrong length\""
                        },
                        "value": "0.0 wrong length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8633ff78f4213b4a5ab1ca00fb9d9288b19baedbecd5155d5df07c14c860c880",
                          "typeString": "literal_string \"0.0 wrong length\""
                        }
                      ],
                      "id": 79022,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "4028:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 79026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4028:39:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79027,
                  "nodeType": "ExpressionStatement",
                  "src": "4028:39:114"
                },
                {
                  "expression": {
                    "id": 79042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 79028,
                          "name": "startId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78995,
                          "src": "4075:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 79029,
                          "name": "length",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78998,
                          "src": "4084:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 79030,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "4074:17:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 79034,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69382,
                              "src": "4129:4:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 79033,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "4127:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 79035,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4127:7:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 79037,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69385,
                              "src": "4144:5:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 79036,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "4142:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 79038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4142:8:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "3332",
                          "id": 79039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4158:2:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32_by_1",
                            "typeString": "int_const 32"
                          },
                          "value": "32"
                        },
                        {
                          "hexValue": "313030303030",
                          "id": 79040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4168:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000_by_1",
                            "typeString": "int_const 100000"
                          },
                          "value": "100000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_32_by_1",
                            "typeString": "int_const 32"
                          },
                          {
                            "typeIdentifier": "t_rational_100000_by_1",
                            "typeString": "int_const 100000"
                          }
                        ],
                        "expression": {
                          "id": 79031,
                          "name": "reader",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78524,
                          "src": "4094:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MgvReader_$30351",
                            "typeString": "contract MgvReader"
                          }
                        },
                        "id": 79032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerListEndPoints",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30020,
                        "src": "4094:25:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,address,uint256,uint256) view external returns (uint256,uint256)"
                        }
                      },
                      "id": 79041,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4094:86:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "4074:106:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79043,
                  "nodeType": "ExpressionStatement",
                  "src": "4074:106:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79045,
                        "name": "startId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78995,
                        "src": "4195:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 79046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4204:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "302e312077726f6e672073746172744964",
                        "id": 79047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4207:19:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_508eb3bd05b19f4767728be09208fc8d96b43fb3229c6823f4ba7159ef96e214",
                          "typeString": "literal_string \"0.1 wrong startId\""
                        },
                        "value": "0.1 wrong startId"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_508eb3bd05b19f4767728be09208fc8d96b43fb3229c6823f4ba7159ef96e214",
                          "typeString": "literal_string \"0.1 wrong startId\""
                        }
                      ],
                      "id": 79044,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "4186:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 79048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4186:41:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79049,
                  "nodeType": "ExpressionStatement",
                  "src": "4186:41:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79051,
                        "name": "length",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78998,
                        "src": "4242:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 79052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4250:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "302e312077726f6e67206c656e677468",
                        "id": 79053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4253:18:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_73877069d650675f8862418c19da2433b8e2884b0054a742565afefff67f1b2f",
                          "typeString": "literal_string \"0.1 wrong length\""
                        },
                        "value": "0.1 wrong length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_73877069d650675f8862418c19da2433b8e2884b0054a742565afefff67f1b2f",
                          "typeString": "literal_string \"0.1 wrong length\""
                        }
                      ],
                      "id": 79050,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "4233:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 79054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4233:39:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79055,
                  "nodeType": "ExpressionStatement",
                  "src": "4233:39:114"
                }
              ]
            },
            "functionSelector": "3ba5eaa9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_correct_endpoints_0",
            "nameLocation": "3825:24:114",
            "parameters": {
              "id": 78992,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3849:2:114"
            },
            "returnParameters": {
              "id": 78993,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3859:0:114"
            },
            "scope": 79293,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 79192,
            "nodeType": "FunctionDefinition",
            "src": "4281:830:114",
            "body": {
              "id": 79191,
              "nodeType": "Block",
              "src": "4324:787:114",
              "statements": [
                {
                  "assignments": [79061],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79061,
                      "mutability": "mutable",
                      "name": "startId",
                      "nameLocation": "4335:7:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 79191,
                      "src": "4330:12:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 79060,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4330:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 79062,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4330:12:114"
                },
                {
                  "assignments": [79064],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79064,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "4353:6:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 79191,
                      "src": "4348:11:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 79063,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4348:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 79065,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4348:11:114"
                },
                {
                  "assignments": [79067],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79067,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "4370:3:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 79191,
                      "src": "4365:8:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 79066,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4365:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 79068,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4365:8:114"
                },
                {
                  "expression": {
                    "id": 79077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 79069,
                      "name": "ofr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79067,
                      "src": "4379:3:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 79072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4398:7:114",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "31",
                          "id": 79073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4407:7:114",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "35305f303030",
                          "id": 79074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4416:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_50000_by_1",
                            "typeString": "int_const 50000"
                          },
                          "value": "50_000"
                        },
                        {
                          "hexValue": "30",
                          "id": 79075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4424:1:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_50000_by_1",
                            "typeString": "int_const 50000"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "id": 79070,
                          "name": "mkr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78521,
                          "src": "4385:3:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestMaker_$73404",
                            "typeString": "contract TestMaker"
                          }
                        },
                        "id": 79071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "newOffer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 73059,
                        "src": "4385:12:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                        }
                      },
                      "id": 79076,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4385:41:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4379:47:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 79078,
                  "nodeType": "ExpressionStatement",
                  "src": "4379:47:114"
                },
                {
                  "expression": {
                    "id": 79093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 79079,
                          "name": "startId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79061,
                          "src": "4434:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 79080,
                          "name": "length",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79064,
                          "src": "4443:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 79081,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "4433:17:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 79085,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69382,
                              "src": "4481:4:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 79084,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "4479:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 79086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4479:7:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 79088,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69385,
                              "src": "4490:5:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 79087,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "4488:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 79089,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4488:8:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 79090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4498:1:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "30",
                          "id": 79091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4501:1:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "id": 79082,
                          "name": "reader",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78524,
                          "src": "4453:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MgvReader_$30351",
                            "typeString": "contract MgvReader"
                          }
                        },
                        "id": 79083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerListEndPoints",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30020,
                        "src": "4453:25:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,address,uint256,uint256) view external returns (uint256,uint256)"
                        }
                      },
                      "id": 79092,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4453:50:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "4433:70:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79094,
                  "nodeType": "ExpressionStatement",
                  "src": "4433:70:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79096,
                        "name": "startId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79061,
                        "src": "4518:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 79097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4527:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "312e302077726f6e672073746172744964",
                        "id": 79098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4530:19:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_31219da9900808de97681095ebf809b88392939aa4e97d664f23baee9bd14551",
                          "typeString": "literal_string \"1.0 wrong startId\""
                        },
                        "value": "1.0 wrong startId"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_31219da9900808de97681095ebf809b88392939aa4e97d664f23baee9bd14551",
                          "typeString": "literal_string \"1.0 wrong startId\""
                        }
                      ],
                      "id": 79095,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "4509:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 79099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4509:41:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79100,
                  "nodeType": "ExpressionStatement",
                  "src": "4509:41:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79102,
                        "name": "length",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79064,
                        "src": "4565:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 79103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4573:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "312e302077726f6e67206c656e677468",
                        "id": 79104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4576:18:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cb79740dc36ef1a92e223d79b072232a9e4ba60895e1dba91ad7c529c5edabef",
                          "typeString": "literal_string \"1.0 wrong length\""
                        },
                        "value": "1.0 wrong length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cb79740dc36ef1a92e223d79b072232a9e4ba60895e1dba91ad7c529c5edabef",
                          "typeString": "literal_string \"1.0 wrong length\""
                        }
                      ],
                      "id": 79101,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "4556:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 79105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4556:39:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79106,
                  "nodeType": "ExpressionStatement",
                  "src": "4556:39:114"
                },
                {
                  "expression": {
                    "id": 79121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 79107,
                          "name": "startId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79061,
                          "src": "4603:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 79108,
                          "name": "length",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79064,
                          "src": "4612:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 79109,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "4602:17:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 79113,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69382,
                              "src": "4650:4:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 79112,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "4648:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 79114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4648:7:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 79116,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69385,
                              "src": "4659:5:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 79115,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "4657:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 79117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4657:8:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 79118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4667:1:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "31",
                          "id": 79119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4670:1:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 79110,
                          "name": "reader",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78524,
                          "src": "4622:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MgvReader_$30351",
                            "typeString": "contract MgvReader"
                          }
                        },
                        "id": 79111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerListEndPoints",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30020,
                        "src": "4622:25:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,address,uint256,uint256) view external returns (uint256,uint256)"
                        }
                      },
                      "id": 79120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4622:50:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "4602:70:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79122,
                  "nodeType": "ExpressionStatement",
                  "src": "4602:70:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79124,
                        "name": "startId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79061,
                        "src": "4687:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 79125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4696:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "312e312077726f6e672073746172744964",
                        "id": 79126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4699:19:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a23053817a6e45081f245a9d2816fc337b6234b19ebfc0020277335c286dcf7e",
                          "typeString": "literal_string \"1.1 wrong startId\""
                        },
                        "value": "1.1 wrong startId"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a23053817a6e45081f245a9d2816fc337b6234b19ebfc0020277335c286dcf7e",
                          "typeString": "literal_string \"1.1 wrong startId\""
                        }
                      ],
                      "id": 79123,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "4678:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 79127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4678:41:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79128,
                  "nodeType": "ExpressionStatement",
                  "src": "4678:41:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79130,
                        "name": "length",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79064,
                        "src": "4734:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 79131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4742:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "312e312077726f6e67206c656e677468",
                        "id": 79132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4745:18:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_46b90d2926f978e2a4494643611381c1d6d91d081d31d94e903ca2e4818a68d4",
                          "typeString": "literal_string \"1.1 wrong length\""
                        },
                        "value": "1.1 wrong length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_46b90d2926f978e2a4494643611381c1d6d91d081d31d94e903ca2e4818a68d4",
                          "typeString": "literal_string \"1.1 wrong length\""
                        }
                      ],
                      "id": 79129,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "4725:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 79133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4725:39:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79134,
                  "nodeType": "ExpressionStatement",
                  "src": "4725:39:114"
                },
                {
                  "expression": {
                    "id": 79149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 79135,
                          "name": "startId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79061,
                          "src": "4772:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 79136,
                          "name": "length",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79064,
                          "src": "4781:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 79137,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "4771:17:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 79141,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69382,
                              "src": "4819:4:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 79140,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "4817:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 79142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4817:7:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 79144,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69385,
                              "src": "4828:5:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 79143,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "4826:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 79145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4826:8:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 79146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4836:1:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "31333231",
                          "id": 79147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4839:4:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1321_by_1",
                            "typeString": "int_const 1321"
                          },
                          "value": "1321"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_rational_1321_by_1",
                            "typeString": "int_const 1321"
                          }
                        ],
                        "expression": {
                          "id": 79138,
                          "name": "reader",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78524,
                          "src": "4791:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MgvReader_$30351",
                            "typeString": "contract MgvReader"
                          }
                        },
                        "id": 79139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerListEndPoints",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30020,
                        "src": "4791:25:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,address,uint256,uint256) view external returns (uint256,uint256)"
                        }
                      },
                      "id": 79148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4791:53:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "4771:73:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79150,
                  "nodeType": "ExpressionStatement",
                  "src": "4771:73:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79152,
                        "name": "startId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79061,
                        "src": "4859:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 79153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4868:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "312e322077726f6e672073746172744964",
                        "id": 79154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4871:19:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e628a740420f88d436639d7b4e35f78c359179a31e91398584bfebf8c9517a5a",
                          "typeString": "literal_string \"1.2 wrong startId\""
                        },
                        "value": "1.2 wrong startId"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e628a740420f88d436639d7b4e35f78c359179a31e91398584bfebf8c9517a5a",
                          "typeString": "literal_string \"1.2 wrong startId\""
                        }
                      ],
                      "id": 79151,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "4850:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 79155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4850:41:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79156,
                  "nodeType": "ExpressionStatement",
                  "src": "4850:41:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79158,
                        "name": "length",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79064,
                        "src": "4906:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 79159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4914:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "312e322077726f6e67206c656e677468",
                        "id": 79160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4917:18:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9d72f3b05fba1413ea867d9dba116dd19eb070b60390690e1e9750c65b6fd322",
                          "typeString": "literal_string \"1.2 wrong length\""
                        },
                        "value": "1.2 wrong length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9d72f3b05fba1413ea867d9dba116dd19eb070b60390690e1e9750c65b6fd322",
                          "typeString": "literal_string \"1.2 wrong length\""
                        }
                      ],
                      "id": 79157,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "4897:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 79161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4897:39:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79162,
                  "nodeType": "ExpressionStatement",
                  "src": "4897:39:114"
                },
                {
                  "expression": {
                    "id": 79177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 79163,
                          "name": "startId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79061,
                          "src": "4944:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 79164,
                          "name": "length",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79064,
                          "src": "4953:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 79165,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "4943:17:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 79169,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69382,
                              "src": "4991:4:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 79168,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "4989:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 79170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4989:7:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 79172,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69385,
                              "src": "5000:5:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 79171,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "4998:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 79173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4998:8:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "32",
                          "id": 79174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5008:1:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        {
                          "hexValue": "3132",
                          "id": 79175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5011:2:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_12_by_1",
                            "typeString": "int_const 12"
                          },
                          "value": "12"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          {
                            "typeIdentifier": "t_rational_12_by_1",
                            "typeString": "int_const 12"
                          }
                        ],
                        "expression": {
                          "id": 79166,
                          "name": "reader",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78524,
                          "src": "4963:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MgvReader_$30351",
                            "typeString": "contract MgvReader"
                          }
                        },
                        "id": 79167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerListEndPoints",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30020,
                        "src": "4963:25:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,address,uint256,uint256) view external returns (uint256,uint256)"
                        }
                      },
                      "id": 79176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4963:51:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "4943:71:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79178,
                  "nodeType": "ExpressionStatement",
                  "src": "4943:71:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79180,
                        "name": "startId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79061,
                        "src": "5029:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 79181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5038:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "312e302077726f6e672073746172744964",
                        "id": 79182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5041:19:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_31219da9900808de97681095ebf809b88392939aa4e97d664f23baee9bd14551",
                          "typeString": "literal_string \"1.0 wrong startId\""
                        },
                        "value": "1.0 wrong startId"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_31219da9900808de97681095ebf809b88392939aa4e97d664f23baee9bd14551",
                          "typeString": "literal_string \"1.0 wrong startId\""
                        }
                      ],
                      "id": 79179,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "5020:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 79183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5020:41:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79184,
                  "nodeType": "ExpressionStatement",
                  "src": "5020:41:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79186,
                        "name": "length",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79064,
                        "src": "5076:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 79187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5084:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "312e302077726f6e67206c656e677468",
                        "id": 79188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5087:18:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cb79740dc36ef1a92e223d79b072232a9e4ba60895e1dba91ad7c529c5edabef",
                          "typeString": "literal_string \"1.0 wrong length\""
                        },
                        "value": "1.0 wrong length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cb79740dc36ef1a92e223d79b072232a9e4ba60895e1dba91ad7c529c5edabef",
                          "typeString": "literal_string \"1.0 wrong length\""
                        }
                      ],
                      "id": 79185,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "5067:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 79189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5067:39:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79190,
                  "nodeType": "ExpressionStatement",
                  "src": "5067:39:114"
                }
              ]
            },
            "functionSelector": "18653e38",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_correct_endpoints_1",
            "nameLocation": "4290:24:114",
            "parameters": {
              "id": 79058,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4314:2:114"
            },
            "returnParameters": {
              "id": 79059,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4324:0:114"
            },
            "scope": 79293,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 79247,
            "nodeType": "FunctionDefinition",
            "src": "5115:300:114",
            "body": {
              "id": 79246,
              "nodeType": "Block",
              "src": "5149:266:114",
              "statements": [
                {
                  "assignments": [79196],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79196,
                      "mutability": "mutable",
                      "name": "prov",
                      "nameLocation": "5160:4:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 79246,
                      "src": "5155:9:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 79195,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5155:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 79208,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 79200,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "5189:4:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 79199,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "5187:1:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 79201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5187:7:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 79203,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "5198:5:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 79202,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "5196:1:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 79204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5196:8:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 79205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5206:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 79206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5209:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 79197,
                        "name": "reader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78524,
                        "src": "5167:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MgvReader_$30351",
                          "typeString": "contract MgvReader"
                        }
                      },
                      "id": 79198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getProvision",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30350,
                      "src": "5167:19:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 79207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5167:44:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5155:56:114"
                },
                {
                  "assignments": [79210],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79210,
                      "mutability": "mutable",
                      "name": "bal1",
                      "nameLocation": "5222:4:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 79246,
                      "src": "5217:9:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 79209,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5217:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 79218,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 79215,
                            "name": "mkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78521,
                            "src": "5251:3:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$73404",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$73404",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 79214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5243:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 79213,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5243:7:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 79216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5243:12:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 79211,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "5229:3:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 79212,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24218,
                      "src": "5229:13:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 79217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5229:27:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5217:39:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 79222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5275:7:114",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 79223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5284:7:114",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "30",
                        "id": 79224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5293:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 79225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5296:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 79219,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78521,
                        "src": "5262:3:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$73404",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 79221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73059,
                      "src": "5262:12:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 79226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5262:36:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 79227,
                  "nodeType": "ExpressionStatement",
                  "src": "5262:36:114"
                },
                {
                  "assignments": [79229],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79229,
                      "mutability": "mutable",
                      "name": "bal2",
                      "nameLocation": "5309:4:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 79246,
                      "src": "5304:9:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 79228,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5304:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 79237,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 79234,
                            "name": "mkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78521,
                            "src": "5338:3:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$73404",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$73404",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 79233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5330:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 79232,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5330:7:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 79235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5330:12:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 79230,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "5316:3:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 79231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24218,
                      "src": "5316:13:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 79236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5316:27:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5304:39:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 79241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 79239,
                          "name": "bal1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79210,
                          "src": "5358:4:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 79240,
                          "name": "bal2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79229,
                          "src": "5365:4:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5358:11:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 79242,
                        "name": "prov",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79196,
                        "src": "5371:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "70726f766973696f6e20636f6d7075746174696f6e2069732077726f6e67",
                        "id": 79243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5377:32:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2d4c184ede3a4b32497adca3dffdd7f0f1c638f9dfaf70f758286a19c0e30598",
                          "typeString": "literal_string \"provision computation is wrong\""
                        },
                        "value": "provision computation is wrong"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2d4c184ede3a4b32497adca3dffdd7f0f1c638f9dfaf70f758286a19c0e30598",
                          "typeString": "literal_string \"provision computation is wrong\""
                        }
                      ],
                      "id": 79238,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "5349:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 79244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5349:61:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79245,
                  "nodeType": "ExpressionStatement",
                  "src": "5349:61:114"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "try_provision",
            "nameLocation": "5124:13:114",
            "parameters": {
              "id": 79193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5137:2:114"
            },
            "returnParameters": {
              "id": 79194,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5149:0:114"
            },
            "scope": 79293,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 79254,
            "nodeType": "FunctionDefinition",
            "src": "5419:61:114",
            "body": {
              "id": 79253,
              "nodeType": "Block",
              "src": "5454:26:114",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 79250,
                      "name": "try_provision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79247,
                      "src": "5460:13:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 79251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5460:15:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79252,
                  "nodeType": "ExpressionStatement",
                  "src": "5460:15:114"
                }
              ]
            },
            "functionSelector": "edca5da7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_provision_0",
            "nameLocation": "5428:16:114",
            "parameters": {
              "id": 79248,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5444:2:114"
            },
            "returnParameters": {
              "id": 79249,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5454:0:114"
            },
            "scope": 79293,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 79273,
            "nodeType": "FunctionDefinition",
            "src": "5484:108:114",
            "body": {
              "id": 79272,
              "nodeType": "Block",
              "src": "5519:73:114",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 79261,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "5542:4:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 79260,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "5540:1:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 79262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5540:7:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 79264,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "5551:5:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 79263,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "5549:1:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 79265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5549:8:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31375f303030",
                        "id": 79266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5559:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_17000_by_1",
                          "typeString": "int_const 17000"
                        },
                        "value": "17_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_17000_by_1",
                          "typeString": "int_const 17000"
                        }
                      ],
                      "expression": {
                        "id": 79257,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "5525:3:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 79259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setGasbase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23997,
                      "src": "5525:14:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 79267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5525:41:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79268,
                  "nodeType": "ExpressionStatement",
                  "src": "5525:41:114"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 79269,
                      "name": "try_provision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79247,
                      "src": "5572:13:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 79270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5572:15:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79271,
                  "nodeType": "ExpressionStatement",
                  "src": "5572:15:114"
                }
              ]
            },
            "functionSelector": "f4655536",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_provision_1",
            "nameLocation": "5493:16:114",
            "parameters": {
              "id": 79255,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5509:2:114"
            },
            "returnParameters": {
              "id": 79256,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5519:0:114"
            },
            "scope": 79293,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 79292,
            "nodeType": "FunctionDefinition",
            "src": "5596:122:114",
            "body": {
              "id": 79291,
              "nodeType": "Block",
              "src": "5636:82:114",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79279,
                        "name": "oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78526,
                        "src": "5657:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 79276,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "5642:3:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 79278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setMonitor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24141,
                      "src": "5642:14:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 79280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5642:22:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79281,
                  "nodeType": "ExpressionStatement",
                  "src": "5642:22:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 79285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5687:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 79282,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "5670:3:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 79284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setUseOracle",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24162,
                      "src": "5670:16:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 79286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5670:22:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79287,
                  "nodeType": "ExpressionStatement",
                  "src": "5670:22:114"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 79288,
                      "name": "try_provision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79247,
                      "src": "5698:13:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 79289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5698:15:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79290,
                  "nodeType": "ExpressionStatement",
                  "src": "5698:15:114"
                }
              ]
            },
            "functionSelector": "241799ed",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_provision_oracle",
            "nameLocation": "5605:21:114",
            "parameters": {
              "id": 79274,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5626:2:114"
            },
            "returnParameters": {
              "id": 79275,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5636:0:114"
            },
            "scope": 79293,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 78517,
              "name": "MangroveTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 70515,
              "src": "252:12:114"
            },
            "id": 78518,
            "nodeType": "InheritanceSpecifier",
            "src": "252:12:114"
          }
        ],
        "canonicalName": "MgvReaderTest",
        "contractDependencies": [
          23581, 23707, 30351, 72689, 73404, 73996, 76251
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          79293, 70515, 24715, 70890, 72490, 3455, 2022, 1786
        ],
        "name": "MgvReaderTest",
        "nameLocation": "235:13:114",
        "scope": 79294,
        "usedErrors": []
      }
    ],
    "license": "AGPL-3.0"
  },
  "id": 114
}
