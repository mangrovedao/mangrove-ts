{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Credit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Debit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "mgv",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "base",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "quote",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerWants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGives",
          "type": "uint256"
        }
      ],
      "name": "Execute",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Kill",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "NewMgv",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "base",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "quote",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "offerIds",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "wants",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "gives",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "makerAddr",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "gasreqs",
          "type": "uint256[]"
        }
      ],
      "name": "OBState",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerWants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGives",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "mgvData",
          "type": "bytes32"
        }
      ],
      "name": "OfferFail",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "OfferRetract",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerWants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGives",
          "type": "uint256"
        }
      ],
      "name": "OfferSuccess",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gives",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasprice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasreq",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "prev",
          "type": "uint256"
        }
      ],
      "name": "OfferWrite",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGot",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGave",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "penalty",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feePaid",
          "type": "uint256"
        }
      ],
      "name": "OrderComplete",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "OrderStart",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "posthookData",
          "type": "bytes32"
        }
      ],
      "name": "PosthookFail",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "SetActive",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetDensity",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "offer_gasbase",
          "type": "uint256"
        }
      ],
      "name": "SetGasbase",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetGasmax",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetGasprice",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "SetGovernance",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "SetMonitor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "SetNotify",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "SetUseOracle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "SetVault",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "outbound",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "inbound",
          "type": "address"
        }
      ],
      "name": "offers_head",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gives",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasreq",
          "type": "uint256"
        }
      ],
      "name": "offers_line",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "t",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "power",
          "type": "uint256"
        }
      ],
      "name": "cash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "t",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "cash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "echoSender",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256[]",
          "name": "ints",
          "type": "int256[]"
        }
      ],
      "name": "logary",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "uints",
          "type": "uint256[]"
        }
      ],
      "name": "logary",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            },
            {
              "internalType": "t",
              "name": "offer",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "wants",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gives",
              "type": "uint256"
            },
            {
              "internalType": "t",
              "name": "offerDetail",
              "type": "uint256"
            },
            {
              "internalType": "t",
              "name": "global",
              "type": "uint256"
            },
            {
              "internalType": "t",
              "name": "local",
              "type": "uint256"
            }
          ],
          "internalType": "struct MgvLib.SingleOrder",
          "name": "trade",
          "type": "tuple"
        }
      ],
      "name": "makerExecute",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            },
            {
              "internalType": "t",
              "name": "offer",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "wants",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gives",
              "type": "uint256"
            },
            {
              "internalType": "t",
              "name": "offerDetail",
              "type": "uint256"
            },
            {
              "internalType": "t",
              "name": "global",
              "type": "uint256"
            },
            {
              "internalType": "t",
              "name": "local",
              "type": "uint256"
            }
          ],
          "internalType": "struct MgvLib.SingleOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "makerData",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "mgvData",
              "type": "bytes32"
            }
          ],
          "internalType": "struct MgvLib.OrderResult",
          "name": "result",
          "type": "tuple"
        }
      ],
      "name": "makerPosthook",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "$out",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "$in",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "label",
          "type": "string"
        }
      ],
      "name": "setupMaker",
      "outputs": [
        {
          "internalType": "contract TestMaker",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "$out",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "$in",
          "type": "address"
        }
      ],
      "name": "setupMakerDeployer",
      "outputs": [
        {
          "internalType": "contract MakerDeployer",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "inverted",
          "type": "bool"
        }
      ],
      "name": "setupMangrove",
      "outputs": [
        {
          "internalType": "contract AbstractMangrove",
          "name": "_mgv",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "inverted",
          "type": "bool"
        }
      ],
      "name": "setupMangrove",
      "outputs": [
        {
          "internalType": "contract AbstractMangrove",
          "name": "_mgv",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setupMangrove",
      "outputs": [
        {
          "internalType": "contract AbstractMangrove",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "inbound_tkn",
          "type": "address"
        }
      ],
      "name": "setupMangrove",
      "outputs": [
        {
          "internalType": "contract AbstractMangrove",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "$out",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "$in",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "label",
          "type": "string"
        }
      ],
      "name": "setupTaker",
      "outputs": [
        {
          "internalType": "contract TestTaker",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_balance_after_fail_and_retract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_best_in_posthook_is_correct",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_check_offer_in_posthook",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_failed_offer_is_not_executed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_failed_offer_truncates",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_lastId_in_posthook_is_correct",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_makerRevert_is_logged",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_posthook_of_skipped_offer_wrong_gas_should_not_be_called",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_posthook_of_skipped_offer_wrong_price_should_not_be_called",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_renew_offer_after_complete_fill",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_renew_offer_after_failed_execution",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_renew_offer_after_partial_fill",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_retract_offer_after_fail_in_posthook",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_retract_offer_in_posthook",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_reverting_posthook_does_not_revert_offer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_update_offer_after_deprovision_in_posthook_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_update_offer_with_more_gasprice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6000805462ff00ff1916620100011781556001600a818155600b9182556080838152610160828152692130b9b2902a37b5b2b760b11b61018090815261010091825260046101a0818152632428412960e01b6101c05261012052601261014081905260a08490526102409687526a28bab7ba32902a37b5b2b760a91b610260526101e09687526102c0604052610280918252632428422960e01b6102a052610200919091526102205260c09490945260e0949094526010805460ff19168155909390929091601191620000d591839190620002f2565b506020828101518051620000f09260018501920190620002f2565b50604091820151600291909101805460ff191660ff9092169190911790558201518051805160048401916200012b91839160200190620002f2565b506020828101518051620001469260018501920190620002f2565b506040918201516002909101805460ff90921660ff199092169190911790556060929092015160079091015562030d406019556032601b55601d805461ffff1916905580518082019091526003808252624e4f4b60e81b6020909201918252620001b391601e91620002f2565b50624e4f4b60e81b601f55624e4f4b60e81b602055348015620001d557600080fd5b50604080516318caf8e360e31b8152326004820152602481019190915260096044820152683a3c1737b934b3b4b760b91b6064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c71890608401600060405180830381600087803b1580156200024557600080fd5b505af11580156200025a573d6000803e3d6000fd5b5050604080516318caf8e360e31b815230600482015260248101829052600b60448201526a2a32b9ba10393ab73732b960a91b60648201529051737109709ecfa91a80626ff3989d68f67f5b1dd12d935063c657c7189250608480830192600092919082900301818387803b158015620002d357600080fd5b505af1158015620002e8573d6000803e3d6000fd5b50505050620003d4565b828054620003009062000398565b90600052602060002090601f0160209004810192826200032457600085556200036f565b82601f106200033f57805160ff19168380011785556200036f565b828001600101855582156200036f579182015b828111156200036f57825182559160200191906001019062000352565b506200037d92915062000381565b5090565b5b808211156200037d576000815560010162000382565b600181811c90821680620003ad57607f821691505b602082108103620003ce57634e487b7160e01b600052602260045260246000fd5b50919050565b6201988180620003e56000396000f3fe60806040523480156200001157600080fd5b5060043610620002495760003560e01c806353abc4a7116200013d578063bfdc358811620000bb578063e2c015ee1162000086578063e2c015ee146200045c578063e43260cd1462000466578063ea14b5c31462000470578063f8ccbf471462000487578063fa7626d4146200049b57600080fd5b8063bfdc3588146200041a578063d48b10ea1462000431578063d56a22f0146200043b578063df894467146200045257600080fd5b80638c00483211620001085780638c00483214620003bd5780639a5c458d14620003c7578063b84e3eda14620003d1578063ba414fa614620003e8578063bbab0fac146200040357600080fd5b806353abc4a7146200036c5780636c49c32c14620003765780636cc12a24146200039c578063722abdb314620003b357600080fd5b80631f859aa711620001cb5780633d3d130d11620001965780633d3d130d146200032057806350198541146200033757806351f55cb21462000341578063521606d2146200034b57806352166b9d146200036257600080fd5b80631f859aa714620002de57806332325d8214620002e85780633336a63f14620002f25780633a768463146200030957600080fd5b80630a9254e411620002185780630a9254e414620002a25780630b3d8c4214620002ac578063167d0ea014620002c35780631687e8d514620002cd5780631e91f8cb14620002d757600080fd5b806301b5070b146200024e578063031047df146200025a57806305e08bdf14620002645780630645f2be146200026e575b600080fd5b62000258620004a9565b005b62000258620007ef565b6200025862000aea565b620002856200027f366004620071dc565b62000cca565b6040516001600160a01b0390911681526020015b60405180910390f35b6200025862000df4565b62000285620002bd36600462007212565b6200100d565b6200025862001030565b6200025862001446565b3362000285565b6200025862001762565b620002586200191b565b6200028562000303366004620072d9565b62001ab6565b620002856000805160206201953683398151915281565b6200025862000331366004620073a4565b62001c06565b6200025862001ecd565b62000258620022e7565b620002586200035c36600462007412565b6200254c565b6200025862002688565b6200025862002aea565b6200038d62000387366004620074ac565b62002e18565b60405190815260200162000299565b6200038d620003ad366004620074cc565b62002efc565b6200025862002f2b565b6200028562002f5b565b6200025862002f6e565b62000258620003e236600462007412565b6200310e565b620003f26200323e565b604051901515815260200162000299565b620002856200041436600462007504565b6200336f565b620002856200042b366004620072d9565b620033f2565b620002586200341b565b6200038d6200044c36600462007542565b620038c5565b6200025862003960565b6200025862003d95565b6200025862003f87565b620002856200048136600462007504565b62004341565b600054620003f29062010000900460ff1681565b600054620003f29060ff1681565b602180546001600160401b03191662004351179055600d54600e546001600160a01b03918216916349f6d2dc9116600f546001600160a01b0316601954601b546040516001600160e01b031960e087901b1681526200051c949392670de0b6b3a764000092839260009060040162007571565b6020604051808303816000875af11580156200053c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005629190620075af565b601a55601d805461ff001916610100179055600d5462000593906200058d906001600160a01b031690565b6200440b565b600f546001600160a01b0316600e546001600160a01b0391821691166001600160a01b03166000805160206201982c83398151915230670de0b6b3a764000080601b54601954601a546000604051620005f39796959493929190620075c9565b60405180910390a3601854601a54604051634bc5be0160e11b81526004810191909152671bc16d674ec8000060248201526000916001600160a01b03169063978b7c02906044016020604051808303816000875af11580156200065a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000680919062007604565b9050620006b881156040518060400160405280601181526020017014db9a5c19481cda1bdd5b190819985a5b607a1b81525062004448565b601d546040805180820190915260138152600080516020620195b48339815191526020820152620006f39162010000900460ff169062004448565b600d54600e54620007ec91620007a7916001600160a01b03918216916368c13d6b91165b600f54601a5460405160e085901b6001600160e01b03191681526001600160a01b0393841660048201529290911660248301526044820152606401602060405180830381865afa15801562000770573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007969190620075af565b6bffffffffffffffffffffffff1690565b670de0b6b3a76400006040518060400160405280601f81526020017f4f6666657220776173206e6f7420636f72726563746c7920757064617465640081525062004481565b50565b600d54600e54600f54601954601b5460405163127db4b760e21b81526001600160a01b03958616956349f6d2dc956200084b9590821694911692671bc16d674ec8000092670de0b6b3a764000092919060009060040162007571565b6020604051808303816000875af11580156200086b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008919190620075af565b50600d54600e54600f54601954601b5460405163127db4b760e21b81526001600160a01b03958616956349f6d2dc95620008e69590821694911692670de0b6b3a7640000928392919060009060040162007571565b6020604051808303816000875af115801562000906573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200092c9190620075af565b601a55600d54600e54600f54601954601b5460405163127db4b760e21b81526000956001600160a01b03908116956349f6d2dc956200098c95918316949216926706f05b59d3b2000092670de0b6b3a764000092918a9060040162007571565b6020604051808303816000875af1158015620009ac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009d29190620075af565b602180546001600160401b031916620044bd179055601854604051634bc5be0160e11b815260048101839052670de0b6b3a764000060248201529192506000916001600160a01b039091169063978b7c02906044016020604051808303816000875af115801562000a47573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a6d919062007604565b905062000aae601d60029054906101000a900460ff16604051806040016040528060138152602001600080516020620195b483398151915281525062004448565b62000ae6816040518060400160405280601481526020017314db9a5c19481cda1bdd5b19081cdd58d8d9595960621b81525062004448565b5050565b602180546001600160401b031916620045aa179055600d54600e546001600160a01b03918216916349f6d2dc9116600f546001600160a01b0316601954601b546040516001600160e01b031960e087901b16815262000b5d949392670de0b6b3a764000092839260009060040162007571565b6020604051808303816000875af115801562000b7d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ba39190620075af565b601a819055601854600d54600e54600f54601954604051600162d1d2cd60e01b031981526000966001600160a01b039687169663ff2e2d339662000c09969082169590821694911692670f43fc2c04ee000091670de0b6b3a76400009160040162007624565b6020604051808303816000875af115801562000c29573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c4f919062007604565b905062000c8781156040518060400160405280601181526020017014db9a5c19481cda1bdd5b190819985a5b607a1b81525062004448565b601d54604080518082019091526013815272141bdcdd121bdbdac81dd85cc818d85b1b1959606a1b6020820152620007ec9162010000900460ff16159062004448565b6000811562000d1c57306028621e848060405162000ce890620070ae565b62000cf69392919062007665565b604051809103906000f08015801562000d13573d6000803e3d6000fd5b50905062000d60565b306028621e848060405162000d3190620070bc565b62000d3f9392919062007665565b604051809103906000f08015801562000d5c573d6000803e3d6000fd5b5090505b6000805160206201953683398151915263c657c71882604080516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260086044820152674d616e67726f766560c01b6064820152608401600060405180830381600087803b15801562000dd657600080fd5b505af115801562000deb573d6000803e3d6000fd5b50505050919050565b62000dfe620045f9565b600e5462000e3f906001600160a01b0316600f546001600160a01b0316604051806040016040528060058152602001642a30b5b2b960d91b81525062001ab6565b601880546001600160a01b0319166001600160a01b03928316179055600e5462000e74911630674563918244f4000062004862565b600f5462000ea0906001600160a01b03166018546001600160a01b0316670de0b6b3a764000062004862565b601854600e5460405163a3cfe14d60e01b81526001600160a01b039283169263a3cfe14d9262000ee092911690670de0b6b3a76400009060040162007686565b600060405180830381600087803b15801562000efb57600080fd5b505af115801562000f10573d6000803e3d6000fd5b5050601854600f5460405163a3cfe14d60e01b81526001600160a01b03928316945063a3cfe14d935062000f559290911690670de0b6b3a76400009060040162007686565b600060405180830381600087803b15801562000f7057600080fd5b505af115801562000f85573d6000803e3d6000fd5b5050600d546001600160a01b031691506370a082319050306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562000fe2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010089190620075af565b601c55565b60006200101a8262000cca565b90506200102984848362004871565b9392505050565b600e546000906200105d906001600160a01b03165b600f546001600160a01b0316601954601b5462004b56565b600e5490915060009062001089906001600160a01b0316600f546001600160a01b031660195462004c3e565b602180546001600160401b03191662004351179055600d54600e54600f5460195460405163127db4b760e21b81529495506001600160a01b03938416946349f6d2dc94620010f1948116931691670de0b6b3a764000091829190600090819060040162007571565b6020604051808303816000875af115801562001111573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620011379190620075af565b601a55600d54620011ed906001600160a01b03166370a08231305b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562001197573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620011bd9190620075af565b82601c54620011cd9190620076b5565b604051806060016040528060238152602001620197306023913962004481565b600d5462001204906001600160a01b03166200440b565b600f546001600160a01b0316600e546001600160a01b0391821691166001600160a01b03166000805160206201982c83398151915230670de0b6b3a764000080601b54601954601a546000604051620012649796959493929190620075c9565b60405180910390a3601854601a54604051634bc5be0160e11b81526004810191909152671bc16d674ec8000060248201526000916001600160a01b03169063978b7c02906044016020604051808303816000875af1158015620012cb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620012f1919062007604565b90506200132b816040518060400160405280601481526020017314db9a5c19481cda1bdd5b19081cdd58d8d9595960621b81525062004448565b601d546040805180820190915260138152600080516020620195b48339815191526020820152620013669162010000900460ff169062004448565b600d5462001418906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015620013c2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620013e89190620075af565b84601c54620013f89190620076b5565b604051806060016040528060228152602001620194f46022913962004481565b600d54600e546200144191620007a7916001600160a01b03918216916368c13d6b911662000717565b505050565b600e5460009062001460906001600160a01b031662001045565b602180546001600160401b03191662004351179055600d54600e54600f54601954601b5460405163127db4b760e21b81529596506001600160a01b03948516956349f6d2dc95620014c8958116941692670de0b6b3a764000092839260009060040162007571565b6020604051808303816000875af1158015620014e8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200150e9190620075af565b601a55600d546200152e906001600160a01b03166370a082313062001152565b600d5462001545906001600160a01b03166200440b565b600f546001600160a01b0316600e546001600160a01b0391821691166001600160a01b03166000805160206201982c83398151915230670de0b6b3a764000080601b54601954601a546000604051620015a59796959493929190620075c9565b60405180910390a3601854601a54604051634bc5be0160e11b815260048101919091526706f05b59d3b2000060248201526000916001600160a01b03169063978b7c02906044016020604051808303816000875af11580156200160c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001632919062007604565b90506200166c816040518060400160405280601481526020017314db9a5c19481cda1bdd5b19081cdd58d8d9595960621b81525062004448565b601d546040805180820190915260138152600080516020620195b48339815191526020820152620016a79162010000900460ff169062004448565b600d5462001739906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562001703573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620017299190620075af565b83601c54620013f89190620076b5565b600d54600e5462000ae691620007a7916001600160a01b03918216916368c13d6b911662000717565b600d54600e54600f5460195460405163127db4b760e21b81526001600160a01b03948516946349f6d2dc94620017bd9490821693911691670de0b6b3a764000091671bc16d674ec80000916101f49060009060040162007571565b6020604051808303816000875af1158015620017dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620018039190620075af565b601a819055602180546001600160401b03191662004d06179055601854604051634bc5be0160e11b81526004810192909252671bc16d674ec8000060248301526000916001600160a01b039091169063978b7c02906044015b6020604051808303816000875af11580156200187c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620018a2919062007604565b9050620018e3601d60029054906101000a900460ff16604051806040016040528060138152602001600080516020620195b483398151915281525062004448565b620007ec816040518060400160405280601481526020017314db9a5c19481cda1bdd5b19081cdd58d8d9595960621b81525062004448565b600d54600e54600f54601954601b5460405163127db4b760e21b81526001600160a01b03958616956349f6d2dc956200196f9590821694911692670de0b6b3a7640000928392919060009060040162007571565b6020604051808303816000875af11580156200198f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620019b59190620075af565b50600d54600e54600f54601954601b5460405163127db4b760e21b81526001600160a01b03958616956349f6d2dc9562001a1295908216949116926706f05b59d3b2000092670de0b6b3a764000092919060009060040162007571565b6020604051808303816000875af115801562001a32573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a589190620075af565b601a819055602180546001600160401b03191662004e51179055601854604051634bc5be0160e11b81526004810192909252670de0b6b3a764000060248301526000916001600160a01b039091169063978b7c02906044016200185c565b600080600d60009054906101000a90046001600160a01b0316858560405162001adf90620070ca565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f08015801562001b1c573d6000803e3d6000fd5b5060405163c88a5e6d60e01b8152909150600080516020620195368339815191529063c88a5e6d9062001b5f90849068056bc75e2d631000009060040162007686565b600060405180830381600087803b15801562001b7a57600080fd5b505af115801562001b8f573d6000803e3d6000fd5b50506040516318caf8e360e31b815260008051602062019536833981519152925063c657c718915062001bc990849087906004016200772c565b600060405180830381600087803b15801562001be457600080fd5b505af115801562001bf9573d6000803e3d6000fd5b5092979650505050505050565b600d546001600160a01b0316331462001c1e57600080fd5b601d5460208201356f6d67762f74726164655375636365737360801b149062001c8f908290610100900460ff168062001c595750601d5460ff165b1560405180604001604052806016815260200175696e636f7272656374207375636365737320666c616760501b81525062004f3e565b601d54610100900460ff161562001cfe5762001cf882602001356e1b59dd8bdb585ad95c94995d995c9d608a1b6040518060400160405280601d81526020017f6d6776446174612073686f756c64206265206d616b657252657665727400000081525062004f7e565b62001d57565b62001d5782602001356f6d67762f74726164655375636365737360801b6040518060400160405280601e81526020017f6d6776446174612073686f756c6420626520747261646553756363657373000081525062004f7e565b600d5462001eb1906001600160a01b03166327507458816368c13d6b62001d82602089018962007752565b62001d9460408a0160208b0162007752565b604080516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301528901356044820152606401602060405180830381865afa15801562001deb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001e119190620075af565b6040518263ffffffff1660e01b815260040162001e3091815260200190565b602060405180830381865afa15801562001e4e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001e74919062007604565b156040518060400160405280602081526020017f4f6666657220776173206e6f742072656d6f7665642061667465722074616b6581525062004448565b6021546200144190849084908015620070d8021763ffffffff16565b600e5462001ee4906001600160a01b031662001045565b50600e546000906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562001f3f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001f659190620075af565b600f546018546040516370a0823160e01b81526001600160a01b0391821660048201529293506000929116906370a0823190602401602060405180830381865afa15801562001fb8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001fde9190620075af565b602180546001600160401b03191662004fba179055600d54600e54600f54601954601b5460405163127db4b760e21b81529596506001600160a01b03948516956349f6d2dc9562002046958116941692670de0b6b3a764000092839260009060040162007571565b6020604051808303816000875af115801562002066573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200208c9190620075af565b601a819055601854604051634bc5be0160e11b81526004810192909252670de0b6b3a764000060248301526000916001600160a01b039091169063978b7c02906044016020604051808303816000875af1158015620020ef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002115919062007604565b90506200214f81604051806040016040528060148152602001731cdb9a5c19481cda1bdd5b19081cdd58d8d9595960621b81525062004448565b6200222062002167670de0b6b3a764000085620076b5565b600e546001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015620021be573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620021e49190620075af565b6040518060400160405280601781526020017f496e636f7272656374206d616b65722062616c616e636500000000000000000081525062004481565b6200144162002238670de0b6b3a764000084620076b5565b600f546018546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401602060405180830381865afa15801562002285573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620022ab9190620075af565b6040518060400160405280601781526020017f496e636f72726563742074616b65722062616c616e636500000000000000000081525062004481565b600e5460009062002301906001600160a01b031662001045565b602180546001600160401b03191662004351179055600d54600e54600f54601954601b5460405163127db4b760e21b81529596506001600160a01b03948516956349f6d2dc9562002369958116941692670de0b6b3a764000092839260009060040162007571565b6020604051808303816000875af115801562002389573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620023af9190620075af565b601a55600d54620023cf906001600160a01b03166370a082313062001152565b600d54620023e6906001600160a01b03166200440b565b600f546001600160a01b0316600e546001600160a01b0391821691166001600160a01b03166000805160206201982c83398151915230670de0b6b3a764000080601b54601954601a546000604051620024469796959493929190620075c9565b60405180910390a3601854601a54604051634bc5be0160e11b81526004810191909152671bc16d674ec8000060248201526000916001600160a01b03169063978b7c02906044016020604051808303816000875af1158015620024ad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620024d3919062007604565b905062002514601d60029054906101000a900460ff16604051806040016040528060138152602001600080516020620195b483398151915281525062004448565b620016a7816040518060400160405280601481526020017314db9a5c19481cda1bdd5b19081cdd58d8d9595960621b81525062004448565b604080516020810190915260008082525b82518110156200267c57825182906000805160206201953683398151915290636900a3ae9086908590811062002597576200259762007772565b60200260200101516040518263ffffffff1660e01b8152600401620025be91815260200190565b600060405180830381865afa158015620025dc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262002606919081019062007788565b6040516020016200261992919062007808565b6040516020818303038152906040529150600183516200263a9190620076b5565b8110156200266757816040516020016200265591906200783b565b60405160208183030381529060405291505b80620026738162007863565b9150506200255d565b5062000ae68162004fc4565b60405180606001604052806021815260200162019672602191398051620026b891601e91602090910190620070e2565b507f6162636465666768696a6b6c6d6e6f707172737475767778797a313233343536601f55600e546000906001600160a01b03166370a08231305b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562002738573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200275e9190620075af565b600f546018546040516370a0823160e01b81526001600160a01b0391821660048201529293506000929116906370a0823190602401602060405180830381865afa158015620027b1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620027d79190620075af565b600d54600e54600f54601954601b5460405163127db4b760e21b81529596506001600160a01b03948516956349f6d2dc956200282a958116941692670de0b6b3a764000092839260009060040162007571565b6020604051808303816000875af11580156200284a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620028709190620075af565b601a55601d805461ff001916610100179055600d546200289b906200058d906001600160a01b031690565b600f54600e54601a546018546040516001600160a01b039485169493841693600080516020620197ec83398151915293620028e7939092911690670de0b6b3a76400009081906200787f565b60405180910390a3601854601a54604051634bc5be0160e11b81526004810191909152670de0b6b3a764000060248201526000916001600160a01b03169063978b7c02906044016020604051808303816000875af11580156200294e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002974919062007604565b9050620029ac81156040518060400160405280601181526020017014db9a5c19481cda1bdd5b190819985a5b607a1b81525062004448565b600e5462002a4f906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562002a08573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002a2e9190620075af565b84604051806060016040528060358152602001620196936035913962004481565b600f546018546040516370a0823160e01b81526001600160a01b039182166004820152620014419291909116906370a0823190602401602060405180830381865afa15801562002aa3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002ac99190620075af565b836040518060600160405280603681526020016201957e6036913962004481565b602180546001600160401b0319166200500b179055600d54600e546001600160a01b03918216916349f6d2dc9116600f546001600160a01b0316601954601b546040516001600160e01b031960e087901b16815262002b5d949392670de0b6b3a764000092839260009060040162007571565b6020604051808303816000875af115801562002b7d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002ba39190620075af565b601a55600d5462002bbd906001600160a01b03166200440b565b600f54600e54601a54601854604080519283526001600160a01b039182166020840152670de0b6b3a7640000838201819052606084015251938116939216917f1d81940ff2c3ac549c8acefd7c1b2ffb24aacc8b3cfa309c22abc3de79727f9d9181900360800190a3600d5462002c3d906001600160a01b03166200440b565b600f546001600160a01b0316600e546001600160a01b0391821691166001600160a01b031660008051602062019710833981519152601a5460405162002c8591815260200190565b60405180910390a3601854601a54604051634bc5be0160e11b81526004810191909152671bc16d674ec8000060248201526000916001600160a01b03169063978b7c02906044016020604051808303816000875af115801562002cec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002d12919062007604565b905062002d53601d60029054906101000a900460ff16604051806040016040528060138152602001600080516020620195b483398151915281525062004448565b62002d8b816040518060400160405280601481526020017314db9a5c19481cda1bdd5b19081cdd58d8d9595960621b81525062004448565b600d54600e54600f54601954601b54601a54604051636a4f769160e01b81526001600160a01b0396871696636a4f76919662002de19690821695911693670de0b6b3a764000093849360009190600401620078bb565b600060405180830381600087803b15801562002dfc57600080fd5b505af115801562002e11573d6000803e3d6000fd5b5050505050565b600d546000906001600160a01b0316331462002e3357600080fd5b601d54610100900460ff161562002e6a57601e60405162461bcd60e51b815260040162002e619190620079dc565b60405180910390fd5b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c23362002e9b602085018562007752565b62002ead604086016020870162007752565b604080516001600160a01b03948516815292841660208401529216818301529084013560608201526080808501359082015260a0808501359082015260c00160405180910390a1505060205490565b600062002f0b82600a62007aee565b62002f178585620038c5565b62002f23919062007afc565b949350505050565b602180546001600160401b03191662005206179055600e546000906001600160a01b03166370a0823130620026f3565b600062002f69600062000cca565b905090565b600d54600e54600f54601954601b5460405163127db4b760e21b81526001600160a01b03958616956349f6d2dc9562002fc29590821694911692670de0b6b3a7640000928392919060009060040162007571565b6020604051808303816000875af115801562002fe2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620030089190620075af565b601a55601d805461ff001916610100179055600d5460009062003036906200058d906001600160a01b031690565b600f54600e54601a546018546040516001600160a01b039485169493841693600080516020620197ec8339815191529362003082939092911690670de0b6b3a76400009081906200787f565b60405180910390a3601854601a54604051634bc5be0160e11b81526004810191909152671bc16d674ec8000060248201526001600160a01b039091169063978b7c02906044016020604051808303816000875af1158015620030e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ae6919062007604565b604080516020810190915260008082525b82518110156200267c57825182906000805160206201953683398151915290636900a3ae9086908590811062003159576200315962007772565b60200260200101516040518263ffffffff1660e01b81526004016200318091815260200190565b600060405180830381865afa1580156200319e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620031c8919081019062007788565b604051602001620031db92919062007808565b604051602081830303815290604052915060018351620031fc9190620076b5565b8110156200322957816040516020016200321791906200783b565b60405160208183030381529060405291505b80620032358162007863565b9150506200311f565b60008054610100900460ff16156200325f5750600054610100900460ff1690565b6000600080516020620195368339815191523b156200336a5760405160009060008051602062019536833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc490620032cc9083906519985a5b195960d21b9060200162007686565b60408051601f1981840301815290829052620032ec929160200162007b1f565b60408051601f1981840301815290829052620033089162007b52565b6000604051808303816000865af19150503d806000811462003347576040519150601f19603f3d011682016040523d82523d6000602084013e6200334c565b606091505b509150508080602001905181019062003366919062007604565b9150505b919050565b600d5460009062003389906001600160a01b0316620052a6565b50600d546040516001600160a01b039091169084908490620033ab9062007171565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f080158015620033e8573d6000803e3d6000fd5b5090505b92915050565b600080600d60009054906101000a90046001600160a01b0316858560405162001adf906200717f565b600e5460009062003435906001600160a01b031662001045565b601854602180546001600160401b0319166200500b179055600d54600e54600f54601954601b5460405163127db4b760e21b81529697506001600160a01b039586163196948616956349f6d2dc95620034a8958216949190911692670de0b6b3a764000092839260009060040162007571565b6020604051808303816000875af1158015620034c8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620034ee9190620075af565b601a55600d5462003583906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156200354d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620035739190620075af565b83601c54620011cd9190620076b5565b601d805461ff001916610100179055600d54620035ab906200058d906001600160a01b031690565b600f54600e54601a546018546040516001600160a01b039485169493841693600080516020620197ec83398151915293620035f7939092911690670de0b6b3a76400009081906200787f565b60405180910390a3600d5462003616906001600160a01b03166200440b565b600f546001600160a01b0316600e546001600160a01b0391821691166001600160a01b031660008051602062019710833981519152601a546040516200365e91815260200190565b60405180910390a3600d546040516381bad6f360e01b815260008051602062019536833981519152916381bad6f391620036af91600191829182916000916001600160a01b03169060040162007b70565b600060405180830381600087803b158015620036ca57600080fd5b505af1158015620036df573d6000803e3d6000fd5b50505050620036eb3090565b6001600160a01b03167f1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa09460006040516200372791815260200190565b60405180910390a2601854601a54604051634bc5be0160e11b81526004810191909152671bc16d674ec8000060248201526000916001600160a01b03169063978b7c02906044016020604051808303816000875af11580156200378e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620037b4919062007604565b9050620037ec81156040518060400160405280601181526020017014db9a5c19481cda1bdd5b190819985a5b607a1b81525062004448565b600d546000906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562003846573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200386c9190620075af565b601c546200387b9190620076b5565b601854909150620038bf9082906200389f9086906001600160a01b031631620076b5565b604051806060016040528060318152602001620197786031913962004481565b50505050565b6000620038d16200537f565b6000836001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562003912573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003938919062007ba0565b60ff169050620039476200538d565b6200395481600a62007aee565b62002f23908462007bc5565b600e546000906200397a906001600160a01b031662001045565b602180546001600160401b0319166200500b179055600d54600e54600f54601954601b5460405163127db4b760e21b81529596506001600160a01b03948516956349f6d2dc95620039e2958116941692670de0b6b3a764000092839260009060040162007571565b6020604051808303816000875af115801562003a02573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003a289190620075af565b601a55600d5462003a48906001600160a01b03166370a082313062001152565b601d805461ff001916610100179055600d5462003a70906200058d906001600160a01b031690565b600f54600e54601a546018546040516001600160a01b039485169493841693600080516020620197ec8339815191529362003abc939092911690670de0b6b3a76400009081906200787f565b60405180910390a3600d5462003adb906001600160a01b03166200440b565b600f546001600160a01b0316600e546001600160a01b0391821691166001600160a01b031660008051602062019710833981519152601a5460405162003b2391815260200190565b60405180910390a3600d546040516381bad6f360e01b815260008051602062019536833981519152916381bad6f39162003b7491600191829182916000916001600160a01b03169060040162007b70565b600060405180830381600087803b15801562003b8f57600080fd5b505af115801562003ba4573d6000803e3d6000fd5b5050505062003bb03090565b6001600160a01b03167f1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa094600060405162003bec91815260200190565b60405180910390a2601854601a54604051634bc5be0160e11b81526004810191909152671bc16d674ec8000060248201526000916001600160a01b03169063978b7c02906044016020604051808303816000875af115801562003c53573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003c79919062007604565b905062003cba601d60029054906101000a900460ff16604051806040016040528060138152602001600080516020620195b483398151915281525062004448565b62003cf081156040518060400160405280601181526020017014db9a5c19481cda1bdd5b190819985a5b607a1b81525062004448565b600d5462000ae6906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562003d4c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003d729190620075af565b601c546040518060600160405280603d815260200162019635603d91396200544e565b602180546001600160401b031916620045aa179055600d54600e546001600160a01b03918216916349f6d2dc9116600f546001600160a01b0316601954601b546040516001600160e01b031960e087901b16815262003e08949392670de0b6b3a764000092839260009060040162007571565b6020604051808303816000875af115801562003e28573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003e4e9190620075af565b601a55601854600d54600e546000926001600160a01b039081169263ff2e2d33929082169116600f546001600160a01b0316601a54670de0b6b3a764000080600160195462003e9e9190620076b5565b6040518863ffffffff1660e01b815260040162003ec2979695949392919062007624565b6020604051808303816000875af115801562003ee2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003f08919062007604565b905062003f51601d60029054906101000a900460ff161560405180604001604052806013815260200172141bdcdd121bdbdac81dd85cc818d85b1b1959606a1b81525062004448565b620007ec81156040518060400160405280601181526020017014db9a5c19481cda1bdd5b190819985a5b607a1b81525062004448565b600e5460009062003fa1906001600160a01b031662001045565b602180546001600160401b0319166200500b179055600d54600e54600f54601954601b5460405163127db4b760e21b81529596506001600160a01b03948516956349f6d2dc9562004009958116941692670de0b6b3a764000092839260009060040162007571565b6020604051808303816000875af115801562004029573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200404f9190620075af565b601a55600d546200406f906001600160a01b03166370a082313062001152565b600d5462004086906001600160a01b03166200440b565b600f54600e54601a54601854604080519283526001600160a01b039182166020840152670de0b6b3a7640000838201819052606084015251938116939216917f1d81940ff2c3ac549c8acefd7c1b2ffb24aacc8b3cfa309c22abc3de79727f9d9181900360800190a3600d5462004106906001600160a01b03166200440b565b60405181815230907f1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa0949060200160405180910390a2600d5462004152906001600160a01b03166200440b565b600f546001600160a01b0316600e546001600160a01b0391821691166001600160a01b031660008051602062019710833981519152601a546040516200419a91815260200190565b60405180910390a3601854601a54604051634bc5be0160e11b81526004810191909152671bc16d674ec8000060248201526000916001600160a01b03169063978b7c02906044016020604051808303816000875af115801562004201573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004227919062007604565b905062004261816040518060400160405280601481526020017314db9a5c19481cda1bdd5b19081cdd58d8d9595960621b81525062004448565b601d546040805180820190915260138152600080516020620195b483398151915260208201526200429c9162010000900460ff169062004448565b600d5462000ae6906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015620042f8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200431e9190620075af565b601c54604051806060016040528060228152602001620194f46022913962004481565b600062001029838360006200100d565b601d805462ff0000191662010000179055600d546001600160a01b0316636a4f769162004382602085018562007752565b62004394604086016020870162007752565b670de0b6b3a764000080601954601b5489604001358a604001356040518963ffffffff1660e01b8152600401620043d3989796959493929190620078bb565b600060405180830381600087803b158015620043ee57600080fd5b505af115801562004403573d6000803e3d6000fd5b505050505050565b6040516381bad6f360e01b815260008051602062019536833981519152906381bad6f39062002de190600190819081908190889060040162007b70565b8162000ae65760008051602062019615833981519152816040516200446e919062007be7565b60405180910390a162000ae6826200548a565b81831462001441576000805160206201961583398151915281604051620044a9919062007be7565b60405180910390a1620014418383620054f1565b601d805462ff0000191662010000179055600d546000906001600160a01b031663cbf75c9a620044f1602086018662007752565b62004503604087016020880162007752565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016040805180830381865afa1580156200454e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004574919062007c18565b9150620014419050603882901c63ffffffff16601a54604051806060016040528060238152602001620196c86023913962004481565b601d805462ff0000191662010000178155604080518082019091529081527f506f7374686f6f6b2073686f756c64206e6f742062652063616c6c6564000000602082015262000ae690620055b5565b601354604051309160119160129160ff169062004616906200718d565b62004625949392919062007c3d565b604051809103906000f08015801562004642573d6000803e3d6000fd5b50600e80546001600160a01b0319166001600160a01b03929092169190911790553060165460405160149160159160ff9091169062004681906200718d565b62004690949392919062007c3d565b604051809103906000f080158015620046ad573d6000803e3d6000fd5b50600f80546001600160a01b0319166001600160a01b03928316908117909155600e54601054620046e79391909116919060ff166200100d565b600d80546001600160a01b0319166001600160a01b03929092169182179055604080516316c1a85160e31b8152905163b60d428891678ac7230489e8000091600480830192600092919082900301818588803b1580156200474757600080fd5b505af11580156200475c573d6000803e3d6000fd5b5050600e54600d5460405163095ea7b360e01b81526001600160a01b03928316955063095ea7b394506200479b93509116906000199060040162007686565b6020604051808303816000875af1158015620047bb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620047e1919062007604565b50600f54600d5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926200481c929116906000199060040162007686565b6020604051808303816000875af11580156200483c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007ec919062007604565b620014418383836000620055d5565b6200487c83620052a6565b506200488882620052a6565b50601754604051630b73a18f60e01b81526001600160a01b0385811660048301528481166024830152604482019290925260006064820152614e20608482015290821690630b73a18f9060a401600060405180830381600087803b158015620048f057600080fd5b505af115801562004905573d6000803e3d6000fd5b5050601754604051630b73a18f60e01b81526001600160a01b0386811660048301528781166024830152604482019290925260006064820152614e2060848201529084169250630b73a18f915060a401600060405180830381600087803b1580156200497057600080fd5b505af115801562004985573d6000803e3d6000fd5b50505050600080516020620197cc83398151915260001c60601b60601c6001600160a01b031663c657c71884856001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015620049f0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262004a1a919081019062007788565b6040518363ffffffff1660e01b815260040162004a399291906200772c565b600060405180830381600087803b15801562004a5457600080fd5b505af115801562004a69573d6000803e3d6000fd5b50505050600080516020620197cc83398151915260001c60601b60601c6001600160a01b031663c657c71883846001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801562004ad4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262004afe919081019062007788565b6040518363ffffffff1660e01b815260040162004b1d9291906200772c565b600060405180830381600087803b15801562004b3857600080fd5b505af115801562004b4d573d6000803e3d6000fd5b50505050505050565b600d546040516365fbae4d60e11b81526001600160a01b0386811660048301528581166024830152600092839283929091169063cbf75c9a906044016040805180830381865afa15801562004baf573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004bd5919062007c18565b9092509050600084604084901c61ffff16111562004bfd575061ffff604083901c1662004c00565b50835b8062004c1662ffffff606085901c168862007c8c565b62004c22919062007bc5565b62004c3290633b9aca0062007bc5565b98975050505050505050565b600d546040516365fbae4d60e11b81526001600160a01b0385811660048301528481166024830152600092839283929091169063cbf75c9a906044016040805180830381865afa15801562004c97573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004cbd919062007c18565b909250905061ffff604083901c1662004ce062ffffff606084901c168662007c8c565b62004cec919062007bc5565b62004cfc90633b9aca0062007bc5565b9695505050505050565b601d805462ff000019166201000017905560408051606080820190925260258082526bffffffffffffffffffffffff8584013580851c82169491169260c08701359182901c92604883901c62ffffff1692602090811c61ffff169262004d82928892670de0b6b3a7640000929190620196eb9083013962004481565b62004db084671bc16d674ec80000604051806060016040528060258152602001620197536025913962004481565b62004dd8816101f4604051806060016040528060288152602001620195566028913962004481565b62004e1a83306040518060400160405280601781526020017f496e636f7272656374206d616b6572206164647265737300000000000000000081525062005816565b62004b4d826019546040518060400160405280601081526020016f496e636f72726563742067617372657160801b81525062004481565b601d805462ff0000191662010000179055600d546000906001600160a01b031663cbf75c9a62004e85602086018662007752565b62004e97604087016020880162007752565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016040805180830381865afa15801562004ee2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004f08919062007c18565b9150620014419050601882901c63ffffffff16601a54604051806060016040528060238152602001620197a96023913962004481565b811515831515146200144157600080516020620196158339815191528160405162004f6a919062007be7565b60405180910390a162001441838362005864565b8183146200144157600080516020620196158339815191528160405162004fa6919062007be7565b60405180910390a1620014418383620059a8565b62000ae662007ca7565b620007ec8160405160240162004fdb919062007cbd565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b17905262005a7f565b601d805462ff0000191662010000179055600d546000906001600160a01b03166370a08231620050383090565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156200507d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620050a39190620075af565b600d54600e549192506001600160a01b039081169163ad97db1b9116600f546001600160a01b0316601a546040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152600160648201526084016020604051808303816000875af11580156200512a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620051509190620075af565b50601d54610100900460ff16156200144157600d54620014419082906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015620051c0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620051e69190620075af565b604051806080016040528060418152602001620195d46041913962004481565b600081602001356f6d67762f74726164655375636365737360801b1490506200526681156040518060400160405280602081526020017f4f666665722073686f756c64206265206d61726b6564206173206661696c656481525062004448565b62001441601f5483600001351460405180604001604052806014815260200173496e636f7272656374206d616b6572206461746160601b81525062004448565b60006001600160a01b03821662005370576000805160206201951683398151915260405162005306906020808252601e908201527f4572726f723a20616464726573732073686f756c64206e6f7420626520300000604082015260600190565b60405180910390a160408051818152600781830152664164647265737360c81b60608201526001600160a01b038416602082015290517f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f9181900360800190a16200537062005aa0565b506001600160a01b0316151590565b6200538b600062005ba4565b565b600854600103620054035760095460405163ca669fa760e01b81526001600160a01b039091166004820152600080516020620195368339815191529063ca669fa7906024015b600060405180830381600087803b158015620053ee57600080fd5b505af1158015620038bf573d6000803e3d6000fd5b6008546002036200538b576009546040516303223eab60e11b81526001600160a01b03909116600482015260008051602062019536833981519152906306447d5690602401620053d3565b8183106200144157600080516020620196158339815191528160405162005476919062007be7565b60405180910390a162001441838362005d09565b80620007ec5760008051602062019516833981519152604051620054df9060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a1620007ec62005aa0565b80821462000ae65760008051602062019516833981519152604051620055539060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a16000805160206201980c833981519152816040516200557b919062007cd2565b60405180910390a16000805160206201980c83398151915282604051620055a3919062007d0b565b60405180910390a162000ae662005aa0565b6000805160206201961583398151915281604051620054df919062007be7565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b17905291516000928716916200562b9162007b52565b6000604051808303816000865af19150503d80600081146200566a576040519150601f19603f3d011682016040523d82523d6000602084013e6200566f565b606091505b509150506000818060200190518101906200568b9190620075af565b9050620056fd84620056f687620056cd6370a0823160e01b620056b060018d62005df6565b9060038201805463ffffffff191660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b9062005e1b565b8215620044035760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b0389169162005748919062007b52565b6000604051808303816000865af19150503d806000811462005787576040519150601f19603f3d011682016040523d82523d6000602084013e6200578c565b606091505b50915050600081806020019051810190620057a89190620075af565b905082861015620057d357620057bf8684620076b5565b620057cb9082620076b5565b9050620057ee565b620057df8387620076b5565b620057eb908262007c8c565b90505b6200580c81620056f66318160ddd60e01b620056b060018d62005df6565b5050505050505050565b816001600160a01b0316836001600160a01b0316146200144157600080516020620196158339815191528160405162005850919062007be7565b60405180910390a162001441838362005e27565b8015158215151462000ae65760008051602062019516833981519152604051620058ca9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b626f6f6040820152616c5d60f01b606082015260800190565b60405180910390a160008051602062019615833981519152816200590c576040518060400160405280600581526020016466616c736560d81b8152506200592a565b604051806040016040528060048152602001637472756560e01b8152505b60405162005939919062007d36565b60405180910390a160008051602062019615833981519152826200597b576040518060400160405280600581526020016466616c736560d81b81525062005999565b604051806040016040528060048152602001637472756560e01b8152505b604051620055a3919062007d75565b80821462000ae6576000805160206201951683398151915260405162005a0d9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974604082015264657333325d60d81b606082015260800190565b60405180910390a17fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f998160405162005a46919062007cd2565b60405180910390a17fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f9982604051620055a3919062007d0b565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b600080516020620195368339815191523b1562005b935760405160009060008051602062019536833981519152907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49062005b0e9083906519985a5b195960d21b9060019060200162007665565b60408051601f198184030181529082905262005b2e929160200162007b1f565b60408051601f198184030181529082905262005b4a9162007b52565b6000604051808303816000865af19150503d806000811462005b89576040519150601f19603f3d011682016040523d82523d6000602084013e62005b8e565b606091505b505050505b6000805461ff001916610100179055565b600060085560408051631e91f8cb60e01b815290513091631e91f8cb9160048083019260209291908290030181865afa15801562005be6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005c0c919062007da0565b600980546001600160a01b0319166001600160a01b039290921691821790553014620007ec57306001600160a01b0316631e91f8cb6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562005c71573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005c97919062007da0565b6009546001600160a01b0390811691161462005cb557600160085550565b8015620007ec576002600855604080516390c5013b60e01b8152905160008051602062019536833981519152916390c5013b91600480830192600092919082900301818387803b15801562002dfc57600080fd5b80821062000ae6576000805160206201951683398151915260405162005d6a9060208082526021908201527f4572726f723a2061203c2062206e6f7420736174697366696564205b75696e746040820152605d60f81b606082015260800190565b60405180910390a16040805181815260098183015268202056616c7565206160b81b60608201526020810184905290516000805160206201980c8339815191529181900360800190a1604080518181526009918101919091526810102b30b63ab2903160b91b6060820152602081018290526000805160206201980c83398151915290608001620055a3565b6005820180546001600160a01b0319166001600160a01b039290921691909117905590565b62000ae6828262005f10565b806001600160a01b0316826001600160a01b03161462000ae6576000805160206201951683398151915260405162005e9e9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8160405162005ed7919062007dc0565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f82604051620055a3919062007e05565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b946000939092909183018282801562005f8357602002820191906000526020600020905b81548152602001906001019080831162005f6e575b5050505050905060008362005f988362006279565b60405160200162005fab92919062007b1f565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a16835281529281209194509092909162005fff91869188910162007e30565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166200603a5762006038876200632d565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b03198816845282528083209051909183916200607b91879189910162007e30565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b031684604051620060c2919062007b52565b600060405180830381855afa9150503d8060008114620060ff576040519150601f19603f3d011682016040523d82523d6000602084013e62006104565b606091505b509150620061219050816200611b88602062007bc5565b62007024565b604051630667f9d760e41b815290925060009150600080516020620195368339815191529063667f9d70906200615e908b90879060040162007686565b6020604051808303816000875af11580156200617e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620061a49190620075af565b9050808214620061c85760405162461bcd60e51b815260040162002e619062007e6c565b6040516370ca10bb60e01b815260008051602062019536833981519152906370ca10bb9062006200908b9087908e9060040162007665565b600060405180830381600087803b1580156200621b57600080fd5b505af115801562006230573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff191690556200626560028b0160006200719b565b896004016000905550505050505050505050565b60606000825160206200628d919062007bc5565b67ffffffffffffffff811115620062a857620062a862007264565b6040519080825280601f01601f191660200182016040528015620062d3576020820181803683370190505b50905060005b835181101562006326576000848281518110620062fa57620062fa62007772565b6020026020010151905080826020026020018401525080806200631d9062007863565b915050620062d9565b5092915050565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b9493879391929091908301828280156200639f57602002820191906000526020600020905b8154815260200190600101908083116200638a575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a1684528252808320905195965094919350620063eb9250859187910162007e30565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16156200648a576001600160a01b0384166000908152602087815260408083206001600160e01b031987168452825280832090519092916200645a91859187910162007e30565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b600083620064988362006279565b604051602001620064ab92919062007b1f565b6040516020818303038152906040529050600080516020620197cc83398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200650a57600080fd5b505af11580156200651f573d6000803e3d6000fd5b50505050600080866001600160a01b03168360405162006540919062007b52565b600060405180830381855afa9150503d80600081146200657d576040519150601f19603f3d011682016040523d82523d6000602084013e62006582565b606091505b509150620065999050816200611b87602062007bc5565b6040516365bc948160e01b81526001600160a01b03891660048201529092506000915060008051602062019536833981519152906365bc9481906024016000604051808303816000875af1158015620065f6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262006620919081019062007f74565b5090508051600103620068e9576000600080516020620197cc83398151915260001c6001600160a01b031663667f9d70898460008151811062006667576200666762007772565b60200260200101516040518363ffffffff1660e01b81526004016200668e92919062007686565b6020604051808303816000875af1158015620066ae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620066d49190620075af565b90508062006738577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5888360008151811062006714576200671462007772565b602002602001015160001c6040516200672f92919062007686565b60405180910390a15b8083146200675a5760405162461bcd60e51b815260040162002e619062007e6c565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed888887896040516020016200679292919062007e30565b6040516020818303038152906040528051906020012085600081518110620067be57620067be62007772565b602002602001015160001c604051620067db949392919062007fdf565b60405180910390a181600081518110620067f957620067f962007772565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c168352845280822090519293909262006844918a918c910162007e30565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c16855282528284209251909391620068ae918a918c910162007e30565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff19169115159190911790555062006ea7565b60018151111562006e365760005b815181101562006e2f576000600080516020620197cc83398151915260001c6001600160a01b031663667f9d708a8585815181106200693a576200693a62007772565b60200260200101516040518363ffffffff1660e01b81526004016200696192919062007686565b6020604051808303816000875af115801562006981573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620069a79190620075af565b90508062006a0a577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a589848481518110620069e657620069e662007772565b602002602001015160001c60405162006a0192919062007686565b60405180910390a15b600080516020620197cc83398151915260001c6001600160a01b03166370ca10bb8a85858151811062006a415762006a4162007772565b602002602001015161133760f01b6040518463ffffffff1660e01b815260040162006a6f9392919062007665565b600060405180830381600087803b15801562006a8a57600080fd5b505af115801562006a9f573d6000803e3d6000fd5b50505050600060608a6001600160a01b03168760405162006ac1919062007b52565b600060405180830381855afa9150503d806000811462006afe576040519150601f19603f3d011682016040523d82523d6000602084013e62006b03565b606091505b50909250905062006b1b816200611b8b602062007bc5565b955081801562006b2f575061133760f01b86145b1562006d82577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c60405160200162006b6d92919062007e30565b6040516020818303038152906040528051906020012088888151811062006b985762006b9862007772565b602002602001015160001c60405162006bb5949392919062007fdf565b60405180910390a184848151811062006bd25762006bd262007772565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f168352845280822090519293909262006c1d918d918f910162007e30565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c60405160200162006caa92919062007e30565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff021916908315150217905550600080516020620197cc83398151915260001c6001600160a01b03166370ca10bb8c87878151811062006d1c5762006d1c62007772565b6020026020010151866040518463ffffffff1660e01b815260040162006d459392919062007665565b600060405180830381600087803b15801562006d6057600080fd5b505af115801562006d75573d6000803e3d6000fd5b5050505050505062006e2f565b600080516020620197cc83398151915260001c6001600160a01b03166370ca10bb8c87878151811062006db95762006db962007772565b6020026020010151866040518463ffffffff1660e01b815260040162006de29392919062007665565b600060405180830381600087803b15801562006dfd57600080fd5b505af115801562006e12573d6000803e3d6000fd5b50505050505050808062006e269062007863565b915050620068f7565b5062006ea7565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e606482015260840162002e61565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a1684528252808320905190929162006eeb9188918a910162007e30565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff1662006f7a5760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201526e3a143994903737ba103337bab7321760891b606482015260840162002e61565b6005890180546001600160a01b031916905560038901805463ffffffff1916905562006fab60028a0160006200719b565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a1684528252808320905190929162006ff19188918a910162007e30565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b600080600060208551116200703b5784516200703e565b60205b905060005b81811015620070a4576200705981600862007bc5565b8662007066838862007c8c565b8151811062007079576200707962007772565b01602001516001600160f81b031916901c9290921791806200709b8162007863565b91505062007043565b5090949350505050565b61567e806200802683390190565b6155e4806200d6a483390190565b6112068062012c8883390190565b6200538b6200800f565b828054620070f090620078ff565b90600052602060002090601f0160209004810192826200711457600085556200715f565b82601f106200712f57805160ff19168380011785556200715f565b828001600101855582156200715f579182015b828111156200715f57825182559160200191906001019062007142565b506200716d929150620071b6565b5090565b61206d8062013e8e83390190565b611a418062015efb83390190565b611bb8806201793c83390190565b5080546000825590600052602060002090810190620007ec91905b5b808211156200716d5760008155600101620071b7565b8015158114620007ec57600080fd5b600060208284031215620071ef57600080fd5b81356200102981620071cd565b6001600160a01b0381168114620007ec57600080fd5b6000806000606084860312156200722857600080fd5b83356200723581620071fc565b925060208401356200724781620071fc565b915060408401356200725981620071cd565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715620072a657620072a662007264565b604052919050565b600067ffffffffffffffff821115620072cb57620072cb62007264565b50601f01601f191660200190565b600080600060608486031215620072ef57600080fd5b8335620072fc81620071fc565b925060208401356200730e81620071fc565b9150604084013567ffffffffffffffff8111156200732b57600080fd5b8401601f810186136200733d57600080fd5b8035620073546200734e82620072ae565b6200727a565b8181528760208385010111156200736a57600080fd5b816020840160208301376000602083830101528093505050509250925092565b600061012082840312156200739e57600080fd5b50919050565b600080828403610160811215620073ba57600080fd5b620073c685856200738a565b9250604061011f1982011215620073dc57600080fd5b50610120830190509250929050565b600067ffffffffffffffff82111562007408576200740862007264565b5060051b60200190565b600060208083850312156200742657600080fd5b823567ffffffffffffffff8111156200743e57600080fd5b8301601f810185136200745057600080fd5b8035620074616200734e82620073eb565b81815260059190911b820183019083810190878311156200748157600080fd5b928401925b82841015620074a15783358252928401929084019062007486565b979650505050505050565b60006101208284031215620074c057600080fd5b6200102983836200738a565b600080600060608486031215620074e257600080fd5b8335620074ef81620071fc565b95602085013595506040909401359392505050565b600080604083850312156200751857600080fd5b82356200752581620071fc565b915060208301356200753781620071fc565b809150509250929050565b600080604083850312156200755657600080fd5b82356200756381620071fc565b946020939093013593505050565b6001600160a01b03978816815295909616602086015260408501939093526060840191909152608083015260a082015260c081019190915260e00190565b600060208284031215620075c257600080fd5b5051919050565b6001600160a01b03979097168752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b6000602082840312156200761757600080fd5b81516200102981620071cd565b6001600160a01b03978816815295871660208701529390951660408501526060840191909152608083015260a082019290925260c081019190915260e00190565b6001600160a01b039390931683526020830191909152604082015260600190565b6001600160a01b03929092168252602082015260400190565b634e487b7160e01b600052601160045260246000fd5b600082821015620076ca57620076ca6200769f565b500390565b60005b83811015620076ec578181015183820152602001620076d2565b83811115620038bf5750506000910152565b6000815180845262007718816020860160208601620076cf565b601f01601f19169290920160200192915050565b6001600160a01b038316815260406020820181905260009062002f2390830184620076fe565b6000602082840312156200776557600080fd5b81356200102981620071fc565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156200779b57600080fd5b815167ffffffffffffffff811115620077b357600080fd5b8201601f81018413620077c557600080fd5b8051620077d66200734e82620072ae565b818152856020838501011115620077ec57600080fd5b620077ff826020830160208601620076cf565b95945050505050565b600083516200781c818460208801620076cf565b83519083019062007832818360208801620076cf565b01949350505050565b600082516200784f818460208701620076cf565b61016160f51b920191825250600201919050565b6000600182016200787857620078786200769f565b5060010190565b9384526001600160a01b03929092166020840152604083015260608201526e1b59dd8bdb585ad95c94995d995c9d608a1b608082015260a00190565b6001600160a01b03988916815296909716602087015260408601949094526060850192909252608084015260a083015260c082015260e08101919091526101000190565b600181811c908216806200791457607f821691505b6020821081036200739e57634e487b7160e01b600052602260045260246000fd5b8054600090600181811c90808316806200795057607f831692505b602080841082036200797257634e487b7160e01b600052602260045260246000fd5b83885260208801828015620079905760018114620079a257620079cf565b60ff19871682528282019750620079cf565b60008981526020902060005b87811015620079c957815484820152908601908401620079ae565b83019850505b5050505050505092915050565b60208152600062001029602083018462007935565b600181815b8085111562007a3257816000190482111562007a165762007a166200769f565b8085161562007a2457918102915b93841c9390800290620079f6565b509250929050565b60008262007a4b57506001620033ec565b8162007a5a57506000620033ec565b816001811462007a73576002811462007a7e5762007a9e565b6001915050620033ec565b60ff84111562007a925762007a926200769f565b50506001821b620033ec565b5060208310610133831016604e8410600b841016171562007ac3575081810a620033ec565b62007acf8383620079f1565b806000190482111562007ae65762007ae66200769f565b029392505050565b600062001029838362007a3a565b60008262007b1a57634e487b7160e01b600052601260045260246000fd5b500490565b6001600160e01b031983168152815160009062007b44816004850160208701620076cf565b919091016004019392505050565b6000825162007b66818460208701620076cf565b9190910192915050565b941515855292151560208501529015156040840152151560608301526001600160a01b0316608082015260a00190565b60006020828403121562007bb357600080fd5b815160ff811681146200102957600080fd5b600081600019048311821515161562007be25762007be26200769f565b500290565b60408152600560408201526422b93937b960d91b6060820152608060208201526000620010296080830184620076fe565b6000806040838503121562007c2c57600080fd5b505080516020909101519092909150565b6001600160a01b038516815260806020820181905260009062007c639083018662007935565b828103604084015262007c77818662007935565b91505060ff8316606083015295945050505050565b6000821982111562007ca25762007ca26200769f565b500190565b634e487b7160e01b600052600160045260246000fd5b602081526000620010296020830184620076fe565b60408152600062007cfd60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b60408152600062007cfd60408301600a815269080808081058dd1d585b60b21b602082015260400190565b60408152600062007d6160408301600a8152690808115e1c1958dd195960b21b602082015260400190565b828103602084015262002f238185620076fe565b60408152600062007d6160408301600a815269080808081058dd1d585b60b21b602082015260400190565b60006020828403121562007db357600080fd5b81516200102981620071fc565b60408152600062007deb60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b60408152600062007deb60408301600a815269080808081058dd1d585b60b21b602082015260400190565b825160009082906020808701845b8381101562007e5c5781518552938201939082019060010162007e3e565b5050948252509092019392505050565b6020808252606f908201527f73746453746f726167652066696e642853746453746f72616765293a2050616360408201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560608201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960808201526e39b713ba1039bab83837b93a32b21760891b60a082015260c00190565b600082601f83011262007f1957600080fd5b8151602062007f2c6200734e83620073eb565b82815260059290921b8401810191818101908684111562007f4c57600080fd5b8286015b8481101562007f69578051835291830191830162007f50565b509695505050505050565b6000806040838503121562007f8857600080fd5b825167ffffffffffffffff8082111562007fa157600080fd5b62007faf8683870162007f07565b9350602085015191508082111562007fc657600080fd5b5062007fd58582860162007f07565b9150509250929050565b6001600160a01b039490941684526001600160e01b03199290921660208401526040830152606082015260800190565b634e487b7160e01b600052605160045260246000fdfe60a06040523480156200001157600080fd5b506040516200567e3803806200567e83398101604081905262000034916200048c565b8282826040518060400160405280601081526020016f496e7665727465644d616e67726f766560801b815250808484847f72201d073f249840099a96530e189c4291c1852040b1e96ff1f606db656be4ff60405160405180910390a16200009b836200016d565b620000a682620001cc565b620000b1816200027f565b620000bc836200032f565b5050815160208084019190912060408051808201825260018152603160f81b9084015280517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f938101939093528201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c001905060408051601f19818403018152919052805160209091012060805250620004d19650505050505050565b62000177620003e0565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f30906020015b60405180910390a150565b620001d6620003e0565b61ffff811681146200022f5760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f31366269747300000000000060448201526064015b60405180910390fd5b6200024b816001546200045160201b62001d4e1790919060201c565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001620001c1565b62000289620003e0565b808162ffffff1614620002df5760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f3234626974730000000000000000604482015260640162000226565b620002fb816001546200046f60201b62001d711790919060201c565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001620001c1565b62000339620003e0565b6001600160a01b038116620003915760405162461bcd60e51b815260206004820152601360248201527f6d67762f636f6e6669672f676f762f6e6f743000000000000000000000000000604482015260640162000226565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001620001c1565b6003546001600160a01b0316331480620003f957503330145b806200040e57506003546001600160a01b0316155b6200044f5760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b604482015260640162000226565b565b60401b69ffff00000000000000001661ffff60401b19919091161790565b60281b67ffffff00000000001662ffffff60281b19919091161790565b600080600060608486031215620004a257600080fd5b83516001600160a01b0381168114620004ba57600080fd5b602085015160409095015190969495509392505050565b60805161518a620004f46000396000818161036401526116aa015261518a6000f3fe60806040526004361061024a5760003560e01c80636d27de6711610139578063b60d4288116100b6578063dc7e98df1161007a578063dc7e98df146108a8578063def5ddaa146108c8578063fbb66910146108e8578063fbfa77cf14610908578063fbffe5fd14610928578063fcaa7e2e1461094857600080fd5b8063b60d4288146107e4578063c7bb25d0146107ec578063cbf75c9a14610833578063d0ee509914610868578063db20266f1461088857600080fd5b8063aa4dd282116100fd578063aa4dd28214610744578063ab033ea914610764578063ad97db1b14610784578063b09d2a16146107a4578063b2b12057146107c457600080fd5b80636d27de671461061457806370a08231146106545780637ecebe00146106815780638c66715c146106ae57806395999ee31461072457600080fd5b80635722647b116101c7578063644e67031161018b578063644e6703146104cc5780636804f613146105835780636817031b146105a357806368c13d6b146105c35780636a4f76911461060157600080fd5b80635722647b146103f657806359eba454146104345780635a611f4e146104545780635aa6e675146104745780635cd82390146104ac57600080fd5b806330adf81f1161020e57806330adf81f146103105780633644e5151461035257806341c0e1b51461038657806346e142fa1461039b57806349f6d2dc146103e357600080fd5b80630b73a18f1461025f578063230244081461027f578063275074581461029257806327d097c6146102d05780632e1a7d4d146102f057600080fd5b3661025a5761025833610968565b005b600080fd5b34801561026b57600080fd5b5061025861027a3660046149b8565b61098f565b61025861028d366004614a05565b610968565b34801561029e57600080fd5b506102bb6102ad366004614a20565b6001600160601b0316151590565b60405190151581526020015b60405180910390f35b3480156102dc57600080fd5b506102586102eb366004614a39565b610a2d565b3480156102fc57600080fd5b506102bb61030b366004614a20565b610b08565b34801561031c57600080fd5b506103447fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a281565b6040519081526020016102c7565b34801561035e57600080fd5b506103447f000000000000000000000000000000000000000000000000000000000000000081565b34801561039257600080fd5b50610258610b62565b3480156103a757600080fd5b506103bb6103b6366004614ac8565b610baa565b604080519586526020860194909452928401919091526060830152608082015260a0016102c7565b6103446103f1366004614b41565b610bd6565b34801561040257600080fd5b50610344610411366004614a39565b600560209081526000938452604080852082529284528284209052825290205481565b34801561044057600080fd5b506102bb61044f366004614b9f565b610d41565b34801561046057600080fd5b5061025861046f366004614bea565b610dca565b34801561048057600080fd5b50600354610494906001600160a01b031681565b6040516001600160a01b0390911681526020016102c7565b3480156104b857600080fd5b506102586104c7366004614a05565b610e24565b3480156104d857600080fd5b506104ec6104e7366004614c07565b610e84565b6040805183516001600160a01b0316815260208085015115158183015284830151151582840152606080860151818401526080808701518185015260a0968701511515878501528551151560c0808601919091529286015160e0850152938501516101008401528401516101208301529183015115156101408201529282015161016084015201516101808201526101a0016102c7565b34801561058f57600080fd5b5061025861059e366004614bea565b610f87565b3480156105af57600080fd5b506102586105be366004614a05565b610fd1565b3480156105cf57600080fd5b506103446105de366004614a39565b600460209081526000938452604080852082529284528284209052825290205481565b61025861060f366004614c3a565b611027565b34801561062057600080fd5b5061063461062f366004614ca1565b61113a565b6040805194855260208501939093529183015260608201526080016102c7565b34801561066057600080fd5b5061034461066f366004614a05565b60066020526000908152604090205481565b34801561068d57600080fd5b5061034461069c366004614a05565b60086020526000908152604090205481565b3480156106ba57600080fd5b506106ce6106c9366004614a39565b611171565b60408051835181526020808501518183015284830151828401526060948501518583015283516001600160a01b0316608083015283015160a08201529082015160c082015291015160e0820152610100016102c7565b34801561073057600080fd5b5061025861073f366004614a20565b61124d565b34801561075057600080fd5b5061034461075f366004614d09565b6112e9565b34801561077057600080fd5b5061025861077f366004614a05565b61134a565b34801561079057600080fd5b5061034461079f366004614d3c565b6113ec565b3480156107b057600080fd5b506102586107bf366004614d8b565b6115be565b3480156107d057600080fd5b506103bb6107df366004614e21565b6118b7565b6102586118f3565b3480156107f857600080fd5b50610344610807366004614e9b565b600760209081526000948552604080862082529385528385208152918452828420909152825290205481565b34801561083f57600080fd5b5061085361084e366004614c07565b6118fe565b604080519283526020830191909152016102c7565b34801561087457600080fd5b50610258610883366004614c07565b6119fb565b34801561089457600080fd5b506102bb6108a3366004614c07565b611a6c565b3480156108b457600080fd5b506102586108c3366004614a39565b611aa7565b3480156108d457600080fd5b506103446108e3366004614c07565b611b67565b3480156108f457600080fd5b50610258610903366004614a39565b611b9f565b34801561091457600080fd5b50600054610494906001600160a01b031681565b34801561093457600080fd5b50610634610943366004614eef565b611c8c565b34801561095457600080fd5b50610258610963366004614a20565b611cb3565b60006109756000806118fe565b50905061098181611d90565b61098b8234611dd3565b5050565b610997611e2f565b6001600160a01b0385811660008181526002602090815260408083209489168084529482529182902080546001600160f81b0316600160f81b17905581516001815291517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a3610a10858585611aa7565b610a1b858584611b9f565b610a26858583610a2d565b5050505050565b610a35611e2f565b808162ffffff1614610a8e5760405162461bcd60e51b815260206004820152601f60248201527f6d67762f636f6e6669672f6f666665725f676173626173652f3234626974730060448201526064015b60405180910390fd5b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805462ffffff60601b191662ffffff60601b606088901b1617905590518481527fc5859916e5f3fc1ed4d2cfb8c7a6cf709580f228fa0c9d9e0fa468744c7e4a9191015b60405180910390a3505050565b6000610b143383611e9a565b60405133908390600081818185875af1925050503d8060008114610b54576040519150601f19603f3d011682016040523d82523d6000602084013e610b59565b606091505b50909392505050565b610b6a611e2f565b60015464ff000000001916640100000000176001556040517fbe26733c2bf6ff3ea5ba8cfe744422bd49052ff9ed5685c9e81e6f9321dbaddd90600090a1565b6000806000806000610bc08a8a8a8a8a33611f5f565b939e929d50909b50995090975095505050505050565b6000610be0614864565b610bea89896118fe565b6101208301819052610100830191909152610c04906120ac565b610c188161010001518261012001516120f8565b3415610c2857610c283334611dd3565b61012081015160181c63ffffffff166001016080820181905263ffffffff811614610c8b5760405162461bcd60e51b81526020600482015260136024820152726d67762f6f6666657249644f766572666c6f7760681b6044820152606401610a85565b6080810151610120820151610cb79160181b66ffffffff0000001666ffffffff00000019919091161790565b6101208201526001600160a01b03808a16825288166020820152604081018790526060810186905260a0810185905260c0810184905260e08101839052610cff816000612148565b61012081015181516001600160a01b03908116600090815260026020908152604080832082870151909416835292905220556080015198975050505050505050565b6001600160a01b038085166000818152600760209081526040808320888616808552908352818420338086529084528285209689168552959092528083208690555191939092917f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d91610db79188908890614f3c565b60405180910390a3506001949350505050565b610dd2611e2f565b60015460ff60501b191660ff60501b605083901b161760015560405181151581527f9b84fe4d9ffc14a6f7ec50c18884ee0d4bb8165aa718a28558df12ab4bd32b14906020015b60405180910390a150565b610e2c611e2f565b6001546001600160601b03166001600160601b0319606083901b16176001556040516001600160a01b03821681527ff592e42c32883b35bebfbf9d9b801570a25d5ccbba452310746ad2cfd20d548f90602001610e19565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152610efa6040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b600080610f0786866118fe565b91509150610f71826040805160c081018252606083811c8252605884901c60ff9081161515602080850191909152605086901c82161515848601529385901c61ffff1691830191909152602884901c62ffffff1660808301529290911c909116151560a082015290565b9350610f7c816128c5565b925050509250929050565b610f8f611e2f565b600154610f9c9082612973565b60015560405181151581527fbf39fbfab835c119637f4dbc4fb0f428c559c210200405d1ec25ddb50a93f9d490602001610e19565b610fd9611e2f565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f3090602001610e19565b61102f614864565b61103989896118fe565b6101208301819052610100830191909152611053906120ac565b6110678161010001518261012001516120f8565b3415611077576110773334611dd3565b6001600160a01b03808a16808352908916602080840182905260408085018b9052606085018a90526080850186905260a0850189905260c0850188905260e0850187905260009384526004825280842092845291815281832085845290529020546101408201526101208101516110ef826001612148565b610120820151811461112e5761012082015182516001600160a01b03908116600090815260026020908152604080832082880151909416835292905220555b50505050505050505050565b60008060008061114e8a8a8a8a8a8a61298a565b929650909450925090506111648a8a8786612c72565b9650965096509692505050565b61119c6040518060800160405280600081526020016000815260200160008152602001600081525090565b6111d0604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b6001600160a01b03808616600090815260046020908152604080832093881683529281528282208683529052205461120781612d72565b6001600160a01b038088166000908152600560209081526040808320938a1683529281528282208883529052205490935061124181612dd4565b92505050935093915050565b611255611e2f565b808162ffffff16146112a95760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f32346269747300000000000000006044820152606401610a85565b6001546112b69082611d71565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001610e19565b600033301461133a5760405162461bcd60e51b815260206004820152601f60248201527f6d67762f696e766572746564466c6173686c6f616e2f70726f746563746564006044820152606401610a85565b61134383612e43565b9392505050565b611352611e2f565b6001600160a01b03811661139e5760405162461bcd60e51b815260206004820152601360248201527206d67762f636f6e6669672f676f762f6e6f743606c1b6044820152606401610a85565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001610e19565b6000806113f986866118fe565b915050611405816120ac565b6001600160a01b038087166000818152600460209081526040808320948a16808452948252808320898452825280832054938352600582528083209483529381528382208883529052919091205461145d8160601c90565b6001600160a01b0316336001600160a01b0316146114bd5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f726574726163744f666665722f756e617574686f72697a65640000006044820152606401610a85565b6001600160601b0382161561152157826114ed89896114dc8660e01c90565b60c087901c63ffffffff1688612fc4565b935080841461151f576001600160a01b03808a166000908152600260209081526040808320938c168352929052208490555b505b61152f88888885858a6130a4565b841561156657603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca00020293506115663385611dd3565b866001600160a01b0316886001600160a01b03167fe2ce51fba856682424155a2d89b2ad1d2adde6ea0a9e3115b4b474cd6cb1798b886040516115ab91815260200190565b60405180910390a3505050949350505050565b428410156116035760405162461bcd60e51b81526020600482015260126024820152711b59dd8bdc195c9b5a5d0bd95e1c1a5c995960721b6044820152606401610a85565b6001600160a01b03878116600081815260086020908152604080832080546001810190915581517fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a2818501528f8716818401528e871660608201526080810195909552948b1660a085015260c084018a905260e084018590526101008085018a9052815180860390910181526101208501909152805191012061190160f01b6101408401527f0000000000000000000000000000000000000000000000000000000000000000610142840152610162830152906101820160408051601f198184030181528282528051602091820120600080855291840180845281905260ff89169284019290925260608301879052608083018690529092509060019060a0016020604051602081039080840390855afa158015611745573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381161580159061177b5750896001600160a01b0316816001600160a01b0316145b6117c75760405162461bcd60e51b815260206004820152601b60248201527f6d67762f7065726d69742f696e76616c69645369676e617475726500000000006044820152606401610a85565b87600760008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008b6001600160a01b03166001600160a01b03168152602001908152602001600020819055508a6001600160a01b03168c6001600160a01b03167f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d8c8c8c6040516118a193929190614f3c565b60405180910390a3505050505050505050505050565b60008060008060006118cd8b8b8b8b8b8b611f5f565b9398509196509450925090506118e58b8b8886612c72565b965096509650965096915050565b6118fc33610968565b565b6001546001600160a01b03838116600090815260026020908152604080832093861683529290522054605882901c60ff16156119f4576000806119418460601c90565b604051636968abd360e01b81526001600160a01b03888116600483015287811660248301529190911690636968abd3906044016040805180830381865afa158015611990573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119b49190614f60565b915091506119c58261ffff81161490565b156119d7576119d48483611d4e565b93505b6001600160701b03811681036119f157610f7c8382613119565b50505b9250929050565b611a03611e2f565b6001600160a01b03828116600081815260026020908152604080832094861680845294825280832080546001600160f81b031690558051928352517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a35050565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054605881901c60ff1615155b949350505050565b611aaf611e2f565b6101f4811115611af85760405162461bcd60e51b815260206004820152601460248201527306d67762f636f6e6669672f6665652f3c3d3530360641b6044820152606401610a85565b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805461ffff60e81b191661ffff60e81b60e888901b1617905590518481527f44a6d70a601a6f8a85c075467e9d7245897140cbf6dd505c9d9d764459f5fb649101610afb565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054603881901c63ffffffff16611a9f565b611ba7611e2f565b6001600160701b0381168114611bff5760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f64656e736974792f313132626974730000000000006044820152606401610a85565b6001600160a01b03808416600090815260026020908152604080832093861683529290522054611c2f9082613119565b6001600160a01b038481166000818152600260209081526040808320948816808452948252918290209490945551848152919290917f95f1a495c6d9d1a215995408f6ad898c2b33798d6eb3cf3220b4c6cc8b61b0649101610afb565b600080600080611ca089898989893361298a565b929c919b50995090975095505050505050565b611cbb611e2f565b61ffff81168114611d0e5760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f3136626974730000000000006044820152606401610a85565b600154611d1b9082611d4e565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001610e19565b60401b69ffff00000000000000001669ffff000000000000000019919091161790565b60281b67ffffff00000000001667ffffff000000000019919091161790565b602081901c60ff1615611dd05760405162461bcd60e51b81526020600482015260086024820152671b59dd8bd919585960c21b6044820152606401610a85565b50565b6001600160a01b03821660008181526006602052604090819020805484019055517f1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa09490611e239084815260200190565b60405180910390a25050565b6003546001600160a01b0316331480611e4757503330145b80611e5b57506003546001600160a01b0316155b6118fc5760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b6044820152606401610a85565b6001600160a01b03821660009081526006602052604090205481811015611f035760405162461bcd60e51b815260206004820152601960248201527f6d67762f696e73756666696369656e7450726f766973696f6e000000000000006044820152606401610a85565b6001600160a01b038316600081815260066020526040908190208484039055517f59c79d79be0fadf59fe689b6952b7ebe90201a3a1f00d4a31982377890bc604690611f529085815260200190565b60405180910390a2505050565b6000806000806000611f6f6148d0565b6001600160a01b03808d1682528b166020820152611f8d8c8c6118fe565b61010083015260e0820152611fa061492e565b6001600160a01b03881660a082015288151560c082015260e0820151610100830151611fcc91906120f8565b611fda8261010001516120ac565b6040517fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b990600090a161200f81838d8d61314a565b60808401519299509097509550612025906135d9565b602080830151835160808085015160e0860151604080518d81529687018c905286019190915260608501526001600160a01b03808d1694938116939216917ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec47910160405180910390a4806080015193508060e0015192505050965096509650965096915050565b605881901c60ff1615611dd05760405162461bcd60e51b81526020600482015260146024820152731b59dd8bdc99595b9d1c985b98de531bd8dad95960621b6044820152606401610a85565b61210182611d90565b61210d8160f81c151590565b61098b5760405162461bcd60e51b815260206004820152600c60248201526b6d67762f696e61637469766560a01b6044820152606401610a85565b60c082015161ffff81161461219f5760405162461bcd60e51b815260206004820152601e60248201527f6d67762f77726974654f666665722f67617370726963652f31366269747300006044820152606401610a85565b61010082015160401c61ffff168260c0015110156121ca5761010082015160401c61ffff1660c08301525b61010082015160281c62ffffff168260a00151111561222b5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f6761737265712f746f6f486967680000006044820152606401610a85565b600082606001511161227f5760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f746f6f4c6f7700000000006044820152606401610a85565b61012082015160781c6001600160701b031661012083015160601c62ffffff168360a001510102826060015110156122f95760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f64656e736974792f746f6f4c6f770000006044820152606401610a85565b60608201516001600160601b038116146123555760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f39366269747300000000006044820152606401610a85565b60408201516001600160601b038116146123b15760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f77616e74732f39366269747300000000006044820152606401610a85565b6000806123bd84613677565b9150915083602001516001600160a01b031684600001516001600160a01b03167f2b101f9ef8ca2761d91bea55ab50a4d051e9248088ff7314ddb8826839544c2a33876040015188606001518960c001518a60a001518b608001518a60405161246297969594939291906001600160a01b03979097168752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b60405180910390a383516001600160a01b03908116600090815260056020908152604080832082890151909416835292815282822060808801518352905290812054841561253c576124b48160601c90565b6001600160a01b0316336001600160a01b0316146125145760405162461bcd60e51b815260206004820152601c60248201527f6d67762f7570646174654f666665722f756e617574686f72697a6564000000006044820152606401610a85565b603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca00020291505b841580612556575060a0860151604882901c62ffffff1614155b8061256d575060c0860151602082901c61ffff1614155b8061258e575061012086015160601c62ffffff16603082901c62ffffff1614155b156126385761012086015160009060601c62ffffff1690506125fe338860a00151838a60c0015160201b65ffff000000001660309190911b68ffffff0000000000001660489290921b6bffffff0000000000000000001660609390931b6001600160601b03191692909217171790565b87516001600160a01b039081166000908152600560209081526040808320828d0151909416835292815282822060808c0151835290522055505b5060c08501516101208601516000919060601c62ffffff168760a001510102633b9aca00029050818111156126785761267333838303611e9a565b61268c565b8181101561268c5761268c33828403611dd3565b506101408501516001600160601b031615806126b0575061014085015160e01c8314155b1561283c57821561273657608085015185516001600160a01b039081166000908152600460209081526040808320828b01519094168352928152828220878352905220546126fd916138a3565b85516001600160a01b039081166000908152600460209081526040808320828b0151909416835292815282822087835290522055612769565b60808501516101208601516127629160381b63ffffffff60381b1663ffffffff60381b19919091161790565b6101208601525b81156127e057608085015185516001600160a01b039081166000908152600460208181526040808420828c018051871686529083528185208986528352818520548c518716865293835281852090519095168452938152838320878452905291902060e09290921b6001600160e01b039091161790555b8380156127fa57506101408501516001600160601b031615155b1561283c576128358560000151866020015161281b88610140015160e01c90565b61014089015160c01c63ffffffff16896101200151612fc4565b6101208601525b60408501516060808701516000926001600160601b03909116911b6bffffffffffffffffffffffff60601b1660c085901b63ffffffff60c01b1660e087901b17171786516001600160a01b039081166000908152600460209081526040808320828c015190941683529281528282206080909a0151825298909852909620959095555050505050565b6129096040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b60f882901c1515815260e882901c61ffff166020820152607882901c6001600160701b03166040820152606082811c62ffffff1690820152605882901c60ff1615156080820152603882901c63ffffffff90811660a083015260189290921c90911660c082015290565b60581b60ff60581b1660ff60581b19919091161790565b60008060008087886001600160a01b0316146129e85760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657257616e74732f313630626974730000006044820152606401610a85565b86876001600160a01b031614612a405760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657247697665732f313630626974730000006044820152606401610a85565b612a486148d0565b6001600160a01b03808c1682528a166020820152612a668b8b6118fe565b610100830181905260e083019190915260381c63ffffffff1660408083019182526001600160a01b03808e16600090815260046020908152838220928f1682529182528281209351815292905290205460608201526080810189905260a08101889052612ad161492e565b898152602081018990526001600160a01b03871660a082015287151560c082015260e0820151610100830151612b0791906120f8565b612b158261010001516120ac565b610100820151612b26906001612973565b82610100018181525050816101000151600260008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020819055507fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b960405160405180910390a1612bba818360016138c0565b612bc781608001516135d9565b866001600160a01b03168b6001600160a01b03168d6001600160a01b03167ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec478460400151856060015186608001518760e00151604051612c40949392919093845260208401929092526040830152606082015260800190565b60405180910390a460408101516060820151608083015160e090930151919e909d50919b509950975050505050505050565b6001600160a01b0380851660009081526007602090815260408083208785168452825280832093861683529281528282203383529052205481811015612ced5760405162461bcd60e51b815260206004820152601060248201526f6d67762f6c6f77416c6c6f77616e636560801b6044820152606401610a85565b6001600160a01b0380861660008181526007602090815260408083208986168085529083528184209589168452948252808320338085529252918290208686039081905591517f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d92612d63928992909190614f3c565b60405180910390a35050505050565b612d9d6040518060800160405280600081526020016000815260200160008152602001600081525090565b60e082901c815263ffffffff60c083901c1660208201526001600160601b03606083811c8216604084015292169181019190915290565b612e08604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b606082811c8252604883901c62ffffff908116602080850191909152603085901c90911660408401529290921c61ffff169181019190915290565b600080636c49c32c60e01b83604051602401612e5f9190614f84565b60408051808303601f190181529190526020810180516001600160e01b0319939093166001600160e01b0390931692909217909152905060c0830135604881901c62ffffff169060601c60005a9050826040820482031015612f0157604080516060810182527f6d67762f6e6f74456e6f756768476173466f724d616b65725472616465000000815260006020820181905291810191909152612f0190606081fd5b600080612f0f848688613b32565b915091505a8303965081612f5557612f5560405180606001604052806e1b59dd8bdb585ad95c94995d995c9d608a1b81526020018960001b815260200183815250606081fd5b6000612f73612f6760208b018b614a05565b86308c60800135613b60565b905080612fb857612fb86040518060600160405280741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b81526020018a60001b815260200184815250606081fd5b50505050505050919050565b60008315613037576001600160a01b03808716600090815260046020908152604080832093891683529281528282208783529052205461300490846138a3565b6001600160a01b038088166000908152600460209081526040808320938a16835292815282822088835290522055613054565b63ffffffff60381b19821663ffffffff60381b603885901b161791505b821561309b576001600160a01b038681166000908152600460209081526040808320938916835292815282822086835290522080546001600160e01b031660e086901b1790555b50949350505050565b6001600160601b03198316925080156130c45765ffff0000000019821691505b506001600160a01b039485166000818152600460209081526040808320979098168083529681528782208683528152878220949094559081526005835285812094815293825284842092845291905291902055565b60781b6dffffffffffffffffffffffffffff60781b166dffffffffffffffffffffffffffff60781b19919091161790565b60008080805b848110156135ce57600060408901819052606089015285858281811061317857613178615016565b90506080020160006004811061319057613190615016565b60209081029190910135604089810191825289516001600160a01b039081166000908152600485528281208c86018051841683529086528382208551835286528382205460608e019081528d518416835260058752848320915190931682528552828120935181529290935290205460c0890152516001600160601b0316158061325c575085858281811061322757613227615016565b90506080020160036004811061323f5761323f615016565b602002013561325a8860c0015162ffffff60489190911c1690565b115b6135c65785858281811061327257613272615016565b90506080020160016004811061328a5761328a615016565b60200201358686838181106132a1576132a1615016565b9050608002016001600481106132b9576132b9615016565b60200201356001600160601b0316146133145760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657257616e74732f393662697473000000006044820152606401610a85565b85858281811061332657613326615016565b90506080020160026004811061333e5761333e615016565b602002013586868381811061335557613355615016565b90506080020160026004811061336d5761336d615016565b60200201356001600160601b0316146133c85760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657247697665732f393662697473000000006044820152606401610a85565b8585828181106133da576133da615016565b9050608002016001600481106133f2576133f2615016565b6020020135608088015285858281811061340e5761340e615016565b90506080020160026004811061342657613426615016565b602002013560a0880152610100870151613441906001612973565b610100880181905287516001600160a01b039081166000908152600260209081526040808320828d015190941683529290529081209190915580806134868b8b613c48565b925092509250806f6d67762f74726164655375636365737360801b036134ad576001870196505b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b14613501576134fa8a600001518b602001516134e18d6060015160e01c90565b60608e015160c01c63ffffffff168e6101000151612fc4565b6101008b01525b6101008a0151613512906000612973565b8a610100018181525050896101000151600260008c600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008c602001516001600160a01b03166001600160a01b03168152602001908152602001600020819055506135808b8b614248565b61358a8b8b61434a565b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b146135b0576135b08b8b858585614436565b8a60400151860195508a60600151850194505050505b600101613150565b509450945094915050565b8015611dd057604051600090339083908381818185875af1925050503d8060008114613621576040519150601f19603f3d011682016040523d82523d6000602084013e613626565b606091505b505090508061098b5760405162461bcd60e51b815260206004820152601760248201527f6d67762f73656e6450656e616c747952657665727465640000000000000000006044820152606401610a85565b60008060008060008560e0015190506000866080015182146136cc5786516001600160a01b039081166000908152600460209081526040808320828c01519094168352928152828220858352905220546136d3565b8661014001515b90506001600160601b03811661372c5761012087015160381c63ffffffff1687516001600160a01b039081166000908152600460209081526040808320828d015190941683529281528282208483529052205490925090505b6137378782846144bc565b156137d15760005b60c082901c63ffffffff16156137b9575086516001600160a01b039081166000908152600460209081526040808320828c0151909416835292815282822063ffffffff60c086901c168084529152919020549061379d8983836144bc565b156137ad578093508192506137b3565b506137b9565b5061373f565b8260c083901c63ffffffff16909550935061385a9050565b60005b6137de8260e01c90565b156138475760006137ef8360e01c90565b89516001600160a01b039081166000908152600460209081526040808320828f0151909416835292815282822084835290522054925090506138328983836144bc565b1561383d5750613847565b92509050806137d4565b6138518260e01c90565b94509192508291505b8660800151841461386b5783613875565b61014087015160e01c5b876080015184146138865783613896565b61014088015160c01c63ffffffff165b9550955050505050915091565b60c01b63ffffffff60c01b1663ffffffff60c01b19919091161790565b8080156138e757508260c001516138de5760008260a00151116138e7565b60008260800151115b80156138f7575060008260400151115b15613ab35781516001600160a01b03908116600090815260056020908152604080832082870151909416835292815282822083860151835290529081205460c084015280806139468686613c48565b608088015160a089015160408a015160608b015160c08c015196995094975092955090939092906e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613a3d5760408b01518b51116139995760006139a2565b60408b01518b51035b60808b015260608b81015160208d01510360a08c01528a015160c01c63ffffffff168a6040018181525050600460008b600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b602001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b604001518152602001908152602001600020548a60600181815250505b613a5d8b8b886e1b59dd8bdb9bdd115e1958dd5d1959608a1b14156138c0565b60408a0183905260808a0185905260a08a0184905260608a0182905260c08a018190526e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613aa657613aa68b8b8a8a8a614436565b5050505050505050505050565b613ad28260000151836020015160008560400151866101000151612fc4565b6101008301819052613ae5906000612973565b610100830181905282516001600160a01b0390811660009081526002602090815260408083208288015190941683529290522055613b238383614248565b613b2d838361434a565b505050565b600080613b3d61497e565b60648185516020870160008a8af192508060448415020151915050935093915050565b6000806323b872dd60e01b858585604051602401613b8093929190614f3c565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509050600080876001600160a01b031683604051613bd0919061502c565b6000604051808303816000865af19150503d8060008114613c0d576040519150601f19603f3d011682016040523d82523d6000602084013e613c12565b606091505b5091509150818015613c3c575080511580613c3c575080806020019051810190613c3c9190615067565b98975050505050505050565b600080600080613c6885606001516001600160601b0360609190911c1690565b90506000613c8086606001516001600160601b031690565b608087015160a0880151919250908083028483021115613cc05750600095508594506e1b59dd8bdb9bdd115e1958dd5d1959608a1b935061424192505050565b8860c001518015613cd057508183105b80613ce757508860c00151158015613ce757508084105b15613cff576080880183905260a08801849052613d76565b8860c0015115613d4a57838202838181613d1b57613d1b615000565b0615613d28576001613d2b565b60005b60ff16848281613d3d57613d3d615000565b040160a08a015250613d76565b83600003613d5e5760808801839052613d76565b8381840281613d6f57613d6f615000565b0460808901525b50505050600080306001600160a01b031663aa4dd28260e01b878960a00151604051602401613da69291906150ea565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051613de4919061502c565b6000604051808303816000865af19150503d8060008114613e21576040519150601f19603f3d011682016040523d82523d6000602084013e613e26565b606091505b50915091508115613f805780806020019051810190613e459190615112565b94506f6d67762f74726164655375636365737360801b925085602001516001600160a01b031686600001516001600160a01b03167f1d81940ff2c3ac549c8acefd7c1b2ffb24aacc8b3cfa309c22abc3de79727f9d88604001518a60a001518a608001518b60a00151604051613edd94939291909384526001600160a01b039290921660208401526040830152606082015260800190565b60405180910390a360e086015160501c60ff1615613f5b5760e086015160a088015160405163cac1827160e01b815260609290921c9163cac1827191613f28918a91906004016150ea565b600060405180830381600087803b158015613f4257600080fd5b505af1158015613f56573d6000803e3d6000fd5b505050505b6080860151604088018051909101905260a08601516060880180519091019052614206565b602081015160408201516060830151909650945092506e1b59dd8bdb585ad95c94995d995c9d608a1b831480613fcd575082741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b145b80613fee575082731b59dd8bdb585ad95c949958d95a5d9951985a5b60621b145b156141005785602001516001600160a01b031686600001516001600160a01b03167f1d59c048edb5397821854bd12cbe02242b82101c677f949d076d14eb7bd8343688604001518a60a001518a608001518b60a001518960405161407d9594939291909485526001600160a01b0393909316602085015260408401919091526060830152608082015260a00190565b60405180910390a360e086015160501c60ff16156140fb5760e086015160a0880151604051631159507360e01b815260609290921c916311595073916140c8918a91906004016150ea565b600060405180830381600087803b1580156140e257600080fd5b505af11580156140f6573d6000803e3d6000fd5b505050505b614206565b827f6d67762f6e6f74456e6f756768476173466f724d616b657254726164650000000361416f5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6e6f74456e6f756768476173466f724d616b657254726164650000006044820152606401610a85565b82741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b036141ce5760405162461bcd60e51b81526020600482015260156024820152741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b6044820152606401610a85565b60405162461bcd60e51b815260206004820152600d60248201526c36b3bb17b9bbb0b822b93937b960991b6044820152606401610a85565b61423e86600001518760200151886040015189606001518a60c00151886f6d67762f74726164655375636365737360801b14156130a4565b50505b9250925092565b6101008101516000906127109060e81c61ffff168460400151028161426f5761426f615000565b04905080156142e557604083018051829003905260e0830181905281516000546142a391906001600160a01b031683614562565b6142e55760405162461bcd60e51b81526020600482015260136024820152721b59dd8bd99959551c985b9cd9995c91985a5b606a1b6044820152606401610a85565b604083015115613b2d5761430682600001518460a001518560400151614562565b613b2d5760405162461bcd60e51b815260206004820152601560248201527436b3bb17a6b3bb2330b4b62a37a830bcaa30b5b2b960591b6044820152606401610a85565b60a08201518151602083015160408086015160608701519151631154020b60e01b81526001600160a01b039485166004820152928416602484015260448301526064820152911690631154020b90608401600060405180830381600087803b1580156143b557600080fd5b505af11580156143c9573d6000803e3d6000fd5b5050505060006143e782602001518460a00151308660600151613b60565b905080613b2d5760405162461bcd60e51b815260206004820152601760248201527f6d67762f74616b65724661696c546f506179546f74616c0000000000000000006044820152606401610a85565b806f6d67762f74726164655375636365737360801b036144595761445984614637565b60c084015160481c62ffffff1680841115614472578093505b61448085858303858561467c565b84019350816f6d67762f74726164655375636365737360801b146144b4576144a885856147d2565b60808701805190910190525b505050505050565b6000816000036144ce57506001611343565b60408401516060858101516001600160601b039186901c82169291861691908084028284028082036145555789516001600160a01b039081166000908152600560209081526040808320828f015190941683529281528282208b835290529081205460481c62ffffff1660a08c015194029590930294909410159550611343945050505050565b1194506113439350505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839182918816906145c090859061502c565b6000604051808303816000865af19150503d80600081146145fd576040519150601f19603f3d011682016040523d82523d6000602084013e614602565b606091505b509150915081801561462c57508051158061462c57508080602001905181019061462c9190615067565b979650505050505050565b614657816020015161464d8360c0015160601c90565b8360a00151614562565b611dd057602081015160005460a083015161098b92916001600160a01b031690614562565b600080633d3d130d60e01b866040518060400160405280878152602001868152506040516024016146ae92919061512b565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319939093169290921790915260c087015190915060601c60005a90508660408204820310156147465760405162461bcd60e51b815260206004820181905260248201527f6d67762f6e6f74456e6f756768476173466f724d616b6572506f7374686f6f6b6044820152606401610a85565b600080614754848a87613b32565b915091505a83039550816147c55789602001516001600160a01b03168a600001516001600160a01b03167f51d5a3ecf332626d83c8207fe9bd22f38801f578c7eb222e2d811cd1b4c629a58c60400151846040516147bc929190918252602082015260400190565b60405180910390a35b5050505050949350505050565b60c082015160009062ffffff604882901c81169161ffff602082901c1660309190911c909116820102633b9aca00028184111561480d578193505b61010085015160009060601c62ffffff1660e08701519086019060401c61ffff16633b9aca0002029050818111156148425750805b61485b6148538760c0015160601c90565b828403611dd3565b95945050505050565b60405180610160016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60405180610120016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806101000160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001600015158152602001600081525090565b60405180608001604052806004906020820280368337509192915050565b80356001600160a01b03811681146149b357600080fd5b919050565b600080600080600060a086880312156149d057600080fd5b6149d98661499c565b94506149e76020870161499c565b94979496505050506040830135926060810135926080909101359150565b600060208284031215614a1757600080fd5b6113438261499c565b600060208284031215614a3257600080fd5b5035919050565b600080600060608486031215614a4e57600080fd5b614a578461499c565b9250614a656020850161499c565b9150604084013590509250925092565b60008083601f840112614a8757600080fd5b50813567ffffffffffffffff811115614a9f57600080fd5b6020830191508360208260071b85010111156119f457600080fd5b8015158114611dd057600080fd5b600080600080600060808688031215614ae057600080fd5b614ae98661499c565b9450614af76020870161499c565b9350604086013567ffffffffffffffff811115614b1357600080fd5b614b1f88828901614a75565b9094509250506060860135614b3381614aba565b809150509295509295909350565b600080600080600080600060e0888a031215614b5c57600080fd5b614b658861499c565b9650614b736020890161499c565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b60008060008060808587031215614bb557600080fd5b614bbe8561499c565b9350614bcc6020860161499c565b9250614bda6040860161499c565b9396929550929360600135925050565b600060208284031215614bfc57600080fd5b813561134381614aba565b60008060408385031215614c1a57600080fd5b614c238361499c565b9150614c316020840161499c565b90509250929050565b600080600080600080600080610100898b031215614c5757600080fd5b614c608961499c565b9750614c6e60208a0161499c565b979a9799505050506040860135956060810135956080820135955060a0820135945060c0820135935060e0909101359150565b60008060008060008060c08789031215614cba57600080fd5b614cc38761499c565b9550614cd16020880161499c565b945060408701359350606087013592506080870135614cef81614aba565b9150614cfd60a0880161499c565b90509295509295509295565b600080828403610140811215614d1e57600080fd5b61012080821215614d2e57600080fd5b849350610f7c81860161499c565b60008060008060808587031215614d5257600080fd5b614d5b8561499c565b9350614d696020860161499c565b9250604085013591506060850135614d8081614aba565b939692955090935050565b60008060008060008060008060006101208a8c031215614daa57600080fd5b614db38a61499c565b9850614dc160208b0161499c565b9750614dcf60408b0161499c565b9650614ddd60608b0161499c565b955060808a0135945060a08a0135935060c08a013560ff81168114614e0157600080fd5b8093505060e08a013591506101008a013590509295985092959850929598565b60008060008060008060a08789031215614e3a57600080fd5b614e438761499c565b9550614e516020880161499c565b9450604087013567ffffffffffffffff811115614e6d57600080fd5b614e7989828a01614a75565b9095509350506060870135614e8d81614aba565b9150614cfd6080880161499c565b60008060008060808587031215614eb157600080fd5b614eba8561499c565b9350614ec86020860161499c565b9250614ed66040860161499c565b9150614ee46060860161499c565b905092959194509250565b600080600080600060a08688031215614f0757600080fd5b614f108661499c565b9450614f1e6020870161499c565b935060408601359250606086013591506080860135614b3381614aba565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60008060408385031215614f7357600080fd5b505080516020909101519092909150565b61012081016001600160a01b0380614f9b8561499c565b16835280614fab6020860161499c565b1660208401525060408301356040830152606083013560608301526080830135608083015260a083013560a083015260c083013560c083015260e083013560e083015261010080840135818401525092915050565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000825160005b8181101561504d5760208186018101518583015201615033565b8181111561505c576000828501525b509190910192915050565b60006020828403121561507957600080fd5b815161134381614aba565b60018060a01b038082511683528060208301511660208401525060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152505050565b61014081016150f98285615084565b6001600160a01b03929092166101209190910152919050565b60006020828403121561512457600080fd5b5051919050565b610160810161513a8285615084565b82516101208301526020830151610140830152939250505056fea2646970667358221220f1963d9c2b3d628f1434924334993b3b07ae40980b0db947c650656b65407bf364736f6c634300080e003360a06040523480156200001157600080fd5b50604051620055e4380380620055e4833981016040819052620000349162000484565b828282604051806040016040528060088152602001674d616e67726f766560c01b815250808484847f72201d073f249840099a96530e189c4291c1852040b1e96ff1f606db656be4ff60405160405180910390a1620000938362000165565b6200009e82620001c4565b620000a98162000277565b620000b48362000327565b5050815160208084019190912060408051808201825260018152603160f81b9084015280517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f938101939093528201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c001905060408051601f19818403018152919052805160209091012060805250620004c99650505050505050565b6200016f620003d8565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f30906020015b60405180910390a150565b620001ce620003d8565b61ffff81168114620002275760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f31366269747300000000000060448201526064015b60405180910390fd5b62000243816001546200044960201b62001e221790919060201c565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001620001b9565b62000281620003d8565b808162ffffff1614620002d75760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f323462697473000000000000000060448201526064016200021e565b620002f3816001546200046760201b62001e451790919060201c565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001620001b9565b62000331620003d8565b6001600160a01b038116620003895760405162461bcd60e51b815260206004820152601360248201527f6d67762f636f6e6669672f676f762f6e6f74300000000000000000000000000060448201526064016200021e565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001620001b9565b6003546001600160a01b0316331480620003f157503330145b806200040657506003546001600160a01b0316155b620004475760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b60448201526064016200021e565b565b60401b69ffff00000000000000001661ffff60401b19919091161790565b60281b67ffffff00000000001662ffffff60281b19919091161790565b6000806000606084860312156200049a57600080fd5b83516001600160a01b0381168114620004b257600080fd5b602085015160409095015190969495509392505050565b6080516150f8620004ec60003960008181610364015261177e01526150f86000f3fe60806040526004361061024a5760003560e01c80636d27de6711610139578063b60d4288116100b6578063dc7e98df1161007a578063dc7e98df146108a8578063def5ddaa146108c8578063fbb66910146108e8578063fbfa77cf14610908578063fbffe5fd14610928578063fcaa7e2e1461094857600080fd5b8063b60d4288146107e4578063c7bb25d0146107ec578063cbf75c9a14610833578063d0ee509914610868578063db20266f1461088857600080fd5b8063aa4dd282116100fd578063aa4dd28214610744578063ab033ea914610764578063ad97db1b14610784578063b09d2a16146107a4578063b2b12057146107c457600080fd5b80636d27de671461061457806370a08231146106545780637ecebe00146106815780638c66715c146106ae57806395999ee31461072457600080fd5b80635722647b116101c7578063644e67031161018b578063644e6703146104cc5780636804f613146105835780636817031b146105a357806368c13d6b146105c35780636a4f76911461060157600080fd5b80635722647b146103f657806359eba454146104345780635a611f4e146104545780635aa6e675146104745780635cd82390146104ac57600080fd5b806330adf81f1161020e57806330adf81f146103105780633644e5151461035257806341c0e1b51461038657806346e142fa1461039b57806349f6d2dc146103e357600080fd5b80630b73a18f1461025f578063230244081461027f578063275074581461029257806327d097c6146102d05780632e1a7d4d146102f057600080fd5b3661025a5761025833610968565b005b600080fd5b34801561026b57600080fd5b5061025861027a366004614926565b61098f565b61025861028d366004614973565b610968565b34801561029e57600080fd5b506102bb6102ad36600461498e565b6001600160601b0316151590565b60405190151581526020015b60405180910390f35b3480156102dc57600080fd5b506102586102eb3660046149a7565b610a2d565b3480156102fc57600080fd5b506102bb61030b36600461498e565b610b08565b34801561031c57600080fd5b506103447fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a281565b6040519081526020016102c7565b34801561035e57600080fd5b506103447f000000000000000000000000000000000000000000000000000000000000000081565b34801561039257600080fd5b50610258610b62565b3480156103a757600080fd5b506103bb6103b6366004614a36565b610baa565b604080519586526020860194909452928401919091526060830152608082015260a0016102c7565b6103446103f1366004614aaf565b610bd6565b34801561040257600080fd5b506103446104113660046149a7565b600560209081526000938452604080852082529284528284209052825290205481565b34801561044057600080fd5b506102bb61044f366004614b0d565b610d41565b34801561046057600080fd5b5061025861046f366004614b58565b610dca565b34801561048057600080fd5b50600354610494906001600160a01b031681565b6040516001600160a01b0390911681526020016102c7565b3480156104b857600080fd5b506102586104c7366004614973565b610e24565b3480156104d857600080fd5b506104ec6104e7366004614b75565b610e84565b6040805183516001600160a01b0316815260208085015115158183015284830151151582840152606080860151818401526080808701518185015260a0968701511515878501528551151560c0808601919091529286015160e0850152938501516101008401528401516101208301529183015115156101408201529282015161016084015201516101808201526101a0016102c7565b34801561058f57600080fd5b5061025861059e366004614b58565b610f87565b3480156105af57600080fd5b506102586105be366004614973565b610fd1565b3480156105cf57600080fd5b506103446105de3660046149a7565b600460209081526000938452604080852082529284528284209052825290205481565b61025861060f366004614ba8565b611027565b34801561062057600080fd5b5061063461062f366004614c0f565b61113a565b6040805194855260208501939093529183015260608201526080016102c7565b34801561066057600080fd5b5061034461066f366004614973565b60066020526000908152604090205481565b34801561068d57600080fd5b5061034461069c366004614973565b60086020526000908152604090205481565b3480156106ba57600080fd5b506106ce6106c93660046149a7565b611171565b60408051835181526020808501518183015284830151828401526060948501518583015283516001600160a01b0316608083015283015160a08201529082015160c082015291015160e0820152610100016102c7565b34801561073057600080fd5b5061025861073f36600461498e565b61124d565b34801561075057600080fd5b5061034461075f366004614c77565b6112e9565b34801561077057600080fd5b5061025861077f366004614973565b61141e565b34801561079057600080fd5b5061034461079f366004614caa565b6114c0565b3480156107b057600080fd5b506102586107bf366004614cf9565b611692565b3480156107d057600080fd5b506103bb6107df366004614d8f565b61198b565b6102586119c7565b3480156107f857600080fd5b50610344610807366004614e09565b600760209081526000948552604080862082529385528385208152918452828420909152825290205481565b34801561083f57600080fd5b5061085361084e366004614b75565b6119d2565b604080519283526020830191909152016102c7565b34801561087457600080fd5b50610258610883366004614b75565b611acf565b34801561089457600080fd5b506102bb6108a3366004614b75565b611b40565b3480156108b457600080fd5b506102586108c33660046149a7565b611b7b565b3480156108d457600080fd5b506103446108e3366004614b75565b611c3b565b3480156108f457600080fd5b506102586109033660046149a7565b611c73565b34801561091457600080fd5b50600054610494906001600160a01b031681565b34801561093457600080fd5b50610634610943366004614e5d565b611d60565b34801561095457600080fd5b5061025861096336600461498e565b611d87565b60006109756000806119d2565b50905061098181611e64565b61098b8234611ea7565b5050565b610997611f03565b6001600160a01b0385811660008181526002602090815260408083209489168084529482529182902080546001600160f81b0316600160f81b17905581516001815291517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a3610a10858585611b7b565b610a1b858584611c73565b610a26858583610a2d565b5050505050565b610a35611f03565b808162ffffff1614610a8e5760405162461bcd60e51b815260206004820152601f60248201527f6d67762f636f6e6669672f6f666665725f676173626173652f3234626974730060448201526064015b60405180910390fd5b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805462ffffff60601b191662ffffff60601b606088901b1617905590518481527fc5859916e5f3fc1ed4d2cfb8c7a6cf709580f228fa0c9d9e0fa468744c7e4a9191015b60405180910390a3505050565b6000610b143383611f6e565b60405133908390600081818185875af1925050503d8060008114610b54576040519150601f19603f3d011682016040523d82523d6000602084013e610b59565b606091505b50909392505050565b610b6a611f03565b60015464ff000000001916640100000000176001556040517fbe26733c2bf6ff3ea5ba8cfe744422bd49052ff9ed5685c9e81e6f9321dbaddd90600090a1565b6000806000806000610bc08a8a8a8a8a33612033565b939e929d50909b50995090975095505050505050565b6000610be06147d2565b610bea89896119d2565b6101208301819052610100830191909152610c0490612180565b610c188161010001518261012001516121cc565b3415610c2857610c283334611ea7565b61012081015160181c63ffffffff166001016080820181905263ffffffff811614610c8b5760405162461bcd60e51b81526020600482015260136024820152726d67762f6f6666657249644f766572666c6f7760681b6044820152606401610a85565b6080810151610120820151610cb79160181b66ffffffff0000001666ffffffff00000019919091161790565b6101208201526001600160a01b03808a16825288166020820152604081018790526060810186905260a0810185905260c0810184905260e08101839052610cff81600061221c565b61012081015181516001600160a01b03908116600090815260026020908152604080832082870151909416835292905220556080015198975050505050505050565b6001600160a01b038085166000818152600760209081526040808320888616808552908352818420338086529084528285209689168552959092528083208690555191939092917f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d91610db79188908890614eaa565b60405180910390a3506001949350505050565b610dd2611f03565b60015460ff60501b191660ff60501b605083901b161760015560405181151581527f9b84fe4d9ffc14a6f7ec50c18884ee0d4bb8165aa718a28558df12ab4bd32b14906020015b60405180910390a150565b610e2c611f03565b6001546001600160601b03166001600160601b0319606083901b16176001556040516001600160a01b03821681527ff592e42c32883b35bebfbf9d9b801570a25d5ccbba452310746ad2cfd20d548f90602001610e19565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152610efa6040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b600080610f0786866119d2565b91509150610f71826040805160c081018252606083811c8252605884901c60ff9081161515602080850191909152605086901c82161515848601529385901c61ffff1691830191909152602884901c62ffffff1660808301529290911c909116151560a082015290565b9350610f7c81612999565b925050509250929050565b610f8f611f03565b600154610f9c9082612a47565b60015560405181151581527fbf39fbfab835c119637f4dbc4fb0f428c559c210200405d1ec25ddb50a93f9d490602001610e19565b610fd9611f03565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f3090602001610e19565b61102f6147d2565b61103989896119d2565b610120830181905261010083019190915261105390612180565b6110678161010001518261012001516121cc565b3415611077576110773334611ea7565b6001600160a01b03808a16808352908916602080840182905260408085018b9052606085018a90526080850186905260a0850189905260c0850188905260e0850187905260009384526004825280842092845291815281832085845290529020546101408201526101208101516110ef82600161221c565b610120820151811461112e5761012082015182516001600160a01b03908116600090815260026020908152604080832082880151909416835292905220555b50505050505050505050565b60008060008061114e8a8a8a8a8a8a612a5e565b929650909450925090506111648a8a8786612d46565b9650965096509692505050565b61119c6040518060800160405280600081526020016000815260200160008152602001600081525090565b6111d0604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b6001600160a01b03808616600090815260046020908152604080832093881683529281528282208683529052205461120781612e46565b6001600160a01b038088166000908152600560209081526040808320938a1683529281528282208883529052205490935061124181612ea8565b92505050935093915050565b611255611f03565b808162ffffff16146112a95760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f32346269747300000000000000006044820152606401610a85565b6001546112b69082611e45565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001610e19565b600033301461133a5760405162461bcd60e51b815260206004820152601760248201527f6d67762f666c6173686c6f616e2f70726f7465637465640000000000000000006044820152606401610a85565b61135961134d6040850160208601614973565b83308660a00135612f17565b156113da576113836113716040850160208601614973565b60c085013560601c8560a00135612fff565b1561139857611391836130d6565b9050611418565b60408051606081018252731b59dd8bdb585ad95c949958d95a5d9951985a5b60621b8152600060208201819052918101919091526113d590606081fd5b611418565b60408051606081018252741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b81526000602082018190529181019190915261141890606081fd5b92915050565b611426611f03565b6001600160a01b0381166114725760405162461bcd60e51b815260206004820152601360248201527206d67762f636f6e6669672f676f762f6e6f743606c1b6044820152606401610a85565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001610e19565b6000806114cd86866119d2565b9150506114d981612180565b6001600160a01b038087166000818152600460209081526040808320948a1680845294825280832089845282528083205493835260058252808320948352938152838220888352905291909120546115318160601c90565b6001600160a01b0316336001600160a01b0316146115915760405162461bcd60e51b815260206004820152601d60248201527f6d67762f726574726163744f666665722f756e617574686f72697a65640000006044820152606401610a85565b6001600160601b038216156115f557826115c189896115b08660e01c90565b60c087901c63ffffffff1688613257565b93508084146115f3576001600160a01b03808a166000908152600260209081526040808320938c168352929052208490555b505b61160388888885858a613337565b841561163a57603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca000202935061163a3385611ea7565b866001600160a01b0316886001600160a01b03167fe2ce51fba856682424155a2d89b2ad1d2adde6ea0a9e3115b4b474cd6cb1798b8860405161167f91815260200190565b60405180910390a3505050949350505050565b428410156116d75760405162461bcd60e51b81526020600482015260126024820152711b59dd8bdc195c9b5a5d0bd95e1c1a5c995960721b6044820152606401610a85565b6001600160a01b03878116600081815260086020908152604080832080546001810190915581517fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a2818501528f8716818401528e871660608201526080810195909552948b1660a085015260c084018a905260e084018590526101008085018a9052815180860390910181526101208501909152805191012061190160f01b6101408401527f0000000000000000000000000000000000000000000000000000000000000000610142840152610162830152906101820160408051601f198184030181528282528051602091820120600080855291840180845281905260ff89169284019290925260608301879052608083018690529092509060019060a0016020604051602081039080840390855afa158015611819573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381161580159061184f5750896001600160a01b0316816001600160a01b0316145b61189b5760405162461bcd60e51b815260206004820152601b60248201527f6d67762f7065726d69742f696e76616c69645369676e617475726500000000006044820152606401610a85565b87600760008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008b6001600160a01b03166001600160a01b03168152602001908152602001600020819055508a6001600160a01b03168c6001600160a01b03167f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d8c8c8c60405161197593929190614eaa565b60405180910390a3505050505050505050505050565b60008060008060006119a18b8b8b8b8b8b612033565b9398509196509450925090506119b98b8b8886612d46565b965096509650965096915050565b6119d033610968565b565b6001546001600160a01b03838116600090815260026020908152604080832093861683529290522054605882901c60ff1615611ac857600080611a158460601c90565b604051636968abd360e01b81526001600160a01b03888116600483015287811660248301529190911690636968abd3906044016040805180830381865afa158015611a64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a889190614ece565b91509150611a998261ffff81161490565b15611aab57611aa88483611e22565b93505b6001600160701b0381168103611ac557610f7c83826133ac565b50505b9250929050565b611ad7611f03565b6001600160a01b03828116600081815260026020908152604080832094861680845294825280832080546001600160f81b031690558051928352517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a35050565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054605881901c60ff1615155b949350505050565b611b83611f03565b6101f4811115611bcc5760405162461bcd60e51b815260206004820152601460248201527306d67762f636f6e6669672f6665652f3c3d3530360641b6044820152606401610a85565b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805461ffff60e81b191661ffff60e81b60e888901b1617905590518481527f44a6d70a601a6f8a85c075467e9d7245897140cbf6dd505c9d9d764459f5fb649101610afb565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054603881901c63ffffffff16611b73565b611c7b611f03565b6001600160701b0381168114611cd35760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f64656e736974792f313132626974730000000000006044820152606401610a85565b6001600160a01b03808416600090815260026020908152604080832093861683529290522054611d0390826133ac565b6001600160a01b038481166000818152600260209081526040808320948816808452948252918290209490945551848152919290917f95f1a495c6d9d1a215995408f6ad898c2b33798d6eb3cf3220b4c6cc8b61b0649101610afb565b600080600080611d74898989898933612a5e565b929c919b50995090975095505050505050565b611d8f611f03565b61ffff81168114611de25760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f3136626974730000000000006044820152606401610a85565b600154611def9082611e22565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001610e19565b60401b69ffff00000000000000001669ffff000000000000000019919091161790565b60281b67ffffff00000000001667ffffff000000000019919091161790565b602081901c60ff1615611ea45760405162461bcd60e51b81526020600482015260086024820152671b59dd8bd919585960c21b6044820152606401610a85565b50565b6001600160a01b03821660008181526006602052604090819020805484019055517f1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa09490611ef79084815260200190565b60405180910390a25050565b6003546001600160a01b0316331480611f1b57503330145b80611f2f57506003546001600160a01b0316155b6119d05760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b6044820152606401610a85565b6001600160a01b03821660009081526006602052604090205481811015611fd75760405162461bcd60e51b815260206004820152601960248201527f6d67762f696e73756666696369656e7450726f766973696f6e000000000000006044820152606401610a85565b6001600160a01b038316600081815260066020526040908190208484039055517f59c79d79be0fadf59fe689b6952b7ebe90201a3a1f00d4a31982377890bc6046906120269085815260200190565b60405180910390a2505050565b600080600080600061204361483e565b6001600160a01b03808d1682528b1660208201526120618c8c6119d2565b61010083015260e082015261207461489c565b6001600160a01b03881660a082015288151560c082015260e08201516101008301516120a091906121cc565b6120ae826101000151612180565b6040517fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b990600090a16120e381838d8d6133dd565b608084015192995090975095506120f990613862565b602080830151835160808085015160e0860151604080518d81529687018c905286019190915260608501526001600160a01b03808d1694938116939216917ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec47910160405180910390a4806080015193508060e0015192505050965096509650965096915050565b605881901c60ff1615611ea45760405162461bcd60e51b81526020600482015260146024820152731b59dd8bdc99595b9d1c985b98de531bd8dad95960621b6044820152606401610a85565b6121d582611e64565b6121e18160f81c151590565b61098b5760405162461bcd60e51b815260206004820152600c60248201526b6d67762f696e61637469766560a01b6044820152606401610a85565b60c082015161ffff8116146122735760405162461bcd60e51b815260206004820152601e60248201527f6d67762f77726974654f666665722f67617370726963652f31366269747300006044820152606401610a85565b61010082015160401c61ffff168260c00151101561229e5761010082015160401c61ffff1660c08301525b61010082015160281c62ffffff168260a0015111156122ff5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f6761737265712f746f6f486967680000006044820152606401610a85565b60008260600151116123535760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f746f6f4c6f7700000000006044820152606401610a85565b61012082015160781c6001600160701b031661012083015160601c62ffffff168360a001510102826060015110156123cd5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f64656e736974792f746f6f4c6f770000006044820152606401610a85565b60608201516001600160601b038116146124295760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f39366269747300000000006044820152606401610a85565b60408201516001600160601b038116146124855760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f77616e74732f39366269747300000000006044820152606401610a85565b60008061249184613900565b9150915083602001516001600160a01b031684600001516001600160a01b03167f2b101f9ef8ca2761d91bea55ab50a4d051e9248088ff7314ddb8826839544c2a33876040015188606001518960c001518a60a001518b608001518a60405161253697969594939291906001600160a01b03979097168752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b60405180910390a383516001600160a01b039081166000908152600560209081526040808320828901519094168352928152828220608088015183529052908120548415612610576125888160601c90565b6001600160a01b0316336001600160a01b0316146125e85760405162461bcd60e51b815260206004820152601c60248201527f6d67762f7570646174654f666665722f756e617574686f72697a6564000000006044820152606401610a85565b603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca00020291505b84158061262a575060a0860151604882901c62ffffff1614155b80612641575060c0860151602082901c61ffff1614155b80612662575061012086015160601c62ffffff16603082901c62ffffff1614155b1561270c5761012086015160009060601c62ffffff1690506126d2338860a00151838a60c0015160201b65ffff000000001660309190911b68ffffff0000000000001660489290921b6bffffff0000000000000000001660609390931b6001600160601b03191692909217171790565b87516001600160a01b039081166000908152600560209081526040808320828d0151909416835292815282822060808c0151835290522055505b5060c08501516101208601516000919060601c62ffffff168760a001510102633b9aca000290508181111561274c5761274733838303611f6e565b612760565b818110156127605761276033828403611ea7565b506101408501516001600160601b03161580612784575061014085015160e01c8314155b1561291057821561280a57608085015185516001600160a01b039081166000908152600460209081526040808320828b01519094168352928152828220878352905220546127d191613b2c565b85516001600160a01b039081166000908152600460209081526040808320828b015190941683529281528282208783529052205561283d565b60808501516101208601516128369160381b63ffffffff60381b1663ffffffff60381b19919091161790565b6101208601525b81156128b457608085015185516001600160a01b039081166000908152600460208181526040808420828c018051871686529083528185208986528352818520548c518716865293835281852090519095168452938152838320878452905291902060e09290921b6001600160e01b039091161790555b8380156128ce57506101408501516001600160601b031615155b1561291057612909856000015186602001516128ef88610140015160e01c90565b61014089015160c01c63ffffffff16896101200151613257565b6101208601525b60408501516060808701516000926001600160601b03909116911b6bffffffffffffffffffffffff60601b1660c085901b63ffffffff60c01b1660e087901b17171786516001600160a01b039081166000908152600460209081526040808320828c015190941683529281528282206080909a0151825298909852909620959095555050505050565b6129dd6040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b60f882901c1515815260e882901c61ffff166020820152607882901c6001600160701b03166040820152606082811c62ffffff1690820152605882901c60ff1615156080820152603882901c63ffffffff90811660a083015260189290921c90911660c082015290565b60581b60ff60581b1660ff60581b19919091161790565b60008060008087886001600160a01b031614612abc5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657257616e74732f313630626974730000006044820152606401610a85565b86876001600160a01b031614612b145760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657247697665732f313630626974730000006044820152606401610a85565b612b1c61483e565b6001600160a01b03808c1682528a166020820152612b3a8b8b6119d2565b610100830181905260e083019190915260381c63ffffffff1660408083019182526001600160a01b03808e16600090815260046020908152838220928f1682529182528281209351815292905290205460608201526080810189905260a08101889052612ba561489c565b898152602081018990526001600160a01b03871660a082015287151560c082015260e0820151610100830151612bdb91906121cc565b612be9826101000151612180565b610100820151612bfa906001612a47565b82610100018181525050816101000151600260008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020819055507fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b960405160405180910390a1612c8e81836001613b49565b612c9b8160800151613862565b866001600160a01b03168b6001600160a01b03168d6001600160a01b03167ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec478460400151856060015186608001518760e00151604051612d14949392919093845260208401929092526040830152606082015260800190565b60405180910390a460408101516060820151608083015160e090930151919e909d50919b509950975050505050505050565b6001600160a01b0380851660009081526007602090815260408083208785168452825280832093861683529281528282203383529052205481811015612dc15760405162461bcd60e51b815260206004820152601060248201526f6d67762f6c6f77416c6c6f77616e636560801b6044820152606401610a85565b6001600160a01b0380861660008181526007602090815260408083208986168085529083528184209589168452948252808320338085529252918290208686039081905591517f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d92612e37928992909190614eaa565b60405180910390a35050505050565b612e716040518060800160405280600081526020016000815260200160008152602001600081525090565b60e082901c815263ffffffff60c083901c1660208201526001600160601b03606083811c8216604084015292169181019190915290565b612edc604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b606082811c8252604883901c62ffffff908116602080850191909152603085901c90911660408401529290921c61ffff169181019190915290565b6000806323b872dd60e01b858585604051602401612f3793929190614eaa565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509050600080876001600160a01b031683604051612f879190614ef2565b6000604051808303816000865af19150503d8060008114612fc4576040519150601f19603f3d011682016040523d82523d6000602084013e612fc9565b606091505b5091509150818015612ff3575080511580612ff3575080806020019051810190612ff39190614f2d565b98975050505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928391829188169061305d908590614ef2565b6000604051808303816000865af19150503d806000811461309a576040519150601f19603f3d011682016040523d82523d6000602084013e61309f565b606091505b50915091508180156130c95750805115806130c95750808060200190518101906130c99190614f2d565b93505050505b9392505050565b600080636c49c32c60e01b836040516024016130f29190614f4a565b60408051808303601f190181529190526020810180516001600160e01b0319939093166001600160e01b0390931692909217909152905060c0830135604881901c62ffffff169060601c60005a905082604082048203101561319457604080516060810182527f6d67762f6e6f74456e6f756768476173466f724d616b6572547261646500000081526000602082018190529181019190915261319490606081fd5b6000806131a2848688613db1565b915091505a83039650816131e8576131e860405180606001604052806e1b59dd8bdb585ad95c94995d995c9d608a1b81526020018960001b815260200183815250606081fd5b60006132066131fa60208b018b614973565b86308c60800135612f17565b90508061324b5761324b6040518060600160405280741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b81526020018a60001b815260200184815250606081fd5b50505050505050919050565b600083156132ca576001600160a01b0380871660009081526004602090815260408083209389168352928152828220878352905220546132979084613b2c565b6001600160a01b038088166000908152600460209081526040808320938a168352928152828220888352905220556132e7565b63ffffffff60381b19821663ffffffff60381b603885901b161791505b821561332e576001600160a01b038681166000908152600460209081526040808320938916835292815282822086835290522080546001600160e01b031660e086901b1790555b50949350505050565b6001600160601b03198316925080156133575765ffff0000000019821691505b506001600160a01b039485166000818152600460209081526040808320979098168083529681528782208683528152878220949094559081526005835285812094815293825284842092845291905291902055565b60781b6dffffffffffffffffffffffffffff60781b166dffffffffffffffffffffffffffff60781b19919091161790565b60008080805b8481101561385757600060408901819052606089015285858281811061340b5761340b614fdc565b90506080020160006004811061342357613423614fdc565b60209081029190910135604089810191825289516001600160a01b039081166000908152600485528281208c86018051841683529086528382208551835286528382205460608e019081528d518416835260058752848320915190931682528552828120935181529290935290205460c0890152516001600160601b031615806134ef57508585828181106134ba576134ba614fdc565b9050608002016003600481106134d2576134d2614fdc565b60200201356134ed8860c0015162ffffff60489190911c1690565b115b61384f5785858281811061350557613505614fdc565b90506080020160016004811061351d5761351d614fdc565b602002013586868381811061353457613534614fdc565b90506080020160016004811061354c5761354c614fdc565b60200201356001600160601b0316146135a75760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657257616e74732f393662697473000000006044820152606401610a85565b8585828181106135b9576135b9614fdc565b9050608002016002600481106135d1576135d1614fdc565b60200201358686838181106135e8576135e8614fdc565b90506080020160026004811061360057613600614fdc565b60200201356001600160601b03161461365b5760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657247697665732f393662697473000000006044820152606401610a85565b85858281811061366d5761366d614fdc565b90506080020160016004811061368557613685614fdc565b602002013560808801528585828181106136a1576136a1614fdc565b9050608002016002600481106136b9576136b9614fdc565b602002013560a08801526101008701516136d4906001612a47565b610100880181905287516001600160a01b039081166000908152600260209081526040808320828d015190941683529290529081209190915580806137198b8b613ddf565b925092509250806f6d67762f74726164655375636365737360801b03613740576001870196505b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b146137945761378d8a600001518b602001516137748d6060015160e01c90565b60608e015160c01c63ffffffff168e6101000151613257565b6101008b01525b6101008a01516137a5906000612a47565b8a610100018181525050896101000151600260008c600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008c602001516001600160a01b03166001600160a01b03168152602001908152602001600020819055506138138b8b6143df565b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b14613839576138398b8b8585856144e1565b8a60400151860195508a60600151850194505050505b6001016133e3565b509450945094915050565b8015611ea457604051600090339083908381818185875af1925050503d80600081146138aa576040519150601f19603f3d011682016040523d82523d6000602084013e6138af565b606091505b505090508061098b5760405162461bcd60e51b815260206004820152601760248201527f6d67762f73656e6450656e616c747952657665727465640000000000000000006044820152606401610a85565b60008060008060008560e0015190506000866080015182146139555786516001600160a01b039081166000908152600460209081526040808320828c015190941683529281528282208583529052205461395c565b8661014001515b90506001600160601b0381166139b55761012087015160381c63ffffffff1687516001600160a01b039081166000908152600460209081526040808320828d015190941683529281528282208483529052205490925090505b6139c0878284614544565b15613a5a5760005b60c082901c63ffffffff1615613a42575086516001600160a01b039081166000908152600460209081526040808320828c0151909416835292815282822063ffffffff60c086901c1680845291529190205490613a26898383614544565b15613a3657809350819250613a3c565b50613a42565b506139c8565b8260c083901c63ffffffff169095509350613ae39050565b60005b613a678260e01c90565b15613ad0576000613a788360e01c90565b89516001600160a01b039081166000908152600460209081526040808320828f015190941683529281528282208483529052205492509050613abb898383614544565b15613ac65750613ad0565b9250905080613a5d565b613ada8260e01c90565b94509192508291505b86608001518414613af45783613afe565b61014087015160e01c5b87608001518414613b0f5783613b1f565b61014088015160c01c63ffffffff165b9550955050505050915091565b60c01b63ffffffff60c01b1663ffffffff60c01b19919091161790565b808015613b7057508260c00151613b675760008260a0015111613b70565b60008260800151115b8015613b80575060008260400151115b15613d3c5781516001600160a01b03908116600090815260056020908152604080832082870151909416835292815282822083860151835290529081205460c08401528080613bcf8686613ddf565b608088015160a089015160408a015160608b015160c08c015196995094975092955090939092906e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613cc65760408b01518b5111613c22576000613c2b565b60408b01518b51035b60808b015260608b81015160208d01510360a08c01528a015160c01c63ffffffff168a6040018181525050600460008b600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b602001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b604001518152602001908152602001600020548a60600181815250505b613ce68b8b886e1b59dd8bdb9bdd115e1958dd5d1959608a1b1415613b49565b60408a0183905260808a0185905260a08a0184905260608a0182905260c08a018190526e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613d2f57613d2f8b8b8a8a8a6144e1565b5050505050505050505050565b613d5b8260000151836020015160008560400151866101000151613257565b6101008301819052613d6e906000612a47565b610100830181905282516001600160a01b0390811660009081526002602090815260408083208288015190941683529290522055613dac83836143df565b505050565b600080613dbc6148ec565b60648185516020870160008a8af192508060448415020151915050935093915050565b600080600080613dff85606001516001600160601b0360609190911c1690565b90506000613e1786606001516001600160601b031690565b608087015160a0880151919250908083028483021115613e575750600095508594506e1b59dd8bdb9bdd115e1958dd5d1959608a1b93506143d892505050565b8860c001518015613e6757508183105b80613e7e57508860c00151158015613e7e57508084105b15613e96576080880183905260a08801849052613f0d565b8860c0015115613ee157838202838181613eb257613eb2614fc6565b0615613ebf576001613ec2565b60005b60ff16848281613ed457613ed4614fc6565b040160a08a015250613f0d565b83600003613ef55760808801839052613f0d565b8381840281613f0657613f06614fc6565b0460808901525b50505050600080306001600160a01b031663aa4dd28260e01b878960a00151604051602401613f3d929190615058565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051613f7b9190614ef2565b6000604051808303816000865af19150503d8060008114613fb8576040519150601f19603f3d011682016040523d82523d6000602084013e613fbd565b606091505b509150915081156141175780806020019051810190613fdc9190615080565b94506f6d67762f74726164655375636365737360801b925085602001516001600160a01b031686600001516001600160a01b03167f1d81940ff2c3ac549c8acefd7c1b2ffb24aacc8b3cfa309c22abc3de79727f9d88604001518a60a001518a608001518b60a0015160405161407494939291909384526001600160a01b039290921660208401526040830152606082015260800190565b60405180910390a360e086015160501c60ff16156140f25760e086015160a088015160405163cac1827160e01b815260609290921c9163cac18271916140bf918a9190600401615058565b600060405180830381600087803b1580156140d957600080fd5b505af11580156140ed573d6000803e3d6000fd5b505050505b6080860151604088018051909101905260a0860151606088018051909101905261439d565b602081015160408201516060830151909650945092506e1b59dd8bdb585ad95c94995d995c9d608a1b831480614164575082741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b145b80614185575082731b59dd8bdb585ad95c949958d95a5d9951985a5b60621b145b156142975785602001516001600160a01b031686600001516001600160a01b03167f1d59c048edb5397821854bd12cbe02242b82101c677f949d076d14eb7bd8343688604001518a60a001518a608001518b60a00151896040516142149594939291909485526001600160a01b0393909316602085015260408401919091526060830152608082015260a00190565b60405180910390a360e086015160501c60ff16156142925760e086015160a0880151604051631159507360e01b815260609290921c9163115950739161425f918a9190600401615058565b600060405180830381600087803b15801561427957600080fd5b505af115801561428d573d6000803e3d6000fd5b505050505b61439d565b827f6d67762f6e6f74456e6f756768476173466f724d616b65725472616465000000036143065760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6e6f74456e6f756768476173466f724d616b657254726164650000006044820152606401610a85565b82741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b036143655760405162461bcd60e51b81526020600482015260156024820152741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b6044820152606401610a85565b60405162461bcd60e51b815260206004820152600d60248201526c36b3bb17b9bbb0b822b93937b960991b6044820152606401610a85565b6143d586600001518760200151886040015189606001518a60c00151886f6d67762f74726164655375636365737360801b1415613337565b50505b9250925092565b6101008101516000906127109060e81c61ffff168460400151028161440657614406614fc6565b049050801561447c57604083018051829003905260e08301819052815160005461443a91906001600160a01b031683612fff565b61447c5760405162461bcd60e51b81526020600482015260136024820152721b59dd8bd99959551c985b9cd9995c91985a5b606a1b6044820152606401610a85565b604083015115613dac5761449d82600001518460a001518560400151612fff565b613dac5760405162461bcd60e51b815260206004820152601560248201527436b3bb17a6b3bb2330b4b62a37a830bcaa30b5b2b960591b6044820152606401610a85565b60c084015160481c62ffffff16808411156144fa578093505b6145088585830385856145ea565b84019350816f6d67762f74726164655375636365737360801b1461453c576145308585614740565b60808701805190910190525b505050505050565b600081600003614556575060016130cf565b60408401516060858101516001600160601b039186901c82169291861691908084028284028082036145dd5789516001600160a01b039081166000908152600560209081526040808320828f015190941683529281528282208b835290529081205460481c62ffffff1660a08c0151940295909302949094101595506130cf945050505050565b1194506130cf9350505050565b600080633d3d130d60e01b8660405180604001604052808781526020018681525060405160240161461c929190615099565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319939093169290921790915260c087015190915060601c60005a90508660408204820310156146b45760405162461bcd60e51b815260206004820181905260248201527f6d67762f6e6f74456e6f756768476173466f724d616b6572506f7374686f6f6b6044820152606401610a85565b6000806146c2848a87613db1565b915091505a83039550816147335789602001516001600160a01b03168a600001516001600160a01b03167f51d5a3ecf332626d83c8207fe9bd22f38801f578c7eb222e2d811cd1b4c629a58c604001518460405161472a929190918252602082015260400190565b60405180910390a35b5050505050949350505050565b60c082015160009062ffffff604882901c81169161ffff602082901c1660309190911c909116820102633b9aca00028184111561477b578193505b61010085015160009060601c62ffffff1660e08701519086019060401c61ffff16633b9aca0002029050818111156147b05750805b6147c96147c18760c0015160601c90565b828403611ea7565b95945050505050565b60405180610160016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60405180610120016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806101000160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001600015158152602001600081525090565b60405180608001604052806004906020820280368337509192915050565b80356001600160a01b038116811461492157600080fd5b919050565b600080600080600060a0868803121561493e57600080fd5b6149478661490a565b94506149556020870161490a565b94979496505050506040830135926060810135926080909101359150565b60006020828403121561498557600080fd5b6130cf8261490a565b6000602082840312156149a057600080fd5b5035919050565b6000806000606084860312156149bc57600080fd5b6149c58461490a565b92506149d36020850161490a565b9150604084013590509250925092565b60008083601f8401126149f557600080fd5b50813567ffffffffffffffff811115614a0d57600080fd5b6020830191508360208260071b8501011115611ac857600080fd5b8015158114611ea457600080fd5b600080600080600060808688031215614a4e57600080fd5b614a578661490a565b9450614a656020870161490a565b9350604086013567ffffffffffffffff811115614a8157600080fd5b614a8d888289016149e3565b9094509250506060860135614aa181614a28565b809150509295509295909350565b600080600080600080600060e0888a031215614aca57600080fd5b614ad38861490a565b9650614ae16020890161490a565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b60008060008060808587031215614b2357600080fd5b614b2c8561490a565b9350614b3a6020860161490a565b9250614b486040860161490a565b9396929550929360600135925050565b600060208284031215614b6a57600080fd5b81356130cf81614a28565b60008060408385031215614b8857600080fd5b614b918361490a565b9150614b9f6020840161490a565b90509250929050565b600080600080600080600080610100898b031215614bc557600080fd5b614bce8961490a565b9750614bdc60208a0161490a565b979a9799505050506040860135956060810135956080820135955060a0820135945060c0820135935060e0909101359150565b60008060008060008060c08789031215614c2857600080fd5b614c318761490a565b9550614c3f6020880161490a565b945060408701359350606087013592506080870135614c5d81614a28565b9150614c6b60a0880161490a565b90509295509295509295565b600080828403610140811215614c8c57600080fd5b61012080821215614c9c57600080fd5b849350610f7c81860161490a565b60008060008060808587031215614cc057600080fd5b614cc98561490a565b9350614cd76020860161490a565b9250604085013591506060850135614cee81614a28565b939692955090935050565b60008060008060008060008060006101208a8c031215614d1857600080fd5b614d218a61490a565b9850614d2f60208b0161490a565b9750614d3d60408b0161490a565b9650614d4b60608b0161490a565b955060808a0135945060a08a0135935060c08a013560ff81168114614d6f57600080fd5b8093505060e08a013591506101008a013590509295985092959850929598565b60008060008060008060a08789031215614da857600080fd5b614db18761490a565b9550614dbf6020880161490a565b9450604087013567ffffffffffffffff811115614ddb57600080fd5b614de789828a016149e3565b9095509350506060870135614dfb81614a28565b9150614c6b6080880161490a565b60008060008060808587031215614e1f57600080fd5b614e288561490a565b9350614e366020860161490a565b9250614e446040860161490a565b9150614e526060860161490a565b905092959194509250565b600080600080600060a08688031215614e7557600080fd5b614e7e8661490a565b9450614e8c6020870161490a565b935060408601359250606086013591506080860135614aa181614a28565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60008060408385031215614ee157600080fd5b505080516020909101519092909150565b6000825160005b81811015614f135760208186018101518583015201614ef9565b81811115614f22576000828501525b509190910192915050565b600060208284031215614f3f57600080fd5b81516130cf81614a28565b61012081016001600160a01b0380614f618561490a565b16835280614f716020860161490a565b1660208401525060408301356040830152606083013560608301526080830135608083015260a083013560a083015260c083013560c083015260e083013560e083015261010080840135818401525092915050565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60018060a01b038082511683528060208301511660208401525060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152505050565b61014081016150678285614ff2565b6001600160a01b03929092166101209190910152919050565b60006020828403121561509257600080fd5b5051919050565b61016081016150a88285614ff2565b82516101208301526020830151610140830152939250505056fea2646970667358221220606ee9d9815e4c17941d70526d6fb9577a74084308c36927d5d3f4357268a87964736f6c634300080e003360806040526000805460ff1916600117905534801561001d57600080fd5b5060405161120638038061120683398101604081905261003c9161009f565b600080546001600160a01b0394851661010002610100600160a81b0319909116179055600180549284166001600160a01b0319938416179055600280549190931691161790556100ec565b6001600160a01b038116811461009c57600080fd5b50565b6000806000606084860312156100b457600080fd5b83516100bf81610087565b60208501519093506100d081610087565b60408501519092506100e181610087565b809150509250925092565b61110b806100fb6000396000f3fe6080604052600436106100e15760003560e01c8063a3cfe14d1161007f578063b84e3eda11610059578063b84e3eda14610284578063e1f21c67146102a4578063f8ccbf47146102c4578063ff2e2d33146102de57600080fd5b8063a3cfe14d14610244578063aa2cc08b14610264578063b04220dd1461013057600080fd5b80633a768463116100bb5780633a7684631461016a5780634d1d2b66146101aa578063521606d2146101f4578063978b7c021461021457600080fd5b8063080d7c4d146100ed5780631154020b1461010f5780632d24c42f1461013057600080fd5b366100e857005b600080fd5b3480156100f957600080fd5b5061010d610108366004610b09565b6102fe565b005b34801561011b57600080fd5b5061010d61012a366004610b35565b50505050565b34801561013c57600080fd5b5061015061014b366004610b7b565b610395565b604080519283526020830191909152015b60405180910390f35b34801561017657600080fd5b50610192737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b039091168152602001610161565b3480156101b657600080fd5b506101ca6101c5366004610b7b565b61043d565b6040805195151586526020860194909452928401919091526060830152608082015260a001610161565b34801561020057600080fd5b5061010d61020f366004610c08565b610539565b34801561022057600080fd5b5061023461022f366004610b7b565b61066a565b6040519015158152602001610161565b34801561025057600080fd5b5061010d61025f366004610b09565b6106e2565b34801561027057600080fd5b5061015061027f366004610c9e565b610720565b34801561029057600080fd5b5061010d61029f366004610c08565b6107be565b3480156102b057600080fd5b5061010d6102bf366004610cf9565b6108e1565b3480156102d057600080fd5b506000546102349060ff1681565b3480156102ea57600080fd5b506102346102f9366004610d3a565b610954565b60005460015460025460405163167ae91560e21b81526001600160a01b039283166004820152908216602482015284821660448201526064810184905261010090920416906359eba454906084015b6020604051808303816000875af115801561036c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103909190610dbd565b505050565b600080546001805460025460405163fbffe5fd60e01b81526001600160a01b03928316600482015290821660248201526044810187905260648101869052608481019290925283926101009004169063fbffe5fd9060a4016080604051808303816000875af115801561040c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104309190610ddf565b5091969095509350505050565b60008060008060008061048560405180608001604052808a81526020018981526020016bffffffffffffffffffffffff8016815260200165ffffffffffff8016815250610a12565b6000805460018054600254604051632370a17d60e11b8152959650939485948594859485946001600160a01b036101009093048316946346e142fa946104d694928316939216918c91600401610e15565b60a0604051808303816000875af11580156104f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105199190610eaa565b60019094149e50919c509a50985096505050505050509295509295909350565b604080516020810190915260008082525b825181101561065c5782518290737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae9086908590811061058557610585610eea565b60200260200101516040518263ffffffff1660e01b81526004016105ab91815260200190565b600060405180830381865afa1580156105c8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105f09190810190610f2c565b604051602001610601929190610fc0565b6040516020818303038152906040529150600183516106209190611005565b81101561064a5781604051602001610638919061101c565b60405160208183030381529060405291505b8061065481611042565b91505061054a565b5061066681610a6f565b5050565b60405163268e95b360e11b815260048101839052602481018290526000903090634d1d2b669060440160a0604051808303816000875af11580156106b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d6919061105b565b50929695505050505050565b60005460405163095ea7b360e01b81526101009091046001600160a01b0390811660048301526024820183905283169063095ea7b39060440161034d565b60405163fbffe5fd60e01b81526001600160a01b0385811660048301528481166024830152604482018490526064820183905260016084830152600091829188169063fbffe5fd9060a4016080604051808303816000875af115801561078a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ae9190610ddf565b5091999098509650505050505050565b604080516020810190915260008082525b825181101561065c5782518290737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae9086908590811061080a5761080a610eea565b60200260200101516040518263ffffffff1660e01b815260040161083091815260200190565b600060405180830381865afa15801561084d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108759190810190610f2c565b604051602001610886929190610fc0565b6040516020818303038152906040529150600183516108a59190611005565b8110156108cf57816040516020016108bd919061101c565b60405160208183030381529060405291505b806108d981611042565b9150506107cf565b60405163095ea7b360e01b81526001600160a01b0383811660048301526024820183905284169063095ea7b3906044016020604051808303816000875af1158015610930573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012a9190610dbd565b600080610980604051806080016040528088815260200187815260200186815260200185815250610a12565b90506000896001600160a01b03166346e142fa8a8a8560016040518563ffffffff1660e01b81526004016109b79493929190610e15565b60a0604051808303816000875af11580156109d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fa9190610eaa565b50506001909214945050505050979650505050505050565b60408051600180825281830190925260609160009190816020015b610a35610ad6565b815260200190600190039081610a2d5790505090508281600081518110610a5e57610a5e610eea565b602090810291909101015292915050565b610ab281604051602401610a8391906110a2565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052610ab5565b50565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60405180608001604052806004906020820280368337509192915050565b6001600160a01b0381168114610ab257600080fd5b60008060408385031215610b1c57600080fd5b8235610b2781610af4565b946020939093013593505050565b60008060008060808587031215610b4b57600080fd5b8435610b5681610af4565b93506020850135610b6681610af4565b93969395505050506040820135916060013590565b60008060408385031215610b8e57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610bdc57610bdc610b9d565b604052919050565b600067ffffffffffffffff821115610bfe57610bfe610b9d565b5060051b60200190565b60006020808385031215610c1b57600080fd5b823567ffffffffffffffff811115610c3257600080fd5b8301601f81018513610c4357600080fd5b8035610c56610c5182610be4565b610bb3565b81815260059190911b82018301908381019087831115610c7557600080fd5b928401925b82841015610c9357833582529284019290840190610c7a565b979650505050505050565b600080600080600060a08688031215610cb657600080fd5b8535610cc181610af4565b94506020860135610cd181610af4565b93506040860135610ce181610af4565b94979396509394606081013594506080013592915050565b600080600060608486031215610d0e57600080fd5b8335610d1981610af4565b92506020840135610d2981610af4565b929592945050506040919091013590565b600080600080600080600060e0888a031215610d5557600080fd5b8735610d6081610af4565b96506020880135610d7081610af4565b95506040880135610d8081610af4565b969995985095966060810135965060808101359560a0820135955060c0909101359350915050565b80518015158114610db857600080fd5b919050565b600060208284031215610dcf57600080fd5b610dd882610da8565b9392505050565b60008060008060808587031215610df557600080fd5b505082516020840151604085015160609095015191969095509092509050565b6001600160a01b038581168252841660208083019190915260806040830181905284518382018190526000928681019160a08601919085805b82811015610e8b57855185835b6004811015610e7857825182529186019190860190600101610e5b565b5050509483019493860193600101610e4e565b5050505085151560608601529250610ea1915050565b95945050505050565b600080600080600060a08688031215610ec257600080fd5b5050835160208501516040860151606087015160809097015192989197509594509092509050565b634e487b7160e01b600052603260045260246000fd5b60005b83811015610f1b578181015183820152602001610f03565b8381111561012a5750506000910152565b600060208284031215610f3e57600080fd5b815167ffffffffffffffff80821115610f5657600080fd5b818401915084601f830112610f6a57600080fd5b815181811115610f7c57610f7c610b9d565b610f8f601f8201601f1916602001610bb3565b9150808252856020828501011115610fa657600080fd5b610fb7816020840160208601610f00565b50949350505050565b60008351610fd2818460208801610f00565b835190830190610fe6818360208801610f00565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b60008282101561101757611017610fef565b500390565b6000825161102e818460208701610f00565b61016160f51b920191825250600201919050565b60006001820161105457611054610fef565b5060010190565b600080600080600060a0868803121561107357600080fd5b61107c86610da8565b602087015160408801516060890151608090990151929a91995097965090945092505050565b60208152600082518060208401526110c1816040850160208701610f00565b601f01601f1916919091016040019291505056fea2646970667358221220fe05e77654585728cf63d927b792919a9b4528889d07a63176801add83a0055b64736f6c634300080e0033608060405234801561001057600080fd5b5060405161206d38038061206d83398101604081905261002f91610092565b600180546001600160a01b0394851661010002610100600160a81b0319909116179055600280549284166001600160a01b0319938416179055600380549190931691161790556100df565b6001600160a01b038116811461008f57600080fd5b50565b6000806000606084860312156100a757600080fd5b83516100b28161007a565b60208501519093506100c38161007a565b60408501519092506100d48161007a565b809150509250925092565b611f7f806100ee6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631f7b6d32146100515780635686153214610067578063a5e3875114610092578063e9c4a3ac146100a7575b600080fd5b6000546040519081526020015b60405180910390f35b61007a61007536600461047a565b6100af565b6040516001600160a01b03909116815260200161005e565b6100a56100a036600461047a565b6100de565b005b6100a5610320565b60008082815481106100c3576100c3610493565b6000918252602090912001546001600160a01b031692915050565b60015460ff16610311578067ffffffffffffffff811115610101576101016104a9565b60405190808252806020026020018201604052801561012a578160200160208202803683370190505b50805161013f916000916020909101906103f3565b5060005b8181101561030f576001546002546003546040516101009093046001600160a01b03908116939281169291169061017990610458565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f0801580156101b5573d6000803e3d6000fd5b50600082815481106101c9576101c9610493565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506000818154811061020a5761020a610493565b60009182526020909120015460025460405163a3cfe14d60e01b81526001600160a01b039182166004820152678ac7230489e80000602482015291169063a3cfe14d90604401600060405180830381600087803b15801561026a57600080fd5b505af115801561027e573d6000803e3d6000fd5b505050506000818154811061029557610295610493565b600091825260209091200154604051635239cafb60e11b8152821560048201526001600160a01b039091169063a47395f690602401600060405180830381600087803b1580156102e457600080fd5b505af11580156102f8573d6000803e3d6000fd5b505050508080610307906104bf565b915050610143565b505b506001805460ff191681179055565b600080549061032f82476104e6565b90506000811161037b5760405162461bcd60e51b8152602060048201526013602482015272181032ba3432b9103a37903a3930b739b332b960691b604482015260640160405180910390fd5b60005b828110156103ee57600080828154811061039a5761039a610493565b60009182526020822001546040516001600160a01b039091169250829085156108fc0290869084818181858888f193505050509050806103d957600080fd5b505080806103e6906104bf565b91505061037e565b505050565b828054828255906000526020600020908101928215610448579160200282015b8281111561044857825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610413565b50610454929150610465565b5090565b611a418061050983390190565b5b808211156104545760008155600101610466565b60006020828403121561048c57600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6000600182016104df57634e487b7160e01b600052601160045260246000fd5b5060010190565b60008261050357634e487b7160e01b600052601260045260246000fd5b50049056fe60806040526004805463ff00ff00191663010001001790553480156200002457600080fd5b5060405162001a4138038062001a418339810160408190526200004791620000a3565b600080546001600160a01b039485166001600160a01b031991821617909155600180549385169382169390931790925560028054919093169116179055620000f7565b6001600160a01b0381168114620000a057600080fd5b50565b600080600060608486031215620000b957600080fd5b8351620000c6816200008a565b6020850151909350620000d9816200008a565b6040850151909250620000ec816200008a565b809150509250925092565b61193a80620001076000396000f3fe6080604052600436106101bb5760003560e01c8063ba414fa6116100ec578063e923c6511161008a578063fa7626d411610064578063fa7626d414610550578063fc3816c81461056f578063fc8349f21461058f578063ffae399e146105af57600080fd5b8063e923c651146104ef578063f5537ede1461050f578063f8ccbf471461052f57600080fd5b8063ccfbf94d116100c6578063ccfbf94d1461046f578063cda30c3b1461048f578063d3845fea146104af578063e67ecda1146104cf57600080fd5b8063ba414fa61461040a578063c4c6c87d1461042f578063cafffca81461044f57600080fd5b80635a4924e8116101595780637ec95ff3116101335780637ec95ff31461037c5780638b0af9bb1461039c578063a3cfe14d146103b1578063a47395f6146103d157600080fd5b80635a4924e8146102f55780636c49c32c146103235780637a943a371461034357600080fd5b80633a768463116101955780633a768463146102295780633d3d130d1461026e57806353e575ac1461028e578063557f49c3146102bc57600080fd5b80630cc9d656146101c75780632644c05c146101e957806333ac5efd1461020957600080fd5b366101c257005b600080fd5b3480156101d357600080fd5b506101e76101e236600461142d565b6105e8565b005b3480156101f557600080fd5b506101e7610204366004611492565b610631565b34801561021557600080fd5b506101e76102243660046114cd565b6106af565b34801561023557600080fd5b50610251737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561027a57600080fd5b506101e7610289366004611529565b610731565b34801561029a57600080fd5b506102ae6102a9366004611492565b61078d565b604051908152602001610265565b3480156102c857600080fd5b506101e76102d736600461157a565b60028054911515600160a81b0260ff60a81b19909216919091179055565b34801561030157600080fd5b506101e761031036600461157a565b6004805460ff1916911515919091179055565b34801561032f57600080fd5b506102ae61033e36600461159e565b610821565b34801561034f57600080fd5b506101e761035e36600461157a565b60028054911515600160b81b0260ff60b81b19909216919091179055565b34801561038857600080fd5b506102ae6103973660046114cd565b610988565b3480156103a857600080fd5b506102ae610a1d565b3480156103bd57600080fd5b506101e76103cc3660046115bb565b610a8f565b3480156103dd57600080fd5b506101e76103ec36600461157a565b60028054911515600160a01b0260ff60a01b19909216919091179055565b34801561041657600080fd5b5061041f610b0b565b6040519015158152602001610265565b34801561043b57600080fd5b506102ae61044a3660046115e7565b610c3a565b34801561045b57600080fd5b506102ae61046a3660046115e7565b610ccd565b34801561047b57600080fd5b506102ae61048a366004611600565b610d1e565b34801561049b57600080fd5b506102ae6104aa366004611659565b610d9e565b3480156104bb57600080fd5b506101e76104ca3660046115e7565b610e30565b3480156104db57600080fd5b506101e76104ea3660046115e7565b600355565b3480156104fb57600080fd5b506102ae61050a366004611492565b610e92565b34801561051b57600080fd5b506101e761052a36600461168b565b610f1b565b34801561053b57600080fd5b5060045461041f906301000000900460ff1681565b34801561055c57600080fd5b5060045461041f90610100900460ff1681565b34801561057b57600080fd5b506102ae61058a3660046116cc565b610f94565b34801561059b57600080fd5b5061041f6105aa3660046115e7565b611022565b3480156105bb57600080fd5b506101e76105ca36600461157a565b60028054911515600160b01b0260ff60b01b19909216919091179055565b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c28686868686866040516106219695949392919061172e565b60405180910390a1505050505050565b60008054600154600254604051636a4f769160e01b81526001600160a01b0393841694636a4f7691946106769481169316918b918b918b91908b908b90600401611767565b600060405180830381600087803b15801561069057600080fd5b505af11580156106a4573d6000803e3d6000fd5b505050505050505050565b60008054600154600254604051636a4f769160e01b81526001600160a01b0393841694636a4f76919487946106f794908216939116918d918d918d918d908d90600401611767565b6000604051808303818588803b15801561071057600080fd5b505af1158015610724573d6000803e3d6000fd5b5050505050505050505050565b6003541561077f5761077f81602001356003546040518060400160405280601881526020017f496e636f727265637420737461747573206d6573736167650000000000000000815250611092565b61078982826110da565b5050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc9387936107d4939183169216908c908c908c908a908d906004016117ab565b60206040518083038185885af11580156107f2573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061081791906117e9565b9695505050505050565b600254600090600160b01b900460ff161561085c576040805160208082019092526f1d195cdd13585ad95c8bdc995d995c9d60821b81529081fd5b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c23361088b6020850185611802565b61089b6040860160208701611802565b856040013586608001358760a001356040516108bc9695949392919061172e565b60405180910390a1600254600160a01b900460ff161561095f576108e36020830183611802565b6000805460405163095ea7b360e01b81526001600160a01b0391821660048201526024810192909252919091169063095ea7b3906044016020604051808303816000875af1158015610939573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095d919061181f565b505b600254600160a81b900460ff161561098057506418589bdc9d60da1b919050565b506000919050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc9387936109cf939183169216908d908d908d908d908d906004016117ab565b60206040518083038185885af11580156109ed573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610a1291906117e9565b979650505050505050565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610a66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8a91906117e9565b905090565b60005460405163095ea7b360e01b81526001600160a01b039182166004820152602481018390529083169063095ea7b3906044016020604051808303816000875af1158015610ae2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b06919061181f565b505050565b60045460009062010000900460ff1615610b2f575060045462010000900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610c355760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610bbd917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611868565b60408051601f1981840301815290829052610bd791611899565b6000604051808303816000865af19150503d8060008114610c14576040519150601f19603f3d011682016040523d82523d6000602084013e610c19565b606091505b5091505080806020019051810190610c31919061181f565b9150505b919050565b6000805460015460025460405163ad97db1b60e01b81526001600160a01b0392831660048201529082166024820152604481018590526064810184905291169063ad97db1b906084015b6020604051808303816000875af1158015610ca3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc791906117e9565b92915050565b600080546001805460025460405163ad97db1b60e01b81526001600160a01b03928316600482015290821660248201526044810186905260648101929092529091169063ad97db1b90608401610c84565b6000805460405163127db4b760e21b81526001600160a01b03909116906349f6d2dc90610d5b908a908a908a908a908a9089908b906004016117ab565b6020604051808303816000875af1158015610d7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1291906117e9565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc93610de493908216929116908a908a908a9089908b906004016117ab565b6020604051808303816000875af1158015610e03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2791906117e9565b95945050505050565b600054604051630460488160e31b81523060048201526001600160a01b039091169063230244089083906024016000604051808303818588803b158015610e7657600080fd5b505af1158015610e8a573d6000803e3d6000fd5b505050505050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc93610ed893908216929116908b908b908b908b908b906004016117ab565b6020604051808303816000875af1158015610ef7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081791906117e9565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af1158015610f6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8e919061181f565b50505050565b6000805460405163127db4b760e21b81526001600160a01b03909116906349f6d2dc908490610fd3908c908c908c908c908c908a908d906004016117ab565b60206040518083038185885af1158015610ff1573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061101691906117e9565b98975050505050505050565b60008054604051632e1a7d4d60e01b8152600481018490526001600160a01b0390911690632e1a7d4d906024016020604051808303816000875af115801561106e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc7919061181f565b818314610b06577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583816040516110c891906118b5565b60405180910390a1610b0683836111e2565b60045460ff16156111205760405162461bcd60e51b815260206004820152600c60248201526b1c1bdcdd1a1bdbdad1985a5b60a21b604482015260640160405180910390fd5b600254600160b81b900460ff1615610789576000546001600160a01b0316636a4f76916111506020850185611802565b6111606040860160208701611802565b606080870135901c6bffffffffffffffffffffffff166bffffffffffffffffffffffff60608801351660c088013560481c62ffffff16600060608a013560e01c8a604001356040518963ffffffff1660e01b81526004016111c8989796959493929190611767565b600060405180830381600087803b158015610e7657600080fd5b808214610789577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516112569060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974604082015264657333325d60d81b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a1610789737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156114025760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526113a19291602001611868565b60408051601f19818403018152908290526113bb91611899565b6000604051808303816000865af19150503d80600081146113f8576040519150601f19603f3d011682016040523d82523d6000602084013e6113fd565b606091505b505050505b6004805462ff0000191662010000179055565b6001600160a01b038116811461142a57600080fd5b50565b60008060008060008060c0878903121561144657600080fd5b863561145181611415565b9550602087013561146181611415565b9450604087013561147181611415565b959894975094956060810135955060808101359460a0909101359350915050565b600080600080600060a086880312156114aa57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b60008060008060008060c087890312156114e657600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b6000610120828403121561152357600080fd5b50919050565b60008082840361016081121561153e57600080fd5b6115488585611510565b9250604061011f198201121561155d57600080fd5b50610120830190509250929050565b801515811461142a57600080fd5b60006020828403121561158c57600080fd5b81356115978161156c565b9392505050565b600061012082840312156115b157600080fd5b6115978383611510565b600080604083850312156115ce57600080fd5b82356115d981611415565b946020939093013593505050565b6000602082840312156115f957600080fd5b5035919050565b60008060008060008060c0878903121561161957600080fd5b863561162481611415565b9550602087013561163481611415565b95989597505050506040840135936060810135936080820135935060a0909101359150565b6000806000806080858703121561166f57600080fd5b5050823594602084013594506040840135936060013592509050565b6000806000606084860312156116a057600080fd5b83356116ab81611415565b925060208401356116bb81611415565b929592945050506040919091013590565b600080600080600080600060e0888a0312156116e757600080fd5b87356116f281611415565b9650602088013561170281611415565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b6001600160a01b03968716815294861660208601529290941660408401526060830152608082019290925260a081019190915260c00190565b6001600160a01b03988916815296909716602087015260408601949094526060850192909252608084015260a083015260c082015260e08101919091526101000190565b6001600160a01b03978816815295909616602086015260408501939093526060840191909152608083015260a082015260c081019190915260e00190565b6000602082840312156117fb57600080fd5b5051919050565b60006020828403121561181457600080fd5b813561159781611415565b60006020828403121561183157600080fd5b81516115978161156c565b60005b8381101561185757818101518382015260200161183f565b83811115610f8e5750506000910152565b6001600160e01b031983168152815160009061188b81600485016020870161183c565b919091016004019392505050565b600082516118ab81846020870161183c565b9190910192915050565b60408152600560408201526422b93937b960d91b606082015260806020820152600082518060808401526118f08160a085016020870161183c565b601f01601f19169190910160a0019291505056fea2646970667358221220363d825a62e7711a222b729367aea22c71c496027732c66afce572665829ed6264736f6c634300080e0033a2646970667358221220bc7d9d438cd5627bd00d066b2f3b1acd90318af6a7a9515bd2a5d7aaffa9dcd064736f6c634300080e003360806040526004805463ff00ff00191663010001001790553480156200002457600080fd5b5060405162001a4138038062001a418339810160408190526200004791620000a3565b600080546001600160a01b039485166001600160a01b031991821617909155600180549385169382169390931790925560028054919093169116179055620000f7565b6001600160a01b0381168114620000a057600080fd5b50565b600080600060608486031215620000b957600080fd5b8351620000c6816200008a565b6020850151909350620000d9816200008a565b6040850151909250620000ec816200008a565b809150509250925092565b61193a80620001076000396000f3fe6080604052600436106101bb5760003560e01c8063ba414fa6116100ec578063e923c6511161008a578063fa7626d411610064578063fa7626d414610550578063fc3816c81461056f578063fc8349f21461058f578063ffae399e146105af57600080fd5b8063e923c651146104ef578063f5537ede1461050f578063f8ccbf471461052f57600080fd5b8063ccfbf94d116100c6578063ccfbf94d1461046f578063cda30c3b1461048f578063d3845fea146104af578063e67ecda1146104cf57600080fd5b8063ba414fa61461040a578063c4c6c87d1461042f578063cafffca81461044f57600080fd5b80635a4924e8116101595780637ec95ff3116101335780637ec95ff31461037c5780638b0af9bb1461039c578063a3cfe14d146103b1578063a47395f6146103d157600080fd5b80635a4924e8146102f55780636c49c32c146103235780637a943a371461034357600080fd5b80633a768463116101955780633a768463146102295780633d3d130d1461026e57806353e575ac1461028e578063557f49c3146102bc57600080fd5b80630cc9d656146101c75780632644c05c146101e957806333ac5efd1461020957600080fd5b366101c257005b600080fd5b3480156101d357600080fd5b506101e76101e236600461142d565b6105e8565b005b3480156101f557600080fd5b506101e7610204366004611492565b610631565b34801561021557600080fd5b506101e76102243660046114cd565b6106af565b34801561023557600080fd5b50610251737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561027a57600080fd5b506101e7610289366004611529565b610731565b34801561029a57600080fd5b506102ae6102a9366004611492565b61078d565b604051908152602001610265565b3480156102c857600080fd5b506101e76102d736600461157a565b60028054911515600160a81b0260ff60a81b19909216919091179055565b34801561030157600080fd5b506101e761031036600461157a565b6004805460ff1916911515919091179055565b34801561032f57600080fd5b506102ae61033e36600461159e565b610821565b34801561034f57600080fd5b506101e761035e36600461157a565b60028054911515600160b81b0260ff60b81b19909216919091179055565b34801561038857600080fd5b506102ae6103973660046114cd565b610988565b3480156103a857600080fd5b506102ae610a1d565b3480156103bd57600080fd5b506101e76103cc3660046115bb565b610a8f565b3480156103dd57600080fd5b506101e76103ec36600461157a565b60028054911515600160a01b0260ff60a01b19909216919091179055565b34801561041657600080fd5b5061041f610b0b565b6040519015158152602001610265565b34801561043b57600080fd5b506102ae61044a3660046115e7565b610c3a565b34801561045b57600080fd5b506102ae61046a3660046115e7565b610ccd565b34801561047b57600080fd5b506102ae61048a366004611600565b610d1e565b34801561049b57600080fd5b506102ae6104aa366004611659565b610d9e565b3480156104bb57600080fd5b506101e76104ca3660046115e7565b610e30565b3480156104db57600080fd5b506101e76104ea3660046115e7565b600355565b3480156104fb57600080fd5b506102ae61050a366004611492565b610e92565b34801561051b57600080fd5b506101e761052a36600461168b565b610f1b565b34801561053b57600080fd5b5060045461041f906301000000900460ff1681565b34801561055c57600080fd5b5060045461041f90610100900460ff1681565b34801561057b57600080fd5b506102ae61058a3660046116cc565b610f94565b34801561059b57600080fd5b5061041f6105aa3660046115e7565b611022565b3480156105bb57600080fd5b506101e76105ca36600461157a565b60028054911515600160b01b0260ff60b01b19909216919091179055565b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c28686868686866040516106219695949392919061172e565b60405180910390a1505050505050565b60008054600154600254604051636a4f769160e01b81526001600160a01b0393841694636a4f7691946106769481169316918b918b918b91908b908b90600401611767565b600060405180830381600087803b15801561069057600080fd5b505af11580156106a4573d6000803e3d6000fd5b505050505050505050565b60008054600154600254604051636a4f769160e01b81526001600160a01b0393841694636a4f76919487946106f794908216939116918d918d918d918d908d90600401611767565b6000604051808303818588803b15801561071057600080fd5b505af1158015610724573d6000803e3d6000fd5b5050505050505050505050565b6003541561077f5761077f81602001356003546040518060400160405280601881526020017f496e636f727265637420737461747573206d6573736167650000000000000000815250611092565b61078982826110da565b5050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc9387936107d4939183169216908c908c908c908a908d906004016117ab565b60206040518083038185885af11580156107f2573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061081791906117e9565b9695505050505050565b600254600090600160b01b900460ff161561085c576040805160208082019092526f1d195cdd13585ad95c8bdc995d995c9d60821b81529081fd5b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c23361088b6020850185611802565b61089b6040860160208701611802565b856040013586608001358760a001356040516108bc9695949392919061172e565b60405180910390a1600254600160a01b900460ff161561095f576108e36020830183611802565b6000805460405163095ea7b360e01b81526001600160a01b0391821660048201526024810192909252919091169063095ea7b3906044016020604051808303816000875af1158015610939573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095d919061181f565b505b600254600160a81b900460ff161561098057506418589bdc9d60da1b919050565b506000919050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc9387936109cf939183169216908d908d908d908d908d906004016117ab565b60206040518083038185885af11580156109ed573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610a1291906117e9565b979650505050505050565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610a66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8a91906117e9565b905090565b60005460405163095ea7b360e01b81526001600160a01b039182166004820152602481018390529083169063095ea7b3906044016020604051808303816000875af1158015610ae2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b06919061181f565b505050565b60045460009062010000900460ff1615610b2f575060045462010000900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610c355760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610bbd917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611868565b60408051601f1981840301815290829052610bd791611899565b6000604051808303816000865af19150503d8060008114610c14576040519150601f19603f3d011682016040523d82523d6000602084013e610c19565b606091505b5091505080806020019051810190610c31919061181f565b9150505b919050565b6000805460015460025460405163ad97db1b60e01b81526001600160a01b0392831660048201529082166024820152604481018590526064810184905291169063ad97db1b906084015b6020604051808303816000875af1158015610ca3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc791906117e9565b92915050565b600080546001805460025460405163ad97db1b60e01b81526001600160a01b03928316600482015290821660248201526044810186905260648101929092529091169063ad97db1b90608401610c84565b6000805460405163127db4b760e21b81526001600160a01b03909116906349f6d2dc90610d5b908a908a908a908a908a9089908b906004016117ab565b6020604051808303816000875af1158015610d7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1291906117e9565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc93610de493908216929116908a908a908a9089908b906004016117ab565b6020604051808303816000875af1158015610e03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2791906117e9565b95945050505050565b600054604051630460488160e31b81523060048201526001600160a01b039091169063230244089083906024016000604051808303818588803b158015610e7657600080fd5b505af1158015610e8a573d6000803e3d6000fd5b505050505050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc93610ed893908216929116908b908b908b908b908b906004016117ab565b6020604051808303816000875af1158015610ef7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081791906117e9565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af1158015610f6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8e919061181f565b50505050565b6000805460405163127db4b760e21b81526001600160a01b03909116906349f6d2dc908490610fd3908c908c908c908c908c908a908d906004016117ab565b60206040518083038185885af1158015610ff1573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061101691906117e9565b98975050505050505050565b60008054604051632e1a7d4d60e01b8152600481018490526001600160a01b0390911690632e1a7d4d906024016020604051808303816000875af115801561106e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc7919061181f565b818314610b06577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583816040516110c891906118b5565b60405180910390a1610b0683836111e2565b60045460ff16156111205760405162461bcd60e51b815260206004820152600c60248201526b1c1bdcdd1a1bdbdad1985a5b60a21b604482015260640160405180910390fd5b600254600160b81b900460ff1615610789576000546001600160a01b0316636a4f76916111506020850185611802565b6111606040860160208701611802565b606080870135901c6bffffffffffffffffffffffff166bffffffffffffffffffffffff60608801351660c088013560481c62ffffff16600060608a013560e01c8a604001356040518963ffffffff1660e01b81526004016111c8989796959493929190611767565b600060405180830381600087803b158015610e7657600080fd5b808214610789577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516112569060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974604082015264657333325d60d81b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a1610789737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156114025760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526113a19291602001611868565b60408051601f19818403018152908290526113bb91611899565b6000604051808303816000865af19150503d80600081146113f8576040519150601f19603f3d011682016040523d82523d6000602084013e6113fd565b606091505b505050505b6004805462ff0000191662010000179055565b6001600160a01b038116811461142a57600080fd5b50565b60008060008060008060c0878903121561144657600080fd5b863561145181611415565b9550602087013561146181611415565b9450604087013561147181611415565b959894975094956060810135955060808101359460a0909101359350915050565b600080600080600060a086880312156114aa57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b60008060008060008060c087890312156114e657600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b6000610120828403121561152357600080fd5b50919050565b60008082840361016081121561153e57600080fd5b6115488585611510565b9250604061011f198201121561155d57600080fd5b50610120830190509250929050565b801515811461142a57600080fd5b60006020828403121561158c57600080fd5b81356115978161156c565b9392505050565b600061012082840312156115b157600080fd5b6115978383611510565b600080604083850312156115ce57600080fd5b82356115d981611415565b946020939093013593505050565b6000602082840312156115f957600080fd5b5035919050565b60008060008060008060c0878903121561161957600080fd5b863561162481611415565b9550602087013561163481611415565b95989597505050506040840135936060810135936080820135935060a0909101359150565b6000806000806080858703121561166f57600080fd5b5050823594602084013594506040840135936060013592509050565b6000806000606084860312156116a057600080fd5b83356116ab81611415565b925060208401356116bb81611415565b929592945050506040919091013590565b600080600080600080600060e0888a0312156116e757600080fd5b87356116f281611415565b9650602088013561170281611415565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b6001600160a01b03968716815294861660208601529290941660408401526060830152608082019290925260a081019190915260c00190565b6001600160a01b03988916815296909716602087015260408601949094526060850192909252608084015260a083015260c082015260e08101919091526101000190565b6001600160a01b03978816815295909616602086015260408501939093526060840191909152608083015260a082015260c081019190915260e00190565b6000602082840312156117fb57600080fd5b5051919050565b60006020828403121561181457600080fd5b813561159781611415565b60006020828403121561183157600080fd5b81516115978161156c565b60005b8381101561185757818101518382015260200161183f565b83811115610f8e5750506000910152565b6001600160e01b031983168152815160009061188b81600485016020870161183c565b919091016004019392505050565b600082516118ab81846020870161183c565b9190910192915050565b60408152600560408201526422b93937b960d91b606082015260806020820152600082518060808401526118f08160a085016020870161183c565b601f01601f19169190910160a0019291505056fea2646970667358221220363d825a62e7711a222b729367aea22c71c496027732c66afce572665829ed6264736f6c634300080e00336101406040523480156200001257600080fd5b5060405162001bb838038062001bb88339810160408190526200003591620002c1565b82828180604051806040016040528060018152602001603160f81b815250848481600390805190602001906200006d9291906200014e565b508051620000839060049060208401906200014e565b5050825160208085019190912083518483012060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81880181905281830187905260608201869052608082019490945230818401528151808203909301835260c0019052805194019390932091935091906080523060c05261012052505050506001600160a01b03969096166000908152600860205260409020805460ff19166001179055505060ff1660095550620003a1915050565b8280546200015c9062000365565b90600052602060002090601f016020900481019282620001805760008555620001cb565b82601f106200019b57805160ff1916838001178555620001cb565b82800160010185558215620001cb579182015b82811115620001cb578251825591602001919060010190620001ae565b50620001d9929150620001dd565b5090565b5b80821115620001d95760008155600101620001de565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200021c57600080fd5b81516001600160401b0380821115620002395762000239620001f4565b604051601f8301601f19908116603f01168101908282118183101715620002645762000264620001f4565b816040528381526020925086838588010111156200028157600080fd5b600091505b83821015620002a5578582018301518183018401529082019062000286565b83821115620002b75760008385830101525b9695505050505050565b60008060008060808587031215620002d857600080fd5b84516001600160a01b0381168114620002f057600080fd5b60208601519094506001600160401b03808211156200030e57600080fd5b6200031c888389016200020a565b945060408701519150808211156200033357600080fd5b5062000342878288016200020a565b925050606085015160ff811681146200035a57600080fd5b939692955090935050565b600181811c908216806200037a57607f821691505b6020821081036200039b57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e05161010051610120516117c7620003f160003960006109290152600061097801526000610953015260006108ac015260006108d60152600061090001526117c76000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806340c10f19116100c357806395d89b411161007c57806395d89b41146102c45780639dc29fac146102cc578063a457c2d7146102df578063a9059cbb146102f2578063d505accf14610305578063dd62ed3e1461031857600080fd5b806340c10f1914610236578063704802751461024957806370a082311461025c5780637a6d69b4146102855780637ecebe00146102a85780638ea2da7d146102bb57600080fd5b80631e7be210116101155780631e7be210146101cd57806323b872dd146101e057806325db769e146101f3578063313ce567146102065780633644e5151461021b578063395093511461022357600080fd5b806306fdde0314610152578063095ea7b31461017057806316c02129146101935780631785f53c146101a857806318160ddd146101bb575b600080fd5b61015a61032b565b604051610167919061140b565b60405180910390f35b61018361017e36600461147c565b6103bd565b6040519015158152602001610167565b6101a66101a13660046114a6565b610444565b005b6101a66101b63660046114a6565b610477565b6002545b604051908152602001610167565b6101a66101db3660046114a6565b6104a0565b6101836101ee3660046114c8565b6104cd565b6101bf610201366004611504565b610589565b60095460405160ff9091168152602001610167565b6101bf6105af565b61018361023136600461147c565b6105be565b6101a661024436600461147c565b6105ea565b6101a66102573660046114a6565b610600565b6101bf61026a3660046114a6565b6001600160a01b031660009081526020819052604090205490565b6101836102933660046114a6565b60076020526000908152604090205460ff1681565b6101bf6102b63660046114a6565b61062c565b6101bf60095481565b61015a61064a565b6101a66102da36600461147c565b610659565b6101836102ed36600461147c565b61066b565b61018361030036600461147c565b6106f1565b6101a661031336600461151d565b610766565b6101bf610326366004611590565b6107f6565b60606003805461033a906115c3565b80601f0160208091040260200160405190810160405280929190818152602001828054610366906115c3565b80156103b35780601f10610388576101008083540402835291602001916103b3565b820191906000526020600020905b81548152906001019060200180831161039657829003601f168201915b5050505050905090565b6001600160a01b038216600090815260076020526040812054839060ff16156104015760405162461bcd60e51b81526004016103f8906115f7565b60405180910390fd5b3360008181526007602052604090205460ff16156104315760405162461bcd60e51b81526004016103f8906115f7565b61043b8585610821565b95945050505050565b61044c61082f565b610474816001600160a01b03166000908152600760205260409020805460ff19166001179055565b50565b61047f61082f565b6001600160a01b03166000908152600860205260409020805460ff19169055565b6104a861082f565b610474816001600160a01b03166000908152600760205260409020805460ff19169055565b6001600160a01b038316600090815260076020526040812054849060ff16156105085760405162461bcd60e51b81526004016103f8906115f7565b6001600160a01b038416600090815260076020526040902054849060ff16156105435760405162461bcd60e51b81526004016103f8906115f7565b3360008181526007602052604090205460ff16156105735760405162461bcd60e51b81526004016103f8906115f7565b61057e878787610886565b979650505050505050565b600061059460095490565b61059f90600a61171e565b6105a9908361172d565b92915050565b60006105b961089f565b905090565b6000336105e08185856105d183836107f6565b6105db919061174c565b6109c6565b5060019392505050565b6105f261082f565b6105fc8282610aeb565b5050565b61060861082f565b6001600160a01b03166000908152600860205260409020805460ff19166001179055565b6001600160a01b0381166000908152600560205260408120546105a9565b60606004805461033a906115c3565b61066161082f565b6105fc8282610bca565b6000338161067982866107f6565b9050838110156106d95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103f8565b6106e682868684036109c6565b506001949350505050565b6001600160a01b038216600090815260076020526040812054839060ff161561072c5760405162461bcd60e51b81526004016103f8906115f7565b3360008181526007602052604090205460ff161561075c5760405162461bcd60e51b81526004016103f8906115f7565b61043b8585610d10565b6001600160a01b038716600090815260076020526040902054879060ff16156107a15760405162461bcd60e51b81526004016103f8906115f7565b6001600160a01b038716600090815260076020526040902054879060ff16156107dc5760405162461bcd60e51b81526004016103f8906115f7565b6107eb89898989898989610d1e565b505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6000336105e08185856109c6565b3360009081526008602052604090205460ff166108845760405162461bcd60e51b815260206004820152601360248201527254657374546f6b656e2f61646d696e4f6e6c7960681b60448201526064016103f8565b565b600033610894858285610e82565b6106e6858585610efc565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156108f857507f000000000000000000000000000000000000000000000000000000000000000046145b1561092257507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6001600160a01b038316610a285760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103f8565b6001600160a01b038216610a895760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103f8565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038216610b415760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103f8565b8060026000828254610b53919061174c565b90915550506001600160a01b03821660009081526020819052604081208054839290610b8090849061174c565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610c2a5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103f8565b6001600160a01b03821660009081526020819052604090205481811015610c9e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103f8565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610ccd908490611764565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610ade565b6000336105e0818585610efc565b83421115610d6e5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016103f8565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610d9d8c6110ca565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610df8826110f2565b90506000610e0882878787611140565b9050896001600160a01b0316816001600160a01b031614610e6b5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016103f8565b610e768a8a8a6109c6565b50505050505050505050565b6000610e8e84846107f6565b90506000198114610ef65781811015610ee95760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103f8565b610ef684848484036109c6565b50505050565b6001600160a01b038316610f605760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103f8565b6001600160a01b038216610fc25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103f8565b6001600160a01b0383166000908152602081905260409020548181101561103a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103f8565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061107190849061174c565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110bd91815260200190565b60405180910390a3610ef6565b6001600160a01b03811660009081526005602052604090208054600181018255905b50919050565b60006105a96110ff61089f565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061115187878787611168565b9150915061115e81611255565b5095945050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561119f575060009050600361124c565b8460ff16601b141580156111b757508460ff16601c14155b156111c8575060009050600461124c565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561121c573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166112455760006001925092505061124c565b9150600090505b94509492505050565b60008160048111156112695761126961177b565b036112715750565b60018160048111156112855761128561177b565b036112d25760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016103f8565b60028160048111156112e6576112e661177b565b036113335760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016103f8565b60038160048111156113475761134761177b565b0361139f5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016103f8565b60048160048111156113b3576113b361177b565b036104745760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016103f8565b600060208083528351808285015260005b818110156114385785810183015185820160400152820161141c565b8181111561144a576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461147757600080fd5b919050565b6000806040838503121561148f57600080fd5b61149883611460565b946020939093013593505050565b6000602082840312156114b857600080fd5b6114c182611460565b9392505050565b6000806000606084860312156114dd57600080fd5b6114e684611460565b92506114f460208501611460565b9150604084013590509250925092565b60006020828403121561151657600080fd5b5035919050565b600080600080600080600060e0888a03121561153857600080fd5b61154188611460565b965061154f60208901611460565b95506040880135945060608801359350608088013560ff8116811461157357600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156115a357600080fd5b6115ac83611460565b91506115ba60208401611460565b90509250929050565b600181811c908216806115d757607f821691505b6020821081036110ec57634e487b7160e01b600052602260045260246000fd5b602080825260139082015272115490cc8c10930bd09b1858dadb1a5cdd1959606a1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561167557816000190482111561165b5761165b611624565b8085161561166857918102915b93841c939080029061163f565b509250929050565b60008261168c575060016105a9565b81611699575060006105a9565b81600181146116af57600281146116b9576116d5565b60019150506105a9565b60ff8411156116ca576116ca611624565b50506001821b6105a9565b5060208310610133831016604e8410600b84101617156116f8575081810a6105a9565b611702838361163a565b806000190482111561171657611716611624565b029392505050565b60006114c160ff84168361167d565b600081600019048311821515161561174757611747611624565b500290565b6000821982111561175f5761175f611624565b500190565b60008282101561177657611776611624565b500390565b634e487b7160e01b600052602160045260246000fdfea26469706673582212204d0d7db92a47baa4b3863a7c3d90bb9ff2f03be8b62d59c0eeec4def4486554564736f6c634300080e0033496e636f7272656374206d616b65722062616c616e63652061667465722074616b6541304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f500000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d496e636f727265637420676173707269636520666f72206f6666657220696e20706f7374686f6f6b54616b65722073686f756c64206e6f742068617665206265656e2064656269746564206f66206865722071756f746520746f6b656e73506f7374486f6f6b206e6f742063616c6c65640000000000000000000000000043616e63656c206f66666572206f662061206661696c6564206f666665722073686f756c64206e6f7420676976652070726f766973696f6e20746f206d616b6572280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35834d616b65722062616c616e63652061667465722074616b652073686f756c64206265206c657373207468616e206f726967696e616c2062616c616e63656162636465666768696a6b6c6d6e6f707172737475767778797a313233343536374d616b65722073686f756c64206e6f742068617665206265656e2064656269746564206f6620686572206261736520746f6b656e73496e636f72726563742062657374206f6666657220696420696e20706f7374686f6f6b496e636f72726563742077616e747320666f72206f6666657220696e20706f7374686f6f6be2ce51fba856682424155a2d89b2ad1d2adde6ea0a9e3115b4b474cd6cb1798b496e636f7272656374206d616b65722062616c616e6365206265666f72652074616b65496e636f727265637420676976657320666f72206f6666657220696e20706f7374686f6f6b496e636f7272656374206f766572616c6c2062616c616e63652061667465722070656e616c747920666f722074616b6572496e636f7272656374206c617374206f6666657220696420696e20706f7374686f6f6b885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d1d59c048edb5397821854bd12cbe02242b82101c677f949d076d14eb7bd83436b2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a82b101f9ef8ca2761d91bea55ab50a4d051e9248088ff7314ddb8826839544c2aa26469706673582212204f5d3dd999d139e875b3bbf3d7eb6619f51e7bb1e2d054f673631768d5342ddd64736f6c634300080e0033",
    "sourceMap": "1368:26:0:-:0;;;-1:-1:-1;;163:28:1;;;;;-1:-1:-1;2152:20:100;;;;3904:34;;;;104:18655:93;1728:237:99;;;1793:64;;;;-1:-1:-1;;;1793:64:99;;;;1368:26:0;1793:64:99;;;;;;;;-1:-1:-1;;;1793:64:99;;;;1853:2;-1:-1:-1;1793:64:99;;;-1:-1:-1;1728:237:99;;;1872:65;;;;-1:-1:-1;;;1872:65:99;;1793:64;1872:65;;;;-1:-1:-1;1872:65:99;;;;;-1:-1:-1;;;1872:65:99;;-1:-1:-1;1872:65:99;;;;-1:-1:-1;1872:65:99;-1:-1:-1;1728:237:99;;;;-1:-1:-1;1728:237:99;;;;1694:271;;;-1:-1:-1;;1694:271:99;;;104:18655:93;;1694:271:99;;1368:26:0;;1694:271:99;;;;;;1793:64;1694:271;:::i;:::-;-1:-1:-1;1694:271:99;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1694:271:99;;;;;;;;;;;;-1:-1:-1;;1694:271:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1694:271:99;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1694:271:99;;;;;;;;;;;;;;;-1:-1:-1;;1694:271:99;;;;;;;;;;;;;;;;;;;;190:7:93;176:21;;230:2;213:19;;305:21;;;-1:-1:-1;;330:24:93;;;373:33;;;;;;;;;;;;-1:-1:-1;;;;373:33:93;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;410:34:93;;-1:-1:-1;;;448:33:93;;104:18655;;;;;;;;;-1:-1:-1;2020:32:99;;;-1:-1:-1;;;2020:32:99;;2029:9;2020:32;;;226:51:125;293:18;;;286:30;;;;352:1;332:18;;;325:29;-1:-1:-1;;;370:18:125;;;363:39;237:61:1;;2020:8:99;;419:19:125;;2020:32:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2058:32:99;;;-1:-1:-1;;;2058:32:99;;2069:4;2058:32;;;669:51:125;736:18;;;729:30;;;795:2;775:18;;;768:30;-1:-1:-1;;;814:18:125;;;807:41;2058:32:99;;237:61:1;;-1:-1:-1;2058:8:99;;-1:-1:-1;865:19:125;;;;;-1:-1:-1;;2058:32:99;;;;;;;-1:-1:-1;237:61:1;2058:32:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;104:18655:93;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;104:18655:93;;;-1:-1:-1;104:18655:93;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;895:380:125;974:1;970:12;;;;1017;;;1038:61;;1092:4;1084:6;1080:17;1070:27;;1038:61;1145:2;1137:6;1134:14;1114:18;1111:38;1108:161;;1191:10;1186:3;1182:20;1179:1;1172:31;1226:4;1223:1;1216:15;1254:4;1251:1;1244:15;1108:161;;895:380;;;:::o;:::-;104:18655:93;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620002495760003560e01c806353abc4a7116200013d578063bfdc358811620000bb578063e2c015ee1162000086578063e2c015ee146200045c578063e43260cd1462000466578063ea14b5c31462000470578063f8ccbf471462000487578063fa7626d4146200049b57600080fd5b8063bfdc3588146200041a578063d48b10ea1462000431578063d56a22f0146200043b578063df894467146200045257600080fd5b80638c00483211620001085780638c00483214620003bd5780639a5c458d14620003c7578063b84e3eda14620003d1578063ba414fa614620003e8578063bbab0fac146200040357600080fd5b806353abc4a7146200036c5780636c49c32c14620003765780636cc12a24146200039c578063722abdb314620003b357600080fd5b80631f859aa711620001cb5780633d3d130d11620001965780633d3d130d146200032057806350198541146200033757806351f55cb21462000341578063521606d2146200034b57806352166b9d146200036257600080fd5b80631f859aa714620002de57806332325d8214620002e85780633336a63f14620002f25780633a768463146200030957600080fd5b80630a9254e411620002185780630a9254e414620002a25780630b3d8c4214620002ac578063167d0ea014620002c35780631687e8d514620002cd5780631e91f8cb14620002d757600080fd5b806301b5070b146200024e578063031047df146200025a57806305e08bdf14620002645780630645f2be146200026e575b600080fd5b62000258620004a9565b005b62000258620007ef565b6200025862000aea565b620002856200027f366004620071dc565b62000cca565b6040516001600160a01b0390911681526020015b60405180910390f35b6200025862000df4565b62000285620002bd36600462007212565b6200100d565b6200025862001030565b6200025862001446565b3362000285565b6200025862001762565b620002586200191b565b6200028562000303366004620072d9565b62001ab6565b620002856000805160206201953683398151915281565b6200025862000331366004620073a4565b62001c06565b6200025862001ecd565b62000258620022e7565b620002586200035c36600462007412565b6200254c565b6200025862002688565b6200025862002aea565b6200038d62000387366004620074ac565b62002e18565b60405190815260200162000299565b6200038d620003ad366004620074cc565b62002efc565b6200025862002f2b565b6200028562002f5b565b6200025862002f6e565b62000258620003e236600462007412565b6200310e565b620003f26200323e565b604051901515815260200162000299565b620002856200041436600462007504565b6200336f565b620002856200042b366004620072d9565b620033f2565b620002586200341b565b6200038d6200044c36600462007542565b620038c5565b6200025862003960565b6200025862003d95565b6200025862003f87565b620002856200048136600462007504565b62004341565b600054620003f29062010000900460ff1681565b600054620003f29060ff1681565b602180546001600160401b03191662004351179055600d54600e546001600160a01b03918216916349f6d2dc9116600f546001600160a01b0316601954601b546040516001600160e01b031960e087901b1681526200051c949392670de0b6b3a764000092839260009060040162007571565b6020604051808303816000875af11580156200053c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005629190620075af565b601a55601d805461ff001916610100179055600d5462000593906200058d906001600160a01b031690565b6200440b565b600f546001600160a01b0316600e546001600160a01b0391821691166001600160a01b03166000805160206201982c83398151915230670de0b6b3a764000080601b54601954601a546000604051620005f39796959493929190620075c9565b60405180910390a3601854601a54604051634bc5be0160e11b81526004810191909152671bc16d674ec8000060248201526000916001600160a01b03169063978b7c02906044016020604051808303816000875af11580156200065a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000680919062007604565b9050620006b881156040518060400160405280601181526020017014db9a5c19481cda1bdd5b190819985a5b607a1b81525062004448565b601d546040805180820190915260138152600080516020620195b48339815191526020820152620006f39162010000900460ff169062004448565b600d54600e54620007ec91620007a7916001600160a01b03918216916368c13d6b91165b600f54601a5460405160e085901b6001600160e01b03191681526001600160a01b0393841660048201529290911660248301526044820152606401602060405180830381865afa15801562000770573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007969190620075af565b6bffffffffffffffffffffffff1690565b670de0b6b3a76400006040518060400160405280601f81526020017f4f6666657220776173206e6f7420636f72726563746c7920757064617465640081525062004481565b50565b600d54600e54600f54601954601b5460405163127db4b760e21b81526001600160a01b03958616956349f6d2dc956200084b9590821694911692671bc16d674ec8000092670de0b6b3a764000092919060009060040162007571565b6020604051808303816000875af11580156200086b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008919190620075af565b50600d54600e54600f54601954601b5460405163127db4b760e21b81526001600160a01b03958616956349f6d2dc95620008e69590821694911692670de0b6b3a7640000928392919060009060040162007571565b6020604051808303816000875af115801562000906573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200092c9190620075af565b601a55600d54600e54600f54601954601b5460405163127db4b760e21b81526000956001600160a01b03908116956349f6d2dc956200098c95918316949216926706f05b59d3b2000092670de0b6b3a764000092918a9060040162007571565b6020604051808303816000875af1158015620009ac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009d29190620075af565b602180546001600160401b031916620044bd179055601854604051634bc5be0160e11b815260048101839052670de0b6b3a764000060248201529192506000916001600160a01b039091169063978b7c02906044016020604051808303816000875af115801562000a47573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a6d919062007604565b905062000aae601d60029054906101000a900460ff16604051806040016040528060138152602001600080516020620195b483398151915281525062004448565b62000ae6816040518060400160405280601481526020017314db9a5c19481cda1bdd5b19081cdd58d8d9595960621b81525062004448565b5050565b602180546001600160401b031916620045aa179055600d54600e546001600160a01b03918216916349f6d2dc9116600f546001600160a01b0316601954601b546040516001600160e01b031960e087901b16815262000b5d949392670de0b6b3a764000092839260009060040162007571565b6020604051808303816000875af115801562000b7d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ba39190620075af565b601a819055601854600d54600e54600f54601954604051600162d1d2cd60e01b031981526000966001600160a01b039687169663ff2e2d339662000c09969082169590821694911692670f43fc2c04ee000091670de0b6b3a76400009160040162007624565b6020604051808303816000875af115801562000c29573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c4f919062007604565b905062000c8781156040518060400160405280601181526020017014db9a5c19481cda1bdd5b190819985a5b607a1b81525062004448565b601d54604080518082019091526013815272141bdcdd121bdbdac81dd85cc818d85b1b1959606a1b6020820152620007ec9162010000900460ff16159062004448565b6000811562000d1c57306028621e848060405162000ce890620070ae565b62000cf69392919062007665565b604051809103906000f08015801562000d13573d6000803e3d6000fd5b50905062000d60565b306028621e848060405162000d3190620070bc565b62000d3f9392919062007665565b604051809103906000f08015801562000d5c573d6000803e3d6000fd5b5090505b6000805160206201953683398151915263c657c71882604080516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260086044820152674d616e67726f766560c01b6064820152608401600060405180830381600087803b15801562000dd657600080fd5b505af115801562000deb573d6000803e3d6000fd5b50505050919050565b62000dfe620045f9565b600e5462000e3f906001600160a01b0316600f546001600160a01b0316604051806040016040528060058152602001642a30b5b2b960d91b81525062001ab6565b601880546001600160a01b0319166001600160a01b03928316179055600e5462000e74911630674563918244f4000062004862565b600f5462000ea0906001600160a01b03166018546001600160a01b0316670de0b6b3a764000062004862565b601854600e5460405163a3cfe14d60e01b81526001600160a01b039283169263a3cfe14d9262000ee092911690670de0b6b3a76400009060040162007686565b600060405180830381600087803b15801562000efb57600080fd5b505af115801562000f10573d6000803e3d6000fd5b5050601854600f5460405163a3cfe14d60e01b81526001600160a01b03928316945063a3cfe14d935062000f559290911690670de0b6b3a76400009060040162007686565b600060405180830381600087803b15801562000f7057600080fd5b505af115801562000f85573d6000803e3d6000fd5b5050600d546001600160a01b031691506370a082319050306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562000fe2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010089190620075af565b601c55565b60006200101a8262000cca565b90506200102984848362004871565b9392505050565b600e546000906200105d906001600160a01b03165b600f546001600160a01b0316601954601b5462004b56565b600e5490915060009062001089906001600160a01b0316600f546001600160a01b031660195462004c3e565b602180546001600160401b03191662004351179055600d54600e54600f5460195460405163127db4b760e21b81529495506001600160a01b03938416946349f6d2dc94620010f1948116931691670de0b6b3a764000091829190600090819060040162007571565b6020604051808303816000875af115801562001111573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620011379190620075af565b601a55600d54620011ed906001600160a01b03166370a08231305b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562001197573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620011bd9190620075af565b82601c54620011cd9190620076b5565b604051806060016040528060238152602001620197306023913962004481565b600d5462001204906001600160a01b03166200440b565b600f546001600160a01b0316600e546001600160a01b0391821691166001600160a01b03166000805160206201982c83398151915230670de0b6b3a764000080601b54601954601a546000604051620012649796959493929190620075c9565b60405180910390a3601854601a54604051634bc5be0160e11b81526004810191909152671bc16d674ec8000060248201526000916001600160a01b03169063978b7c02906044016020604051808303816000875af1158015620012cb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620012f1919062007604565b90506200132b816040518060400160405280601481526020017314db9a5c19481cda1bdd5b19081cdd58d8d9595960621b81525062004448565b601d546040805180820190915260138152600080516020620195b48339815191526020820152620013669162010000900460ff169062004448565b600d5462001418906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015620013c2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620013e89190620075af565b84601c54620013f89190620076b5565b604051806060016040528060228152602001620194f46022913962004481565b600d54600e546200144191620007a7916001600160a01b03918216916368c13d6b911662000717565b505050565b600e5460009062001460906001600160a01b031662001045565b602180546001600160401b03191662004351179055600d54600e54600f54601954601b5460405163127db4b760e21b81529596506001600160a01b03948516956349f6d2dc95620014c8958116941692670de0b6b3a764000092839260009060040162007571565b6020604051808303816000875af1158015620014e8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200150e9190620075af565b601a55600d546200152e906001600160a01b03166370a082313062001152565b600d5462001545906001600160a01b03166200440b565b600f546001600160a01b0316600e546001600160a01b0391821691166001600160a01b03166000805160206201982c83398151915230670de0b6b3a764000080601b54601954601a546000604051620015a59796959493929190620075c9565b60405180910390a3601854601a54604051634bc5be0160e11b815260048101919091526706f05b59d3b2000060248201526000916001600160a01b03169063978b7c02906044016020604051808303816000875af11580156200160c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001632919062007604565b90506200166c816040518060400160405280601481526020017314db9a5c19481cda1bdd5b19081cdd58d8d9595960621b81525062004448565b601d546040805180820190915260138152600080516020620195b48339815191526020820152620016a79162010000900460ff169062004448565b600d5462001739906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562001703573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620017299190620075af565b83601c54620013f89190620076b5565b600d54600e5462000ae691620007a7916001600160a01b03918216916368c13d6b911662000717565b600d54600e54600f5460195460405163127db4b760e21b81526001600160a01b03948516946349f6d2dc94620017bd9490821693911691670de0b6b3a764000091671bc16d674ec80000916101f49060009060040162007571565b6020604051808303816000875af1158015620017dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620018039190620075af565b601a819055602180546001600160401b03191662004d06179055601854604051634bc5be0160e11b81526004810192909252671bc16d674ec8000060248301526000916001600160a01b039091169063978b7c02906044015b6020604051808303816000875af11580156200187c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620018a2919062007604565b9050620018e3601d60029054906101000a900460ff16604051806040016040528060138152602001600080516020620195b483398151915281525062004448565b620007ec816040518060400160405280601481526020017314db9a5c19481cda1bdd5b19081cdd58d8d9595960621b81525062004448565b600d54600e54600f54601954601b5460405163127db4b760e21b81526001600160a01b03958616956349f6d2dc956200196f9590821694911692670de0b6b3a7640000928392919060009060040162007571565b6020604051808303816000875af11580156200198f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620019b59190620075af565b50600d54600e54600f54601954601b5460405163127db4b760e21b81526001600160a01b03958616956349f6d2dc9562001a1295908216949116926706f05b59d3b2000092670de0b6b3a764000092919060009060040162007571565b6020604051808303816000875af115801562001a32573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a589190620075af565b601a819055602180546001600160401b03191662004e51179055601854604051634bc5be0160e11b81526004810192909252670de0b6b3a764000060248301526000916001600160a01b039091169063978b7c02906044016200185c565b600080600d60009054906101000a90046001600160a01b0316858560405162001adf90620070ca565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f08015801562001b1c573d6000803e3d6000fd5b5060405163c88a5e6d60e01b8152909150600080516020620195368339815191529063c88a5e6d9062001b5f90849068056bc75e2d631000009060040162007686565b600060405180830381600087803b15801562001b7a57600080fd5b505af115801562001b8f573d6000803e3d6000fd5b50506040516318caf8e360e31b815260008051602062019536833981519152925063c657c718915062001bc990849087906004016200772c565b600060405180830381600087803b15801562001be457600080fd5b505af115801562001bf9573d6000803e3d6000fd5b5092979650505050505050565b600d546001600160a01b0316331462001c1e57600080fd5b601d5460208201356f6d67762f74726164655375636365737360801b149062001c8f908290610100900460ff168062001c595750601d5460ff165b1560405180604001604052806016815260200175696e636f7272656374207375636365737320666c616760501b81525062004f3e565b601d54610100900460ff161562001cfe5762001cf882602001356e1b59dd8bdb585ad95c94995d995c9d608a1b6040518060400160405280601d81526020017f6d6776446174612073686f756c64206265206d616b657252657665727400000081525062004f7e565b62001d57565b62001d5782602001356f6d67762f74726164655375636365737360801b6040518060400160405280601e81526020017f6d6776446174612073686f756c6420626520747261646553756363657373000081525062004f7e565b600d5462001eb1906001600160a01b03166327507458816368c13d6b62001d82602089018962007752565b62001d9460408a0160208b0162007752565b604080516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301528901356044820152606401602060405180830381865afa15801562001deb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001e119190620075af565b6040518263ffffffff1660e01b815260040162001e3091815260200190565b602060405180830381865afa15801562001e4e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001e74919062007604565b156040518060400160405280602081526020017f4f6666657220776173206e6f742072656d6f7665642061667465722074616b6581525062004448565b6021546200144190849084908015620070d8021763ffffffff16565b600e5462001ee4906001600160a01b031662001045565b50600e546000906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562001f3f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001f659190620075af565b600f546018546040516370a0823160e01b81526001600160a01b0391821660048201529293506000929116906370a0823190602401602060405180830381865afa15801562001fb8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001fde9190620075af565b602180546001600160401b03191662004fba179055600d54600e54600f54601954601b5460405163127db4b760e21b81529596506001600160a01b03948516956349f6d2dc9562002046958116941692670de0b6b3a764000092839260009060040162007571565b6020604051808303816000875af115801562002066573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200208c9190620075af565b601a819055601854604051634bc5be0160e11b81526004810192909252670de0b6b3a764000060248301526000916001600160a01b039091169063978b7c02906044016020604051808303816000875af1158015620020ef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002115919062007604565b90506200214f81604051806040016040528060148152602001731cdb9a5c19481cda1bdd5b19081cdd58d8d9595960621b81525062004448565b6200222062002167670de0b6b3a764000085620076b5565b600e546001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015620021be573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620021e49190620075af565b6040518060400160405280601781526020017f496e636f7272656374206d616b65722062616c616e636500000000000000000081525062004481565b6200144162002238670de0b6b3a764000084620076b5565b600f546018546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401602060405180830381865afa15801562002285573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620022ab9190620075af565b6040518060400160405280601781526020017f496e636f72726563742074616b65722062616c616e636500000000000000000081525062004481565b600e5460009062002301906001600160a01b031662001045565b602180546001600160401b03191662004351179055600d54600e54600f54601954601b5460405163127db4b760e21b81529596506001600160a01b03948516956349f6d2dc9562002369958116941692670de0b6b3a764000092839260009060040162007571565b6020604051808303816000875af115801562002389573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620023af9190620075af565b601a55600d54620023cf906001600160a01b03166370a082313062001152565b600d54620023e6906001600160a01b03166200440b565b600f546001600160a01b0316600e546001600160a01b0391821691166001600160a01b03166000805160206201982c83398151915230670de0b6b3a764000080601b54601954601a546000604051620024469796959493929190620075c9565b60405180910390a3601854601a54604051634bc5be0160e11b81526004810191909152671bc16d674ec8000060248201526000916001600160a01b03169063978b7c02906044016020604051808303816000875af1158015620024ad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620024d3919062007604565b905062002514601d60029054906101000a900460ff16604051806040016040528060138152602001600080516020620195b483398151915281525062004448565b620016a7816040518060400160405280601481526020017314db9a5c19481cda1bdd5b19081cdd58d8d9595960621b81525062004448565b604080516020810190915260008082525b82518110156200267c57825182906000805160206201953683398151915290636900a3ae9086908590811062002597576200259762007772565b60200260200101516040518263ffffffff1660e01b8152600401620025be91815260200190565b600060405180830381865afa158015620025dc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262002606919081019062007788565b6040516020016200261992919062007808565b6040516020818303038152906040529150600183516200263a9190620076b5565b8110156200266757816040516020016200265591906200783b565b60405160208183030381529060405291505b80620026738162007863565b9150506200255d565b5062000ae68162004fc4565b60405180606001604052806021815260200162019672602191398051620026b891601e91602090910190620070e2565b507f6162636465666768696a6b6c6d6e6f707172737475767778797a313233343536601f55600e546000906001600160a01b03166370a08231305b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562002738573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200275e9190620075af565b600f546018546040516370a0823160e01b81526001600160a01b0391821660048201529293506000929116906370a0823190602401602060405180830381865afa158015620027b1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620027d79190620075af565b600d54600e54600f54601954601b5460405163127db4b760e21b81529596506001600160a01b03948516956349f6d2dc956200282a958116941692670de0b6b3a764000092839260009060040162007571565b6020604051808303816000875af11580156200284a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620028709190620075af565b601a55601d805461ff001916610100179055600d546200289b906200058d906001600160a01b031690565b600f54600e54601a546018546040516001600160a01b039485169493841693600080516020620197ec83398151915293620028e7939092911690670de0b6b3a76400009081906200787f565b60405180910390a3601854601a54604051634bc5be0160e11b81526004810191909152670de0b6b3a764000060248201526000916001600160a01b03169063978b7c02906044016020604051808303816000875af11580156200294e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002974919062007604565b9050620029ac81156040518060400160405280601181526020017014db9a5c19481cda1bdd5b190819985a5b607a1b81525062004448565b600e5462002a4f906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562002a08573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002a2e9190620075af565b84604051806060016040528060358152602001620196936035913962004481565b600f546018546040516370a0823160e01b81526001600160a01b039182166004820152620014419291909116906370a0823190602401602060405180830381865afa15801562002aa3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002ac99190620075af565b836040518060600160405280603681526020016201957e6036913962004481565b602180546001600160401b0319166200500b179055600d54600e546001600160a01b03918216916349f6d2dc9116600f546001600160a01b0316601954601b546040516001600160e01b031960e087901b16815262002b5d949392670de0b6b3a764000092839260009060040162007571565b6020604051808303816000875af115801562002b7d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002ba39190620075af565b601a55600d5462002bbd906001600160a01b03166200440b565b600f54600e54601a54601854604080519283526001600160a01b039182166020840152670de0b6b3a7640000838201819052606084015251938116939216917f1d81940ff2c3ac549c8acefd7c1b2ffb24aacc8b3cfa309c22abc3de79727f9d9181900360800190a3600d5462002c3d906001600160a01b03166200440b565b600f546001600160a01b0316600e546001600160a01b0391821691166001600160a01b031660008051602062019710833981519152601a5460405162002c8591815260200190565b60405180910390a3601854601a54604051634bc5be0160e11b81526004810191909152671bc16d674ec8000060248201526000916001600160a01b03169063978b7c02906044016020604051808303816000875af115801562002cec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002d12919062007604565b905062002d53601d60029054906101000a900460ff16604051806040016040528060138152602001600080516020620195b483398151915281525062004448565b62002d8b816040518060400160405280601481526020017314db9a5c19481cda1bdd5b19081cdd58d8d9595960621b81525062004448565b600d54600e54600f54601954601b54601a54604051636a4f769160e01b81526001600160a01b0396871696636a4f76919662002de19690821695911693670de0b6b3a764000093849360009190600401620078bb565b600060405180830381600087803b15801562002dfc57600080fd5b505af115801562002e11573d6000803e3d6000fd5b5050505050565b600d546000906001600160a01b0316331462002e3357600080fd5b601d54610100900460ff161562002e6a57601e60405162461bcd60e51b815260040162002e619190620079dc565b60405180910390fd5b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c23362002e9b602085018562007752565b62002ead604086016020870162007752565b604080516001600160a01b03948516815292841660208401529216818301529084013560608201526080808501359082015260a0808501359082015260c00160405180910390a1505060205490565b600062002f0b82600a62007aee565b62002f178585620038c5565b62002f23919062007afc565b949350505050565b602180546001600160401b03191662005206179055600e546000906001600160a01b03166370a0823130620026f3565b600062002f69600062000cca565b905090565b600d54600e54600f54601954601b5460405163127db4b760e21b81526001600160a01b03958616956349f6d2dc9562002fc29590821694911692670de0b6b3a7640000928392919060009060040162007571565b6020604051808303816000875af115801562002fe2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620030089190620075af565b601a55601d805461ff001916610100179055600d5460009062003036906200058d906001600160a01b031690565b600f54600e54601a546018546040516001600160a01b039485169493841693600080516020620197ec8339815191529362003082939092911690670de0b6b3a76400009081906200787f565b60405180910390a3601854601a54604051634bc5be0160e11b81526004810191909152671bc16d674ec8000060248201526001600160a01b039091169063978b7c02906044016020604051808303816000875af1158015620030e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ae6919062007604565b604080516020810190915260008082525b82518110156200267c57825182906000805160206201953683398151915290636900a3ae9086908590811062003159576200315962007772565b60200260200101516040518263ffffffff1660e01b81526004016200318091815260200190565b600060405180830381865afa1580156200319e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620031c8919081019062007788565b604051602001620031db92919062007808565b604051602081830303815290604052915060018351620031fc9190620076b5565b8110156200322957816040516020016200321791906200783b565b60405160208183030381529060405291505b80620032358162007863565b9150506200311f565b60008054610100900460ff16156200325f5750600054610100900460ff1690565b6000600080516020620195368339815191523b156200336a5760405160009060008051602062019536833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc490620032cc9083906519985a5b195960d21b9060200162007686565b60408051601f1981840301815290829052620032ec929160200162007b1f565b60408051601f1981840301815290829052620033089162007b52565b6000604051808303816000865af19150503d806000811462003347576040519150601f19603f3d011682016040523d82523d6000602084013e6200334c565b606091505b509150508080602001905181019062003366919062007604565b9150505b919050565b600d5460009062003389906001600160a01b0316620052a6565b50600d546040516001600160a01b039091169084908490620033ab9062007171565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f080158015620033e8573d6000803e3d6000fd5b5090505b92915050565b600080600d60009054906101000a90046001600160a01b0316858560405162001adf906200717f565b600e5460009062003435906001600160a01b031662001045565b601854602180546001600160401b0319166200500b179055600d54600e54600f54601954601b5460405163127db4b760e21b81529697506001600160a01b039586163196948616956349f6d2dc95620034a8958216949190911692670de0b6b3a764000092839260009060040162007571565b6020604051808303816000875af1158015620034c8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620034ee9190620075af565b601a55600d5462003583906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156200354d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620035739190620075af565b83601c54620011cd9190620076b5565b601d805461ff001916610100179055600d54620035ab906200058d906001600160a01b031690565b600f54600e54601a546018546040516001600160a01b039485169493841693600080516020620197ec83398151915293620035f7939092911690670de0b6b3a76400009081906200787f565b60405180910390a3600d5462003616906001600160a01b03166200440b565b600f546001600160a01b0316600e546001600160a01b0391821691166001600160a01b031660008051602062019710833981519152601a546040516200365e91815260200190565b60405180910390a3600d546040516381bad6f360e01b815260008051602062019536833981519152916381bad6f391620036af91600191829182916000916001600160a01b03169060040162007b70565b600060405180830381600087803b158015620036ca57600080fd5b505af1158015620036df573d6000803e3d6000fd5b50505050620036eb3090565b6001600160a01b03167f1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa09460006040516200372791815260200190565b60405180910390a2601854601a54604051634bc5be0160e11b81526004810191909152671bc16d674ec8000060248201526000916001600160a01b03169063978b7c02906044016020604051808303816000875af11580156200378e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620037b4919062007604565b9050620037ec81156040518060400160405280601181526020017014db9a5c19481cda1bdd5b190819985a5b607a1b81525062004448565b600d546000906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562003846573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200386c9190620075af565b601c546200387b9190620076b5565b601854909150620038bf9082906200389f9086906001600160a01b031631620076b5565b604051806060016040528060318152602001620197786031913962004481565b50505050565b6000620038d16200537f565b6000836001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562003912573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003938919062007ba0565b60ff169050620039476200538d565b6200395481600a62007aee565b62002f23908462007bc5565b600e546000906200397a906001600160a01b031662001045565b602180546001600160401b0319166200500b179055600d54600e54600f54601954601b5460405163127db4b760e21b81529596506001600160a01b03948516956349f6d2dc95620039e2958116941692670de0b6b3a764000092839260009060040162007571565b6020604051808303816000875af115801562003a02573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003a289190620075af565b601a55600d5462003a48906001600160a01b03166370a082313062001152565b601d805461ff001916610100179055600d5462003a70906200058d906001600160a01b031690565b600f54600e54601a546018546040516001600160a01b039485169493841693600080516020620197ec8339815191529362003abc939092911690670de0b6b3a76400009081906200787f565b60405180910390a3600d5462003adb906001600160a01b03166200440b565b600f546001600160a01b0316600e546001600160a01b0391821691166001600160a01b031660008051602062019710833981519152601a5460405162003b2391815260200190565b60405180910390a3600d546040516381bad6f360e01b815260008051602062019536833981519152916381bad6f39162003b7491600191829182916000916001600160a01b03169060040162007b70565b600060405180830381600087803b15801562003b8f57600080fd5b505af115801562003ba4573d6000803e3d6000fd5b5050505062003bb03090565b6001600160a01b03167f1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa094600060405162003bec91815260200190565b60405180910390a2601854601a54604051634bc5be0160e11b81526004810191909152671bc16d674ec8000060248201526000916001600160a01b03169063978b7c02906044016020604051808303816000875af115801562003c53573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003c79919062007604565b905062003cba601d60029054906101000a900460ff16604051806040016040528060138152602001600080516020620195b483398151915281525062004448565b62003cf081156040518060400160405280601181526020017014db9a5c19481cda1bdd5b190819985a5b607a1b81525062004448565b600d5462000ae6906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562003d4c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003d729190620075af565b601c546040518060600160405280603d815260200162019635603d91396200544e565b602180546001600160401b031916620045aa179055600d54600e546001600160a01b03918216916349f6d2dc9116600f546001600160a01b0316601954601b546040516001600160e01b031960e087901b16815262003e08949392670de0b6b3a764000092839260009060040162007571565b6020604051808303816000875af115801562003e28573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003e4e9190620075af565b601a55601854600d54600e546000926001600160a01b039081169263ff2e2d33929082169116600f546001600160a01b0316601a54670de0b6b3a764000080600160195462003e9e9190620076b5565b6040518863ffffffff1660e01b815260040162003ec2979695949392919062007624565b6020604051808303816000875af115801562003ee2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003f08919062007604565b905062003f51601d60029054906101000a900460ff161560405180604001604052806013815260200172141bdcdd121bdbdac81dd85cc818d85b1b1959606a1b81525062004448565b620007ec81156040518060400160405280601181526020017014db9a5c19481cda1bdd5b190819985a5b607a1b81525062004448565b600e5460009062003fa1906001600160a01b031662001045565b602180546001600160401b0319166200500b179055600d54600e54600f54601954601b5460405163127db4b760e21b81529596506001600160a01b03948516956349f6d2dc9562004009958116941692670de0b6b3a764000092839260009060040162007571565b6020604051808303816000875af115801562004029573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200404f9190620075af565b601a55600d546200406f906001600160a01b03166370a082313062001152565b600d5462004086906001600160a01b03166200440b565b600f54600e54601a54601854604080519283526001600160a01b039182166020840152670de0b6b3a7640000838201819052606084015251938116939216917f1d81940ff2c3ac549c8acefd7c1b2ffb24aacc8b3cfa309c22abc3de79727f9d9181900360800190a3600d5462004106906001600160a01b03166200440b565b60405181815230907f1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa0949060200160405180910390a2600d5462004152906001600160a01b03166200440b565b600f546001600160a01b0316600e546001600160a01b0391821691166001600160a01b031660008051602062019710833981519152601a546040516200419a91815260200190565b60405180910390a3601854601a54604051634bc5be0160e11b81526004810191909152671bc16d674ec8000060248201526000916001600160a01b03169063978b7c02906044016020604051808303816000875af115801562004201573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004227919062007604565b905062004261816040518060400160405280601481526020017314db9a5c19481cda1bdd5b19081cdd58d8d9595960621b81525062004448565b601d546040805180820190915260138152600080516020620195b483398151915260208201526200429c9162010000900460ff169062004448565b600d5462000ae6906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015620042f8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200431e9190620075af565b601c54604051806060016040528060228152602001620194f46022913962004481565b600062001029838360006200100d565b601d805462ff0000191662010000179055600d546001600160a01b0316636a4f769162004382602085018562007752565b62004394604086016020870162007752565b670de0b6b3a764000080601954601b5489604001358a604001356040518963ffffffff1660e01b8152600401620043d3989796959493929190620078bb565b600060405180830381600087803b158015620043ee57600080fd5b505af115801562004403573d6000803e3d6000fd5b505050505050565b6040516381bad6f360e01b815260008051602062019536833981519152906381bad6f39062002de190600190819081908190889060040162007b70565b8162000ae65760008051602062019615833981519152816040516200446e919062007be7565b60405180910390a162000ae6826200548a565b81831462001441576000805160206201961583398151915281604051620044a9919062007be7565b60405180910390a1620014418383620054f1565b601d805462ff0000191662010000179055600d546000906001600160a01b031663cbf75c9a620044f1602086018662007752565b62004503604087016020880162007752565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016040805180830381865afa1580156200454e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004574919062007c18565b9150620014419050603882901c63ffffffff16601a54604051806060016040528060238152602001620196c86023913962004481565b601d805462ff0000191662010000178155604080518082019091529081527f506f7374686f6f6b2073686f756c64206e6f742062652063616c6c6564000000602082015262000ae690620055b5565b601354604051309160119160129160ff169062004616906200718d565b62004625949392919062007c3d565b604051809103906000f08015801562004642573d6000803e3d6000fd5b50600e80546001600160a01b0319166001600160a01b03929092169190911790553060165460405160149160159160ff9091169062004681906200718d565b62004690949392919062007c3d565b604051809103906000f080158015620046ad573d6000803e3d6000fd5b50600f80546001600160a01b0319166001600160a01b03928316908117909155600e54601054620046e79391909116919060ff166200100d565b600d80546001600160a01b0319166001600160a01b03929092169182179055604080516316c1a85160e31b8152905163b60d428891678ac7230489e8000091600480830192600092919082900301818588803b1580156200474757600080fd5b505af11580156200475c573d6000803e3d6000fd5b5050600e54600d5460405163095ea7b360e01b81526001600160a01b03928316955063095ea7b394506200479b93509116906000199060040162007686565b6020604051808303816000875af1158015620047bb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620047e1919062007604565b50600f54600d5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926200481c929116906000199060040162007686565b6020604051808303816000875af11580156200483c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007ec919062007604565b620014418383836000620055d5565b6200487c83620052a6565b506200488882620052a6565b50601754604051630b73a18f60e01b81526001600160a01b0385811660048301528481166024830152604482019290925260006064820152614e20608482015290821690630b73a18f9060a401600060405180830381600087803b158015620048f057600080fd5b505af115801562004905573d6000803e3d6000fd5b5050601754604051630b73a18f60e01b81526001600160a01b0386811660048301528781166024830152604482019290925260006064820152614e2060848201529084169250630b73a18f915060a401600060405180830381600087803b1580156200497057600080fd5b505af115801562004985573d6000803e3d6000fd5b50505050600080516020620197cc83398151915260001c60601b60601c6001600160a01b031663c657c71884856001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015620049f0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262004a1a919081019062007788565b6040518363ffffffff1660e01b815260040162004a399291906200772c565b600060405180830381600087803b15801562004a5457600080fd5b505af115801562004a69573d6000803e3d6000fd5b50505050600080516020620197cc83398151915260001c60601b60601c6001600160a01b031663c657c71883846001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801562004ad4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262004afe919081019062007788565b6040518363ffffffff1660e01b815260040162004b1d9291906200772c565b600060405180830381600087803b15801562004b3857600080fd5b505af115801562004b4d573d6000803e3d6000fd5b50505050505050565b600d546040516365fbae4d60e11b81526001600160a01b0386811660048301528581166024830152600092839283929091169063cbf75c9a906044016040805180830381865afa15801562004baf573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004bd5919062007c18565b9092509050600084604084901c61ffff16111562004bfd575061ffff604083901c1662004c00565b50835b8062004c1662ffffff606085901c168862007c8c565b62004c22919062007bc5565b62004c3290633b9aca0062007bc5565b98975050505050505050565b600d546040516365fbae4d60e11b81526001600160a01b0385811660048301528481166024830152600092839283929091169063cbf75c9a906044016040805180830381865afa15801562004c97573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004cbd919062007c18565b909250905061ffff604083901c1662004ce062ffffff606084901c168662007c8c565b62004cec919062007bc5565b62004cfc90633b9aca0062007bc5565b9695505050505050565b601d805462ff000019166201000017905560408051606080820190925260258082526bffffffffffffffffffffffff8584013580851c82169491169260c08701359182901c92604883901c62ffffff1692602090811c61ffff169262004d82928892670de0b6b3a7640000929190620196eb9083013962004481565b62004db084671bc16d674ec80000604051806060016040528060258152602001620197536025913962004481565b62004dd8816101f4604051806060016040528060288152602001620195566028913962004481565b62004e1a83306040518060400160405280601781526020017f496e636f7272656374206d616b6572206164647265737300000000000000000081525062005816565b62004b4d826019546040518060400160405280601081526020016f496e636f72726563742067617372657160801b81525062004481565b601d805462ff0000191662010000179055600d546000906001600160a01b031663cbf75c9a62004e85602086018662007752565b62004e97604087016020880162007752565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016040805180830381865afa15801562004ee2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004f08919062007c18565b9150620014419050601882901c63ffffffff16601a54604051806060016040528060238152602001620197a96023913962004481565b811515831515146200144157600080516020620196158339815191528160405162004f6a919062007be7565b60405180910390a162001441838362005864565b8183146200144157600080516020620196158339815191528160405162004fa6919062007be7565b60405180910390a1620014418383620059a8565b62000ae662007ca7565b620007ec8160405160240162004fdb919062007cbd565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b17905262005a7f565b601d805462ff0000191662010000179055600d546000906001600160a01b03166370a08231620050383090565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156200507d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620050a39190620075af565b600d54600e549192506001600160a01b039081169163ad97db1b9116600f546001600160a01b0316601a546040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152600160648201526084016020604051808303816000875af11580156200512a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620051509190620075af565b50601d54610100900460ff16156200144157600d54620014419082906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015620051c0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620051e69190620075af565b604051806080016040528060418152602001620195d46041913962004481565b600081602001356f6d67762f74726164655375636365737360801b1490506200526681156040518060400160405280602081526020017f4f666665722073686f756c64206265206d61726b6564206173206661696c656481525062004448565b62001441601f5483600001351460405180604001604052806014815260200173496e636f7272656374206d616b6572206461746160601b81525062004448565b60006001600160a01b03821662005370576000805160206201951683398151915260405162005306906020808252601e908201527f4572726f723a20616464726573732073686f756c64206e6f7420626520300000604082015260600190565b60405180910390a160408051818152600781830152664164647265737360c81b60608201526001600160a01b038416602082015290517f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f9181900360800190a16200537062005aa0565b506001600160a01b0316151590565b6200538b600062005ba4565b565b600854600103620054035760095460405163ca669fa760e01b81526001600160a01b039091166004820152600080516020620195368339815191529063ca669fa7906024015b600060405180830381600087803b158015620053ee57600080fd5b505af1158015620038bf573d6000803e3d6000fd5b6008546002036200538b576009546040516303223eab60e11b81526001600160a01b03909116600482015260008051602062019536833981519152906306447d5690602401620053d3565b8183106200144157600080516020620196158339815191528160405162005476919062007be7565b60405180910390a162001441838362005d09565b80620007ec5760008051602062019516833981519152604051620054df9060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a1620007ec62005aa0565b80821462000ae65760008051602062019516833981519152604051620055539060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a16000805160206201980c833981519152816040516200557b919062007cd2565b60405180910390a16000805160206201980c83398151915282604051620055a3919062007d0b565b60405180910390a162000ae662005aa0565b6000805160206201961583398151915281604051620054df919062007be7565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b17905291516000928716916200562b9162007b52565b6000604051808303816000865af19150503d80600081146200566a576040519150601f19603f3d011682016040523d82523d6000602084013e6200566f565b606091505b509150506000818060200190518101906200568b9190620075af565b9050620056fd84620056f687620056cd6370a0823160e01b620056b060018d62005df6565b9060038201805463ffffffff191660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b9062005e1b565b8215620044035760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b0389169162005748919062007b52565b6000604051808303816000865af19150503d806000811462005787576040519150601f19603f3d011682016040523d82523d6000602084013e6200578c565b606091505b50915050600081806020019051810190620057a89190620075af565b905082861015620057d357620057bf8684620076b5565b620057cb9082620076b5565b9050620057ee565b620057df8387620076b5565b620057eb908262007c8c565b90505b6200580c81620056f66318160ddd60e01b620056b060018d62005df6565b5050505050505050565b816001600160a01b0316836001600160a01b0316146200144157600080516020620196158339815191528160405162005850919062007be7565b60405180910390a162001441838362005e27565b8015158215151462000ae65760008051602062019516833981519152604051620058ca9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b626f6f6040820152616c5d60f01b606082015260800190565b60405180910390a160008051602062019615833981519152816200590c576040518060400160405280600581526020016466616c736560d81b8152506200592a565b604051806040016040528060048152602001637472756560e01b8152505b60405162005939919062007d36565b60405180910390a160008051602062019615833981519152826200597b576040518060400160405280600581526020016466616c736560d81b81525062005999565b604051806040016040528060048152602001637472756560e01b8152505b604051620055a3919062007d75565b80821462000ae6576000805160206201951683398151915260405162005a0d9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974604082015264657333325d60d81b606082015260800190565b60405180910390a17fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f998160405162005a46919062007cd2565b60405180910390a17fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f9982604051620055a3919062007d0b565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b600080516020620195368339815191523b1562005b935760405160009060008051602062019536833981519152907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49062005b0e9083906519985a5b195960d21b9060019060200162007665565b60408051601f198184030181529082905262005b2e929160200162007b1f565b60408051601f198184030181529082905262005b4a9162007b52565b6000604051808303816000865af19150503d806000811462005b89576040519150601f19603f3d011682016040523d82523d6000602084013e62005b8e565b606091505b505050505b6000805461ff001916610100179055565b600060085560408051631e91f8cb60e01b815290513091631e91f8cb9160048083019260209291908290030181865afa15801562005be6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005c0c919062007da0565b600980546001600160a01b0319166001600160a01b039290921691821790553014620007ec57306001600160a01b0316631e91f8cb6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562005c71573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005c97919062007da0565b6009546001600160a01b0390811691161462005cb557600160085550565b8015620007ec576002600855604080516390c5013b60e01b8152905160008051602062019536833981519152916390c5013b91600480830192600092919082900301818387803b15801562002dfc57600080fd5b80821062000ae6576000805160206201951683398151915260405162005d6a9060208082526021908201527f4572726f723a2061203c2062206e6f7420736174697366696564205b75696e746040820152605d60f81b606082015260800190565b60405180910390a16040805181815260098183015268202056616c7565206160b81b60608201526020810184905290516000805160206201980c8339815191529181900360800190a1604080518181526009918101919091526810102b30b63ab2903160b91b6060820152602081018290526000805160206201980c83398151915290608001620055a3565b6005820180546001600160a01b0319166001600160a01b039290921691909117905590565b62000ae6828262005f10565b806001600160a01b0316826001600160a01b03161462000ae6576000805160206201951683398151915260405162005e9e9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8160405162005ed7919062007dc0565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f82604051620055a3919062007e05565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b946000939092909183018282801562005f8357602002820191906000526020600020905b81548152602001906001019080831162005f6e575b5050505050905060008362005f988362006279565b60405160200162005fab92919062007b1f565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a16835281529281209194509092909162005fff91869188910162007e30565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166200603a5762006038876200632d565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b03198816845282528083209051909183916200607b91879189910162007e30565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b031684604051620060c2919062007b52565b600060405180830381855afa9150503d8060008114620060ff576040519150601f19603f3d011682016040523d82523d6000602084013e62006104565b606091505b509150620061219050816200611b88602062007bc5565b62007024565b604051630667f9d760e41b815290925060009150600080516020620195368339815191529063667f9d70906200615e908b90879060040162007686565b6020604051808303816000875af11580156200617e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620061a49190620075af565b9050808214620061c85760405162461bcd60e51b815260040162002e619062007e6c565b6040516370ca10bb60e01b815260008051602062019536833981519152906370ca10bb9062006200908b9087908e9060040162007665565b600060405180830381600087803b1580156200621b57600080fd5b505af115801562006230573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff191690556200626560028b0160006200719b565b896004016000905550505050505050505050565b60606000825160206200628d919062007bc5565b67ffffffffffffffff811115620062a857620062a862007264565b6040519080825280601f01601f191660200182016040528015620062d3576020820181803683370190505b50905060005b835181101562006326576000848281518110620062fa57620062fa62007772565b6020026020010151905080826020026020018401525080806200631d9062007863565b915050620062d9565b5092915050565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b9493879391929091908301828280156200639f57602002820191906000526020600020905b8154815260200190600101908083116200638a575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a1684528252808320905195965094919350620063eb9250859187910162007e30565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16156200648a576001600160a01b0384166000908152602087815260408083206001600160e01b031987168452825280832090519092916200645a91859187910162007e30565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b600083620064988362006279565b604051602001620064ab92919062007b1f565b6040516020818303038152906040529050600080516020620197cc83398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200650a57600080fd5b505af11580156200651f573d6000803e3d6000fd5b50505050600080866001600160a01b03168360405162006540919062007b52565b600060405180830381855afa9150503d80600081146200657d576040519150601f19603f3d011682016040523d82523d6000602084013e62006582565b606091505b509150620065999050816200611b87602062007bc5565b6040516365bc948160e01b81526001600160a01b03891660048201529092506000915060008051602062019536833981519152906365bc9481906024016000604051808303816000875af1158015620065f6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262006620919081019062007f74565b5090508051600103620068e9576000600080516020620197cc83398151915260001c6001600160a01b031663667f9d70898460008151811062006667576200666762007772565b60200260200101516040518363ffffffff1660e01b81526004016200668e92919062007686565b6020604051808303816000875af1158015620066ae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620066d49190620075af565b90508062006738577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5888360008151811062006714576200671462007772565b602002602001015160001c6040516200672f92919062007686565b60405180910390a15b8083146200675a5760405162461bcd60e51b815260040162002e619062007e6c565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed888887896040516020016200679292919062007e30565b6040516020818303038152906040528051906020012085600081518110620067be57620067be62007772565b602002602001015160001c604051620067db949392919062007fdf565b60405180910390a181600081518110620067f957620067f962007772565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c168352845280822090519293909262006844918a918c910162007e30565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c16855282528284209251909391620068ae918a918c910162007e30565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff19169115159190911790555062006ea7565b60018151111562006e365760005b815181101562006e2f576000600080516020620197cc83398151915260001c6001600160a01b031663667f9d708a8585815181106200693a576200693a62007772565b60200260200101516040518363ffffffff1660e01b81526004016200696192919062007686565b6020604051808303816000875af115801562006981573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620069a79190620075af565b90508062006a0a577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a589848481518110620069e657620069e662007772565b602002602001015160001c60405162006a0192919062007686565b60405180910390a15b600080516020620197cc83398151915260001c6001600160a01b03166370ca10bb8a85858151811062006a415762006a4162007772565b602002602001015161133760f01b6040518463ffffffff1660e01b815260040162006a6f9392919062007665565b600060405180830381600087803b15801562006a8a57600080fd5b505af115801562006a9f573d6000803e3d6000fd5b50505050600060608a6001600160a01b03168760405162006ac1919062007b52565b600060405180830381855afa9150503d806000811462006afe576040519150601f19603f3d011682016040523d82523d6000602084013e62006b03565b606091505b50909250905062006b1b816200611b8b602062007bc5565b955081801562006b2f575061133760f01b86145b1562006d82577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c60405160200162006b6d92919062007e30565b6040516020818303038152906040528051906020012088888151811062006b985762006b9862007772565b602002602001015160001c60405162006bb5949392919062007fdf565b60405180910390a184848151811062006bd25762006bd262007772565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f168352845280822090519293909262006c1d918d918f910162007e30565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c60405160200162006caa92919062007e30565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff021916908315150217905550600080516020620197cc83398151915260001c6001600160a01b03166370ca10bb8c87878151811062006d1c5762006d1c62007772565b6020026020010151866040518463ffffffff1660e01b815260040162006d459392919062007665565b600060405180830381600087803b15801562006d6057600080fd5b505af115801562006d75573d6000803e3d6000fd5b5050505050505062006e2f565b600080516020620197cc83398151915260001c6001600160a01b03166370ca10bb8c87878151811062006db95762006db962007772565b6020026020010151866040518463ffffffff1660e01b815260040162006de29392919062007665565b600060405180830381600087803b15801562006dfd57600080fd5b505af115801562006e12573d6000803e3d6000fd5b50505050505050808062006e269062007863565b915050620068f7565b5062006ea7565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e606482015260840162002e61565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a1684528252808320905190929162006eeb9188918a910162007e30565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff1662006f7a5760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201526e3a143994903737ba103337bab7321760891b606482015260840162002e61565b6005890180546001600160a01b031916905560038901805463ffffffff1916905562006fab60028a0160006200719b565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a1684528252808320905190929162006ff19188918a910162007e30565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b600080600060208551116200703b5784516200703e565b60205b905060005b81811015620070a4576200705981600862007bc5565b8662007066838862007c8c565b8151811062007079576200707962007772565b01602001516001600160f81b031916901c9290921791806200709b8162007863565b91505062007043565b5090949350505050565b61567e806200802683390190565b6155e4806200d6a483390190565b6112068062012c8883390190565b6200538b6200800f565b828054620070f090620078ff565b90600052602060002090601f0160209004810192826200711457600085556200715f565b82601f106200712f57805160ff19168380011785556200715f565b828001600101855582156200715f579182015b828111156200715f57825182559160200191906001019062007142565b506200716d929150620071b6565b5090565b61206d8062013e8e83390190565b611a418062015efb83390190565b611bb8806201793c83390190565b5080546000825590600052602060002090810190620007ec91905b5b808211156200716d5760008155600101620071b7565b8015158114620007ec57600080fd5b600060208284031215620071ef57600080fd5b81356200102981620071cd565b6001600160a01b0381168114620007ec57600080fd5b6000806000606084860312156200722857600080fd5b83356200723581620071fc565b925060208401356200724781620071fc565b915060408401356200725981620071cd565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715620072a657620072a662007264565b604052919050565b600067ffffffffffffffff821115620072cb57620072cb62007264565b50601f01601f191660200190565b600080600060608486031215620072ef57600080fd5b8335620072fc81620071fc565b925060208401356200730e81620071fc565b9150604084013567ffffffffffffffff8111156200732b57600080fd5b8401601f810186136200733d57600080fd5b8035620073546200734e82620072ae565b6200727a565b8181528760208385010111156200736a57600080fd5b816020840160208301376000602083830101528093505050509250925092565b600061012082840312156200739e57600080fd5b50919050565b600080828403610160811215620073ba57600080fd5b620073c685856200738a565b9250604061011f1982011215620073dc57600080fd5b50610120830190509250929050565b600067ffffffffffffffff82111562007408576200740862007264565b5060051b60200190565b600060208083850312156200742657600080fd5b823567ffffffffffffffff8111156200743e57600080fd5b8301601f810185136200745057600080fd5b8035620074616200734e82620073eb565b81815260059190911b820183019083810190878311156200748157600080fd5b928401925b82841015620074a15783358252928401929084019062007486565b979650505050505050565b60006101208284031215620074c057600080fd5b6200102983836200738a565b600080600060608486031215620074e257600080fd5b8335620074ef81620071fc565b95602085013595506040909401359392505050565b600080604083850312156200751857600080fd5b82356200752581620071fc565b915060208301356200753781620071fc565b809150509250929050565b600080604083850312156200755657600080fd5b82356200756381620071fc565b946020939093013593505050565b6001600160a01b03978816815295909616602086015260408501939093526060840191909152608083015260a082015260c081019190915260e00190565b600060208284031215620075c257600080fd5b5051919050565b6001600160a01b03979097168752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b6000602082840312156200761757600080fd5b81516200102981620071cd565b6001600160a01b03978816815295871660208701529390951660408501526060840191909152608083015260a082019290925260c081019190915260e00190565b6001600160a01b039390931683526020830191909152604082015260600190565b6001600160a01b03929092168252602082015260400190565b634e487b7160e01b600052601160045260246000fd5b600082821015620076ca57620076ca6200769f565b500390565b60005b83811015620076ec578181015183820152602001620076d2565b83811115620038bf5750506000910152565b6000815180845262007718816020860160208601620076cf565b601f01601f19169290920160200192915050565b6001600160a01b038316815260406020820181905260009062002f2390830184620076fe565b6000602082840312156200776557600080fd5b81356200102981620071fc565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156200779b57600080fd5b815167ffffffffffffffff811115620077b357600080fd5b8201601f81018413620077c557600080fd5b8051620077d66200734e82620072ae565b818152856020838501011115620077ec57600080fd5b620077ff826020830160208601620076cf565b95945050505050565b600083516200781c818460208801620076cf565b83519083019062007832818360208801620076cf565b01949350505050565b600082516200784f818460208701620076cf565b61016160f51b920191825250600201919050565b6000600182016200787857620078786200769f565b5060010190565b9384526001600160a01b03929092166020840152604083015260608201526e1b59dd8bdb585ad95c94995d995c9d608a1b608082015260a00190565b6001600160a01b03988916815296909716602087015260408601949094526060850192909252608084015260a083015260c082015260e08101919091526101000190565b600181811c908216806200791457607f821691505b6020821081036200739e57634e487b7160e01b600052602260045260246000fd5b8054600090600181811c90808316806200795057607f831692505b602080841082036200797257634e487b7160e01b600052602260045260246000fd5b83885260208801828015620079905760018114620079a257620079cf565b60ff19871682528282019750620079cf565b60008981526020902060005b87811015620079c957815484820152908601908401620079ae565b83019850505b5050505050505092915050565b60208152600062001029602083018462007935565b600181815b8085111562007a3257816000190482111562007a165762007a166200769f565b8085161562007a2457918102915b93841c9390800290620079f6565b509250929050565b60008262007a4b57506001620033ec565b8162007a5a57506000620033ec565b816001811462007a73576002811462007a7e5762007a9e565b6001915050620033ec565b60ff84111562007a925762007a926200769f565b50506001821b620033ec565b5060208310610133831016604e8410600b841016171562007ac3575081810a620033ec565b62007acf8383620079f1565b806000190482111562007ae65762007ae66200769f565b029392505050565b600062001029838362007a3a565b60008262007b1a57634e487b7160e01b600052601260045260246000fd5b500490565b6001600160e01b031983168152815160009062007b44816004850160208701620076cf565b919091016004019392505050565b6000825162007b66818460208701620076cf565b9190910192915050565b941515855292151560208501529015156040840152151560608301526001600160a01b0316608082015260a00190565b60006020828403121562007bb357600080fd5b815160ff811681146200102957600080fd5b600081600019048311821515161562007be25762007be26200769f565b500290565b60408152600560408201526422b93937b960d91b6060820152608060208201526000620010296080830184620076fe565b6000806040838503121562007c2c57600080fd5b505080516020909101519092909150565b6001600160a01b038516815260806020820181905260009062007c639083018662007935565b828103604084015262007c77818662007935565b91505060ff8316606083015295945050505050565b6000821982111562007ca25762007ca26200769f565b500190565b634e487b7160e01b600052600160045260246000fd5b602081526000620010296020830184620076fe565b60408152600062007cfd60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b60408152600062007cfd60408301600a815269080808081058dd1d585b60b21b602082015260400190565b60408152600062007d6160408301600a8152690808115e1c1958dd195960b21b602082015260400190565b828103602084015262002f238185620076fe565b60408152600062007d6160408301600a815269080808081058dd1d585b60b21b602082015260400190565b60006020828403121562007db357600080fd5b81516200102981620071fc565b60408152600062007deb60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b60408152600062007deb60408301600a815269080808081058dd1d585b60b21b602082015260400190565b825160009082906020808701845b8381101562007e5c5781518552938201939082019060010162007e3e565b5050948252509092019392505050565b6020808252606f908201527f73746453746f726167652066696e642853746453746f72616765293a2050616360408201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560608201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960808201526e39b713ba1039bab83837b93a32b21760891b60a082015260c00190565b600082601f83011262007f1957600080fd5b8151602062007f2c6200734e83620073eb565b82815260059290921b8401810191818101908684111562007f4c57600080fd5b8286015b8481101562007f69578051835291830191830162007f50565b509695505050505050565b6000806040838503121562007f8857600080fd5b825167ffffffffffffffff8082111562007fa157600080fd5b62007faf8683870162007f07565b9350602085015191508082111562007fc657600080fd5b5062007fd58582860162007f07565b9150509250929050565b6001600160a01b039490941684526001600160e01b03199290921660208401526040830152606082015260800190565b634e487b7160e01b600052605160045260246000fdfe60a06040523480156200001157600080fd5b506040516200567e3803806200567e83398101604081905262000034916200048c565b8282826040518060400160405280601081526020016f496e7665727465644d616e67726f766560801b815250808484847f72201d073f249840099a96530e189c4291c1852040b1e96ff1f606db656be4ff60405160405180910390a16200009b836200016d565b620000a682620001cc565b620000b1816200027f565b620000bc836200032f565b5050815160208084019190912060408051808201825260018152603160f81b9084015280517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f938101939093528201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c001905060408051601f19818403018152919052805160209091012060805250620004d19650505050505050565b62000177620003e0565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f30906020015b60405180910390a150565b620001d6620003e0565b61ffff811681146200022f5760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f31366269747300000000000060448201526064015b60405180910390fd5b6200024b816001546200045160201b62001d4e1790919060201c565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001620001c1565b62000289620003e0565b808162ffffff1614620002df5760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f3234626974730000000000000000604482015260640162000226565b620002fb816001546200046f60201b62001d711790919060201c565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001620001c1565b62000339620003e0565b6001600160a01b038116620003915760405162461bcd60e51b815260206004820152601360248201527f6d67762f636f6e6669672f676f762f6e6f743000000000000000000000000000604482015260640162000226565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001620001c1565b6003546001600160a01b0316331480620003f957503330145b806200040e57506003546001600160a01b0316155b6200044f5760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b604482015260640162000226565b565b60401b69ffff00000000000000001661ffff60401b19919091161790565b60281b67ffffff00000000001662ffffff60281b19919091161790565b600080600060608486031215620004a257600080fd5b83516001600160a01b0381168114620004ba57600080fd5b602085015160409095015190969495509392505050565b60805161518a620004f46000396000818161036401526116aa015261518a6000f3fe60806040526004361061024a5760003560e01c80636d27de6711610139578063b60d4288116100b6578063dc7e98df1161007a578063dc7e98df146108a8578063def5ddaa146108c8578063fbb66910146108e8578063fbfa77cf14610908578063fbffe5fd14610928578063fcaa7e2e1461094857600080fd5b8063b60d4288146107e4578063c7bb25d0146107ec578063cbf75c9a14610833578063d0ee509914610868578063db20266f1461088857600080fd5b8063aa4dd282116100fd578063aa4dd28214610744578063ab033ea914610764578063ad97db1b14610784578063b09d2a16146107a4578063b2b12057146107c457600080fd5b80636d27de671461061457806370a08231146106545780637ecebe00146106815780638c66715c146106ae57806395999ee31461072457600080fd5b80635722647b116101c7578063644e67031161018b578063644e6703146104cc5780636804f613146105835780636817031b146105a357806368c13d6b146105c35780636a4f76911461060157600080fd5b80635722647b146103f657806359eba454146104345780635a611f4e146104545780635aa6e675146104745780635cd82390146104ac57600080fd5b806330adf81f1161020e57806330adf81f146103105780633644e5151461035257806341c0e1b51461038657806346e142fa1461039b57806349f6d2dc146103e357600080fd5b80630b73a18f1461025f578063230244081461027f578063275074581461029257806327d097c6146102d05780632e1a7d4d146102f057600080fd5b3661025a5761025833610968565b005b600080fd5b34801561026b57600080fd5b5061025861027a3660046149b8565b61098f565b61025861028d366004614a05565b610968565b34801561029e57600080fd5b506102bb6102ad366004614a20565b6001600160601b0316151590565b60405190151581526020015b60405180910390f35b3480156102dc57600080fd5b506102586102eb366004614a39565b610a2d565b3480156102fc57600080fd5b506102bb61030b366004614a20565b610b08565b34801561031c57600080fd5b506103447fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a281565b6040519081526020016102c7565b34801561035e57600080fd5b506103447f000000000000000000000000000000000000000000000000000000000000000081565b34801561039257600080fd5b50610258610b62565b3480156103a757600080fd5b506103bb6103b6366004614ac8565b610baa565b604080519586526020860194909452928401919091526060830152608082015260a0016102c7565b6103446103f1366004614b41565b610bd6565b34801561040257600080fd5b50610344610411366004614a39565b600560209081526000938452604080852082529284528284209052825290205481565b34801561044057600080fd5b506102bb61044f366004614b9f565b610d41565b34801561046057600080fd5b5061025861046f366004614bea565b610dca565b34801561048057600080fd5b50600354610494906001600160a01b031681565b6040516001600160a01b0390911681526020016102c7565b3480156104b857600080fd5b506102586104c7366004614a05565b610e24565b3480156104d857600080fd5b506104ec6104e7366004614c07565b610e84565b6040805183516001600160a01b0316815260208085015115158183015284830151151582840152606080860151818401526080808701518185015260a0968701511515878501528551151560c0808601919091529286015160e0850152938501516101008401528401516101208301529183015115156101408201529282015161016084015201516101808201526101a0016102c7565b34801561058f57600080fd5b5061025861059e366004614bea565b610f87565b3480156105af57600080fd5b506102586105be366004614a05565b610fd1565b3480156105cf57600080fd5b506103446105de366004614a39565b600460209081526000938452604080852082529284528284209052825290205481565b61025861060f366004614c3a565b611027565b34801561062057600080fd5b5061063461062f366004614ca1565b61113a565b6040805194855260208501939093529183015260608201526080016102c7565b34801561066057600080fd5b5061034461066f366004614a05565b60066020526000908152604090205481565b34801561068d57600080fd5b5061034461069c366004614a05565b60086020526000908152604090205481565b3480156106ba57600080fd5b506106ce6106c9366004614a39565b611171565b60408051835181526020808501518183015284830151828401526060948501518583015283516001600160a01b0316608083015283015160a08201529082015160c082015291015160e0820152610100016102c7565b34801561073057600080fd5b5061025861073f366004614a20565b61124d565b34801561075057600080fd5b5061034461075f366004614d09565b6112e9565b34801561077057600080fd5b5061025861077f366004614a05565b61134a565b34801561079057600080fd5b5061034461079f366004614d3c565b6113ec565b3480156107b057600080fd5b506102586107bf366004614d8b565b6115be565b3480156107d057600080fd5b506103bb6107df366004614e21565b6118b7565b6102586118f3565b3480156107f857600080fd5b50610344610807366004614e9b565b600760209081526000948552604080862082529385528385208152918452828420909152825290205481565b34801561083f57600080fd5b5061085361084e366004614c07565b6118fe565b604080519283526020830191909152016102c7565b34801561087457600080fd5b50610258610883366004614c07565b6119fb565b34801561089457600080fd5b506102bb6108a3366004614c07565b611a6c565b3480156108b457600080fd5b506102586108c3366004614a39565b611aa7565b3480156108d457600080fd5b506103446108e3366004614c07565b611b67565b3480156108f457600080fd5b50610258610903366004614a39565b611b9f565b34801561091457600080fd5b50600054610494906001600160a01b031681565b34801561093457600080fd5b50610634610943366004614eef565b611c8c565b34801561095457600080fd5b50610258610963366004614a20565b611cb3565b60006109756000806118fe565b50905061098181611d90565b61098b8234611dd3565b5050565b610997611e2f565b6001600160a01b0385811660008181526002602090815260408083209489168084529482529182902080546001600160f81b0316600160f81b17905581516001815291517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a3610a10858585611aa7565b610a1b858584611b9f565b610a26858583610a2d565b5050505050565b610a35611e2f565b808162ffffff1614610a8e5760405162461bcd60e51b815260206004820152601f60248201527f6d67762f636f6e6669672f6f666665725f676173626173652f3234626974730060448201526064015b60405180910390fd5b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805462ffffff60601b191662ffffff60601b606088901b1617905590518481527fc5859916e5f3fc1ed4d2cfb8c7a6cf709580f228fa0c9d9e0fa468744c7e4a9191015b60405180910390a3505050565b6000610b143383611e9a565b60405133908390600081818185875af1925050503d8060008114610b54576040519150601f19603f3d011682016040523d82523d6000602084013e610b59565b606091505b50909392505050565b610b6a611e2f565b60015464ff000000001916640100000000176001556040517fbe26733c2bf6ff3ea5ba8cfe744422bd49052ff9ed5685c9e81e6f9321dbaddd90600090a1565b6000806000806000610bc08a8a8a8a8a33611f5f565b939e929d50909b50995090975095505050505050565b6000610be0614864565b610bea89896118fe565b6101208301819052610100830191909152610c04906120ac565b610c188161010001518261012001516120f8565b3415610c2857610c283334611dd3565b61012081015160181c63ffffffff166001016080820181905263ffffffff811614610c8b5760405162461bcd60e51b81526020600482015260136024820152726d67762f6f6666657249644f766572666c6f7760681b6044820152606401610a85565b6080810151610120820151610cb79160181b66ffffffff0000001666ffffffff00000019919091161790565b6101208201526001600160a01b03808a16825288166020820152604081018790526060810186905260a0810185905260c0810184905260e08101839052610cff816000612148565b61012081015181516001600160a01b03908116600090815260026020908152604080832082870151909416835292905220556080015198975050505050505050565b6001600160a01b038085166000818152600760209081526040808320888616808552908352818420338086529084528285209689168552959092528083208690555191939092917f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d91610db79188908890614f3c565b60405180910390a3506001949350505050565b610dd2611e2f565b60015460ff60501b191660ff60501b605083901b161760015560405181151581527f9b84fe4d9ffc14a6f7ec50c18884ee0d4bb8165aa718a28558df12ab4bd32b14906020015b60405180910390a150565b610e2c611e2f565b6001546001600160601b03166001600160601b0319606083901b16176001556040516001600160a01b03821681527ff592e42c32883b35bebfbf9d9b801570a25d5ccbba452310746ad2cfd20d548f90602001610e19565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152610efa6040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b600080610f0786866118fe565b91509150610f71826040805160c081018252606083811c8252605884901c60ff9081161515602080850191909152605086901c82161515848601529385901c61ffff1691830191909152602884901c62ffffff1660808301529290911c909116151560a082015290565b9350610f7c816128c5565b925050509250929050565b610f8f611e2f565b600154610f9c9082612973565b60015560405181151581527fbf39fbfab835c119637f4dbc4fb0f428c559c210200405d1ec25ddb50a93f9d490602001610e19565b610fd9611e2f565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f3090602001610e19565b61102f614864565b61103989896118fe565b6101208301819052610100830191909152611053906120ac565b6110678161010001518261012001516120f8565b3415611077576110773334611dd3565b6001600160a01b03808a16808352908916602080840182905260408085018b9052606085018a90526080850186905260a0850189905260c0850188905260e0850187905260009384526004825280842092845291815281832085845290529020546101408201526101208101516110ef826001612148565b610120820151811461112e5761012082015182516001600160a01b03908116600090815260026020908152604080832082880151909416835292905220555b50505050505050505050565b60008060008061114e8a8a8a8a8a8a61298a565b929650909450925090506111648a8a8786612c72565b9650965096509692505050565b61119c6040518060800160405280600081526020016000815260200160008152602001600081525090565b6111d0604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b6001600160a01b03808616600090815260046020908152604080832093881683529281528282208683529052205461120781612d72565b6001600160a01b038088166000908152600560209081526040808320938a1683529281528282208883529052205490935061124181612dd4565b92505050935093915050565b611255611e2f565b808162ffffff16146112a95760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f32346269747300000000000000006044820152606401610a85565b6001546112b69082611d71565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001610e19565b600033301461133a5760405162461bcd60e51b815260206004820152601f60248201527f6d67762f696e766572746564466c6173686c6f616e2f70726f746563746564006044820152606401610a85565b61134383612e43565b9392505050565b611352611e2f565b6001600160a01b03811661139e5760405162461bcd60e51b815260206004820152601360248201527206d67762f636f6e6669672f676f762f6e6f743606c1b6044820152606401610a85565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001610e19565b6000806113f986866118fe565b915050611405816120ac565b6001600160a01b038087166000818152600460209081526040808320948a16808452948252808320898452825280832054938352600582528083209483529381528382208883529052919091205461145d8160601c90565b6001600160a01b0316336001600160a01b0316146114bd5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f726574726163744f666665722f756e617574686f72697a65640000006044820152606401610a85565b6001600160601b0382161561152157826114ed89896114dc8660e01c90565b60c087901c63ffffffff1688612fc4565b935080841461151f576001600160a01b03808a166000908152600260209081526040808320938c168352929052208490555b505b61152f88888885858a6130a4565b841561156657603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca00020293506115663385611dd3565b866001600160a01b0316886001600160a01b03167fe2ce51fba856682424155a2d89b2ad1d2adde6ea0a9e3115b4b474cd6cb1798b886040516115ab91815260200190565b60405180910390a3505050949350505050565b428410156116035760405162461bcd60e51b81526020600482015260126024820152711b59dd8bdc195c9b5a5d0bd95e1c1a5c995960721b6044820152606401610a85565b6001600160a01b03878116600081815260086020908152604080832080546001810190915581517fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a2818501528f8716818401528e871660608201526080810195909552948b1660a085015260c084018a905260e084018590526101008085018a9052815180860390910181526101208501909152805191012061190160f01b6101408401527f0000000000000000000000000000000000000000000000000000000000000000610142840152610162830152906101820160408051601f198184030181528282528051602091820120600080855291840180845281905260ff89169284019290925260608301879052608083018690529092509060019060a0016020604051602081039080840390855afa158015611745573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381161580159061177b5750896001600160a01b0316816001600160a01b0316145b6117c75760405162461bcd60e51b815260206004820152601b60248201527f6d67762f7065726d69742f696e76616c69645369676e617475726500000000006044820152606401610a85565b87600760008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008b6001600160a01b03166001600160a01b03168152602001908152602001600020819055508a6001600160a01b03168c6001600160a01b03167f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d8c8c8c6040516118a193929190614f3c565b60405180910390a3505050505050505050505050565b60008060008060006118cd8b8b8b8b8b8b611f5f565b9398509196509450925090506118e58b8b8886612c72565b965096509650965096915050565b6118fc33610968565b565b6001546001600160a01b03838116600090815260026020908152604080832093861683529290522054605882901c60ff16156119f4576000806119418460601c90565b604051636968abd360e01b81526001600160a01b03888116600483015287811660248301529190911690636968abd3906044016040805180830381865afa158015611990573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119b49190614f60565b915091506119c58261ffff81161490565b156119d7576119d48483611d4e565b93505b6001600160701b03811681036119f157610f7c8382613119565b50505b9250929050565b611a03611e2f565b6001600160a01b03828116600081815260026020908152604080832094861680845294825280832080546001600160f81b031690558051928352517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a35050565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054605881901c60ff1615155b949350505050565b611aaf611e2f565b6101f4811115611af85760405162461bcd60e51b815260206004820152601460248201527306d67762f636f6e6669672f6665652f3c3d3530360641b6044820152606401610a85565b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805461ffff60e81b191661ffff60e81b60e888901b1617905590518481527f44a6d70a601a6f8a85c075467e9d7245897140cbf6dd505c9d9d764459f5fb649101610afb565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054603881901c63ffffffff16611a9f565b611ba7611e2f565b6001600160701b0381168114611bff5760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f64656e736974792f313132626974730000000000006044820152606401610a85565b6001600160a01b03808416600090815260026020908152604080832093861683529290522054611c2f9082613119565b6001600160a01b038481166000818152600260209081526040808320948816808452948252918290209490945551848152919290917f95f1a495c6d9d1a215995408f6ad898c2b33798d6eb3cf3220b4c6cc8b61b0649101610afb565b600080600080611ca089898989893361298a565b929c919b50995090975095505050505050565b611cbb611e2f565b61ffff81168114611d0e5760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f3136626974730000000000006044820152606401610a85565b600154611d1b9082611d4e565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001610e19565b60401b69ffff00000000000000001669ffff000000000000000019919091161790565b60281b67ffffff00000000001667ffffff000000000019919091161790565b602081901c60ff1615611dd05760405162461bcd60e51b81526020600482015260086024820152671b59dd8bd919585960c21b6044820152606401610a85565b50565b6001600160a01b03821660008181526006602052604090819020805484019055517f1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa09490611e239084815260200190565b60405180910390a25050565b6003546001600160a01b0316331480611e4757503330145b80611e5b57506003546001600160a01b0316155b6118fc5760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b6044820152606401610a85565b6001600160a01b03821660009081526006602052604090205481811015611f035760405162461bcd60e51b815260206004820152601960248201527f6d67762f696e73756666696369656e7450726f766973696f6e000000000000006044820152606401610a85565b6001600160a01b038316600081815260066020526040908190208484039055517f59c79d79be0fadf59fe689b6952b7ebe90201a3a1f00d4a31982377890bc604690611f529085815260200190565b60405180910390a2505050565b6000806000806000611f6f6148d0565b6001600160a01b03808d1682528b166020820152611f8d8c8c6118fe565b61010083015260e0820152611fa061492e565b6001600160a01b03881660a082015288151560c082015260e0820151610100830151611fcc91906120f8565b611fda8261010001516120ac565b6040517fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b990600090a161200f81838d8d61314a565b60808401519299509097509550612025906135d9565b602080830151835160808085015160e0860151604080518d81529687018c905286019190915260608501526001600160a01b03808d1694938116939216917ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec47910160405180910390a4806080015193508060e0015192505050965096509650965096915050565b605881901c60ff1615611dd05760405162461bcd60e51b81526020600482015260146024820152731b59dd8bdc99595b9d1c985b98de531bd8dad95960621b6044820152606401610a85565b61210182611d90565b61210d8160f81c151590565b61098b5760405162461bcd60e51b815260206004820152600c60248201526b6d67762f696e61637469766560a01b6044820152606401610a85565b60c082015161ffff81161461219f5760405162461bcd60e51b815260206004820152601e60248201527f6d67762f77726974654f666665722f67617370726963652f31366269747300006044820152606401610a85565b61010082015160401c61ffff168260c0015110156121ca5761010082015160401c61ffff1660c08301525b61010082015160281c62ffffff168260a00151111561222b5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f6761737265712f746f6f486967680000006044820152606401610a85565b600082606001511161227f5760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f746f6f4c6f7700000000006044820152606401610a85565b61012082015160781c6001600160701b031661012083015160601c62ffffff168360a001510102826060015110156122f95760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f64656e736974792f746f6f4c6f770000006044820152606401610a85565b60608201516001600160601b038116146123555760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f39366269747300000000006044820152606401610a85565b60408201516001600160601b038116146123b15760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f77616e74732f39366269747300000000006044820152606401610a85565b6000806123bd84613677565b9150915083602001516001600160a01b031684600001516001600160a01b03167f2b101f9ef8ca2761d91bea55ab50a4d051e9248088ff7314ddb8826839544c2a33876040015188606001518960c001518a60a001518b608001518a60405161246297969594939291906001600160a01b03979097168752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b60405180910390a383516001600160a01b03908116600090815260056020908152604080832082890151909416835292815282822060808801518352905290812054841561253c576124b48160601c90565b6001600160a01b0316336001600160a01b0316146125145760405162461bcd60e51b815260206004820152601c60248201527f6d67762f7570646174654f666665722f756e617574686f72697a6564000000006044820152606401610a85565b603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca00020291505b841580612556575060a0860151604882901c62ffffff1614155b8061256d575060c0860151602082901c61ffff1614155b8061258e575061012086015160601c62ffffff16603082901c62ffffff1614155b156126385761012086015160009060601c62ffffff1690506125fe338860a00151838a60c0015160201b65ffff000000001660309190911b68ffffff0000000000001660489290921b6bffffff0000000000000000001660609390931b6001600160601b03191692909217171790565b87516001600160a01b039081166000908152600560209081526040808320828d0151909416835292815282822060808c0151835290522055505b5060c08501516101208601516000919060601c62ffffff168760a001510102633b9aca00029050818111156126785761267333838303611e9a565b61268c565b8181101561268c5761268c33828403611dd3565b506101408501516001600160601b031615806126b0575061014085015160e01c8314155b1561283c57821561273657608085015185516001600160a01b039081166000908152600460209081526040808320828b01519094168352928152828220878352905220546126fd916138a3565b85516001600160a01b039081166000908152600460209081526040808320828b0151909416835292815282822087835290522055612769565b60808501516101208601516127629160381b63ffffffff60381b1663ffffffff60381b19919091161790565b6101208601525b81156127e057608085015185516001600160a01b039081166000908152600460208181526040808420828c018051871686529083528185208986528352818520548c518716865293835281852090519095168452938152838320878452905291902060e09290921b6001600160e01b039091161790555b8380156127fa57506101408501516001600160601b031615155b1561283c576128358560000151866020015161281b88610140015160e01c90565b61014089015160c01c63ffffffff16896101200151612fc4565b6101208601525b60408501516060808701516000926001600160601b03909116911b6bffffffffffffffffffffffff60601b1660c085901b63ffffffff60c01b1660e087901b17171786516001600160a01b039081166000908152600460209081526040808320828c015190941683529281528282206080909a0151825298909852909620959095555050505050565b6129096040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b60f882901c1515815260e882901c61ffff166020820152607882901c6001600160701b03166040820152606082811c62ffffff1690820152605882901c60ff1615156080820152603882901c63ffffffff90811660a083015260189290921c90911660c082015290565b60581b60ff60581b1660ff60581b19919091161790565b60008060008087886001600160a01b0316146129e85760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657257616e74732f313630626974730000006044820152606401610a85565b86876001600160a01b031614612a405760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657247697665732f313630626974730000006044820152606401610a85565b612a486148d0565b6001600160a01b03808c1682528a166020820152612a668b8b6118fe565b610100830181905260e083019190915260381c63ffffffff1660408083019182526001600160a01b03808e16600090815260046020908152838220928f1682529182528281209351815292905290205460608201526080810189905260a08101889052612ad161492e565b898152602081018990526001600160a01b03871660a082015287151560c082015260e0820151610100830151612b0791906120f8565b612b158261010001516120ac565b610100820151612b26906001612973565b82610100018181525050816101000151600260008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020819055507fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b960405160405180910390a1612bba818360016138c0565b612bc781608001516135d9565b866001600160a01b03168b6001600160a01b03168d6001600160a01b03167ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec478460400151856060015186608001518760e00151604051612c40949392919093845260208401929092526040830152606082015260800190565b60405180910390a460408101516060820151608083015160e090930151919e909d50919b509950975050505050505050565b6001600160a01b0380851660009081526007602090815260408083208785168452825280832093861683529281528282203383529052205481811015612ced5760405162461bcd60e51b815260206004820152601060248201526f6d67762f6c6f77416c6c6f77616e636560801b6044820152606401610a85565b6001600160a01b0380861660008181526007602090815260408083208986168085529083528184209589168452948252808320338085529252918290208686039081905591517f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d92612d63928992909190614f3c565b60405180910390a35050505050565b612d9d6040518060800160405280600081526020016000815260200160008152602001600081525090565b60e082901c815263ffffffff60c083901c1660208201526001600160601b03606083811c8216604084015292169181019190915290565b612e08604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b606082811c8252604883901c62ffffff908116602080850191909152603085901c90911660408401529290921c61ffff169181019190915290565b600080636c49c32c60e01b83604051602401612e5f9190614f84565b60408051808303601f190181529190526020810180516001600160e01b0319939093166001600160e01b0390931692909217909152905060c0830135604881901c62ffffff169060601c60005a9050826040820482031015612f0157604080516060810182527f6d67762f6e6f74456e6f756768476173466f724d616b65725472616465000000815260006020820181905291810191909152612f0190606081fd5b600080612f0f848688613b32565b915091505a8303965081612f5557612f5560405180606001604052806e1b59dd8bdb585ad95c94995d995c9d608a1b81526020018960001b815260200183815250606081fd5b6000612f73612f6760208b018b614a05565b86308c60800135613b60565b905080612fb857612fb86040518060600160405280741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b81526020018a60001b815260200184815250606081fd5b50505050505050919050565b60008315613037576001600160a01b03808716600090815260046020908152604080832093891683529281528282208783529052205461300490846138a3565b6001600160a01b038088166000908152600460209081526040808320938a16835292815282822088835290522055613054565b63ffffffff60381b19821663ffffffff60381b603885901b161791505b821561309b576001600160a01b038681166000908152600460209081526040808320938916835292815282822086835290522080546001600160e01b031660e086901b1790555b50949350505050565b6001600160601b03198316925080156130c45765ffff0000000019821691505b506001600160a01b039485166000818152600460209081526040808320979098168083529681528782208683528152878220949094559081526005835285812094815293825284842092845291905291902055565b60781b6dffffffffffffffffffffffffffff60781b166dffffffffffffffffffffffffffff60781b19919091161790565b60008080805b848110156135ce57600060408901819052606089015285858281811061317857613178615016565b90506080020160006004811061319057613190615016565b60209081029190910135604089810191825289516001600160a01b039081166000908152600485528281208c86018051841683529086528382208551835286528382205460608e019081528d518416835260058752848320915190931682528552828120935181529290935290205460c0890152516001600160601b0316158061325c575085858281811061322757613227615016565b90506080020160036004811061323f5761323f615016565b602002013561325a8860c0015162ffffff60489190911c1690565b115b6135c65785858281811061327257613272615016565b90506080020160016004811061328a5761328a615016565b60200201358686838181106132a1576132a1615016565b9050608002016001600481106132b9576132b9615016565b60200201356001600160601b0316146133145760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657257616e74732f393662697473000000006044820152606401610a85565b85858281811061332657613326615016565b90506080020160026004811061333e5761333e615016565b602002013586868381811061335557613355615016565b90506080020160026004811061336d5761336d615016565b60200201356001600160601b0316146133c85760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657247697665732f393662697473000000006044820152606401610a85565b8585828181106133da576133da615016565b9050608002016001600481106133f2576133f2615016565b6020020135608088015285858281811061340e5761340e615016565b90506080020160026004811061342657613426615016565b602002013560a0880152610100870151613441906001612973565b610100880181905287516001600160a01b039081166000908152600260209081526040808320828d015190941683529290529081209190915580806134868b8b613c48565b925092509250806f6d67762f74726164655375636365737360801b036134ad576001870196505b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b14613501576134fa8a600001518b602001516134e18d6060015160e01c90565b60608e015160c01c63ffffffff168e6101000151612fc4565b6101008b01525b6101008a0151613512906000612973565b8a610100018181525050896101000151600260008c600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008c602001516001600160a01b03166001600160a01b03168152602001908152602001600020819055506135808b8b614248565b61358a8b8b61434a565b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b146135b0576135b08b8b858585614436565b8a60400151860195508a60600151850194505050505b600101613150565b509450945094915050565b8015611dd057604051600090339083908381818185875af1925050503d8060008114613621576040519150601f19603f3d011682016040523d82523d6000602084013e613626565b606091505b505090508061098b5760405162461bcd60e51b815260206004820152601760248201527f6d67762f73656e6450656e616c747952657665727465640000000000000000006044820152606401610a85565b60008060008060008560e0015190506000866080015182146136cc5786516001600160a01b039081166000908152600460209081526040808320828c01519094168352928152828220858352905220546136d3565b8661014001515b90506001600160601b03811661372c5761012087015160381c63ffffffff1687516001600160a01b039081166000908152600460209081526040808320828d015190941683529281528282208483529052205490925090505b6137378782846144bc565b156137d15760005b60c082901c63ffffffff16156137b9575086516001600160a01b039081166000908152600460209081526040808320828c0151909416835292815282822063ffffffff60c086901c168084529152919020549061379d8983836144bc565b156137ad578093508192506137b3565b506137b9565b5061373f565b8260c083901c63ffffffff16909550935061385a9050565b60005b6137de8260e01c90565b156138475760006137ef8360e01c90565b89516001600160a01b039081166000908152600460209081526040808320828f0151909416835292815282822084835290522054925090506138328983836144bc565b1561383d5750613847565b92509050806137d4565b6138518260e01c90565b94509192508291505b8660800151841461386b5783613875565b61014087015160e01c5b876080015184146138865783613896565b61014088015160c01c63ffffffff165b9550955050505050915091565b60c01b63ffffffff60c01b1663ffffffff60c01b19919091161790565b8080156138e757508260c001516138de5760008260a00151116138e7565b60008260800151115b80156138f7575060008260400151115b15613ab35781516001600160a01b03908116600090815260056020908152604080832082870151909416835292815282822083860151835290529081205460c084015280806139468686613c48565b608088015160a089015160408a015160608b015160c08c015196995094975092955090939092906e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613a3d5760408b01518b51116139995760006139a2565b60408b01518b51035b60808b015260608b81015160208d01510360a08c01528a015160c01c63ffffffff168a6040018181525050600460008b600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b602001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b604001518152602001908152602001600020548a60600181815250505b613a5d8b8b886e1b59dd8bdb9bdd115e1958dd5d1959608a1b14156138c0565b60408a0183905260808a0185905260a08a0184905260608a0182905260c08a018190526e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613aa657613aa68b8b8a8a8a614436565b5050505050505050505050565b613ad28260000151836020015160008560400151866101000151612fc4565b6101008301819052613ae5906000612973565b610100830181905282516001600160a01b0390811660009081526002602090815260408083208288015190941683529290522055613b238383614248565b613b2d838361434a565b505050565b600080613b3d61497e565b60648185516020870160008a8af192508060448415020151915050935093915050565b6000806323b872dd60e01b858585604051602401613b8093929190614f3c565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509050600080876001600160a01b031683604051613bd0919061502c565b6000604051808303816000865af19150503d8060008114613c0d576040519150601f19603f3d011682016040523d82523d6000602084013e613c12565b606091505b5091509150818015613c3c575080511580613c3c575080806020019051810190613c3c9190615067565b98975050505050505050565b600080600080613c6885606001516001600160601b0360609190911c1690565b90506000613c8086606001516001600160601b031690565b608087015160a0880151919250908083028483021115613cc05750600095508594506e1b59dd8bdb9bdd115e1958dd5d1959608a1b935061424192505050565b8860c001518015613cd057508183105b80613ce757508860c00151158015613ce757508084105b15613cff576080880183905260a08801849052613d76565b8860c0015115613d4a57838202838181613d1b57613d1b615000565b0615613d28576001613d2b565b60005b60ff16848281613d3d57613d3d615000565b040160a08a015250613d76565b83600003613d5e5760808801839052613d76565b8381840281613d6f57613d6f615000565b0460808901525b50505050600080306001600160a01b031663aa4dd28260e01b878960a00151604051602401613da69291906150ea565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051613de4919061502c565b6000604051808303816000865af19150503d8060008114613e21576040519150601f19603f3d011682016040523d82523d6000602084013e613e26565b606091505b50915091508115613f805780806020019051810190613e459190615112565b94506f6d67762f74726164655375636365737360801b925085602001516001600160a01b031686600001516001600160a01b03167f1d81940ff2c3ac549c8acefd7c1b2ffb24aacc8b3cfa309c22abc3de79727f9d88604001518a60a001518a608001518b60a00151604051613edd94939291909384526001600160a01b039290921660208401526040830152606082015260800190565b60405180910390a360e086015160501c60ff1615613f5b5760e086015160a088015160405163cac1827160e01b815260609290921c9163cac1827191613f28918a91906004016150ea565b600060405180830381600087803b158015613f4257600080fd5b505af1158015613f56573d6000803e3d6000fd5b505050505b6080860151604088018051909101905260a08601516060880180519091019052614206565b602081015160408201516060830151909650945092506e1b59dd8bdb585ad95c94995d995c9d608a1b831480613fcd575082741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b145b80613fee575082731b59dd8bdb585ad95c949958d95a5d9951985a5b60621b145b156141005785602001516001600160a01b031686600001516001600160a01b03167f1d59c048edb5397821854bd12cbe02242b82101c677f949d076d14eb7bd8343688604001518a60a001518a608001518b60a001518960405161407d9594939291909485526001600160a01b0393909316602085015260408401919091526060830152608082015260a00190565b60405180910390a360e086015160501c60ff16156140fb5760e086015160a0880151604051631159507360e01b815260609290921c916311595073916140c8918a91906004016150ea565b600060405180830381600087803b1580156140e257600080fd5b505af11580156140f6573d6000803e3d6000fd5b505050505b614206565b827f6d67762f6e6f74456e6f756768476173466f724d616b657254726164650000000361416f5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6e6f74456e6f756768476173466f724d616b657254726164650000006044820152606401610a85565b82741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b036141ce5760405162461bcd60e51b81526020600482015260156024820152741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b6044820152606401610a85565b60405162461bcd60e51b815260206004820152600d60248201526c36b3bb17b9bbb0b822b93937b960991b6044820152606401610a85565b61423e86600001518760200151886040015189606001518a60c00151886f6d67762f74726164655375636365737360801b14156130a4565b50505b9250925092565b6101008101516000906127109060e81c61ffff168460400151028161426f5761426f615000565b04905080156142e557604083018051829003905260e0830181905281516000546142a391906001600160a01b031683614562565b6142e55760405162461bcd60e51b81526020600482015260136024820152721b59dd8bd99959551c985b9cd9995c91985a5b606a1b6044820152606401610a85565b604083015115613b2d5761430682600001518460a001518560400151614562565b613b2d5760405162461bcd60e51b815260206004820152601560248201527436b3bb17a6b3bb2330b4b62a37a830bcaa30b5b2b960591b6044820152606401610a85565b60a08201518151602083015160408086015160608701519151631154020b60e01b81526001600160a01b039485166004820152928416602484015260448301526064820152911690631154020b90608401600060405180830381600087803b1580156143b557600080fd5b505af11580156143c9573d6000803e3d6000fd5b5050505060006143e782602001518460a00151308660600151613b60565b905080613b2d5760405162461bcd60e51b815260206004820152601760248201527f6d67762f74616b65724661696c546f506179546f74616c0000000000000000006044820152606401610a85565b806f6d67762f74726164655375636365737360801b036144595761445984614637565b60c084015160481c62ffffff1680841115614472578093505b61448085858303858561467c565b84019350816f6d67762f74726164655375636365737360801b146144b4576144a885856147d2565b60808701805190910190525b505050505050565b6000816000036144ce57506001611343565b60408401516060858101516001600160601b039186901c82169291861691908084028284028082036145555789516001600160a01b039081166000908152600560209081526040808320828f015190941683529281528282208b835290529081205460481c62ffffff1660a08c015194029590930294909410159550611343945050505050565b1194506113439350505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839182918816906145c090859061502c565b6000604051808303816000865af19150503d80600081146145fd576040519150601f19603f3d011682016040523d82523d6000602084013e614602565b606091505b509150915081801561462c57508051158061462c57508080602001905181019061462c9190615067565b979650505050505050565b614657816020015161464d8360c0015160601c90565b8360a00151614562565b611dd057602081015160005460a083015161098b92916001600160a01b031690614562565b600080633d3d130d60e01b866040518060400160405280878152602001868152506040516024016146ae92919061512b565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319939093169290921790915260c087015190915060601c60005a90508660408204820310156147465760405162461bcd60e51b815260206004820181905260248201527f6d67762f6e6f74456e6f756768476173466f724d616b6572506f7374686f6f6b6044820152606401610a85565b600080614754848a87613b32565b915091505a83039550816147c55789602001516001600160a01b03168a600001516001600160a01b03167f51d5a3ecf332626d83c8207fe9bd22f38801f578c7eb222e2d811cd1b4c629a58c60400151846040516147bc929190918252602082015260400190565b60405180910390a35b5050505050949350505050565b60c082015160009062ffffff604882901c81169161ffff602082901c1660309190911c909116820102633b9aca00028184111561480d578193505b61010085015160009060601c62ffffff1660e08701519086019060401c61ffff16633b9aca0002029050818111156148425750805b61485b6148538760c0015160601c90565b828403611dd3565b95945050505050565b60405180610160016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60405180610120016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806101000160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001600015158152602001600081525090565b60405180608001604052806004906020820280368337509192915050565b80356001600160a01b03811681146149b357600080fd5b919050565b600080600080600060a086880312156149d057600080fd5b6149d98661499c565b94506149e76020870161499c565b94979496505050506040830135926060810135926080909101359150565b600060208284031215614a1757600080fd5b6113438261499c565b600060208284031215614a3257600080fd5b5035919050565b600080600060608486031215614a4e57600080fd5b614a578461499c565b9250614a656020850161499c565b9150604084013590509250925092565b60008083601f840112614a8757600080fd5b50813567ffffffffffffffff811115614a9f57600080fd5b6020830191508360208260071b85010111156119f457600080fd5b8015158114611dd057600080fd5b600080600080600060808688031215614ae057600080fd5b614ae98661499c565b9450614af76020870161499c565b9350604086013567ffffffffffffffff811115614b1357600080fd5b614b1f88828901614a75565b9094509250506060860135614b3381614aba565b809150509295509295909350565b600080600080600080600060e0888a031215614b5c57600080fd5b614b658861499c565b9650614b736020890161499c565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b60008060008060808587031215614bb557600080fd5b614bbe8561499c565b9350614bcc6020860161499c565b9250614bda6040860161499c565b9396929550929360600135925050565b600060208284031215614bfc57600080fd5b813561134381614aba565b60008060408385031215614c1a57600080fd5b614c238361499c565b9150614c316020840161499c565b90509250929050565b600080600080600080600080610100898b031215614c5757600080fd5b614c608961499c565b9750614c6e60208a0161499c565b979a9799505050506040860135956060810135956080820135955060a0820135945060c0820135935060e0909101359150565b60008060008060008060c08789031215614cba57600080fd5b614cc38761499c565b9550614cd16020880161499c565b945060408701359350606087013592506080870135614cef81614aba565b9150614cfd60a0880161499c565b90509295509295509295565b600080828403610140811215614d1e57600080fd5b61012080821215614d2e57600080fd5b849350610f7c81860161499c565b60008060008060808587031215614d5257600080fd5b614d5b8561499c565b9350614d696020860161499c565b9250604085013591506060850135614d8081614aba565b939692955090935050565b60008060008060008060008060006101208a8c031215614daa57600080fd5b614db38a61499c565b9850614dc160208b0161499c565b9750614dcf60408b0161499c565b9650614ddd60608b0161499c565b955060808a0135945060a08a0135935060c08a013560ff81168114614e0157600080fd5b8093505060e08a013591506101008a013590509295985092959850929598565b60008060008060008060a08789031215614e3a57600080fd5b614e438761499c565b9550614e516020880161499c565b9450604087013567ffffffffffffffff811115614e6d57600080fd5b614e7989828a01614a75565b9095509350506060870135614e8d81614aba565b9150614cfd6080880161499c565b60008060008060808587031215614eb157600080fd5b614eba8561499c565b9350614ec86020860161499c565b9250614ed66040860161499c565b9150614ee46060860161499c565b905092959194509250565b600080600080600060a08688031215614f0757600080fd5b614f108661499c565b9450614f1e6020870161499c565b935060408601359250606086013591506080860135614b3381614aba565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60008060408385031215614f7357600080fd5b505080516020909101519092909150565b61012081016001600160a01b0380614f9b8561499c565b16835280614fab6020860161499c565b1660208401525060408301356040830152606083013560608301526080830135608083015260a083013560a083015260c083013560c083015260e083013560e083015261010080840135818401525092915050565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000825160005b8181101561504d5760208186018101518583015201615033565b8181111561505c576000828501525b509190910192915050565b60006020828403121561507957600080fd5b815161134381614aba565b60018060a01b038082511683528060208301511660208401525060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152505050565b61014081016150f98285615084565b6001600160a01b03929092166101209190910152919050565b60006020828403121561512457600080fd5b5051919050565b610160810161513a8285615084565b82516101208301526020830151610140830152939250505056fea2646970667358221220f1963d9c2b3d628f1434924334993b3b07ae40980b0db947c650656b65407bf364736f6c634300080e003360a06040523480156200001157600080fd5b50604051620055e4380380620055e4833981016040819052620000349162000484565b828282604051806040016040528060088152602001674d616e67726f766560c01b815250808484847f72201d073f249840099a96530e189c4291c1852040b1e96ff1f606db656be4ff60405160405180910390a1620000938362000165565b6200009e82620001c4565b620000a98162000277565b620000b48362000327565b5050815160208084019190912060408051808201825260018152603160f81b9084015280517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f938101939093528201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c001905060408051601f19818403018152919052805160209091012060805250620004c99650505050505050565b6200016f620003d8565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f30906020015b60405180910390a150565b620001ce620003d8565b61ffff81168114620002275760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f31366269747300000000000060448201526064015b60405180910390fd5b62000243816001546200044960201b62001e221790919060201c565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001620001b9565b62000281620003d8565b808162ffffff1614620002d75760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f323462697473000000000000000060448201526064016200021e565b620002f3816001546200046760201b62001e451790919060201c565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001620001b9565b62000331620003d8565b6001600160a01b038116620003895760405162461bcd60e51b815260206004820152601360248201527f6d67762f636f6e6669672f676f762f6e6f74300000000000000000000000000060448201526064016200021e565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001620001b9565b6003546001600160a01b0316331480620003f157503330145b806200040657506003546001600160a01b0316155b620004475760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b60448201526064016200021e565b565b60401b69ffff00000000000000001661ffff60401b19919091161790565b60281b67ffffff00000000001662ffffff60281b19919091161790565b6000806000606084860312156200049a57600080fd5b83516001600160a01b0381168114620004b257600080fd5b602085015160409095015190969495509392505050565b6080516150f8620004ec60003960008181610364015261177e01526150f86000f3fe60806040526004361061024a5760003560e01c80636d27de6711610139578063b60d4288116100b6578063dc7e98df1161007a578063dc7e98df146108a8578063def5ddaa146108c8578063fbb66910146108e8578063fbfa77cf14610908578063fbffe5fd14610928578063fcaa7e2e1461094857600080fd5b8063b60d4288146107e4578063c7bb25d0146107ec578063cbf75c9a14610833578063d0ee509914610868578063db20266f1461088857600080fd5b8063aa4dd282116100fd578063aa4dd28214610744578063ab033ea914610764578063ad97db1b14610784578063b09d2a16146107a4578063b2b12057146107c457600080fd5b80636d27de671461061457806370a08231146106545780637ecebe00146106815780638c66715c146106ae57806395999ee31461072457600080fd5b80635722647b116101c7578063644e67031161018b578063644e6703146104cc5780636804f613146105835780636817031b146105a357806368c13d6b146105c35780636a4f76911461060157600080fd5b80635722647b146103f657806359eba454146104345780635a611f4e146104545780635aa6e675146104745780635cd82390146104ac57600080fd5b806330adf81f1161020e57806330adf81f146103105780633644e5151461035257806341c0e1b51461038657806346e142fa1461039b57806349f6d2dc146103e357600080fd5b80630b73a18f1461025f578063230244081461027f578063275074581461029257806327d097c6146102d05780632e1a7d4d146102f057600080fd5b3661025a5761025833610968565b005b600080fd5b34801561026b57600080fd5b5061025861027a366004614926565b61098f565b61025861028d366004614973565b610968565b34801561029e57600080fd5b506102bb6102ad36600461498e565b6001600160601b0316151590565b60405190151581526020015b60405180910390f35b3480156102dc57600080fd5b506102586102eb3660046149a7565b610a2d565b3480156102fc57600080fd5b506102bb61030b36600461498e565b610b08565b34801561031c57600080fd5b506103447fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a281565b6040519081526020016102c7565b34801561035e57600080fd5b506103447f000000000000000000000000000000000000000000000000000000000000000081565b34801561039257600080fd5b50610258610b62565b3480156103a757600080fd5b506103bb6103b6366004614a36565b610baa565b604080519586526020860194909452928401919091526060830152608082015260a0016102c7565b6103446103f1366004614aaf565b610bd6565b34801561040257600080fd5b506103446104113660046149a7565b600560209081526000938452604080852082529284528284209052825290205481565b34801561044057600080fd5b506102bb61044f366004614b0d565b610d41565b34801561046057600080fd5b5061025861046f366004614b58565b610dca565b34801561048057600080fd5b50600354610494906001600160a01b031681565b6040516001600160a01b0390911681526020016102c7565b3480156104b857600080fd5b506102586104c7366004614973565b610e24565b3480156104d857600080fd5b506104ec6104e7366004614b75565b610e84565b6040805183516001600160a01b0316815260208085015115158183015284830151151582840152606080860151818401526080808701518185015260a0968701511515878501528551151560c0808601919091529286015160e0850152938501516101008401528401516101208301529183015115156101408201529282015161016084015201516101808201526101a0016102c7565b34801561058f57600080fd5b5061025861059e366004614b58565b610f87565b3480156105af57600080fd5b506102586105be366004614973565b610fd1565b3480156105cf57600080fd5b506103446105de3660046149a7565b600460209081526000938452604080852082529284528284209052825290205481565b61025861060f366004614ba8565b611027565b34801561062057600080fd5b5061063461062f366004614c0f565b61113a565b6040805194855260208501939093529183015260608201526080016102c7565b34801561066057600080fd5b5061034461066f366004614973565b60066020526000908152604090205481565b34801561068d57600080fd5b5061034461069c366004614973565b60086020526000908152604090205481565b3480156106ba57600080fd5b506106ce6106c93660046149a7565b611171565b60408051835181526020808501518183015284830151828401526060948501518583015283516001600160a01b0316608083015283015160a08201529082015160c082015291015160e0820152610100016102c7565b34801561073057600080fd5b5061025861073f36600461498e565b61124d565b34801561075057600080fd5b5061034461075f366004614c77565b6112e9565b34801561077057600080fd5b5061025861077f366004614973565b61141e565b34801561079057600080fd5b5061034461079f366004614caa565b6114c0565b3480156107b057600080fd5b506102586107bf366004614cf9565b611692565b3480156107d057600080fd5b506103bb6107df366004614d8f565b61198b565b6102586119c7565b3480156107f857600080fd5b50610344610807366004614e09565b600760209081526000948552604080862082529385528385208152918452828420909152825290205481565b34801561083f57600080fd5b5061085361084e366004614b75565b6119d2565b604080519283526020830191909152016102c7565b34801561087457600080fd5b50610258610883366004614b75565b611acf565b34801561089457600080fd5b506102bb6108a3366004614b75565b611b40565b3480156108b457600080fd5b506102586108c33660046149a7565b611b7b565b3480156108d457600080fd5b506103446108e3366004614b75565b611c3b565b3480156108f457600080fd5b506102586109033660046149a7565b611c73565b34801561091457600080fd5b50600054610494906001600160a01b031681565b34801561093457600080fd5b50610634610943366004614e5d565b611d60565b34801561095457600080fd5b5061025861096336600461498e565b611d87565b60006109756000806119d2565b50905061098181611e64565b61098b8234611ea7565b5050565b610997611f03565b6001600160a01b0385811660008181526002602090815260408083209489168084529482529182902080546001600160f81b0316600160f81b17905581516001815291517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a3610a10858585611b7b565b610a1b858584611c73565b610a26858583610a2d565b5050505050565b610a35611f03565b808162ffffff1614610a8e5760405162461bcd60e51b815260206004820152601f60248201527f6d67762f636f6e6669672f6f666665725f676173626173652f3234626974730060448201526064015b60405180910390fd5b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805462ffffff60601b191662ffffff60601b606088901b1617905590518481527fc5859916e5f3fc1ed4d2cfb8c7a6cf709580f228fa0c9d9e0fa468744c7e4a9191015b60405180910390a3505050565b6000610b143383611f6e565b60405133908390600081818185875af1925050503d8060008114610b54576040519150601f19603f3d011682016040523d82523d6000602084013e610b59565b606091505b50909392505050565b610b6a611f03565b60015464ff000000001916640100000000176001556040517fbe26733c2bf6ff3ea5ba8cfe744422bd49052ff9ed5685c9e81e6f9321dbaddd90600090a1565b6000806000806000610bc08a8a8a8a8a33612033565b939e929d50909b50995090975095505050505050565b6000610be06147d2565b610bea89896119d2565b6101208301819052610100830191909152610c0490612180565b610c188161010001518261012001516121cc565b3415610c2857610c283334611ea7565b61012081015160181c63ffffffff166001016080820181905263ffffffff811614610c8b5760405162461bcd60e51b81526020600482015260136024820152726d67762f6f6666657249644f766572666c6f7760681b6044820152606401610a85565b6080810151610120820151610cb79160181b66ffffffff0000001666ffffffff00000019919091161790565b6101208201526001600160a01b03808a16825288166020820152604081018790526060810186905260a0810185905260c0810184905260e08101839052610cff81600061221c565b61012081015181516001600160a01b03908116600090815260026020908152604080832082870151909416835292905220556080015198975050505050505050565b6001600160a01b038085166000818152600760209081526040808320888616808552908352818420338086529084528285209689168552959092528083208690555191939092917f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d91610db79188908890614eaa565b60405180910390a3506001949350505050565b610dd2611f03565b60015460ff60501b191660ff60501b605083901b161760015560405181151581527f9b84fe4d9ffc14a6f7ec50c18884ee0d4bb8165aa718a28558df12ab4bd32b14906020015b60405180910390a150565b610e2c611f03565b6001546001600160601b03166001600160601b0319606083901b16176001556040516001600160a01b03821681527ff592e42c32883b35bebfbf9d9b801570a25d5ccbba452310746ad2cfd20d548f90602001610e19565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152610efa6040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b600080610f0786866119d2565b91509150610f71826040805160c081018252606083811c8252605884901c60ff9081161515602080850191909152605086901c82161515848601529385901c61ffff1691830191909152602884901c62ffffff1660808301529290911c909116151560a082015290565b9350610f7c81612999565b925050509250929050565b610f8f611f03565b600154610f9c9082612a47565b60015560405181151581527fbf39fbfab835c119637f4dbc4fb0f428c559c210200405d1ec25ddb50a93f9d490602001610e19565b610fd9611f03565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f3090602001610e19565b61102f6147d2565b61103989896119d2565b610120830181905261010083019190915261105390612180565b6110678161010001518261012001516121cc565b3415611077576110773334611ea7565b6001600160a01b03808a16808352908916602080840182905260408085018b9052606085018a90526080850186905260a0850189905260c0850188905260e0850187905260009384526004825280842092845291815281832085845290529020546101408201526101208101516110ef82600161221c565b610120820151811461112e5761012082015182516001600160a01b03908116600090815260026020908152604080832082880151909416835292905220555b50505050505050505050565b60008060008061114e8a8a8a8a8a8a612a5e565b929650909450925090506111648a8a8786612d46565b9650965096509692505050565b61119c6040518060800160405280600081526020016000815260200160008152602001600081525090565b6111d0604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b6001600160a01b03808616600090815260046020908152604080832093881683529281528282208683529052205461120781612e46565b6001600160a01b038088166000908152600560209081526040808320938a1683529281528282208883529052205490935061124181612ea8565b92505050935093915050565b611255611f03565b808162ffffff16146112a95760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f32346269747300000000000000006044820152606401610a85565b6001546112b69082611e45565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001610e19565b600033301461133a5760405162461bcd60e51b815260206004820152601760248201527f6d67762f666c6173686c6f616e2f70726f7465637465640000000000000000006044820152606401610a85565b61135961134d6040850160208601614973565b83308660a00135612f17565b156113da576113836113716040850160208601614973565b60c085013560601c8560a00135612fff565b1561139857611391836130d6565b9050611418565b60408051606081018252731b59dd8bdb585ad95c949958d95a5d9951985a5b60621b8152600060208201819052918101919091526113d590606081fd5b611418565b60408051606081018252741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b81526000602082018190529181019190915261141890606081fd5b92915050565b611426611f03565b6001600160a01b0381166114725760405162461bcd60e51b815260206004820152601360248201527206d67762f636f6e6669672f676f762f6e6f743606c1b6044820152606401610a85565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001610e19565b6000806114cd86866119d2565b9150506114d981612180565b6001600160a01b038087166000818152600460209081526040808320948a1680845294825280832089845282528083205493835260058252808320948352938152838220888352905291909120546115318160601c90565b6001600160a01b0316336001600160a01b0316146115915760405162461bcd60e51b815260206004820152601d60248201527f6d67762f726574726163744f666665722f756e617574686f72697a65640000006044820152606401610a85565b6001600160601b038216156115f557826115c189896115b08660e01c90565b60c087901c63ffffffff1688613257565b93508084146115f3576001600160a01b03808a166000908152600260209081526040808320938c168352929052208490555b505b61160388888885858a613337565b841561163a57603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca000202935061163a3385611ea7565b866001600160a01b0316886001600160a01b03167fe2ce51fba856682424155a2d89b2ad1d2adde6ea0a9e3115b4b474cd6cb1798b8860405161167f91815260200190565b60405180910390a3505050949350505050565b428410156116d75760405162461bcd60e51b81526020600482015260126024820152711b59dd8bdc195c9b5a5d0bd95e1c1a5c995960721b6044820152606401610a85565b6001600160a01b03878116600081815260086020908152604080832080546001810190915581517fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a2818501528f8716818401528e871660608201526080810195909552948b1660a085015260c084018a905260e084018590526101008085018a9052815180860390910181526101208501909152805191012061190160f01b6101408401527f0000000000000000000000000000000000000000000000000000000000000000610142840152610162830152906101820160408051601f198184030181528282528051602091820120600080855291840180845281905260ff89169284019290925260608301879052608083018690529092509060019060a0016020604051602081039080840390855afa158015611819573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381161580159061184f5750896001600160a01b0316816001600160a01b0316145b61189b5760405162461bcd60e51b815260206004820152601b60248201527f6d67762f7065726d69742f696e76616c69645369676e617475726500000000006044820152606401610a85565b87600760008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008b6001600160a01b03166001600160a01b03168152602001908152602001600020819055508a6001600160a01b03168c6001600160a01b03167f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d8c8c8c60405161197593929190614eaa565b60405180910390a3505050505050505050505050565b60008060008060006119a18b8b8b8b8b8b612033565b9398509196509450925090506119b98b8b8886612d46565b965096509650965096915050565b6119d033610968565b565b6001546001600160a01b03838116600090815260026020908152604080832093861683529290522054605882901c60ff1615611ac857600080611a158460601c90565b604051636968abd360e01b81526001600160a01b03888116600483015287811660248301529190911690636968abd3906044016040805180830381865afa158015611a64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a889190614ece565b91509150611a998261ffff81161490565b15611aab57611aa88483611e22565b93505b6001600160701b0381168103611ac557610f7c83826133ac565b50505b9250929050565b611ad7611f03565b6001600160a01b03828116600081815260026020908152604080832094861680845294825280832080546001600160f81b031690558051928352517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a35050565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054605881901c60ff1615155b949350505050565b611b83611f03565b6101f4811115611bcc5760405162461bcd60e51b815260206004820152601460248201527306d67762f636f6e6669672f6665652f3c3d3530360641b6044820152606401610a85565b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805461ffff60e81b191661ffff60e81b60e888901b1617905590518481527f44a6d70a601a6f8a85c075467e9d7245897140cbf6dd505c9d9d764459f5fb649101610afb565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054603881901c63ffffffff16611b73565b611c7b611f03565b6001600160701b0381168114611cd35760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f64656e736974792f313132626974730000000000006044820152606401610a85565b6001600160a01b03808416600090815260026020908152604080832093861683529290522054611d0390826133ac565b6001600160a01b038481166000818152600260209081526040808320948816808452948252918290209490945551848152919290917f95f1a495c6d9d1a215995408f6ad898c2b33798d6eb3cf3220b4c6cc8b61b0649101610afb565b600080600080611d74898989898933612a5e565b929c919b50995090975095505050505050565b611d8f611f03565b61ffff81168114611de25760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f3136626974730000000000006044820152606401610a85565b600154611def9082611e22565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001610e19565b60401b69ffff00000000000000001669ffff000000000000000019919091161790565b60281b67ffffff00000000001667ffffff000000000019919091161790565b602081901c60ff1615611ea45760405162461bcd60e51b81526020600482015260086024820152671b59dd8bd919585960c21b6044820152606401610a85565b50565b6001600160a01b03821660008181526006602052604090819020805484019055517f1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa09490611ef79084815260200190565b60405180910390a25050565b6003546001600160a01b0316331480611f1b57503330145b80611f2f57506003546001600160a01b0316155b6119d05760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b6044820152606401610a85565b6001600160a01b03821660009081526006602052604090205481811015611fd75760405162461bcd60e51b815260206004820152601960248201527f6d67762f696e73756666696369656e7450726f766973696f6e000000000000006044820152606401610a85565b6001600160a01b038316600081815260066020526040908190208484039055517f59c79d79be0fadf59fe689b6952b7ebe90201a3a1f00d4a31982377890bc6046906120269085815260200190565b60405180910390a2505050565b600080600080600061204361483e565b6001600160a01b03808d1682528b1660208201526120618c8c6119d2565b61010083015260e082015261207461489c565b6001600160a01b03881660a082015288151560c082015260e08201516101008301516120a091906121cc565b6120ae826101000151612180565b6040517fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b990600090a16120e381838d8d6133dd565b608084015192995090975095506120f990613862565b602080830151835160808085015160e0860151604080518d81529687018c905286019190915260608501526001600160a01b03808d1694938116939216917ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec47910160405180910390a4806080015193508060e0015192505050965096509650965096915050565b605881901c60ff1615611ea45760405162461bcd60e51b81526020600482015260146024820152731b59dd8bdc99595b9d1c985b98de531bd8dad95960621b6044820152606401610a85565b6121d582611e64565b6121e18160f81c151590565b61098b5760405162461bcd60e51b815260206004820152600c60248201526b6d67762f696e61637469766560a01b6044820152606401610a85565b60c082015161ffff8116146122735760405162461bcd60e51b815260206004820152601e60248201527f6d67762f77726974654f666665722f67617370726963652f31366269747300006044820152606401610a85565b61010082015160401c61ffff168260c00151101561229e5761010082015160401c61ffff1660c08301525b61010082015160281c62ffffff168260a0015111156122ff5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f6761737265712f746f6f486967680000006044820152606401610a85565b60008260600151116123535760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f746f6f4c6f7700000000006044820152606401610a85565b61012082015160781c6001600160701b031661012083015160601c62ffffff168360a001510102826060015110156123cd5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f64656e736974792f746f6f4c6f770000006044820152606401610a85565b60608201516001600160601b038116146124295760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f39366269747300000000006044820152606401610a85565b60408201516001600160601b038116146124855760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f77616e74732f39366269747300000000006044820152606401610a85565b60008061249184613900565b9150915083602001516001600160a01b031684600001516001600160a01b03167f2b101f9ef8ca2761d91bea55ab50a4d051e9248088ff7314ddb8826839544c2a33876040015188606001518960c001518a60a001518b608001518a60405161253697969594939291906001600160a01b03979097168752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b60405180910390a383516001600160a01b039081166000908152600560209081526040808320828901519094168352928152828220608088015183529052908120548415612610576125888160601c90565b6001600160a01b0316336001600160a01b0316146125e85760405162461bcd60e51b815260206004820152601c60248201527f6d67762f7570646174654f666665722f756e617574686f72697a6564000000006044820152606401610a85565b603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca00020291505b84158061262a575060a0860151604882901c62ffffff1614155b80612641575060c0860151602082901c61ffff1614155b80612662575061012086015160601c62ffffff16603082901c62ffffff1614155b1561270c5761012086015160009060601c62ffffff1690506126d2338860a00151838a60c0015160201b65ffff000000001660309190911b68ffffff0000000000001660489290921b6bffffff0000000000000000001660609390931b6001600160601b03191692909217171790565b87516001600160a01b039081166000908152600560209081526040808320828d0151909416835292815282822060808c0151835290522055505b5060c08501516101208601516000919060601c62ffffff168760a001510102633b9aca000290508181111561274c5761274733838303611f6e565b612760565b818110156127605761276033828403611ea7565b506101408501516001600160601b03161580612784575061014085015160e01c8314155b1561291057821561280a57608085015185516001600160a01b039081166000908152600460209081526040808320828b01519094168352928152828220878352905220546127d191613b2c565b85516001600160a01b039081166000908152600460209081526040808320828b015190941683529281528282208783529052205561283d565b60808501516101208601516128369160381b63ffffffff60381b1663ffffffff60381b19919091161790565b6101208601525b81156128b457608085015185516001600160a01b039081166000908152600460208181526040808420828c018051871686529083528185208986528352818520548c518716865293835281852090519095168452938152838320878452905291902060e09290921b6001600160e01b039091161790555b8380156128ce57506101408501516001600160601b031615155b1561291057612909856000015186602001516128ef88610140015160e01c90565b61014089015160c01c63ffffffff16896101200151613257565b6101208601525b60408501516060808701516000926001600160601b03909116911b6bffffffffffffffffffffffff60601b1660c085901b63ffffffff60c01b1660e087901b17171786516001600160a01b039081166000908152600460209081526040808320828c015190941683529281528282206080909a0151825298909852909620959095555050505050565b6129dd6040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b60f882901c1515815260e882901c61ffff166020820152607882901c6001600160701b03166040820152606082811c62ffffff1690820152605882901c60ff1615156080820152603882901c63ffffffff90811660a083015260189290921c90911660c082015290565b60581b60ff60581b1660ff60581b19919091161790565b60008060008087886001600160a01b031614612abc5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657257616e74732f313630626974730000006044820152606401610a85565b86876001600160a01b031614612b145760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657247697665732f313630626974730000006044820152606401610a85565b612b1c61483e565b6001600160a01b03808c1682528a166020820152612b3a8b8b6119d2565b610100830181905260e083019190915260381c63ffffffff1660408083019182526001600160a01b03808e16600090815260046020908152838220928f1682529182528281209351815292905290205460608201526080810189905260a08101889052612ba561489c565b898152602081018990526001600160a01b03871660a082015287151560c082015260e0820151610100830151612bdb91906121cc565b612be9826101000151612180565b610100820151612bfa906001612a47565b82610100018181525050816101000151600260008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020819055507fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b960405160405180910390a1612c8e81836001613b49565b612c9b8160800151613862565b866001600160a01b03168b6001600160a01b03168d6001600160a01b03167ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec478460400151856060015186608001518760e00151604051612d14949392919093845260208401929092526040830152606082015260800190565b60405180910390a460408101516060820151608083015160e090930151919e909d50919b509950975050505050505050565b6001600160a01b0380851660009081526007602090815260408083208785168452825280832093861683529281528282203383529052205481811015612dc15760405162461bcd60e51b815260206004820152601060248201526f6d67762f6c6f77416c6c6f77616e636560801b6044820152606401610a85565b6001600160a01b0380861660008181526007602090815260408083208986168085529083528184209589168452948252808320338085529252918290208686039081905591517f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d92612e37928992909190614eaa565b60405180910390a35050505050565b612e716040518060800160405280600081526020016000815260200160008152602001600081525090565b60e082901c815263ffffffff60c083901c1660208201526001600160601b03606083811c8216604084015292169181019190915290565b612edc604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b606082811c8252604883901c62ffffff908116602080850191909152603085901c90911660408401529290921c61ffff169181019190915290565b6000806323b872dd60e01b858585604051602401612f3793929190614eaa565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509050600080876001600160a01b031683604051612f879190614ef2565b6000604051808303816000865af19150503d8060008114612fc4576040519150601f19603f3d011682016040523d82523d6000602084013e612fc9565b606091505b5091509150818015612ff3575080511580612ff3575080806020019051810190612ff39190614f2d565b98975050505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928391829188169061305d908590614ef2565b6000604051808303816000865af19150503d806000811461309a576040519150601f19603f3d011682016040523d82523d6000602084013e61309f565b606091505b50915091508180156130c95750805115806130c95750808060200190518101906130c99190614f2d565b93505050505b9392505050565b600080636c49c32c60e01b836040516024016130f29190614f4a565b60408051808303601f190181529190526020810180516001600160e01b0319939093166001600160e01b0390931692909217909152905060c0830135604881901c62ffffff169060601c60005a905082604082048203101561319457604080516060810182527f6d67762f6e6f74456e6f756768476173466f724d616b6572547261646500000081526000602082018190529181019190915261319490606081fd5b6000806131a2848688613db1565b915091505a83039650816131e8576131e860405180606001604052806e1b59dd8bdb585ad95c94995d995c9d608a1b81526020018960001b815260200183815250606081fd5b60006132066131fa60208b018b614973565b86308c60800135612f17565b90508061324b5761324b6040518060600160405280741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b81526020018a60001b815260200184815250606081fd5b50505050505050919050565b600083156132ca576001600160a01b0380871660009081526004602090815260408083209389168352928152828220878352905220546132979084613b2c565b6001600160a01b038088166000908152600460209081526040808320938a168352928152828220888352905220556132e7565b63ffffffff60381b19821663ffffffff60381b603885901b161791505b821561332e576001600160a01b038681166000908152600460209081526040808320938916835292815282822086835290522080546001600160e01b031660e086901b1790555b50949350505050565b6001600160601b03198316925080156133575765ffff0000000019821691505b506001600160a01b039485166000818152600460209081526040808320979098168083529681528782208683528152878220949094559081526005835285812094815293825284842092845291905291902055565b60781b6dffffffffffffffffffffffffffff60781b166dffffffffffffffffffffffffffff60781b19919091161790565b60008080805b8481101561385757600060408901819052606089015285858281811061340b5761340b614fdc565b90506080020160006004811061342357613423614fdc565b60209081029190910135604089810191825289516001600160a01b039081166000908152600485528281208c86018051841683529086528382208551835286528382205460608e019081528d518416835260058752848320915190931682528552828120935181529290935290205460c0890152516001600160601b031615806134ef57508585828181106134ba576134ba614fdc565b9050608002016003600481106134d2576134d2614fdc565b60200201356134ed8860c0015162ffffff60489190911c1690565b115b61384f5785858281811061350557613505614fdc565b90506080020160016004811061351d5761351d614fdc565b602002013586868381811061353457613534614fdc565b90506080020160016004811061354c5761354c614fdc565b60200201356001600160601b0316146135a75760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657257616e74732f393662697473000000006044820152606401610a85565b8585828181106135b9576135b9614fdc565b9050608002016002600481106135d1576135d1614fdc565b60200201358686838181106135e8576135e8614fdc565b90506080020160026004811061360057613600614fdc565b60200201356001600160601b03161461365b5760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657247697665732f393662697473000000006044820152606401610a85565b85858281811061366d5761366d614fdc565b90506080020160016004811061368557613685614fdc565b602002013560808801528585828181106136a1576136a1614fdc565b9050608002016002600481106136b9576136b9614fdc565b602002013560a08801526101008701516136d4906001612a47565b610100880181905287516001600160a01b039081166000908152600260209081526040808320828d015190941683529290529081209190915580806137198b8b613ddf565b925092509250806f6d67762f74726164655375636365737360801b03613740576001870196505b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b146137945761378d8a600001518b602001516137748d6060015160e01c90565b60608e015160c01c63ffffffff168e6101000151613257565b6101008b01525b6101008a01516137a5906000612a47565b8a610100018181525050896101000151600260008c600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008c602001516001600160a01b03166001600160a01b03168152602001908152602001600020819055506138138b8b6143df565b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b14613839576138398b8b8585856144e1565b8a60400151860195508a60600151850194505050505b6001016133e3565b509450945094915050565b8015611ea457604051600090339083908381818185875af1925050503d80600081146138aa576040519150601f19603f3d011682016040523d82523d6000602084013e6138af565b606091505b505090508061098b5760405162461bcd60e51b815260206004820152601760248201527f6d67762f73656e6450656e616c747952657665727465640000000000000000006044820152606401610a85565b60008060008060008560e0015190506000866080015182146139555786516001600160a01b039081166000908152600460209081526040808320828c015190941683529281528282208583529052205461395c565b8661014001515b90506001600160601b0381166139b55761012087015160381c63ffffffff1687516001600160a01b039081166000908152600460209081526040808320828d015190941683529281528282208483529052205490925090505b6139c0878284614544565b15613a5a5760005b60c082901c63ffffffff1615613a42575086516001600160a01b039081166000908152600460209081526040808320828c0151909416835292815282822063ffffffff60c086901c1680845291529190205490613a26898383614544565b15613a3657809350819250613a3c565b50613a42565b506139c8565b8260c083901c63ffffffff169095509350613ae39050565b60005b613a678260e01c90565b15613ad0576000613a788360e01c90565b89516001600160a01b039081166000908152600460209081526040808320828f015190941683529281528282208483529052205492509050613abb898383614544565b15613ac65750613ad0565b9250905080613a5d565b613ada8260e01c90565b94509192508291505b86608001518414613af45783613afe565b61014087015160e01c5b87608001518414613b0f5783613b1f565b61014088015160c01c63ffffffff165b9550955050505050915091565b60c01b63ffffffff60c01b1663ffffffff60c01b19919091161790565b808015613b7057508260c00151613b675760008260a0015111613b70565b60008260800151115b8015613b80575060008260400151115b15613d3c5781516001600160a01b03908116600090815260056020908152604080832082870151909416835292815282822083860151835290529081205460c08401528080613bcf8686613ddf565b608088015160a089015160408a015160608b015160c08c015196995094975092955090939092906e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613cc65760408b01518b5111613c22576000613c2b565b60408b01518b51035b60808b015260608b81015160208d01510360a08c01528a015160c01c63ffffffff168a6040018181525050600460008b600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b602001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b604001518152602001908152602001600020548a60600181815250505b613ce68b8b886e1b59dd8bdb9bdd115e1958dd5d1959608a1b1415613b49565b60408a0183905260808a0185905260a08a0184905260608a0182905260c08a018190526e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613d2f57613d2f8b8b8a8a8a6144e1565b5050505050505050505050565b613d5b8260000151836020015160008560400151866101000151613257565b6101008301819052613d6e906000612a47565b610100830181905282516001600160a01b0390811660009081526002602090815260408083208288015190941683529290522055613dac83836143df565b505050565b600080613dbc6148ec565b60648185516020870160008a8af192508060448415020151915050935093915050565b600080600080613dff85606001516001600160601b0360609190911c1690565b90506000613e1786606001516001600160601b031690565b608087015160a0880151919250908083028483021115613e575750600095508594506e1b59dd8bdb9bdd115e1958dd5d1959608a1b93506143d892505050565b8860c001518015613e6757508183105b80613e7e57508860c00151158015613e7e57508084105b15613e96576080880183905260a08801849052613f0d565b8860c0015115613ee157838202838181613eb257613eb2614fc6565b0615613ebf576001613ec2565b60005b60ff16848281613ed457613ed4614fc6565b040160a08a015250613f0d565b83600003613ef55760808801839052613f0d565b8381840281613f0657613f06614fc6565b0460808901525b50505050600080306001600160a01b031663aa4dd28260e01b878960a00151604051602401613f3d929190615058565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051613f7b9190614ef2565b6000604051808303816000865af19150503d8060008114613fb8576040519150601f19603f3d011682016040523d82523d6000602084013e613fbd565b606091505b509150915081156141175780806020019051810190613fdc9190615080565b94506f6d67762f74726164655375636365737360801b925085602001516001600160a01b031686600001516001600160a01b03167f1d81940ff2c3ac549c8acefd7c1b2ffb24aacc8b3cfa309c22abc3de79727f9d88604001518a60a001518a608001518b60a0015160405161407494939291909384526001600160a01b039290921660208401526040830152606082015260800190565b60405180910390a360e086015160501c60ff16156140f25760e086015160a088015160405163cac1827160e01b815260609290921c9163cac18271916140bf918a9190600401615058565b600060405180830381600087803b1580156140d957600080fd5b505af11580156140ed573d6000803e3d6000fd5b505050505b6080860151604088018051909101905260a0860151606088018051909101905261439d565b602081015160408201516060830151909650945092506e1b59dd8bdb585ad95c94995d995c9d608a1b831480614164575082741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b145b80614185575082731b59dd8bdb585ad95c949958d95a5d9951985a5b60621b145b156142975785602001516001600160a01b031686600001516001600160a01b03167f1d59c048edb5397821854bd12cbe02242b82101c677f949d076d14eb7bd8343688604001518a60a001518a608001518b60a00151896040516142149594939291909485526001600160a01b0393909316602085015260408401919091526060830152608082015260a00190565b60405180910390a360e086015160501c60ff16156142925760e086015160a0880151604051631159507360e01b815260609290921c9163115950739161425f918a9190600401615058565b600060405180830381600087803b15801561427957600080fd5b505af115801561428d573d6000803e3d6000fd5b505050505b61439d565b827f6d67762f6e6f74456e6f756768476173466f724d616b65725472616465000000036143065760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6e6f74456e6f756768476173466f724d616b657254726164650000006044820152606401610a85565b82741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b036143655760405162461bcd60e51b81526020600482015260156024820152741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b6044820152606401610a85565b60405162461bcd60e51b815260206004820152600d60248201526c36b3bb17b9bbb0b822b93937b960991b6044820152606401610a85565b6143d586600001518760200151886040015189606001518a60c00151886f6d67762f74726164655375636365737360801b1415613337565b50505b9250925092565b6101008101516000906127109060e81c61ffff168460400151028161440657614406614fc6565b049050801561447c57604083018051829003905260e08301819052815160005461443a91906001600160a01b031683612fff565b61447c5760405162461bcd60e51b81526020600482015260136024820152721b59dd8bd99959551c985b9cd9995c91985a5b606a1b6044820152606401610a85565b604083015115613dac5761449d82600001518460a001518560400151612fff565b613dac5760405162461bcd60e51b815260206004820152601560248201527436b3bb17a6b3bb2330b4b62a37a830bcaa30b5b2b960591b6044820152606401610a85565b60c084015160481c62ffffff16808411156144fa578093505b6145088585830385856145ea565b84019350816f6d67762f74726164655375636365737360801b1461453c576145308585614740565b60808701805190910190525b505050505050565b600081600003614556575060016130cf565b60408401516060858101516001600160601b039186901c82169291861691908084028284028082036145dd5789516001600160a01b039081166000908152600560209081526040808320828f015190941683529281528282208b835290529081205460481c62ffffff1660a08c0151940295909302949094101595506130cf945050505050565b1194506130cf9350505050565b600080633d3d130d60e01b8660405180604001604052808781526020018681525060405160240161461c929190615099565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319939093169290921790915260c087015190915060601c60005a90508660408204820310156146b45760405162461bcd60e51b815260206004820181905260248201527f6d67762f6e6f74456e6f756768476173466f724d616b6572506f7374686f6f6b6044820152606401610a85565b6000806146c2848a87613db1565b915091505a83039550816147335789602001516001600160a01b03168a600001516001600160a01b03167f51d5a3ecf332626d83c8207fe9bd22f38801f578c7eb222e2d811cd1b4c629a58c604001518460405161472a929190918252602082015260400190565b60405180910390a35b5050505050949350505050565b60c082015160009062ffffff604882901c81169161ffff602082901c1660309190911c909116820102633b9aca00028184111561477b578193505b61010085015160009060601c62ffffff1660e08701519086019060401c61ffff16633b9aca0002029050818111156147b05750805b6147c96147c18760c0015160601c90565b828403611ea7565b95945050505050565b60405180610160016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60405180610120016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806101000160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001600015158152602001600081525090565b60405180608001604052806004906020820280368337509192915050565b80356001600160a01b038116811461492157600080fd5b919050565b600080600080600060a0868803121561493e57600080fd5b6149478661490a565b94506149556020870161490a565b94979496505050506040830135926060810135926080909101359150565b60006020828403121561498557600080fd5b6130cf8261490a565b6000602082840312156149a057600080fd5b5035919050565b6000806000606084860312156149bc57600080fd5b6149c58461490a565b92506149d36020850161490a565b9150604084013590509250925092565b60008083601f8401126149f557600080fd5b50813567ffffffffffffffff811115614a0d57600080fd5b6020830191508360208260071b8501011115611ac857600080fd5b8015158114611ea457600080fd5b600080600080600060808688031215614a4e57600080fd5b614a578661490a565b9450614a656020870161490a565b9350604086013567ffffffffffffffff811115614a8157600080fd5b614a8d888289016149e3565b9094509250506060860135614aa181614a28565b809150509295509295909350565b600080600080600080600060e0888a031215614aca57600080fd5b614ad38861490a565b9650614ae16020890161490a565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b60008060008060808587031215614b2357600080fd5b614b2c8561490a565b9350614b3a6020860161490a565b9250614b486040860161490a565b9396929550929360600135925050565b600060208284031215614b6a57600080fd5b81356130cf81614a28565b60008060408385031215614b8857600080fd5b614b918361490a565b9150614b9f6020840161490a565b90509250929050565b600080600080600080600080610100898b031215614bc557600080fd5b614bce8961490a565b9750614bdc60208a0161490a565b979a9799505050506040860135956060810135956080820135955060a0820135945060c0820135935060e0909101359150565b60008060008060008060c08789031215614c2857600080fd5b614c318761490a565b9550614c3f6020880161490a565b945060408701359350606087013592506080870135614c5d81614a28565b9150614c6b60a0880161490a565b90509295509295509295565b600080828403610140811215614c8c57600080fd5b61012080821215614c9c57600080fd5b849350610f7c81860161490a565b60008060008060808587031215614cc057600080fd5b614cc98561490a565b9350614cd76020860161490a565b9250604085013591506060850135614cee81614a28565b939692955090935050565b60008060008060008060008060006101208a8c031215614d1857600080fd5b614d218a61490a565b9850614d2f60208b0161490a565b9750614d3d60408b0161490a565b9650614d4b60608b0161490a565b955060808a0135945060a08a0135935060c08a013560ff81168114614d6f57600080fd5b8093505060e08a013591506101008a013590509295985092959850929598565b60008060008060008060a08789031215614da857600080fd5b614db18761490a565b9550614dbf6020880161490a565b9450604087013567ffffffffffffffff811115614ddb57600080fd5b614de789828a016149e3565b9095509350506060870135614dfb81614a28565b9150614c6b6080880161490a565b60008060008060808587031215614e1f57600080fd5b614e288561490a565b9350614e366020860161490a565b9250614e446040860161490a565b9150614e526060860161490a565b905092959194509250565b600080600080600060a08688031215614e7557600080fd5b614e7e8661490a565b9450614e8c6020870161490a565b935060408601359250606086013591506080860135614aa181614a28565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60008060408385031215614ee157600080fd5b505080516020909101519092909150565b6000825160005b81811015614f135760208186018101518583015201614ef9565b81811115614f22576000828501525b509190910192915050565b600060208284031215614f3f57600080fd5b81516130cf81614a28565b61012081016001600160a01b0380614f618561490a565b16835280614f716020860161490a565b1660208401525060408301356040830152606083013560608301526080830135608083015260a083013560a083015260c083013560c083015260e083013560e083015261010080840135818401525092915050565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60018060a01b038082511683528060208301511660208401525060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152505050565b61014081016150678285614ff2565b6001600160a01b03929092166101209190910152919050565b60006020828403121561509257600080fd5b5051919050565b61016081016150a88285614ff2565b82516101208301526020830151610140830152939250505056fea2646970667358221220606ee9d9815e4c17941d70526d6fb9577a74084308c36927d5d3f4357268a87964736f6c634300080e003360806040526000805460ff1916600117905534801561001d57600080fd5b5060405161120638038061120683398101604081905261003c9161009f565b600080546001600160a01b0394851661010002610100600160a81b0319909116179055600180549284166001600160a01b0319938416179055600280549190931691161790556100ec565b6001600160a01b038116811461009c57600080fd5b50565b6000806000606084860312156100b457600080fd5b83516100bf81610087565b60208501519093506100d081610087565b60408501519092506100e181610087565b809150509250925092565b61110b806100fb6000396000f3fe6080604052600436106100e15760003560e01c8063a3cfe14d1161007f578063b84e3eda11610059578063b84e3eda14610284578063e1f21c67146102a4578063f8ccbf47146102c4578063ff2e2d33146102de57600080fd5b8063a3cfe14d14610244578063aa2cc08b14610264578063b04220dd1461013057600080fd5b80633a768463116100bb5780633a7684631461016a5780634d1d2b66146101aa578063521606d2146101f4578063978b7c021461021457600080fd5b8063080d7c4d146100ed5780631154020b1461010f5780632d24c42f1461013057600080fd5b366100e857005b600080fd5b3480156100f957600080fd5b5061010d610108366004610b09565b6102fe565b005b34801561011b57600080fd5b5061010d61012a366004610b35565b50505050565b34801561013c57600080fd5b5061015061014b366004610b7b565b610395565b604080519283526020830191909152015b60405180910390f35b34801561017657600080fd5b50610192737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b039091168152602001610161565b3480156101b657600080fd5b506101ca6101c5366004610b7b565b61043d565b6040805195151586526020860194909452928401919091526060830152608082015260a001610161565b34801561020057600080fd5b5061010d61020f366004610c08565b610539565b34801561022057600080fd5b5061023461022f366004610b7b565b61066a565b6040519015158152602001610161565b34801561025057600080fd5b5061010d61025f366004610b09565b6106e2565b34801561027057600080fd5b5061015061027f366004610c9e565b610720565b34801561029057600080fd5b5061010d61029f366004610c08565b6107be565b3480156102b057600080fd5b5061010d6102bf366004610cf9565b6108e1565b3480156102d057600080fd5b506000546102349060ff1681565b3480156102ea57600080fd5b506102346102f9366004610d3a565b610954565b60005460015460025460405163167ae91560e21b81526001600160a01b039283166004820152908216602482015284821660448201526064810184905261010090920416906359eba454906084015b6020604051808303816000875af115801561036c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103909190610dbd565b505050565b600080546001805460025460405163fbffe5fd60e01b81526001600160a01b03928316600482015290821660248201526044810187905260648101869052608481019290925283926101009004169063fbffe5fd9060a4016080604051808303816000875af115801561040c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104309190610ddf565b5091969095509350505050565b60008060008060008061048560405180608001604052808a81526020018981526020016bffffffffffffffffffffffff8016815260200165ffffffffffff8016815250610a12565b6000805460018054600254604051632370a17d60e11b8152959650939485948594859485946001600160a01b036101009093048316946346e142fa946104d694928316939216918c91600401610e15565b60a0604051808303816000875af11580156104f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105199190610eaa565b60019094149e50919c509a50985096505050505050509295509295909350565b604080516020810190915260008082525b825181101561065c5782518290737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae9086908590811061058557610585610eea565b60200260200101516040518263ffffffff1660e01b81526004016105ab91815260200190565b600060405180830381865afa1580156105c8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105f09190810190610f2c565b604051602001610601929190610fc0565b6040516020818303038152906040529150600183516106209190611005565b81101561064a5781604051602001610638919061101c565b60405160208183030381529060405291505b8061065481611042565b91505061054a565b5061066681610a6f565b5050565b60405163268e95b360e11b815260048101839052602481018290526000903090634d1d2b669060440160a0604051808303816000875af11580156106b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d6919061105b565b50929695505050505050565b60005460405163095ea7b360e01b81526101009091046001600160a01b0390811660048301526024820183905283169063095ea7b39060440161034d565b60405163fbffe5fd60e01b81526001600160a01b0385811660048301528481166024830152604482018490526064820183905260016084830152600091829188169063fbffe5fd9060a4016080604051808303816000875af115801561078a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ae9190610ddf565b5091999098509650505050505050565b604080516020810190915260008082525b825181101561065c5782518290737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae9086908590811061080a5761080a610eea565b60200260200101516040518263ffffffff1660e01b815260040161083091815260200190565b600060405180830381865afa15801561084d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108759190810190610f2c565b604051602001610886929190610fc0565b6040516020818303038152906040529150600183516108a59190611005565b8110156108cf57816040516020016108bd919061101c565b60405160208183030381529060405291505b806108d981611042565b9150506107cf565b60405163095ea7b360e01b81526001600160a01b0383811660048301526024820183905284169063095ea7b3906044016020604051808303816000875af1158015610930573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012a9190610dbd565b600080610980604051806080016040528088815260200187815260200186815260200185815250610a12565b90506000896001600160a01b03166346e142fa8a8a8560016040518563ffffffff1660e01b81526004016109b79493929190610e15565b60a0604051808303816000875af11580156109d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fa9190610eaa565b50506001909214945050505050979650505050505050565b60408051600180825281830190925260609160009190816020015b610a35610ad6565b815260200190600190039081610a2d5790505090508281600081518110610a5e57610a5e610eea565b602090810291909101015292915050565b610ab281604051602401610a8391906110a2565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052610ab5565b50565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60405180608001604052806004906020820280368337509192915050565b6001600160a01b0381168114610ab257600080fd5b60008060408385031215610b1c57600080fd5b8235610b2781610af4565b946020939093013593505050565b60008060008060808587031215610b4b57600080fd5b8435610b5681610af4565b93506020850135610b6681610af4565b93969395505050506040820135916060013590565b60008060408385031215610b8e57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610bdc57610bdc610b9d565b604052919050565b600067ffffffffffffffff821115610bfe57610bfe610b9d565b5060051b60200190565b60006020808385031215610c1b57600080fd5b823567ffffffffffffffff811115610c3257600080fd5b8301601f81018513610c4357600080fd5b8035610c56610c5182610be4565b610bb3565b81815260059190911b82018301908381019087831115610c7557600080fd5b928401925b82841015610c9357833582529284019290840190610c7a565b979650505050505050565b600080600080600060a08688031215610cb657600080fd5b8535610cc181610af4565b94506020860135610cd181610af4565b93506040860135610ce181610af4565b94979396509394606081013594506080013592915050565b600080600060608486031215610d0e57600080fd5b8335610d1981610af4565b92506020840135610d2981610af4565b929592945050506040919091013590565b600080600080600080600060e0888a031215610d5557600080fd5b8735610d6081610af4565b96506020880135610d7081610af4565b95506040880135610d8081610af4565b969995985095966060810135965060808101359560a0820135955060c0909101359350915050565b80518015158114610db857600080fd5b919050565b600060208284031215610dcf57600080fd5b610dd882610da8565b9392505050565b60008060008060808587031215610df557600080fd5b505082516020840151604085015160609095015191969095509092509050565b6001600160a01b038581168252841660208083019190915260806040830181905284518382018190526000928681019160a08601919085805b82811015610e8b57855185835b6004811015610e7857825182529186019190860190600101610e5b565b5050509483019493860193600101610e4e565b5050505085151560608601529250610ea1915050565b95945050505050565b600080600080600060a08688031215610ec257600080fd5b5050835160208501516040860151606087015160809097015192989197509594509092509050565b634e487b7160e01b600052603260045260246000fd5b60005b83811015610f1b578181015183820152602001610f03565b8381111561012a5750506000910152565b600060208284031215610f3e57600080fd5b815167ffffffffffffffff80821115610f5657600080fd5b818401915084601f830112610f6a57600080fd5b815181811115610f7c57610f7c610b9d565b610f8f601f8201601f1916602001610bb3565b9150808252856020828501011115610fa657600080fd5b610fb7816020840160208601610f00565b50949350505050565b60008351610fd2818460208801610f00565b835190830190610fe6818360208801610f00565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b60008282101561101757611017610fef565b500390565b6000825161102e818460208701610f00565b61016160f51b920191825250600201919050565b60006001820161105457611054610fef565b5060010190565b600080600080600060a0868803121561107357600080fd5b61107c86610da8565b602087015160408801516060890151608090990151929a91995097965090945092505050565b60208152600082518060208401526110c1816040850160208701610f00565b601f01601f1916919091016040019291505056fea2646970667358221220fe05e77654585728cf63d927b792919a9b4528889d07a63176801add83a0055b64736f6c634300080e0033608060405234801561001057600080fd5b5060405161206d38038061206d83398101604081905261002f91610092565b600180546001600160a01b0394851661010002610100600160a81b0319909116179055600280549284166001600160a01b0319938416179055600380549190931691161790556100df565b6001600160a01b038116811461008f57600080fd5b50565b6000806000606084860312156100a757600080fd5b83516100b28161007a565b60208501519093506100c38161007a565b60408501519092506100d48161007a565b809150509250925092565b611f7f806100ee6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631f7b6d32146100515780635686153214610067578063a5e3875114610092578063e9c4a3ac146100a7575b600080fd5b6000546040519081526020015b60405180910390f35b61007a61007536600461047a565b6100af565b6040516001600160a01b03909116815260200161005e565b6100a56100a036600461047a565b6100de565b005b6100a5610320565b60008082815481106100c3576100c3610493565b6000918252602090912001546001600160a01b031692915050565b60015460ff16610311578067ffffffffffffffff811115610101576101016104a9565b60405190808252806020026020018201604052801561012a578160200160208202803683370190505b50805161013f916000916020909101906103f3565b5060005b8181101561030f576001546002546003546040516101009093046001600160a01b03908116939281169291169061017990610458565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f0801580156101b5573d6000803e3d6000fd5b50600082815481106101c9576101c9610493565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506000818154811061020a5761020a610493565b60009182526020909120015460025460405163a3cfe14d60e01b81526001600160a01b039182166004820152678ac7230489e80000602482015291169063a3cfe14d90604401600060405180830381600087803b15801561026a57600080fd5b505af115801561027e573d6000803e3d6000fd5b505050506000818154811061029557610295610493565b600091825260209091200154604051635239cafb60e11b8152821560048201526001600160a01b039091169063a47395f690602401600060405180830381600087803b1580156102e457600080fd5b505af11580156102f8573d6000803e3d6000fd5b505050508080610307906104bf565b915050610143565b505b506001805460ff191681179055565b600080549061032f82476104e6565b90506000811161037b5760405162461bcd60e51b8152602060048201526013602482015272181032ba3432b9103a37903a3930b739b332b960691b604482015260640160405180910390fd5b60005b828110156103ee57600080828154811061039a5761039a610493565b60009182526020822001546040516001600160a01b039091169250829085156108fc0290869084818181858888f193505050509050806103d957600080fd5b505080806103e6906104bf565b91505061037e565b505050565b828054828255906000526020600020908101928215610448579160200282015b8281111561044857825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610413565b50610454929150610465565b5090565b611a418061050983390190565b5b808211156104545760008155600101610466565b60006020828403121561048c57600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6000600182016104df57634e487b7160e01b600052601160045260246000fd5b5060010190565b60008261050357634e487b7160e01b600052601260045260246000fd5b50049056fe60806040526004805463ff00ff00191663010001001790553480156200002457600080fd5b5060405162001a4138038062001a418339810160408190526200004791620000a3565b600080546001600160a01b039485166001600160a01b031991821617909155600180549385169382169390931790925560028054919093169116179055620000f7565b6001600160a01b0381168114620000a057600080fd5b50565b600080600060608486031215620000b957600080fd5b8351620000c6816200008a565b6020850151909350620000d9816200008a565b6040850151909250620000ec816200008a565b809150509250925092565b61193a80620001076000396000f3fe6080604052600436106101bb5760003560e01c8063ba414fa6116100ec578063e923c6511161008a578063fa7626d411610064578063fa7626d414610550578063fc3816c81461056f578063fc8349f21461058f578063ffae399e146105af57600080fd5b8063e923c651146104ef578063f5537ede1461050f578063f8ccbf471461052f57600080fd5b8063ccfbf94d116100c6578063ccfbf94d1461046f578063cda30c3b1461048f578063d3845fea146104af578063e67ecda1146104cf57600080fd5b8063ba414fa61461040a578063c4c6c87d1461042f578063cafffca81461044f57600080fd5b80635a4924e8116101595780637ec95ff3116101335780637ec95ff31461037c5780638b0af9bb1461039c578063a3cfe14d146103b1578063a47395f6146103d157600080fd5b80635a4924e8146102f55780636c49c32c146103235780637a943a371461034357600080fd5b80633a768463116101955780633a768463146102295780633d3d130d1461026e57806353e575ac1461028e578063557f49c3146102bc57600080fd5b80630cc9d656146101c75780632644c05c146101e957806333ac5efd1461020957600080fd5b366101c257005b600080fd5b3480156101d357600080fd5b506101e76101e236600461142d565b6105e8565b005b3480156101f557600080fd5b506101e7610204366004611492565b610631565b34801561021557600080fd5b506101e76102243660046114cd565b6106af565b34801561023557600080fd5b50610251737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561027a57600080fd5b506101e7610289366004611529565b610731565b34801561029a57600080fd5b506102ae6102a9366004611492565b61078d565b604051908152602001610265565b3480156102c857600080fd5b506101e76102d736600461157a565b60028054911515600160a81b0260ff60a81b19909216919091179055565b34801561030157600080fd5b506101e761031036600461157a565b6004805460ff1916911515919091179055565b34801561032f57600080fd5b506102ae61033e36600461159e565b610821565b34801561034f57600080fd5b506101e761035e36600461157a565b60028054911515600160b81b0260ff60b81b19909216919091179055565b34801561038857600080fd5b506102ae6103973660046114cd565b610988565b3480156103a857600080fd5b506102ae610a1d565b3480156103bd57600080fd5b506101e76103cc3660046115bb565b610a8f565b3480156103dd57600080fd5b506101e76103ec36600461157a565b60028054911515600160a01b0260ff60a01b19909216919091179055565b34801561041657600080fd5b5061041f610b0b565b6040519015158152602001610265565b34801561043b57600080fd5b506102ae61044a3660046115e7565b610c3a565b34801561045b57600080fd5b506102ae61046a3660046115e7565b610ccd565b34801561047b57600080fd5b506102ae61048a366004611600565b610d1e565b34801561049b57600080fd5b506102ae6104aa366004611659565b610d9e565b3480156104bb57600080fd5b506101e76104ca3660046115e7565b610e30565b3480156104db57600080fd5b506101e76104ea3660046115e7565b600355565b3480156104fb57600080fd5b506102ae61050a366004611492565b610e92565b34801561051b57600080fd5b506101e761052a36600461168b565b610f1b565b34801561053b57600080fd5b5060045461041f906301000000900460ff1681565b34801561055c57600080fd5b5060045461041f90610100900460ff1681565b34801561057b57600080fd5b506102ae61058a3660046116cc565b610f94565b34801561059b57600080fd5b5061041f6105aa3660046115e7565b611022565b3480156105bb57600080fd5b506101e76105ca36600461157a565b60028054911515600160b01b0260ff60b01b19909216919091179055565b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c28686868686866040516106219695949392919061172e565b60405180910390a1505050505050565b60008054600154600254604051636a4f769160e01b81526001600160a01b0393841694636a4f7691946106769481169316918b918b918b91908b908b90600401611767565b600060405180830381600087803b15801561069057600080fd5b505af11580156106a4573d6000803e3d6000fd5b505050505050505050565b60008054600154600254604051636a4f769160e01b81526001600160a01b0393841694636a4f76919487946106f794908216939116918d918d918d918d908d90600401611767565b6000604051808303818588803b15801561071057600080fd5b505af1158015610724573d6000803e3d6000fd5b5050505050505050505050565b6003541561077f5761077f81602001356003546040518060400160405280601881526020017f496e636f727265637420737461747573206d6573736167650000000000000000815250611092565b61078982826110da565b5050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc9387936107d4939183169216908c908c908c908a908d906004016117ab565b60206040518083038185885af11580156107f2573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061081791906117e9565b9695505050505050565b600254600090600160b01b900460ff161561085c576040805160208082019092526f1d195cdd13585ad95c8bdc995d995c9d60821b81529081fd5b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c23361088b6020850185611802565b61089b6040860160208701611802565b856040013586608001358760a001356040516108bc9695949392919061172e565b60405180910390a1600254600160a01b900460ff161561095f576108e36020830183611802565b6000805460405163095ea7b360e01b81526001600160a01b0391821660048201526024810192909252919091169063095ea7b3906044016020604051808303816000875af1158015610939573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095d919061181f565b505b600254600160a81b900460ff161561098057506418589bdc9d60da1b919050565b506000919050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc9387936109cf939183169216908d908d908d908d908d906004016117ab565b60206040518083038185885af11580156109ed573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610a1291906117e9565b979650505050505050565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610a66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8a91906117e9565b905090565b60005460405163095ea7b360e01b81526001600160a01b039182166004820152602481018390529083169063095ea7b3906044016020604051808303816000875af1158015610ae2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b06919061181f565b505050565b60045460009062010000900460ff1615610b2f575060045462010000900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610c355760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610bbd917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611868565b60408051601f1981840301815290829052610bd791611899565b6000604051808303816000865af19150503d8060008114610c14576040519150601f19603f3d011682016040523d82523d6000602084013e610c19565b606091505b5091505080806020019051810190610c31919061181f565b9150505b919050565b6000805460015460025460405163ad97db1b60e01b81526001600160a01b0392831660048201529082166024820152604481018590526064810184905291169063ad97db1b906084015b6020604051808303816000875af1158015610ca3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc791906117e9565b92915050565b600080546001805460025460405163ad97db1b60e01b81526001600160a01b03928316600482015290821660248201526044810186905260648101929092529091169063ad97db1b90608401610c84565b6000805460405163127db4b760e21b81526001600160a01b03909116906349f6d2dc90610d5b908a908a908a908a908a9089908b906004016117ab565b6020604051808303816000875af1158015610d7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1291906117e9565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc93610de493908216929116908a908a908a9089908b906004016117ab565b6020604051808303816000875af1158015610e03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2791906117e9565b95945050505050565b600054604051630460488160e31b81523060048201526001600160a01b039091169063230244089083906024016000604051808303818588803b158015610e7657600080fd5b505af1158015610e8a573d6000803e3d6000fd5b505050505050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc93610ed893908216929116908b908b908b908b908b906004016117ab565b6020604051808303816000875af1158015610ef7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081791906117e9565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af1158015610f6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8e919061181f565b50505050565b6000805460405163127db4b760e21b81526001600160a01b03909116906349f6d2dc908490610fd3908c908c908c908c908c908a908d906004016117ab565b60206040518083038185885af1158015610ff1573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061101691906117e9565b98975050505050505050565b60008054604051632e1a7d4d60e01b8152600481018490526001600160a01b0390911690632e1a7d4d906024016020604051808303816000875af115801561106e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc7919061181f565b818314610b06577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583816040516110c891906118b5565b60405180910390a1610b0683836111e2565b60045460ff16156111205760405162461bcd60e51b815260206004820152600c60248201526b1c1bdcdd1a1bdbdad1985a5b60a21b604482015260640160405180910390fd5b600254600160b81b900460ff1615610789576000546001600160a01b0316636a4f76916111506020850185611802565b6111606040860160208701611802565b606080870135901c6bffffffffffffffffffffffff166bffffffffffffffffffffffff60608801351660c088013560481c62ffffff16600060608a013560e01c8a604001356040518963ffffffff1660e01b81526004016111c8989796959493929190611767565b600060405180830381600087803b158015610e7657600080fd5b808214610789577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516112569060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974604082015264657333325d60d81b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a1610789737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156114025760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526113a19291602001611868565b60408051601f19818403018152908290526113bb91611899565b6000604051808303816000865af19150503d80600081146113f8576040519150601f19603f3d011682016040523d82523d6000602084013e6113fd565b606091505b505050505b6004805462ff0000191662010000179055565b6001600160a01b038116811461142a57600080fd5b50565b60008060008060008060c0878903121561144657600080fd5b863561145181611415565b9550602087013561146181611415565b9450604087013561147181611415565b959894975094956060810135955060808101359460a0909101359350915050565b600080600080600060a086880312156114aa57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b60008060008060008060c087890312156114e657600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b6000610120828403121561152357600080fd5b50919050565b60008082840361016081121561153e57600080fd5b6115488585611510565b9250604061011f198201121561155d57600080fd5b50610120830190509250929050565b801515811461142a57600080fd5b60006020828403121561158c57600080fd5b81356115978161156c565b9392505050565b600061012082840312156115b157600080fd5b6115978383611510565b600080604083850312156115ce57600080fd5b82356115d981611415565b946020939093013593505050565b6000602082840312156115f957600080fd5b5035919050565b60008060008060008060c0878903121561161957600080fd5b863561162481611415565b9550602087013561163481611415565b95989597505050506040840135936060810135936080820135935060a0909101359150565b6000806000806080858703121561166f57600080fd5b5050823594602084013594506040840135936060013592509050565b6000806000606084860312156116a057600080fd5b83356116ab81611415565b925060208401356116bb81611415565b929592945050506040919091013590565b600080600080600080600060e0888a0312156116e757600080fd5b87356116f281611415565b9650602088013561170281611415565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b6001600160a01b03968716815294861660208601529290941660408401526060830152608082019290925260a081019190915260c00190565b6001600160a01b03988916815296909716602087015260408601949094526060850192909252608084015260a083015260c082015260e08101919091526101000190565b6001600160a01b03978816815295909616602086015260408501939093526060840191909152608083015260a082015260c081019190915260e00190565b6000602082840312156117fb57600080fd5b5051919050565b60006020828403121561181457600080fd5b813561159781611415565b60006020828403121561183157600080fd5b81516115978161156c565b60005b8381101561185757818101518382015260200161183f565b83811115610f8e5750506000910152565b6001600160e01b031983168152815160009061188b81600485016020870161183c565b919091016004019392505050565b600082516118ab81846020870161183c565b9190910192915050565b60408152600560408201526422b93937b960d91b606082015260806020820152600082518060808401526118f08160a085016020870161183c565b601f01601f19169190910160a0019291505056fea2646970667358221220363d825a62e7711a222b729367aea22c71c496027732c66afce572665829ed6264736f6c634300080e0033a2646970667358221220bc7d9d438cd5627bd00d066b2f3b1acd90318af6a7a9515bd2a5d7aaffa9dcd064736f6c634300080e003360806040526004805463ff00ff00191663010001001790553480156200002457600080fd5b5060405162001a4138038062001a418339810160408190526200004791620000a3565b600080546001600160a01b039485166001600160a01b031991821617909155600180549385169382169390931790925560028054919093169116179055620000f7565b6001600160a01b0381168114620000a057600080fd5b50565b600080600060608486031215620000b957600080fd5b8351620000c6816200008a565b6020850151909350620000d9816200008a565b6040850151909250620000ec816200008a565b809150509250925092565b61193a80620001076000396000f3fe6080604052600436106101bb5760003560e01c8063ba414fa6116100ec578063e923c6511161008a578063fa7626d411610064578063fa7626d414610550578063fc3816c81461056f578063fc8349f21461058f578063ffae399e146105af57600080fd5b8063e923c651146104ef578063f5537ede1461050f578063f8ccbf471461052f57600080fd5b8063ccfbf94d116100c6578063ccfbf94d1461046f578063cda30c3b1461048f578063d3845fea146104af578063e67ecda1146104cf57600080fd5b8063ba414fa61461040a578063c4c6c87d1461042f578063cafffca81461044f57600080fd5b80635a4924e8116101595780637ec95ff3116101335780637ec95ff31461037c5780638b0af9bb1461039c578063a3cfe14d146103b1578063a47395f6146103d157600080fd5b80635a4924e8146102f55780636c49c32c146103235780637a943a371461034357600080fd5b80633a768463116101955780633a768463146102295780633d3d130d1461026e57806353e575ac1461028e578063557f49c3146102bc57600080fd5b80630cc9d656146101c75780632644c05c146101e957806333ac5efd1461020957600080fd5b366101c257005b600080fd5b3480156101d357600080fd5b506101e76101e236600461142d565b6105e8565b005b3480156101f557600080fd5b506101e7610204366004611492565b610631565b34801561021557600080fd5b506101e76102243660046114cd565b6106af565b34801561023557600080fd5b50610251737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561027a57600080fd5b506101e7610289366004611529565b610731565b34801561029a57600080fd5b506102ae6102a9366004611492565b61078d565b604051908152602001610265565b3480156102c857600080fd5b506101e76102d736600461157a565b60028054911515600160a81b0260ff60a81b19909216919091179055565b34801561030157600080fd5b506101e761031036600461157a565b6004805460ff1916911515919091179055565b34801561032f57600080fd5b506102ae61033e36600461159e565b610821565b34801561034f57600080fd5b506101e761035e36600461157a565b60028054911515600160b81b0260ff60b81b19909216919091179055565b34801561038857600080fd5b506102ae6103973660046114cd565b610988565b3480156103a857600080fd5b506102ae610a1d565b3480156103bd57600080fd5b506101e76103cc3660046115bb565b610a8f565b3480156103dd57600080fd5b506101e76103ec36600461157a565b60028054911515600160a01b0260ff60a01b19909216919091179055565b34801561041657600080fd5b5061041f610b0b565b6040519015158152602001610265565b34801561043b57600080fd5b506102ae61044a3660046115e7565b610c3a565b34801561045b57600080fd5b506102ae61046a3660046115e7565b610ccd565b34801561047b57600080fd5b506102ae61048a366004611600565b610d1e565b34801561049b57600080fd5b506102ae6104aa366004611659565b610d9e565b3480156104bb57600080fd5b506101e76104ca3660046115e7565b610e30565b3480156104db57600080fd5b506101e76104ea3660046115e7565b600355565b3480156104fb57600080fd5b506102ae61050a366004611492565b610e92565b34801561051b57600080fd5b506101e761052a36600461168b565b610f1b565b34801561053b57600080fd5b5060045461041f906301000000900460ff1681565b34801561055c57600080fd5b5060045461041f90610100900460ff1681565b34801561057b57600080fd5b506102ae61058a3660046116cc565b610f94565b34801561059b57600080fd5b5061041f6105aa3660046115e7565b611022565b3480156105bb57600080fd5b506101e76105ca36600461157a565b60028054911515600160b01b0260ff60b01b19909216919091179055565b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c28686868686866040516106219695949392919061172e565b60405180910390a1505050505050565b60008054600154600254604051636a4f769160e01b81526001600160a01b0393841694636a4f7691946106769481169316918b918b918b91908b908b90600401611767565b600060405180830381600087803b15801561069057600080fd5b505af11580156106a4573d6000803e3d6000fd5b505050505050505050565b60008054600154600254604051636a4f769160e01b81526001600160a01b0393841694636a4f76919487946106f794908216939116918d918d918d918d908d90600401611767565b6000604051808303818588803b15801561071057600080fd5b505af1158015610724573d6000803e3d6000fd5b5050505050505050505050565b6003541561077f5761077f81602001356003546040518060400160405280601881526020017f496e636f727265637420737461747573206d6573736167650000000000000000815250611092565b61078982826110da565b5050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc9387936107d4939183169216908c908c908c908a908d906004016117ab565b60206040518083038185885af11580156107f2573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061081791906117e9565b9695505050505050565b600254600090600160b01b900460ff161561085c576040805160208082019092526f1d195cdd13585ad95c8bdc995d995c9d60821b81529081fd5b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c23361088b6020850185611802565b61089b6040860160208701611802565b856040013586608001358760a001356040516108bc9695949392919061172e565b60405180910390a1600254600160a01b900460ff161561095f576108e36020830183611802565b6000805460405163095ea7b360e01b81526001600160a01b0391821660048201526024810192909252919091169063095ea7b3906044016020604051808303816000875af1158015610939573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095d919061181f565b505b600254600160a81b900460ff161561098057506418589bdc9d60da1b919050565b506000919050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc9387936109cf939183169216908d908d908d908d908d906004016117ab565b60206040518083038185885af11580156109ed573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610a1291906117e9565b979650505050505050565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610a66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8a91906117e9565b905090565b60005460405163095ea7b360e01b81526001600160a01b039182166004820152602481018390529083169063095ea7b3906044016020604051808303816000875af1158015610ae2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b06919061181f565b505050565b60045460009062010000900460ff1615610b2f575060045462010000900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610c355760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610bbd917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611868565b60408051601f1981840301815290829052610bd791611899565b6000604051808303816000865af19150503d8060008114610c14576040519150601f19603f3d011682016040523d82523d6000602084013e610c19565b606091505b5091505080806020019051810190610c31919061181f565b9150505b919050565b6000805460015460025460405163ad97db1b60e01b81526001600160a01b0392831660048201529082166024820152604481018590526064810184905291169063ad97db1b906084015b6020604051808303816000875af1158015610ca3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc791906117e9565b92915050565b600080546001805460025460405163ad97db1b60e01b81526001600160a01b03928316600482015290821660248201526044810186905260648101929092529091169063ad97db1b90608401610c84565b6000805460405163127db4b760e21b81526001600160a01b03909116906349f6d2dc90610d5b908a908a908a908a908a9089908b906004016117ab565b6020604051808303816000875af1158015610d7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1291906117e9565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc93610de493908216929116908a908a908a9089908b906004016117ab565b6020604051808303816000875af1158015610e03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2791906117e9565b95945050505050565b600054604051630460488160e31b81523060048201526001600160a01b039091169063230244089083906024016000604051808303818588803b158015610e7657600080fd5b505af1158015610e8a573d6000803e3d6000fd5b505050505050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc93610ed893908216929116908b908b908b908b908b906004016117ab565b6020604051808303816000875af1158015610ef7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081791906117e9565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af1158015610f6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8e919061181f565b50505050565b6000805460405163127db4b760e21b81526001600160a01b03909116906349f6d2dc908490610fd3908c908c908c908c908c908a908d906004016117ab565b60206040518083038185885af1158015610ff1573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061101691906117e9565b98975050505050505050565b60008054604051632e1a7d4d60e01b8152600481018490526001600160a01b0390911690632e1a7d4d906024016020604051808303816000875af115801561106e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc7919061181f565b818314610b06577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583816040516110c891906118b5565b60405180910390a1610b0683836111e2565b60045460ff16156111205760405162461bcd60e51b815260206004820152600c60248201526b1c1bdcdd1a1bdbdad1985a5b60a21b604482015260640160405180910390fd5b600254600160b81b900460ff1615610789576000546001600160a01b0316636a4f76916111506020850185611802565b6111606040860160208701611802565b606080870135901c6bffffffffffffffffffffffff166bffffffffffffffffffffffff60608801351660c088013560481c62ffffff16600060608a013560e01c8a604001356040518963ffffffff1660e01b81526004016111c8989796959493929190611767565b600060405180830381600087803b158015610e7657600080fd5b808214610789577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516112569060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974604082015264657333325d60d81b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a1610789737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156114025760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526113a19291602001611868565b60408051601f19818403018152908290526113bb91611899565b6000604051808303816000865af19150503d80600081146113f8576040519150601f19603f3d011682016040523d82523d6000602084013e6113fd565b606091505b505050505b6004805462ff0000191662010000179055565b6001600160a01b038116811461142a57600080fd5b50565b60008060008060008060c0878903121561144657600080fd5b863561145181611415565b9550602087013561146181611415565b9450604087013561147181611415565b959894975094956060810135955060808101359460a0909101359350915050565b600080600080600060a086880312156114aa57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b60008060008060008060c087890312156114e657600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b6000610120828403121561152357600080fd5b50919050565b60008082840361016081121561153e57600080fd5b6115488585611510565b9250604061011f198201121561155d57600080fd5b50610120830190509250929050565b801515811461142a57600080fd5b60006020828403121561158c57600080fd5b81356115978161156c565b9392505050565b600061012082840312156115b157600080fd5b6115978383611510565b600080604083850312156115ce57600080fd5b82356115d981611415565b946020939093013593505050565b6000602082840312156115f957600080fd5b5035919050565b60008060008060008060c0878903121561161957600080fd5b863561162481611415565b9550602087013561163481611415565b95989597505050506040840135936060810135936080820135935060a0909101359150565b6000806000806080858703121561166f57600080fd5b5050823594602084013594506040840135936060013592509050565b6000806000606084860312156116a057600080fd5b83356116ab81611415565b925060208401356116bb81611415565b929592945050506040919091013590565b600080600080600080600060e0888a0312156116e757600080fd5b87356116f281611415565b9650602088013561170281611415565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b6001600160a01b03968716815294861660208601529290941660408401526060830152608082019290925260a081019190915260c00190565b6001600160a01b03988916815296909716602087015260408601949094526060850192909252608084015260a083015260c082015260e08101919091526101000190565b6001600160a01b03978816815295909616602086015260408501939093526060840191909152608083015260a082015260c081019190915260e00190565b6000602082840312156117fb57600080fd5b5051919050565b60006020828403121561181457600080fd5b813561159781611415565b60006020828403121561183157600080fd5b81516115978161156c565b60005b8381101561185757818101518382015260200161183f565b83811115610f8e5750506000910152565b6001600160e01b031983168152815160009061188b81600485016020870161183c565b919091016004019392505050565b600082516118ab81846020870161183c565b9190910192915050565b60408152600560408201526422b93937b960d91b606082015260806020820152600082518060808401526118f08160a085016020870161183c565b601f01601f19169190910160a0019291505056fea2646970667358221220363d825a62e7711a222b729367aea22c71c496027732c66afce572665829ed6264736f6c634300080e00336101406040523480156200001257600080fd5b5060405162001bb838038062001bb88339810160408190526200003591620002c1565b82828180604051806040016040528060018152602001603160f81b815250848481600390805190602001906200006d9291906200014e565b508051620000839060049060208401906200014e565b5050825160208085019190912083518483012060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81880181905281830187905260608201869052608082019490945230818401528151808203909301835260c0019052805194019390932091935091906080523060c05261012052505050506001600160a01b03969096166000908152600860205260409020805460ff19166001179055505060ff1660095550620003a1915050565b8280546200015c9062000365565b90600052602060002090601f016020900481019282620001805760008555620001cb565b82601f106200019b57805160ff1916838001178555620001cb565b82800160010185558215620001cb579182015b82811115620001cb578251825591602001919060010190620001ae565b50620001d9929150620001dd565b5090565b5b80821115620001d95760008155600101620001de565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200021c57600080fd5b81516001600160401b0380821115620002395762000239620001f4565b604051601f8301601f19908116603f01168101908282118183101715620002645762000264620001f4565b816040528381526020925086838588010111156200028157600080fd5b600091505b83821015620002a5578582018301518183018401529082019062000286565b83821115620002b75760008385830101525b9695505050505050565b60008060008060808587031215620002d857600080fd5b84516001600160a01b0381168114620002f057600080fd5b60208601519094506001600160401b03808211156200030e57600080fd5b6200031c888389016200020a565b945060408701519150808211156200033357600080fd5b5062000342878288016200020a565b925050606085015160ff811681146200035a57600080fd5b939692955090935050565b600181811c908216806200037a57607f821691505b6020821081036200039b57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e05161010051610120516117c7620003f160003960006109290152600061097801526000610953015260006108ac015260006108d60152600061090001526117c76000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806340c10f19116100c357806395d89b411161007c57806395d89b41146102c45780639dc29fac146102cc578063a457c2d7146102df578063a9059cbb146102f2578063d505accf14610305578063dd62ed3e1461031857600080fd5b806340c10f1914610236578063704802751461024957806370a082311461025c5780637a6d69b4146102855780637ecebe00146102a85780638ea2da7d146102bb57600080fd5b80631e7be210116101155780631e7be210146101cd57806323b872dd146101e057806325db769e146101f3578063313ce567146102065780633644e5151461021b578063395093511461022357600080fd5b806306fdde0314610152578063095ea7b31461017057806316c02129146101935780631785f53c146101a857806318160ddd146101bb575b600080fd5b61015a61032b565b604051610167919061140b565b60405180910390f35b61018361017e36600461147c565b6103bd565b6040519015158152602001610167565b6101a66101a13660046114a6565b610444565b005b6101a66101b63660046114a6565b610477565b6002545b604051908152602001610167565b6101a66101db3660046114a6565b6104a0565b6101836101ee3660046114c8565b6104cd565b6101bf610201366004611504565b610589565b60095460405160ff9091168152602001610167565b6101bf6105af565b61018361023136600461147c565b6105be565b6101a661024436600461147c565b6105ea565b6101a66102573660046114a6565b610600565b6101bf61026a3660046114a6565b6001600160a01b031660009081526020819052604090205490565b6101836102933660046114a6565b60076020526000908152604090205460ff1681565b6101bf6102b63660046114a6565b61062c565b6101bf60095481565b61015a61064a565b6101a66102da36600461147c565b610659565b6101836102ed36600461147c565b61066b565b61018361030036600461147c565b6106f1565b6101a661031336600461151d565b610766565b6101bf610326366004611590565b6107f6565b60606003805461033a906115c3565b80601f0160208091040260200160405190810160405280929190818152602001828054610366906115c3565b80156103b35780601f10610388576101008083540402835291602001916103b3565b820191906000526020600020905b81548152906001019060200180831161039657829003601f168201915b5050505050905090565b6001600160a01b038216600090815260076020526040812054839060ff16156104015760405162461bcd60e51b81526004016103f8906115f7565b60405180910390fd5b3360008181526007602052604090205460ff16156104315760405162461bcd60e51b81526004016103f8906115f7565b61043b8585610821565b95945050505050565b61044c61082f565b610474816001600160a01b03166000908152600760205260409020805460ff19166001179055565b50565b61047f61082f565b6001600160a01b03166000908152600860205260409020805460ff19169055565b6104a861082f565b610474816001600160a01b03166000908152600760205260409020805460ff19169055565b6001600160a01b038316600090815260076020526040812054849060ff16156105085760405162461bcd60e51b81526004016103f8906115f7565b6001600160a01b038416600090815260076020526040902054849060ff16156105435760405162461bcd60e51b81526004016103f8906115f7565b3360008181526007602052604090205460ff16156105735760405162461bcd60e51b81526004016103f8906115f7565b61057e878787610886565b979650505050505050565b600061059460095490565b61059f90600a61171e565b6105a9908361172d565b92915050565b60006105b961089f565b905090565b6000336105e08185856105d183836107f6565b6105db919061174c565b6109c6565b5060019392505050565b6105f261082f565b6105fc8282610aeb565b5050565b61060861082f565b6001600160a01b03166000908152600860205260409020805460ff19166001179055565b6001600160a01b0381166000908152600560205260408120546105a9565b60606004805461033a906115c3565b61066161082f565b6105fc8282610bca565b6000338161067982866107f6565b9050838110156106d95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103f8565b6106e682868684036109c6565b506001949350505050565b6001600160a01b038216600090815260076020526040812054839060ff161561072c5760405162461bcd60e51b81526004016103f8906115f7565b3360008181526007602052604090205460ff161561075c5760405162461bcd60e51b81526004016103f8906115f7565b61043b8585610d10565b6001600160a01b038716600090815260076020526040902054879060ff16156107a15760405162461bcd60e51b81526004016103f8906115f7565b6001600160a01b038716600090815260076020526040902054879060ff16156107dc5760405162461bcd60e51b81526004016103f8906115f7565b6107eb89898989898989610d1e565b505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6000336105e08185856109c6565b3360009081526008602052604090205460ff166108845760405162461bcd60e51b815260206004820152601360248201527254657374546f6b656e2f61646d696e4f6e6c7960681b60448201526064016103f8565b565b600033610894858285610e82565b6106e6858585610efc565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156108f857507f000000000000000000000000000000000000000000000000000000000000000046145b1561092257507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6001600160a01b038316610a285760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103f8565b6001600160a01b038216610a895760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103f8565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038216610b415760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103f8565b8060026000828254610b53919061174c565b90915550506001600160a01b03821660009081526020819052604081208054839290610b8090849061174c565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610c2a5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103f8565b6001600160a01b03821660009081526020819052604090205481811015610c9e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103f8565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610ccd908490611764565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610ade565b6000336105e0818585610efc565b83421115610d6e5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016103f8565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610d9d8c6110ca565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610df8826110f2565b90506000610e0882878787611140565b9050896001600160a01b0316816001600160a01b031614610e6b5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016103f8565b610e768a8a8a6109c6565b50505050505050505050565b6000610e8e84846107f6565b90506000198114610ef65781811015610ee95760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103f8565b610ef684848484036109c6565b50505050565b6001600160a01b038316610f605760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103f8565b6001600160a01b038216610fc25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103f8565b6001600160a01b0383166000908152602081905260409020548181101561103a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103f8565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061107190849061174c565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110bd91815260200190565b60405180910390a3610ef6565b6001600160a01b03811660009081526005602052604090208054600181018255905b50919050565b60006105a96110ff61089f565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061115187878787611168565b9150915061115e81611255565b5095945050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561119f575060009050600361124c565b8460ff16601b141580156111b757508460ff16601c14155b156111c8575060009050600461124c565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561121c573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166112455760006001925092505061124c565b9150600090505b94509492505050565b60008160048111156112695761126961177b565b036112715750565b60018160048111156112855761128561177b565b036112d25760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016103f8565b60028160048111156112e6576112e661177b565b036113335760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016103f8565b60038160048111156113475761134761177b565b0361139f5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016103f8565b60048160048111156113b3576113b361177b565b036104745760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016103f8565b600060208083528351808285015260005b818110156114385785810183015185820160400152820161141c565b8181111561144a576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461147757600080fd5b919050565b6000806040838503121561148f57600080fd5b61149883611460565b946020939093013593505050565b6000602082840312156114b857600080fd5b6114c182611460565b9392505050565b6000806000606084860312156114dd57600080fd5b6114e684611460565b92506114f460208501611460565b9150604084013590509250925092565b60006020828403121561151657600080fd5b5035919050565b600080600080600080600060e0888a03121561153857600080fd5b61154188611460565b965061154f60208901611460565b95506040880135945060608801359350608088013560ff8116811461157357600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156115a357600080fd5b6115ac83611460565b91506115ba60208401611460565b90509250929050565b600181811c908216806115d757607f821691505b6020821081036110ec57634e487b7160e01b600052602260045260246000fd5b602080825260139082015272115490cc8c10930bd09b1858dadb1a5cdd1959606a1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561167557816000190482111561165b5761165b611624565b8085161561166857918102915b93841c939080029061163f565b509250929050565b60008261168c575060016105a9565b81611699575060006105a9565b81600181146116af57600281146116b9576116d5565b60019150506105a9565b60ff8411156116ca576116ca611624565b50506001821b6105a9565b5060208310610133831016604e8410600b84101617156116f8575081810a6105a9565b611702838361163a565b806000190482111561171657611716611624565b029392505050565b60006114c160ff84168361167d565b600081600019048311821515161561174757611747611624565b500290565b6000821982111561175f5761175f611624565b500190565b60008282101561177657611776611624565b500390565b634e487b7160e01b600052602160045260246000fdfea26469706673582212204d0d7db92a47baa4b3863a7c3d90bb9ff2f03be8b62d59c0eeec4def4486554564736f6c634300080e0033496e636f7272656374206d616b65722062616c616e63652061667465722074616b6541304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f500000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d496e636f727265637420676173707269636520666f72206f6666657220696e20706f7374686f6f6b54616b65722073686f756c64206e6f742068617665206265656e2064656269746564206f66206865722071756f746520746f6b656e73506f7374486f6f6b206e6f742063616c6c65640000000000000000000000000043616e63656c206f66666572206f662061206661696c6564206f666665722073686f756c64206e6f7420676976652070726f766973696f6e20746f206d616b6572280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35834d616b65722062616c616e63652061667465722074616b652073686f756c64206265206c657373207468616e206f726967696e616c2062616c616e63656162636465666768696a6b6c6d6e6f707172737475767778797a313233343536374d616b65722073686f756c64206e6f742068617665206265656e2064656269746564206f6620686572206261736520746f6b656e73496e636f72726563742062657374206f6666657220696420696e20706f7374686f6f6b496e636f72726563742077616e747320666f72206f6666657220696e20706f7374686f6f6be2ce51fba856682424155a2d89b2ad1d2adde6ea0a9e3115b4b474cd6cb1798b496e636f7272656374206d616b65722062616c616e6365206265666f72652074616b65496e636f727265637420676976657320666f72206f6666657220696e20706f7374686f6f6b496e636f7272656374206f766572616c6c2062616c616e63652061667465722070656e616c747920666f722074616b6572496e636f7272656374206c617374206f6666657220696420696e20706f7374686f6f6b885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d1d59c048edb5397821854bd12cbe02242b82101c677f949d076d14eb7bd83436b2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a82b101f9ef8ca2761d91bea55ab50a4d051e9248088ff7314ddb8826839544c2aa26469706673582212204f5d3dd999d139e875b3bbf3d7eb6619f51e7bb1e2d054f673631768d5342ddd64736f6c634300080e0033",
    "sourceMap": "104:18655:93:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5592:703;;;:::i;:::-;;13845:583;;;:::i;10082:487::-;;;:::i;7192:411:99:-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;581:32:125;;;563:51;;551:2;536:18;7192:411:99;;;;;;;;3121:315:93;;;:::i;7867:243:99:-;;;;;;:::i;:::-;;:::i;8448:1137:93:-;;;:::i;3440:1072::-;;;:::i;780:82:100:-;847:10;780:82;;15139:309:93;;;:::i;15744:449::-;;;:::i;9115:268:99:-;;;;;;:::i;:::-;;:::i;303:38:1:-;;-1:-1:-1;;;;;;;;;;;303:38:1;;2337:780:93;;;;;;:::i;:::-;;:::i;18050:707::-;;;:::i;4516:1072::-;;;:::i;746:282:101:-;;;;;;:::i;:::-;;:::i;6618:949:93:-;;;:::i;12848:703::-;;;:::i;622:392::-;;;;;;:::i;:::-;;:::i;:::-;;;5642:25:125;;;5630:2;5615:18;622:392:93;5496:177:125;9928:132:99;;;;;;:::i;:::-;;:::i;7571:873:93:-;;;:::i;7053:97:99:-;;;:::i;17457:449:93:-;;;:::i;461:281:101:-;;;;;;:::i;:::-;;:::i;1610:472:0:-;;;:::i;:::-;;;7332:14:125;;7325:22;7307:41;;7295:2;7280:18;1610:472:0;7167:187:125;8937:174:99;;;;;;:::i;:::-;;:::i;8665:268::-;;;;;;:::i;:::-;;:::i;11571:1273:93:-;;;:::i;9600:169:99:-;;;;;;:::i;:::-;;:::i;16197:1256:93:-;;;:::i;9589:489::-;;;:::i;10573:994::-;;;:::i;7640:173:99:-;;;;;;:::i;:::-;;:::i;163:28:1:-;;;;;;;;;;;;1368:26:0;;;;;;;;;5592:703:93;5656:9;:35;;-1:-1:-1;;;;;;5656:35:93;5668:23;5656:35;;;5704:3;;5726:4;;-1:-1:-1;;;;;5704:3:93;;;;:12;;5726:4;5741:5;;-1:-1:-1;;;;;5741:5:93;5785:6;;5799:9;;5704:119;;-1:-1:-1;;;;;;5704:119:93;;;;;;;;;;;5755:7;;;;5816:1;;5704:119;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5698:3;:125;5829:11;:18;;-1:-1:-1;;5829:18:93;;;;;5867:3;;5854:18;;5865:6;;-1:-1:-1;;;;;5867:3:93;10625:1:99;10535:98;5865:6:93;5854:10;:18::i;:::-;5918:5;;-1:-1:-1;;;;;5918:5:93;5903:4;;-1:-1:-1;;;;;5883:143:93;;;;5903:4;-1:-1:-1;;;;;5883:143:93;-1:-1:-1;;;;;;;;;;;5934:4:93;5947:7;5962;5977:9;;5994:6;;6008:3;;6019:1;5883:143;;;;;;;;;;;;:::i;:::-;;;;;;;;6047:3;;6056;;6047:22;;-1:-1:-1;;;6047:22:93;;;;;10858:25:125;;;;6061:7:93;10899:18:125;;;10892:34;6032:12:93;;-1:-1:-1;;;;;6047:3:93;;:8;;10831:18:125;;6047:22:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6032:37;;6075:41;6087:7;6086:8;6075:41;;;;;;;;;;;;;-1:-1:-1;;;6075:41:93;;;:10;:41::i;:::-;6133:6;;6122:41;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6122:41:93;;;;;;6133:6;;;;;;6122:10;:41::i;:::-;6186:3;;6199:4;;6170:120;;6186:42;;-1:-1:-1;;;;;6186:3:93;;;;:10;;6199:4;6197:7;6208:5;;6216:3;;6186:34;;;;;;-1:-1:-1;;;;;;6186:34:93;;;-1:-1:-1;;;;;11461:15:125;;;6186:34:93;;;11443::125;6208:5:93;;;;11493:18:125;;;11486:43;11545:18;;;11538:34;11378:18;;6186:34:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4419:56:34;;;4339:142;6186:42:93;6236:7;6170:120;;;;;;;;;;;;;;;;;:8;:120::i;:::-;5650:645;5592:703::o;13845:583::-;13902:3;;13917:4;;13926:5;;13952:6;;13960:9;;13902:71;;-1:-1:-1;;;13902:71:93;;-1:-1:-1;;;;;13902:3:93;;;;:12;;:71;;13917:4;;;;13926:5;;;13934:7;;13943;;13952:6;13960:9;13971:1;;13902:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;13985:3:93;;14007:4;;14022:5;;14066:6;;14080:9;;13985:119;;-1:-1:-1;;;13985:119:93;;-1:-1:-1;;;;;13985:3:93;;;;:12;;:119;;14007:4;;;;14022:5;;;14036:7;;;;14066:6;14080:9;14097:1;;13985:119;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13979:3;:125;14122:3;;14144:4;;14159:5;;14205:6;;14219:9;;14122:121;;-1:-1:-1;;;14122:121:93;;14110:9;;-1:-1:-1;;;;;14122:3:93;;;;:12;;:121;;14144:4;;;;14159:5;;;14173:9;;14190:7;;14205:6;14110:9;;14122:121;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14249:9;:34;;-1:-1:-1;;;;;;14249:34:93;14261:22;14249:34;;;14304:3;;:23;;-1:-1:-1;;;14304:23:93;;;;;10858:25:125;;;14319:7:93;10899:18:125;;;10892:34;14110:133:93;;-1:-1:-1;;;;;;;;14304:3:93;;;;:8;;10831:18:125;;14304:23:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14289:38;;14333:41;14344:6;;;;;;;;;;;14333:41;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;14333:41:93;;;:10;:41::i;:::-;14380:43;14391:7;14380:43;;;;;;;;;;;;;-1:-1:-1;;;14380:43:93;;;:10;:43::i;:::-;13896:532;;13845:583::o;10082:487::-;10176:9;:27;;-1:-1:-1;;;;;;10176:27:93;10188:15;10176:27;;;10215:3;;10237:4;;-1:-1:-1;;;;;10215:3:93;;;;:12;;10237:4;10252:5;;-1:-1:-1;;;;;10252:5:93;10296:6;;10310:9;;10215:119;;-1:-1:-1;;;;;;10215:119:93;;;;;;;;;;;10266:7;;;;10327:1;;10215:119;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10209:3;:125;;;10355:3;;10372;;10385:4;;10400:5;;10457:6;;10355:114;;-1:-1:-1;;;;;;10355:114:93;;10340:12;;-1:-1:-1;;;;;10355:3:93;;;;:9;;:114;;10372:3;;;;10385:4;;;;10400:5;;;10425:9;;10442:7;;10355:114;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10340:129;;10475:41;10487:7;10486:8;10475:41;;;;;;;;;;;;;-1:-1:-1;;;10475:41:93;;;:10;:41::i;:::-;10534:6;;10522:42;;;;;;;;;;;;-1:-1:-1;;;10522:42:93;;;;;;10534:6;;;;;10533:7;;10522:10;:42::i;7192:411:99:-;7246:21;7279:8;7275:272;;;7349:4;7374:2;7394:9;7304:108;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;7297:115;;7275:272;;;7477:4;7502:2;7522:9;7440:100;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;7433:107;;7275:272;-1:-1:-1;;;;;;;;;;;7552:8:99;7563:4;7552:29;;;-1:-1:-1;;;;;;7552:29:99;;;;;;;-1:-1:-1;;;;;15114:32:125;;;7552:29:99;;;15096:51:125;15163:18;;;15156:30;15222:1;15202:18;;;15195:29;-1:-1:-1;;;15240:18:125;;;15233:38;15288:19;;7552:29:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7192:411;;;:::o;3121:315:93:-;3160:13;:11;:13::i;:::-;3199:4;;3186:38;;-1:-1:-1;;;;;3199:4:93;3208:5;;-1:-1:-1;;;;;3208:5:93;3186:38;;;;;;;;;;;;;-1:-1:-1;;;3186:38:93;;;:10;:38::i;:::-;3180:3;:44;;-1:-1:-1;;;;;;3180:44:93;-1:-1:-1;;;;;3180:44:93;;;;;;3237:4;;3230:31;;3237:4;3246;3253:7;3230:4;:31::i;:::-;3274:5;;3267:37;;-1:-1:-1;;;;;3274:5:93;3290:3;;-1:-1:-1;;;;;3290:3:93;3296:7;3267:4;:37::i;:::-;3311:3;;3326:4;;3311:29;;-1:-1:-1;;;3311:29:93;;-1:-1:-1;;;;;3311:3:93;;;;:14;;:29;;3326:4;;;3332:7;;3311:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3358:3:93;;3373:5;;3358:30;;-1:-1:-1;;;3358:30:93;;-1:-1:-1;;;;;3358:3:93;;;;-1:-1:-1;3358:14:93;;-1:-1:-1;3358:30:93;;3373:5;;;;3380:7;;3358:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3409:3:93;;-1:-1:-1;;;;;3409:3:93;;-1:-1:-1;3409:13:93;;-1:-1:-1;3425:4:93;3409:22;;-1:-1:-1;;;;;;3409:22:93;;;;;;;-1:-1:-1;;;;;581:32:125;;;3409:22:93;;;563:51:125;536:18;;3409:22:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3395:11;:36;3121:315::o;7867:243:99:-;7978:21;8014:23;8028:8;8014:13;:23::i;:::-;8007:30;;8043:62;8063:12;8086:11;8100:4;8043:11;:62::i;:::-;7867:243;;;;;:::o;8448:1137:93:-;8545:4;;8509:18;;8530:50;;-1:-1:-1;;;;;8545:4:93;8543:7;8554:5;;-1:-1:-1;;;;;8554:5:93;8562:6;;8570:9;;8530:12;:50::i;:::-;8627:4;;8509:71;;-1:-1:-1;8586:23:93;;8612:39;;-1:-1:-1;;;;;8627:4:93;8636:5;;-1:-1:-1;;;;;8636:5:93;8644:6;;8612:12;:39::i;:::-;8657:9;:40;;-1:-1:-1;;;;;;8657:40:93;8669:28;8657:40;;;8750:3;;8765:4;;8774:5;;8800:6;;8750:63;;-1:-1:-1;;;8750:63:93;;8586:65;;-1:-1:-1;;;;;;8750:3:93;;;;:12;;:63;;8765:4;;;8774:5;;8782:7;;;;8800:6;-1:-1:-1;;;;8750:63:93;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8744:3;:69;8836:3;;8820:169;;-1:-1:-1;;;;;8836:3:93;:13;8852:4;8850:7;8836:22;;-1:-1:-1;;;;;;8836:22:93;;;;;;;-1:-1:-1;;;;;581:32:125;;;8836:22:93;;;563:51:125;536:18;;8836:22:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8880:18;8866:11;;:32;;;;:::i;:::-;8820:169;;;;;;;;;;;;;;;;;:8;:169::i;:::-;9009:3;;8996:18;;-1:-1:-1;;;;;9009:3:93;5854:10;:18::i;8996:::-;9060:5;;-1:-1:-1;;;;;9060:5:93;9045:4;;-1:-1:-1;;;;;9025:143:93;;;;9045:4;-1:-1:-1;;;;;9025:143:93;-1:-1:-1;;;;;;;;;;;9076:4:93;9089:7;9104;9119:9;;9136:6;;9150:3;;9161:1;9025:143;;;;;;;;;;;;:::i;:::-;;;;;;;;9189:3;;9198;;9189:22;;-1:-1:-1;;;9189:22:93;;;;;10858:25:125;;;;9203:7:93;10899:18:125;;;10892:34;9174:12:93;;-1:-1:-1;;;;;9189:3:93;;:8;;10831:18:125;;9189:22:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9174:37;;9217:43;9228:7;9217:43;;;;;;;;;;;;;-1:-1:-1;;;9217:43:93;;;:10;:43::i;:::-;9277:6;;9266:41;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;9266:41:93;;;;;;9277:6;;;;;;9266:10;:41::i;:::-;9330:3;;9314:140;;-1:-1:-1;;;;;9330:3:93;:13;9346:4;9330:22;;-1:-1:-1;;;;;;9330:22:93;;;;;;;-1:-1:-1;;;;;581:32:125;;;9330:22:93;;;563:51:125;536:18;;9330:22:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9374:13;9360:11;;:27;;;;:::i;:::-;9314:140;;;;;;;;;;;;;;;;;:8;:140::i;:::-;9476:3;;9489:4;;9460:120;;9476:42;;-1:-1:-1;;;;;9476:3:93;;;;:10;;9489:4;9487:7;10535:98:99;9460:120:93;8503:1082;;;8448:1137::o;3440:1072::-;3536:4;;3500:18;;3521:50;;-1:-1:-1;;;;;3536:4:93;3534:7;10535:98:99;3521:50:93;3577:9;:35;;-1:-1:-1;;;;;;3577:35:93;3589:23;3577:35;;;3625:3;;3647:4;;3662:5;;3706:6;;3720:9;;3625:119;;-1:-1:-1;;;3625:119:93;;3500:71;;-1:-1:-1;;;;;;3625:3:93;;;;:12;;:119;;3647:4;;;3662:5;;3676:7;;;;-1:-1:-1;;3625:119:93;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3619:3;:125;3766:3;;3750:164;;-1:-1:-1;;;;;3766:3:93;:13;3782:4;3780:7;10535:98:99;3750:164:93;3934:3;;3921:18;;-1:-1:-1;;;;;3934:3:93;5854:10;:18::i;3921:::-;3985:5;;-1:-1:-1;;;;;3985:5:93;3970:4;;-1:-1:-1;;;;;3950:143:93;;;;3970:4;-1:-1:-1;;;;;3950:143:93;-1:-1:-1;;;;;;;;;;;4001:4:93;4014:7;4029;4044:9;;4061:6;;4075:3;;4086:1;3950:143;;;;;;;;;;;;:::i;:::-;;;;;;;;4114:3;;4123;;4114:24;;-1:-1:-1;;;4114:24:93;;;;;10858:25:125;;;;4128:9:93;10899:18:125;;;10892:34;4099:12:93;;-1:-1:-1;;;;;4114:3:93;;:8;;10831:18:125;;4114:24:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4099:39;;4144:43;4155:7;4144:43;;;;;;;;;;;;;-1:-1:-1;;;4144:43:93;;;:10;:43::i;:::-;4204:6;;4193:41;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4193:41:93;;;;;;4204:6;;;;;;4193:10;:41::i;:::-;4257:3;;4241:140;;-1:-1:-1;;;;;4257:3:93;:13;4273:4;4257:22;;-1:-1:-1;;;;;;4257:22:93;;;;;;;-1:-1:-1;;;;;581:32:125;;;4257:22:93;;;563:51:125;536:18;;4257:22:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4301:13;4287:11;;:27;;;;:::i;4241:140::-;4403:3;;4416:4;;4387:120;;4403:42;;-1:-1:-1;;;;;4403:3:93;;;;:10;;4416:4;4414:7;10535:98:99;15139:309:93;15198:3;;15213:4;;15222:5;;15248:6;;15198:65;;-1:-1:-1;;;15198:65:93;;-1:-1:-1;;;;;15198:3:93;;;;:12;;:65;;15213:4;;;;15222:5;;;15230:7;;15239;;15256:3;;15261:1;;15198:65;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15192:3;:71;;;15269:9;:35;;-1:-1:-1;;;;;;15269:35:93;15281:23;15269:35;;;15325:3;;:22;;-1:-1:-1;;;15325:22:93;;;;;10858:25:125;;;;15339:7:93;10899:18:125;;;10892:34;-1:-1:-1;;;;;;;15325:3:93;;;;:8;;10831:18:125;;15325:22:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15310:37;;15353:41;15364:6;;;;;;;;;;;15353:41;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;15353:41:93;;;:10;:41::i;:::-;15400:43;15411:7;15400:43;;;;;;;;;;;;;-1:-1:-1;;;15400:43:93;;;:10;:43::i;15744:449::-;15803:3;;15818:4;;15827:5;;15853:6;;15861:9;;15803:71;;-1:-1:-1;;;15803:71:93;;-1:-1:-1;;;;;15803:3:93;;;;:12;;:71;;15818:4;;;;15827:5;;;15835:7;;;;15853:6;15861:9;15872:1;;15803:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;15886:3:93;;15908:4;;15923:5;;15969:6;;15983:9;;15886:121;;-1:-1:-1;;;15886:121:93;;-1:-1:-1;;;;;15886:3:93;;;;:12;;:121;;15908:4;;;;15923:5;;;15937:9;;15954:7;;15969:6;15983:9;16000:1;;15886:121;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15880:3;:127;;;16013:9;:36;;-1:-1:-1;;;;;;16013:36:93;16025:24;16013:36;;;16070:3;;:22;;-1:-1:-1;;;16070:22:93;;;;;10858:25:125;;;;16084:7:93;10899:18:125;;;10892:34;-1:-1:-1;;;;;;;16070:3:93;;;;:8;;10831:18:125;;16070:22:93;10658:274:125;9115:268:99;9215:9;9232:12;9261:3;;;;;;;;;-1:-1:-1;;;;;9261:3:99;9273:4;9287:3;9247:45;;;;;:::i;:::-;-1:-1:-1;;;;;18228:15:125;;;18210:34;;18280:15;;;18275:2;18260:18;;18253:43;18332:15;;;18327:2;18312:18;;18305:43;18160:2;18145:18;9247:45:99;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9298:31:99;;-1:-1:-1;;;9298:31:99;;9232:60;;-1:-1:-1;;;;;;;;;;;;237:61:1;9298:7:99;;:31;;9232:60;;9319:9;;9298:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9335:28:99;;-1:-1:-1;;;9335:28:99;;-1:-1:-1;;;;;;;;;;;237:61:1;-1:-1:-1;9335:8:99;;-1:-1:-1;9335:28:99;;9352:2;;9357:5;;9335:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9376:2:99;;9115:268;-1:-1:-1;;;;;;;9115:268:99:o;2337:780:93:-;2491:3;;-1:-1:-1;;;;;2491:3:93;2475:10;:20;2467:29;;;;;;2581:11;;2518:14;;;;-1:-1:-1;;;2518:36:93;;2561:71;;2518:36;;2581:11;;;;;;:23;;-1:-1:-1;2596:8:93;;;;2581:23;2579:26;2561:71;;;;;;;;;;;;;-1:-1:-1;;;2561:71:93;;;:8;:71::i;:::-;2642:11;;;;;;;2638:280;;;2663:108;2681:6;:14;;;-1:-1:-1;;;2663:108:93;;;;;;;;;;;;;;;;;:8;:108::i;:::-;2638:280;;;2792:119;2810:6;:14;;;-1:-1:-1;;;2792:119:93;;;;;;;;;;;;;;;;;:8;:119::i;:::-;2942:3;;2923:159;;-1:-1:-1;;;;;2942:3:93;:10;:3;2962:10;2973:18;;;;:5;:18;:::i;:::-;2993:17;;;;;;;;:::i;:::-;3012:13;2962:64;;-1:-1:-1;;;;;;2962:64:93;;;;;;;-1:-1:-1;;;;;11461:15:125;;;2962:64:93;;;11443:34:125;11513:15;;;;11493:18;;;11486:43;3012:13:93;;;11545:18:125;;;11538:34;11378:18;;2962:64:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2942:92;;;;;;;;;;;;;5642:25:125;;5630:2;5615:18;;5496:177;2942:92:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2941:93;2923:159;;;;;;;;;;;;;;;;;:10;:159::i;:::-;3088:9;;:24;;3098:5;;3105:6;;3088:9;;;;;:24;;:::i;18050:707::-;18135:4;;18120:50;;-1:-1:-1;;;;;18135:4:93;18133:7;10535:98:99;18120:50:93;-1:-1:-1;18192:4:93;;18176:13;;-1:-1:-1;;;;;18192:4:93;:14;18209:4;18192:23;;-1:-1:-1;;;;;;18192:23:93;;;;;;;-1:-1:-1;;;;;581:32:125;;;18192:23:93;;;563:51:125;536:18;;18192:23:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18237:5;;18261:3;;18237:29;;-1:-1:-1;;;18237:29:93;;-1:-1:-1;;;;;18261:3:93;;;18237:29;;;563:51:125;18176:39:93;;-1:-1:-1;18221:13:93;;18237:5;;;:15;;536:18:125;;18237:29:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18272:9;:30;;-1:-1:-1;;;;;;18272:30:93;18284:18;18272:30;;;18315:3;;18337:4;;18352:5;;18396:6;;18410:9;;18315:119;;-1:-1:-1;;;18315:119:93;;18221:45;;-1:-1:-1;;;;;;18315:3:93;;;;:12;;:119;;18337:4;;;18352:5;;18366:7;;;;-1:-1:-1;;18315:119:93;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18309:3;:125;;;18455:3;;:22;;-1:-1:-1;;;18455:22:93;;;;;10858:25:125;;;;18469:7:93;10899:18:125;;;10892:34;18440:12:93;;-1:-1:-1;;;;;18455:3:93;;;;:8;;10831:18:125;;18455:22:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18440:37;;18483:43;18494:7;18483:43;;;;;;;;;;;;;-1:-1:-1;;;18483:43:93;;;:10;:43::i;:::-;18532:104;18548:18;18559:7;18548:8;:18;:::i;:::-;18574:4;;-1:-1:-1;;;;;18574:4:93;:14;18591:4;18574:23;;-1:-1:-1;;;;;;18574:23:93;;;;;;;-1:-1:-1;;;;;581:32:125;;;18574:23:93;;;563:51:125;536:18;;18574:23:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18532:104;;;;;;;;;;;;;;;;;:8;:104::i;:::-;18642:110;18658:18;18669:7;18658:8;:18;:::i;:::-;18684:5;;18708:3;;18684:29;;-1:-1:-1;;;18684:29:93;;-1:-1:-1;;;;;18708:3:93;;;18684:29;;;563:51:125;18684:5:93;;;:15;;536:18:125;;18684:29:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18642:110;;;;;;;;;;;;;;;;;:8;:110::i;4516:1072::-;4613:4;;4577:18;;4598:50;;-1:-1:-1;;;;;4613:4:93;4611:7;10535:98:99;4598:50:93;4654:9;:35;;-1:-1:-1;;;;;;4654:35:93;4666:23;4654:35;;;4702:3;;4724:4;;4739:5;;4783:6;;4797:9;;4702:119;;-1:-1:-1;;;4702:119:93;;4577:71;;-1:-1:-1;;;;;;4702:3:93;;;;:12;;:119;;4724:4;;;4739:5;;4753:7;;;;-1:-1:-1;;4702:119:93;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4696:3;:125;4844:3;;4828:164;;-1:-1:-1;;;;;4844:3:93;:13;4860:4;4858:7;10535:98:99;4828:164:93;5012:3;;4999:18;;-1:-1:-1;;;;;5012:3:93;5854:10;:18::i;4999:::-;5063:5;;-1:-1:-1;;;;;5063:5:93;5048:4;;-1:-1:-1;;;;;5028:143:93;;;;5048:4;-1:-1:-1;;;;;5028:143:93;-1:-1:-1;;;;;;;;;;;5079:4:93;5092:7;5107;5122:9;;5139:6;;5153:3;;5164:1;5028:143;;;;;;;;;;;;:::i;:::-;;;;;;;;5192:3;;5201;;5192:22;;-1:-1:-1;;;5192:22:93;;;;;10858:25:125;;;;5206:7:93;10899:18:125;;;10892:34;5177:12:93;;-1:-1:-1;;;;;5192:3:93;;:8;;10831:18:125;;5192:22:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5177:37;;5220:41;5231:6;;;;;;;;;;;5220:41;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;5220:41:93;;;:10;:41::i;:::-;5267:43;5278:7;5267:43;;;;;;;;;;;;;-1:-1:-1;;;5267:43:93;;;:10;:43::i;746:282:101:-;799:20;;;;;;;;;:15;:20;;;825:179;846:4;:11;842:1;:15;825:179;;;910:7;;890:1;;-1:-1:-1;;;;;;;;;;;237:61:1;893:11:101;;910:4;;915:1;;910:7;;;;;;:::i;:::-;;;;;;;893:26;;;;;;;;;;;;;5642:25:125;;5630:2;5615:18;;5496:177;893:26:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;893:26:101;;;;;;;;;;;;:::i;:::-;876:44;;;;;;;;;:::i;:::-;;;;;;;;;;;;;872:48;;950:1;936:4;:11;:15;;;;:::i;:::-;932:1;:19;928:70;;;981:1;967:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;963:26;;928:70;859:3;;;;:::i;:::-;;;;825:179;;;;1009:14;1021:1;1009:11;:14::i;6618:949:93:-;6670:56;;;;;;;;;;;;;;;;;;;;;:18;;:56;;;;;;:::i;:::-;-1:-1:-1;6732:55:93;:18;:55;6809:4;;6793:13;;-1:-1:-1;;;;;6809:4:93;:14;6826:4;6824:7;6809:23;;-1:-1:-1;;;;;;6809:23:93;;;;;;;-1:-1:-1;;;;;581:32:125;;;6809:23:93;;;563:51:125;536:18;;6809:23:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6854:5;;6878:3;;6854:29;;-1:-1:-1;;;6854:29:93;;-1:-1:-1;;;;;6878:3:93;;;6854:29;;;563:51:125;6793:39:93;;-1:-1:-1;6838:13:93;;6854:5;;;:15;;536:18:125;;6854:29:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6895:3;;6917:4;;6932:5;;6976:6;;6990:9;;6895:119;;-1:-1:-1;;;6895:119:93;;6838:45;;-1:-1:-1;;;;;;6895:3:93;;;;:12;;:119;;6917:4;;;6932:5;;6946:7;;;;7007:1;;6895:119;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6889:3;:125;7020:11;:18;;-1:-1:-1;;7020:18:93;;;;;7057:3;;7044:18;;7055:6;;-1:-1:-1;;;;;7057:3:93;10625:1:99;10535:98;7044:18:93;7107:5;;7092:4;;7121:3;;7140;;7073:132;;-1:-1:-1;;;;;7107:5:93;;;;7092:4;;;;-1:-1:-1;;;;;;;;;;;7073:132:93;;;7121:3;;7140;;;7152:7;;;;7073:132;:::i;:::-;;;;;;;;7226:3;;7235;;7226:22;;-1:-1:-1;;;7226:22:93;;;;;10858:25:125;;;;7240:7:93;10899:18:125;;;10892:34;7211:12:93;;-1:-1:-1;;;;;7226:3:93;;:8;;10831:18:125;;7226:22:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7211:37;;7254:41;7266:7;7265:8;7254:41;;;;;;;;;;;;;-1:-1:-1;;;7254:41:93;;;:10;:41::i;:::-;7317:4;;7301:124;;-1:-1:-1;;;;;7317:4:93;:14;7334:4;7317:23;;-1:-1:-1;;;;;;7317:23:93;;;;;;;-1:-1:-1;;;;;581:32:125;;;7317:23:93;;;563:51:125;536:18;;7317:23:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7348:8;7301:124;;;;;;;;;;;;;;;;;:8;:124::i;:::-;7447:5;;7471:3;;7447:29;;-1:-1:-1;;;7447:29:93;;-1:-1:-1;;;;;7471:3:93;;;7447:29;;;563:51:125;7431:131:93;;7447:5;;;;;:15;;536:18:125;;7447:29:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7484:8;7431:131;;;;;;;;;;;;;;;;;:8;:131::i;12848:703::-;12929:9;:33;;-1:-1:-1;;;;;;12929:33:93;12941:21;12929:33;;;12974:3;;12996:4;;-1:-1:-1;;;;;12974:3:93;;;;:12;;12996:4;13011:5;;-1:-1:-1;;;;;13011:5:93;13055:6;;13069:9;;12974:119;;-1:-1:-1;;;;;;12974:119:93;;;;;;;;;;;13025:7;;;;13086:1;;12974:119;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12968:3;:125;13112:3;;13099:18;;-1:-1:-1;;;;;13112:3:93;5854:10;:18::i;13099:::-;13152:5;;13143:4;;13160:3;;13173;;13128:68;;;23084:25:125;;;-1:-1:-1;;;;;13173:3:93;;;23140:2:125;23125:18;;23118:60;13179:7:93;23194:18:125;;;23187:34;;;23252:2;23237:18;;23230:34;13128:68:93;13152:5;;;;13143:4;;;13128:68;;;;;23071:3:125;13128:68:93;;;13215:3;;13202:18;;-1:-1:-1;;;;;13215:3:93;5854:10;:18::i;13202:::-;13255:5;;-1:-1:-1;;;;;13255:5:93;13246:4;;-1:-1:-1;;;;;13231:36:93;;;;13246:4;-1:-1:-1;;;;;13231:36:93;-1:-1:-1;;;;;;;;;;;13263:3:93;;13231:36;;;;5642:25:125;;5630:2;5615:18;;5496:177;13231:36:93;;;;;;;;13288:3;;13297;;13288:22;;-1:-1:-1;;;13288:22:93;;;;;10858:25:125;;;;13302:7:93;10899:18:125;;;10892:34;13273:12:93;;-1:-1:-1;;;;;13288:3:93;;:8;;10831:18:125;;13288:22:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13273:37;;13316:41;13327:6;;;;;;;;;;;13316:41;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;13316:41:93;;;:10;:41::i;:::-;13364:43;13375:7;13364:43;;;;;;;;;;;;;-1:-1:-1;;;13364:43:93;;;:10;:43::i;:::-;13413:3;;13438:4;;13453:5;;13497:6;;13511:9;;13537:3;;13413:133;;-1:-1:-1;;;13413:133:93;;-1:-1:-1;;;;;13413:3:93;;;;:15;;:133;;13438:4;;;;13453:5;;;13467:7;;;;13528:1;;13537:3;13413:133;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12923:628;12848:703::o;622:392::-;759:3;;718:7;;-1:-1:-1;;;;;759:3:93;743:10;:20;735:29;;;;;;774:11;;;;;;;770:58;;;802:18;795:26;;-1:-1:-1;;;795:26:93;;;;;;;;:::i;:::-;;;;;;;;770:58;838:141;853:10;871:18;;;;:5;:18;:::i;:::-;897:17;;;;;;;;:::i;:::-;922:13;838:141;;-1:-1:-1;;;;;26222:15:125;;;26204:34;;26274:15;;;26269:2;26254:18;;26247:43;26326:15;;26306:18;;;26299:43;922:13:93;;;;26373:2:125;26358:18;;26351:34;943:11:93;;;;;26401:19:125;;;26394:35;962:11:93;;;;;26445:19:125;;;26438:35;26153:3;26138:19;838:141:93;;;;;;;-1:-1:-1;;992:17:93;;;622:392::o;9928:132:99:-;10009:4;10046:9;10050:5;10046:2;:9;:::i;:::-;10028:15;10033:1;10036:6;10028:4;:15::i;:::-;:27;;;;:::i;:::-;10021:34;9928:132;-1:-1:-1;;;;9928:132:99:o;7571:873:93:-;7629:9;:34;;-1:-1:-1;;;;;;7629:34:93;7641:22;7629:34;;;7685:4;;-1:-1:-1;;;;;;;7685:4:93;:14;7702:4;7700:7;10535:98:99;7053:97;7094:16;7125:20;7139:5;7125:13;:20::i;:::-;7118:27;;7053:97;:::o;17457:449:93:-;17514:3;;17536:4;;17551:5;;17595:6;;17609:9;;17514:119;;-1:-1:-1;;;17514:119:93;;-1:-1:-1;;;;;17514:3:93;;;;:12;;:119;;17536:4;;;;17551:5;;;17565:7;;;;17595:6;17609:9;17626:1;;17514:119;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17508:3;:125;17639:11;:18;;-1:-1:-1;;17639:18:93;;;;;17715:3;;17639:18;;17702;;17713:6;;-1:-1:-1;;;;;17715:3:93;10625:1:99;10535:98;17702:18:93;17765:5;;17750:4;;17779:3;;17798;;17731:132;;-1:-1:-1;;;;;17765:5:93;;;;17750:4;;;;-1:-1:-1;;;;;;;;;;;17731:132:93;;;17779:3;;17798;;;17810:7;;;;17731:132;:::i;:::-;;;;;;;;17879:3;;17888;;17879:22;;-1:-1:-1;;;17879:22:93;;;;;10858:25:125;;;;17893:7:93;10899:18:125;;;10892:34;-1:-1:-1;;;;;17879:3:93;;;;:8;;10831:18:125;;17879:22:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;461:281:101:-;516:20;;;;;;;;;:15;:20;;;542:176;563:5;:12;559:1;:16;542:176;;;623:8;;608:1;;-1:-1:-1;;;;;;;;;;;237:61:1;611:11:101;;623:5;;629:1;;623:8;;;;;;:::i;:::-;;;;;;;611:21;;;;;;;;;;;;;5642:25:125;;5630:2;5615:18;;5496:177;611:21:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;611:21:101;;;;;;;;;;;;:::i;:::-;594:39;;;;;;;;;:::i;:::-;;;;;;;;;;;;;590:43;;664:1;649:5;:12;:16;;;;:::i;:::-;645:1;:20;641:71;;;695:1;681:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;677:26;;641:71;577:3;;;;:::i;:::-;;;;542:176;;1610:472:0;1644:4;1660:7;;;;;;;1656:422;;;-1:-1:-1;1684:7:0;;;;;;;;1610:472::o;1656:422::-;1712:17;-1:-1:-1;;;;;;;;;;;2564:55:0;2637:16;1745:300;;1919:43;;1780:20;;-1:-1:-1;;;;;;;;;;;1459:61:0;1870:34;;1919:43;;1459:61;;-1:-1:-1;;;1944:17:0;1919:43;;;:::i;:::-;;;;-1:-1:-1;;1919:43:0;;;;;;;;;;1833:141;;;1919:43;1833:141;;:::i;:::-;;;;-1:-1:-1;;1833:141:0;;;;;;;;;;1804:180;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1777:207;;;2020:7;2009:27;;;;;;;;;;;;:::i;:::-;1994:42;;1767:278;1745:300;2059:12;1610:472;-1:-1:-1;1610:472:0:o;8937:174:99:-;9053:3;;9016:13;;9039:19;;-1:-1:-1;;;;;9053:3:99;9039:11;:19::i;:::-;-1:-1:-1;9090:3:99;;9072:33;;-1:-1:-1;;;;;9090:3:99;;;;9095:4;;9101:3;;9072:33;;;:::i;:::-;-1:-1:-1;;;;;18228:15:125;;;18210:34;;18280:15;;;18275:2;18260:18;;18253:43;18332:15;;;18327:2;18312:18;;18305:43;18160:2;18145:18;9072:33:99;;;;;;;;;;;;;;;;;;;;;;;9064:42;;8937:174;;;;;:::o;8665:268::-;8765:9;8782:12;8811:3;;;;;;;;;-1:-1:-1;;;;;8811:3:99;8823:4;8837:3;8797:45;;;;;:::i;11571:1273:93:-;11667:4;;11631:18;;11652:50;;-1:-1:-1;;;;;11667:4:93;11665:7;10535:98:99;11652:50:93;11732:3;;11750:9;:33;;-1:-1:-1;;;;;;11750:33:93;11762:21;11750:33;;;11795:3;;11817:4;;11832:5;;11876:6;;11890:9;;11795:119;;-1:-1:-1;;;11795:119:93;;11631:71;;-1:-1:-1;;;;;;11732:3:93;;;11724:20;;11795:3;;;;:12;;:119;;11817:4;;;11832:5;;;;;11846:7;;;;-1:-1:-1;;11795:119:93;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11789:3;:125;11936:3;;11920:164;;-1:-1:-1;;;;;11936:3:93;:13;11952:4;11936:22;;-1:-1:-1;;;;;;11936:22:93;;;;;;;-1:-1:-1;;;;;581:32:125;;;11936:22:93;;;563:51:125;536:18;;11936:22:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11980:13;11966:11;;:27;;;;:::i;11920:164::-;12090:11;:18;;-1:-1:-1;;12090:18:93;;;;;12127:3;;12114:18;;12125:6;;-1:-1:-1;;;;;12127:3:93;10625:1:99;10535:98;12114:18:93;12177:5;;12162:4;;12191:3;;12210;;12143:132;;-1:-1:-1;;;;;12177:5:93;;;;12162:4;;;;-1:-1:-1;;;;;;;;;;;12143:132:93;;;12191:3;;12210;;;12222:7;;;;12143:132;:::i;:::-;;;;;;;;12294:3;;12281:18;;-1:-1:-1;;;;;12294:3:93;5854:10;:18::i;12281:::-;12334:5;;-1:-1:-1;;;;;12334:5:93;12325:4;;-1:-1:-1;;;;;12310:36:93;;;;12325:4;-1:-1:-1;;;;;12310:36:93;-1:-1:-1;;;;;;;;;;;12342:3:93;;12310:36;;;;5642:25:125;;5630:2;5615:18;;5496:177;12310:36:93;;;;;;;;12495:3;;12454:46;;-1:-1:-1;;;12454:46:93;;-1:-1:-1;;;;;;;;;;;237:61:1;12454:13:93;;:46;;12468:4;;;;;;261:34:1;;-1:-1:-1;;;;;12495:3:93;;12454:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12525:7;12527:4;10625:1:99;10535:98;12525:7:93;-1:-1:-1;;;;;12511:48:93;;12540:1;12511:48;;;;5642:25:125;;5630:2;5615:18;;5496:177;12511:48:93;;;;;;;;12580:3;;12589;;12580:22;;-1:-1:-1;;;12580:22:93;;;;;10858:25:125;;;;12594:7:93;10899:18:125;;;10892:34;12565:12:93;;-1:-1:-1;;;;;12580:3:93;;:8;;10831:18:125;;12580:22:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12565:37;;12608:41;12620:7;12619:8;12608:41;;;;;;;;;;;;;-1:-1:-1;;;12608:41:93;;;:10;:41::i;:::-;12684:3;;12655:12;;-1:-1:-1;;;;;12684:3:93;:13;12700:4;12684:22;;-1:-1:-1;;;;;;12684:22:93;;;;;;;-1:-1:-1;;;;;581:32:125;;;12684:22:93;;;563:51:125;536:18;;12684:22:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12670:11;;:36;;;;:::i;:::-;12751:3;;12655:51;;-1:-1:-1;12712:127:93;;12655:51;;12743:31;;12766:8;;-1:-1:-1;;;;;12751:3:93;12743:20;:31;:::i;:::-;12712:127;;;;;;;;;;;;;;;;;:8;:127::i;:::-;11625:1219;;;;11571:1273::o;9600:169:99:-;9653:4;9665:11;:9;:11::i;:::-;9682:13;9698:1;-1:-1:-1;;;;;9698:10:99;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9682:28;;;;9716:14;:12;:14::i;:::-;9752:12;9756:8;9752:2;:12;:::i;:::-;9743:21;;:6;:21;:::i;16197:1256:93:-;16299:4;;16263:18;;16284:50;;-1:-1:-1;;;;;16299:4:93;16297:7;10535:98:99;16284:50:93;16340:9;:33;;-1:-1:-1;;;;;;16340:33:93;16352:21;16340:33;;;16385:3;;16407:4;;16422:5;;16466:6;;16480:9;;16385:119;;-1:-1:-1;;;16385:119:93;;16263:71;;-1:-1:-1;;;;;;16385:3:93;;;;:12;;:119;;16407:4;;;16422:5;;16436:7;;;;-1:-1:-1;;16385:119:93;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16379:3;:125;16526:3;;16510:164;;-1:-1:-1;;;;;16526:3:93;:13;16542:4;16540:7;10535:98:99;16510:164:93;16680:11;:18;;-1:-1:-1;;16680:18:93;;;;;16738:3;;16725:18;;16736:6;;-1:-1:-1;;;;;16738:3:93;10625:1:99;10535:98;16725:18:93;16788:5;;16773:4;;16802:3;;16821;;16754:132;;-1:-1:-1;;;;;16788:5:93;;;;16773:4;;;;-1:-1:-1;;;;;;;;;;;16754:132:93;;;16802:3;;16821;;;16833:7;;;;16754:132;:::i;:::-;;;;;;;;16905:3;;16892:18;;-1:-1:-1;;;;;16905:3:93;5854:10;:18::i;16892:::-;16945:5;;-1:-1:-1;;;;;16945:5:93;16936:4;;-1:-1:-1;;;;;16921:36:93;;;;16936:4;-1:-1:-1;;;;;16921:36:93;-1:-1:-1;;;;;;;;;;;16953:3:93;;16921:36;;;;5642:25:125;;5630:2;5615:18;;5496:177;16921:36:93;;;;;;;;17106:3;;17065:46;;-1:-1:-1;;;17065:46:93;;-1:-1:-1;;;;;;;;;;;237:61:1;17065:13:93;;:46;;17079:4;;;;;;261:34:1;;-1:-1:-1;;;;;17106:3:93;;17065:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17136:7;17138:4;10625:1:99;10535:98;17136:7:93;-1:-1:-1;;;;;17122:47:93;;17151:1;17122:47;;;;5642:25:125;;5630:2;5615:18;;5496:177;17122:47:93;;;;;;;;17190:3;;17199;;17190:22;;-1:-1:-1;;;17190:22:93;;;;;10858:25:125;;;;17204:7:93;10899:18:125;;;10892:34;17175:12:93;;-1:-1:-1;;;;;17190:3:93;;:8;;10831:18:125;;17190:22:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17175:37;;17218:41;17229:6;;;;;;;;;;;17218:41;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;17218:41:93;;;:10;:41::i;:::-;17266;17278:7;17277:8;17266:41;;;;;;;;;;;;;-1:-1:-1;;;17266:41:93;;;:10;:41::i;:::-;17330:3;;17314:134;;-1:-1:-1;;;;;17330:3:93;:13;17346:4;17330:22;;-1:-1:-1;;;;;;17330:22:93;;;;;;;-1:-1:-1;;;;;581:32:125;;;17330:22:93;;;563:51:125;536:18;;17330:22:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17360:11;;17314:134;;;;;;;;;;;;;;;;;:8;:134::i;9589:489::-;9681:9;:27;;-1:-1:-1;;;;;;9681:27:93;9693:15;9681:27;;;9721:3;;9743:4;;-1:-1:-1;;;;;9721:3:93;;;;:12;;9743:4;9758:5;;-1:-1:-1;;;;;9758:5:93;9802:6;;9816:9;;9721:119;;-1:-1:-1;;;;;;9721:119:93;;;;;;;;;;;9772:7;;;;9833:1;;9721:119;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9715:3;:125;9862:3;;9879;;9892:4;;9847:12;;-1:-1:-1;;;;;9862:3:93;;;;:9;;9879:3;;;;9892:4;9907:5;;-1:-1:-1;;;;;9907:5:93;9921:3;;9932:7;9947;9971:1;9962:6;;:10;;;;:::i;:::-;9862:116;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9847:131;;9984:42;9996:6;;;;;;;;;;;9995:7;9984:42;;;;;;;;;;;;;-1:-1:-1;;;9984:42:93;;;:10;:42::i;:::-;10032:41;10044:7;10043:8;10032:41;;;;;;;;;;;;;-1:-1:-1;;;10032:41:93;;;:10;:41::i;10573:994::-;10664:4;;10628:18;;10649:50;;-1:-1:-1;;;;;10664:4:93;10662:7;10535:98:99;10649:50:93;10705:9;:33;;-1:-1:-1;;;;;;10705:33:93;10717:21;10705:33;;;10750:3;;10772:4;;10787:5;;10831:6;;10845:9;;10750:119;;-1:-1:-1;;;10750:119:93;;10628:71;;-1:-1:-1;;;;;;10750:3:93;;;;:12;;:119;;10772:4;;;10787:5;;10801:7;;;;-1:-1:-1;;10750:119:93;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10744:3;:125;10891:3;;10875:164;;-1:-1:-1;;;;;10891:3:93;:13;10907:4;10905:7;10535:98:99;10875:164:93;11058:3;;11045:18;;-1:-1:-1;;;;;11058:3:93;5854:10;:18::i;11045:::-;11098:5;;11089:4;;11106:3;;11119;;11074:68;;;23084:25:125;;;-1:-1:-1;;;;;11119:3:93;;;23140:2:125;23125:18;;23118:60;11125:7:93;23194:18:125;;;23187:34;;;23252:2;23237:18;;23230:34;11074:68:93;11098:5;;;;11089:4;;;11074:68;;;;;23071:3:125;11074:68:93;;;11161:3;;11148:18;;-1:-1:-1;;;;;11161:3:93;5854:10;:18::i;11148:::-;11177:30;;5642:25:125;;;11186:4:93;;11177:30;;5630:2:125;5615:18;11177:30:93;;;;;;;11226:3;;11213:18;;-1:-1:-1;;;;;11226:3:93;5854:10;:18::i;11213:::-;11266:5;;-1:-1:-1;;;;;11266:5:93;11257:4;;-1:-1:-1;;;;;11242:36:93;;;;11257:4;-1:-1:-1;;;;;11242:36:93;-1:-1:-1;;;;;;;;;;;11274:3:93;;11242:36;;;;5642:25:125;;5630:2;5615:18;;5496:177;11242:36:93;;;;;;;;11299:3;;11308;;11299:22;;-1:-1:-1;;;11299:22:93;;;;;10858:25:125;;;;11313:7:93;10899:18:125;;;10892:34;11284:12:93;;-1:-1:-1;;;;;11299:3:93;;:8;;10831:18:125;;11299:22:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11284:37;;11327:43;11338:7;11327:43;;;;;;;;;;;;;-1:-1:-1;;;11327:43:93;;;:10;:43::i;:::-;11387:6;;11376:41;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;11376:41:93;;;;;;11387:6;;;;;;11376:10;:41::i;:::-;11440:3;;11424:138;;-1:-1:-1;;;;;11440:3:93;:13;11456:4;11440:22;;-1:-1:-1;;;;;;11440:22:93;;;;;;;-1:-1:-1;;;;;581:32:125;;;11440:22:93;;;563:51:125;536:18;;11440:22:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11470:11;;11424:138;;;;;;;;;;;;;;;;;:8;:138::i;7640:173:99:-;7728:16;7761:47;7775:12;7789:11;7802:5;7761:13;:47::i;1018:323:93:-;1142:6;:13;;-1:-1:-1;;1142:13:93;;;;;1161:3;;-1:-1:-1;;;;;1161:3:93;:15;1184:18;;;;:5;:18;:::i;:::-;1210:17;;;;;;;;:::i;:::-;1235:7;1250;1265:6;;1279:9;;1296:5;:13;;;1317:5;:13;;;1161:175;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1018:323;;:::o;3505:97:100:-;3554:43;;-1:-1:-1;;;3554:43:100;;-1:-1:-1;;;;;;;;;;;237:61:1;3554:13:100;;:43;;3568:4;;;;;;;;3592;;3554:43;;;:::i;2948:169:0:-;3023:9;3018:95;;-1:-1:-1;;;;;;;;;;;3073:3:0;3047:30;;;;;;:::i;:::-;;;;;;;;3085:21;3096:9;3085:10;:21::i;4812:172::-;4905:1;4900;:6;4896:84;;-1:-1:-1;;;;;;;;;;;4947:3:0;4921:30;;;;;;:::i;:::-;;;;;;;;4959:14;4968:1;4971;4959:8;:14::i;13555:286:93:-;13678:6;:13;;-1:-1:-1;;13678:13:93;;;;;13717:3;;13678:13;;-1:-1:-1;;;;;13717:3:93;:10;13728:18;;;;:5;:18;:::i;:::-;13748:17;;;;;;;;:::i;:::-;13717:49;;-1:-1:-1;;;;;;13717:49:93;;;;;;;-1:-1:-1;;;;;33406:15:125;;;13717:49:93;;;33388:34:125;33458:15;;33438:18;;;33431:43;33323:18;;13717:49:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13697:69;-1:-1:-1;13772:64:93;;-1:-1:-1;6599:54:33;;;;;;13793:3:93;;13772:64;;;;;;;;;;;;;;;;;:8;:64::i;1677:171::-;1787:6;:13;;-1:-1:-1;;1787:13:93;;;;;1806:37;;;;;;;;;;;;;;;;;;;:4;:37::i;2244:802:99:-;2391:21;;2303:115;;2326:4;;2339:12;;2364:19;;2391:21;;;2303:115;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2296:4:99;:122;;-1:-1:-1;;;;;;2296:122:99;-1:-1:-1;;;;;2296:122:99;;;;;;;;;;2455:4;2522:22;;2432:118;;2468:13;;2494:20;;2522:22;;;;;2432:118;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2424:5:99;:126;;-1:-1:-1;;;;;;2424:126:99;-1:-1:-1;;;;;2424:126:99;;;;;;;;;2599:4;;2612:7;:24;2585:52;;2599:4;;;;;2424:126;2612:24;;2585:13;:52::i;:::-;2579:3;:58;;-1:-1:-1;;;;;;2579:58:99;-1:-1:-1;;;;;2579:58:99;;;;;;;;;2858:27;;;-1:-1:-1;;;2858:27:99;;;;:8;;2874;;2858:27;;;;;-1:-1:-1;;2858:27:99;;;;;;;2874:8;2579:58;2858:27;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2962:4:99;;2977:3;;2962:36;;-1:-1:-1;;;2962:36:99;;-1:-1:-1;;;;;2962:4:99;;;;-1:-1:-1;2962:12:99;;-1:-1:-1;2962:36:99;;-1:-1:-1;2977:3:99;;;-1:-1:-1;;2983:14:99;2962:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3004:5:99;;3020:3;;3004:37;;-1:-1:-1;;;3004:37:99;;-1:-1:-1;;;;;3004:5:99;;;;:13;;:37;;3020:3;;;-1:-1:-1;;3026:14:99;3004:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3611:116:2:-;3694:28;3699:5;3706:2;3710:4;3716:5;3694:4;:28::i;8114:349:99:-;8213:15;8225:2;8213:11;:15::i;:::-;;8234;8246:2;8234:11;:15::i;:::-;-1:-1:-1;8277:18:99;;8255:52;;-1:-1:-1;;;8255:52:99;;-1:-1:-1;;;;;34986:15:125;;;8255:52:99;;;34968:34:125;35038:15;;;35018:18;;;35011:43;35070:18;;;35063:34;;;;8297:1:99;35113:18:125;;;35106:34;8300:6:99;35156:19:125;;;35149:35;8255:13:99;;;;;;34902:19:125;;8255:52:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8335:18:99;;8313:52;;-1:-1:-1;;;8313:52:99;;-1:-1:-1;;;;;34986:15:125;;;8313:52:99;;;34968:34:125;35038:15;;;35018:18;;;35011:43;35070:18;;;35063:34;;;;8355:1:99;35113:18:125;;;35106:34;8358:6:99;35156:19:125;;;35149:35;8313:13:99;;;;-1:-1:-1;8313:13:99;;-1:-1:-1;34902:19:125;;8313:52:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;261:34:1;;245:52;;237:61;;-1:-1:-1;;;;;8386:8:99;;8395:2;8406;-1:-1:-1;;;;;8399:17:99;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8399:19:99;;;;;;;;;;;;:::i;:::-;8386:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;261:34:1;;245:52;;237:61;;-1:-1:-1;;;;;8425:8:99;;8434:2;8445;-1:-1:-1;;;;;8438:17:99;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8438:19:99;;;;;;;;;;;;:::i;:::-;8425:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8114:349;;;:::o;6631:397::-;6805:3;;:21;;-1:-1:-1;;;6805:21:99;;-1:-1:-1;;;;;33406:15:125;;;6805:21:99;;;33388:34:125;33458:15;;;33438:18;;;33431:43;6751:4:99;;;;;;6805:3;;;;:10;;33323:18:125;;6805:21:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6763:63;;-1:-1:-1;6763:63:99;-1:-1:-1;6832:8:99;6871;5534:62:32;;;;;;6850:29:99;6846:115;;;-1:-1:-1;5534:62:32;;;;;;6846:115:99;;;-1:-1:-1;6946:8:99;6846:115;7011:3;6975:32;5847:72:33;;;;;;6975:6:99;:32;:::i;:::-;6974:40;;;;:::i;:::-;:48;;7017:5;6974:48;:::i;:::-;6966:57;6631:397;-1:-1:-1;;;;;;;;6631:397:99:o;6350:277::-;6505:3;;:21;;-1:-1:-1;;;6505:21:99;;-1:-1:-1;;;;;33406:15:125;;;6505:21:99;;;33388:34:125;33458:15;;;33438:18;;;33431:43;6451:4:99;;;;;;6505:3;;;;:10;;33323:18:125;;6505:21:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6463:63;;-1:-1:-1;6463:63:99;-1:-1:-1;5534:62:32;;;;;;6541:32:99;5847:72:33;;;;;;6541:6:99;:32;:::i;:::-;6540:67;;;;:::i;:::-;:81;;6616:5;6540:81;:::i;:::-;6532:90;6350:277;-1:-1:-1;;;;;;6350:277:99:o;14432:703:93:-;14556:6;:13;;-1:-1:-1;;14556:13:93;;;;;14804:67;;;14590:11;14804:67;;;;;;;;;;4074:56:34;14590:11:93;;;;4074:56:34;;;;;;4419;;;14673:17:93;;;;3705:56:35;;;;;4071:58;;;;;;;4826:62;;;;;;;14804:67:93;;4074:56:34;;14822:7:93;;14804:67;;;;;;;:8;:67::i;:::-;14877;14886:7;14895;14877:67;;;;;;;;;;;;;;;;;:8;:67::i;:::-;14950:69;14959:10;14971:3;14950:69;;;;;;;;;;;;;;;;;:8;:69::i;:::-;15025:53;15034:7;15045:4;15025:53;;;;;;;;;;;;;;;;;:8;:53::i;:::-;15084:46;15093:8;15103:6;;15084:46;;;;;;;;;;;;;-1:-1:-1;;;15084:46:93;;;:8;:46::i;15452:288::-;15577:6;:13;;-1:-1:-1;;15577:13:93;;;;;15616:3;;15577:13;;-1:-1:-1;;;;;15616:3:93;:10;15627:18;;;;:5;:18;:::i;:::-;15647:17;;;;;;;;:::i;:::-;15616:49;;-1:-1:-1;;;;;;15616:49:93;;;;;;;-1:-1:-1;;;;;33406:15:125;;;15616:49:93;;;33388:34:125;33458:15;;33438:18;;;33431:43;33323:18;;15616:49:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15596:69;-1:-1:-1;15671:64:93;;-1:-1:-1;1800:2:33;6937:54;;;;;15692:3:93;;15671:64;;;;;;;;;;;;;;;;;:8;:64::i;7526:172:2:-;7619:1;7614:6;;:1;:6;;;7610:84;;-1:-1:-1;;;;;;;;;;;7661:3:2;7635:30;;;;;;:::i;:::-;;;;;;;;7673:14;7682:1;7685;7673:8;:14::i;3797:178:0:-;3896:1;3891;:6;3887:84;;-1:-1:-1;;;;;;;;;;;3938:3:0;3912:30;;;;;;:::i;:::-;;;;;;;;3950:14;3959:1;3962;3950:8;:14::i;17910:136:93:-;18028:13;;:::i;5747:115:5:-;5798:59;5853:2;5814:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5814:42:5;;;;;;;;;;;;;;-1:-1:-1;;;;;5814:42:5;-1:-1:-1;;;5814:42:5;;;5798:15;:59::i;1852:400:93:-;1968:6;:13;;-1:-1:-1;;1968:13:93;;;;;1998:3;;1968:13;;-1:-1:-1;;;;;1998:3:93;:13;2012:7;2014:4;10625:1:99;10535:98;2012:7:93;1998:22;;-1:-1:-1;;;;;;1998:22:93;;;;;;;-1:-1:-1;;;;;581:32:125;;;1998:22:93;;;563:51:125;536:18;;1998:22:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2026:3;;2045:4;;1987:33;;-1:-1:-1;;;;;;2026:3:93;;;;:16;;2045:4;2054:5;;-1:-1:-1;;;;;2054:5:93;2062:3;;2026:46;;-1:-1:-1;;;;;;2026:46:93;;;;;;;-1:-1:-1;;;;;35982:15:125;;;2026:46:93;;;35964:34:125;36034:15;;;;36014:18;;;36007:43;36066:18;;;36059:34;2067:4:93;36109:18:125;;;36102:50;35898:19;;2026:46:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2082:11:93;;;;;;;2078:170;;;2134:3;;2103:138;;2121:3;;-1:-1:-1;;;;;2134:3:93;:13;2150:4;2134:22;;-1:-1:-1;;;;;;2134:22:93;;;;;;;-1:-1:-1;;;;;581:32:125;;;2134:22:93;;;563:51:125;536:18;;2134:22:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2103:138;;;;;;;;;;;;;;;;;:8;:138::i;6299:315::-;6420:12;6436:3;:11;;;-1:-1:-1;;;6436:33:93;6420:50;;6476:56;6488:7;6487:8;6476:56;;;;;;;;;;;;;;;;;:10;:56::i;:::-;6538:71;6566:18;;6549:3;:13;;;:35;6538:71;;;;;;;;;;;;;-1:-1:-1;;;6538:71:93;;;:10;:71::i;3638:232:100:-;3688:4;-1:-1:-1;;;;;3704:15:100;;3700:136;;-1:-1:-1;;;;;;;;;;;3734:37:100;;;;36365:2:125;36347:21;;;36404:2;36384:18;;;36377:30;36443:32;36438:2;36423:18;;36416:60;36508:2;36493:18;;36163:354;3734:37:100;;;;;;;;3784:31;;;36734:21:125;;;36791:1;36771:18;;;36764:29;-1:-1:-1;;;36824:2:125;36809:18;;36802:37;-1:-1:-1;;;;;36913:32:125;;36906:4;36891:20;;36884:62;3784:31:100;;;;;;;36871:3:125;3784:31:100;;;3823:6;:4;:6::i;:::-;-1:-1:-1;;;;;;3849:15:100;;;;3638:232::o;1434:57::-;1470:16;1480:5;1470:9;:16::i;:::-;1434:57::o;1517:186::-;1560:10;:15;1579:1;1560:20;1556:143;;1599:15;;1590:25;;-1:-1:-1;;;1590:25:100;;-1:-1:-1;;;;;1599:15:100;;;1590:25;;;563:51:125;-1:-1:-1;;;;;;;;;;;237:61:1;1590:8:100;;536:18:125;;1590:25:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1556:143;1632:10;:15;1651:1;1632:20;1628:71;;1676:15;;1662:30;;-1:-1:-1;;;1662:30:100;;-1:-1:-1;;;;;1676:15:100;;;1662:30;;;563:51:125;-1:-1:-1;;;;;;;;;;;237:61:1;1662:13:100;;536:18:125;;1662:30:100;383:237:125;9984:172:0;10077:1;10072;:6;10068:84;;-1:-1:-1;;;;;;;;;;;10119:3:0;10093:30;;;;;;:::i;:::-;;;;;;;;10131:14;10140:1;10143;10131:8;:14::i;2809:135::-;2865:9;2860:80;;-1:-1:-1;;;;;;;;;;;2889:30:0;;;;37159:2:125;37141:21;;;37198:2;37178:18;;;37171:30;37237:25;37232:2;37217:18;;37210:53;37295:2;37280:18;;36957:347;2889:30:0;;;;;;;;2927:6;:4;:6::i;4580:228::-;4638:1;4633;:6;4629:175;;-1:-1:-1;;;;;;;;;;;4654:41:0;;;;37511:2:125;37493:21;;;37550:2;37530:18;;;37523:30;37589:34;37584:2;37569:18;;37562:62;-1:-1:-1;;;37655:2:125;37640:18;;37633:32;37697:3;37682:19;;37309:398;4654:41:0;;;;;;;;-1:-1:-1;;;;;;;;;;;4737:1:0;4708:31;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;;;4781:1:0;4752:31;;;;;;:::i;:::-;;;;;;;;4791:6;:4;:6::i;6954:108:2:-;-1:-1:-1;;;;;;;;;;;7041:3:2;7015:30;;;;;;:::i;3731:764::-;3903:38;;;-1:-1:-1;;;;;581:32:125;;;3903:38:2;;;;563:51:125;;;;3903:38:2;;;;;;;;;;536:18:125;;;;3903:38:2;;;;;;;-1:-1:-1;;;;;3903:38:2;-1:-1:-1;;;3903:38:2;;;3885:62;;3861:20;;3885:10;;;:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3858:89;;;3953:12;3979:7;3968:27;;;;;;;;;;;;:::i;:::-;3953:42;-1:-1:-1;4024:71:2;4090:4;4024:51;4072:2;4024:38;-1:-1:-1;;;4024:22:2;:8;4040:5;4024:15;:22::i;:::-;:26;19133:9;;;:16;;-1:-1:-1;;19133:16:2;;;;;;;;;;;;:9;19028:143;4024:38;:47;19445:10;;;:44;;;;;;;-1:-1:-1;19445:44:2;;;;;;;-1:-1:-1;;;;;19469:18:2;;;;19445:44;;;:10;19335:176;4024:51;:65;;:71::i;:::-;4133:6;4129:362;;;4199:34;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4199:34:2;-1:-1:-1;;;4199:34:2;;;4179:62;;4152:23;;-1:-1:-1;;;;;4179:10:2;;;:62;;4199:34;4179:62;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4149:92;;;4249:11;4274:10;4263:30;;;;;;;;;;;;:::i;:::-;4249:44;;4312:7;4305:4;:14;4301:116;;;4342:14;4352:4;4342:7;:14;:::i;:::-;4331:26;;;;:::i;:::-;;;4301:116;;;4393:14;4400:7;4393:4;:14;:::i;:::-;4382:26;;;;:::i;:::-;;;4301:116;4424:60;4477:6;4424:38;-1:-1:-1;;;4424:22:2;:8;4440:5;4424:15;:22::i;:60::-;4141:350;;3825:670;;3731:764;;;;:::o;3368:178:0:-;3467:1;-1:-1:-1;;;;;3462:6:0;:1;-1:-1:-1;;;;;3462:6:0;;3458:84;;-1:-1:-1;;;;;;;;;;;3509:3:0;3483:30;;;;;;:::i;:::-;;;;;;;;3521:14;3530:1;3533;3521:8;:14::i;7252:270:2:-;7310:1;7305:6;;:1;:6;;;7301:217;;-1:-1:-1;;;;;;;;;;;7326:41:2;;;;38948:2:125;38930:21;;;38987:2;38967:18;;;38960:30;39026:34;39021:2;39006:18;;38999:62;-1:-1:-1;;;39092:2:125;39077:18;;39070:32;39134:3;39119:19;;38746:398;7326:41:2;;;;;;;;-1:-1:-1;;;;;;;;;;;7411:1:2;:20;;;;;;;;;;;;;;;-1:-1:-1;;;7411:20:2;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7411:20:2;;;;7380:52;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;;;7476:1:2;:20;;;;;;;;;;;;;;;-1:-1:-1;;;7476:20:2;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7476:20:2;;;;7445:52;;;;;;:::i;3550:243:0:-;3614:1;3609;:6;3605:184;;-1:-1:-1;;;;;;;;;;;3630:44:0;;;;40241:2:125;40223:21;;;40280:2;40260:18;;;40253:30;40319:34;40314:2;40299:18;;40292:62;-1:-1:-1;;;40385:2:125;40370:18;;40363:35;40430:3;40415:19;;40039:401;3630:44:0;;;;;;;;3687:34;3719:1;3687:34;;;;;;:::i;:::-;;;;;;;;3734;3766:1;3734:34;;;;;;:::i;631:356:5:-;718:14;;583:42;834:2;821:16;;697:18;;718:14;821:16;583:42;873:5;853:124;844:133;;793:190;;631:356;:::o;2086:353:0:-;-1:-1:-1;;;;;;;;;;;2564:55:0;2637:16;2117:298;;2283:64;;2148:11;;-1:-1:-1;;;;;;;;;;;1459:61:0;2227:43;;2283:64;;1459:61;;-1:-1:-1;;;2308:17:0;2340:4;;2283:64;;;:::i;:::-;;;;-1:-1:-1;;2283:64:0;;;;;;;;;;2192:165;;;2283:64;2192:165;;:::i;:::-;;;;-1:-1:-1;;2192:165:0;;;;;;;;;;2165:200;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2117:298:0;2420:7;:14;;-1:-1:-1;;2420:14:0;;;;;2086:353::o;959:444:100:-;1025:1;1007:10;:19;1050:17;;;-1:-1:-1;;;1050:17:100;;;;:4;;:15;;:17;;;;;;;;;;;;;;:4;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1032:15;:35;;-1:-1:-1;;;;;;1032:35:100;-1:-1:-1;;;;;1032:35:100;;;;;;;;;1104:4;1077:32;1073:326;;1180:4;-1:-1:-1;;;;;1180:15:100;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1161:15;;-1:-1:-1;;;;;1161:15:100;;;:36;;;1157:236;;1260:1;1242:10;:19;5650:645:93;5592:703::o;1157:236:100:-;1280:7;1276:117;;;1359:1;1341:10;:19;1370:14;;;-1:-1:-1;;;1370:14:100;;;;-1:-1:-1;;;;;;;;;;;237:61:1;1370:12:100;;:14;;;;;1341:15;;1370:14;;;;;;;1341:15;237:61:1;1370:14:100;;;;;;;;;;9755:225:0;9813:1;9808;:6;9804:172;;-1:-1:-1;;;;;;;;;;;9829:40:0;;;;41967:2:125;41949:21;;;42006:2;41986:18;;;41979:30;42045:34;42040:2;42025:18;;42018:62;-1:-1:-1;;;42111:2:125;42096:18;;42089:31;42152:3;42137:19;;41765:397;9829:40:0;;;;;;;;9882:30;;;42379:21:125;;;42436:1;42416:18;;;42409:29;-1:-1:-1;;;42469:2:125;42454:18;;42447:39;42553:4;42538:20;;42531:36;;;9882:30:0;;-1:-1:-1;;;;;;;;;;;9882:30:0;;;;42518:3:125;9882:30:0;;;9925;;;42790:21:125;;;42847:1;42827:18;;;42820:29;;;;-1:-1:-1;;;42880:2:125;42865:18;;42858:39;42964:4;42949:20;;42942:36;;;-1:-1:-1;;;;;;;;;;;9925:30:0;42929:3:125;42914:19;9925:30:0;42578:406:125;18868:156:2;18980:12;;;:22;;-1:-1:-1;;;;;;18980:22:2;-1:-1:-1;;;;;18980:22:2;;;;;;;;;;:12;18868:156::o;20119:111::-;20192:33;20206:4;20220:3;20192:13;:33::i;3121:243:0:-;3185:1;-1:-1:-1;;;;;3180:6:0;:1;-1:-1:-1;;;;;3180:6:0;;3176:184;;-1:-1:-1;;;;;;;;;;;3201:44:0;;;;43191:2:125;43173:21;;;43230:2;43210:18;;;43203:30;43269:34;43264:2;43249:18;;43242:62;-1:-1:-1;;;43335:2:125;43320:18;;43313:35;43380:3;43365:19;;42989:401;3201:44:0;;;;;;;;3258:34;3290:1;3258:34;;;;;;:::i;:::-;;;;;;;;3305;3337:1;3305:34;;;;;;:::i;20432:1000:2:-;20522:12;;;;20554:9;;;;20588:11;;;;20628:10;;;20605:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;20522:12:2;;;;20554:9;;;;;;20508:11;;20605:33;;20628:10;;20605:33;;20628:10;20605:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20645:17;20682:4;20688:12;20696:3;20688:7;:12::i;:::-;20665:36;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;20665:36:2;;;;;;;;;-1:-1:-1;;;;;20712:15:2;;;;;;:10;;;20665:36;20712:15;;;;;;-1:-1:-1;;;;;;20712:21:2;;;;;;;;;20665:36;;-1:-1:-1;20712:21:2;;:15;;20744:34;;20761:3;;20766:11;;20744:34;;:::i;:::-;;;;-1:-1:-1;;20744:34:2;;;;;;;;;20734:45;;20744:34;20734:45;;;;20712:68;;;;;;;;;;-1:-1:-1;20712:68:2;;;;20707:100;;20790:10;20795:4;20790;:10::i;:::-;;20707:100;-1:-1:-1;;;;;20842:15:2;;20812:12;20842:15;;;;;;;;;;;-1:-1:-1;;;;;;20842:21:2;;;;;;;;;20874:34;;20842:21;;20812:12;;20874:34;;20891:3;;20896:11;;20874:34;;:::i;:::-;;;;;;;;;;;;;20864:45;;;;;;20842:68;;;;;;;;;;;;20827:89;;20812:104;;20923:12;20952:17;20973:3;-1:-1:-1;;;;;20973:14:2;20988:4;20973:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20949:44:2;-1:-1:-1;21008:38:2;;-1:-1:-1;20949:44:2;21029:16;21034:11;21029:2;:16;:::i;:::-;21008:14;:38::i;:::-;21073:28;;-1:-1:-1;;;21073:28:2;;21001:45;;-1:-1:-1;21058:12:2;;-1:-1:-1;;;;;;;;;;;;21073:17:2;;;:28;;21091:3;;21096:4;;21073:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21058:43;;21120:4;21112;:12;21108:186;;21134:153;;-1:-1:-1;;;21134:153:2;;;;;;;:::i;:::-;21299:34;;-1:-1:-1;;;21299:34:2;;-1:-1:-1;;;;;;;;;;;21299:18:2;;;:34;;21318:3;;21323:4;;21329:3;;21299:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;21346:12:2;;;21339:19;;-1:-1:-1;;;;;;21339:19:2;;;-1:-1:-1;21371:9:2;;;21364:16;;-1:-1:-1;;21364:16:2;;;21386:17;-1:-1:-1;21393:10:2;;21346:12;21386:17;:::i;:::-;21416:4;:11;;21409:18;;;20502:930;;;;;;;;20432:1000;;:::o;22680:340::-;22739:12;22759:19;22791:1;:8;22802:2;22791:13;;;;:::i;:::-;22781:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22781:24:2;;22759:46;;22816:6;22811:185;22832:1;:8;22828:1;:12;22811:185;;;22855:9;22867:1;22869;22867:4;;;;;;;;:::i;:::-;;;;;;;22855:16;;22980:1;22974;22970:2;22966:10;22962:2;22958:19;22950:6;22946:32;22939:43;22929:61;22842:3;;;;;:::i;:::-;;;;22811:185;;;-1:-1:-1;23009:6:2;22680:340;-1:-1:-1;;22680:340:2:o;15827:3037::-;15910:12;;;;15942:9;;;;15976:11;;;;16016:10;;;15993:33;;;;;;;;;;;;;;;;;;;15884:4;;-1:-1:-1;;;;;15910:12:2;;15942:9;;;15976:11;15884:4;;15993:33;;16016:10;;15993:33;;;16016:10;15993:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;16069:15:2;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;16069:21:2;;;;;;;;;16101:34;;15993:33;;-1:-1:-1;16069:21:2;:15;;-1:-1:-1;16101:34:2;;-1:-1:-1;15993:33:2;;16123:11;;16101:34;;:::i;:::-;;;;-1:-1:-1;;16101:34:2;;;;;;;;;16091:45;;16101:34;16091:45;;;;16069:68;;;;;;;;;;-1:-1:-1;16069:68:2;;;;16065:172;;;-1:-1:-1;;;;;16162:15:2;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;16162:21:2;;;;;;;;;16194:34;;16162:21;;:10;16194:34;;16211:3;;16216:11;;16194:34;;:::i;:::-;;;;;;;;;;;;;16184:45;;;;;;16162:68;;;;;;;;;;;;16147:83;;;;;;15827:3037;;;:::o;16065:172::-;16242:17;16279:4;16285:12;16293:3;16285:7;:12::i;:::-;16262:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16242:56;;-1:-1:-1;;;;;;;;;;;15168:34:2;;-1:-1:-1;;;;;16304:19:2;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16331:12;16360:17;16381:3;-1:-1:-1;;;;;16381:14:2;16396:4;16381:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16357:44:2;-1:-1:-1;16416:38:2;;-1:-1:-1;16357:44:2;16437:16;16442:11;16437:2;:16;:::i;16416:38::-;16496:35;;-1:-1:-1;;;16496:35:2;;-1:-1:-1;;;;;581:32:125;;16496:35:2;;;563:51:125;16409:45:2;;-1:-1:-1;16468:22:2;;-1:-1:-1;;;;;;;;;;;;16496:21:2;;;536:18:125;;16496:35:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16496:35:2;;;;;;;;;;;;:::i;:::-;16467:64;;;16541:5;:12;16557:1;16541:17;16537:1993;;16568:12;-1:-1:-1;;;;;;;;;;;15168:34:2;;-1:-1:-1;;;;;16583:17:2;;16601:3;16606:5;16612:1;16606:8;;;;;;;;:::i;:::-;;;;;;;16583:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16568:47;-1:-1:-1;16568:47:2;16623:89;;16662:41;16683:3;16693:5;16699:1;16693:8;;;;;;;;:::i;:::-;;;;;;;16688:14;;16662:41;;;;;;;:::i;:::-;;;;;;;;16623:89;16731:4;16723;:12;16719:196;;16747:159;;-1:-1:-1;;;16747:159:2;;;;;;;:::i;:::-;16927:123;16946:3;16959:4;17000:3;17005:11;16983:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16973:45;;;;;;17033:5;17039:1;17033:8;;;;;;;;:::i;:::-;;;;;;;17028:14;;16927:123;;;;;;;;;:::i;:::-;;;;;;;;17150:5;17156:1;17150:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;17058:15:2;;17145:14;17058:15;;;;;;;;;;-1:-1:-1;;;;;;17058:21:2;;;;;;;;;17099:34;;17150:8;;17058:21;;17099:34;;17116:3;;17121:11;;17099:34;;:::i;:::-;;;;-1:-1:-1;;17099:34:2;;;;;;;;;17089:45;;17099:34;17089:45;;;;17058:84;;;;;;;;;;;;-1:-1:-1;17058:84:2;;;:101;;;;-1:-1:-1;;;;;17167:15:2;;;;17254:4;17167:10;;;:15;;;;;-1:-1:-1;;;;;;17167:21:2;;;;;;;;;17208:34;;17254:4;;-1:-1:-1;17208:34:2;;17225:3;;17230:11;;17208:34;;:::i;:::-;;;;;;;-1:-1:-1;;17208:34:2;;;;;;17198:45;;17208:34;17198:45;;;;17167:84;;;;;;;;;;-1:-1:-1;17167:84:2;:91;;-1:-1:-1;;17167:91:2;;;;;;;;;;-1:-1:-1;16537:1993:2;;;17290:1;17275:5;:12;:16;17271:1259;;;17306:6;17301:1096;17322:5;:12;17318:1;:16;17301:1096;;;17351:12;-1:-1:-1;;;;;;;;;;;15168:34:2;;-1:-1:-1;;;;;17366:17:2;;17384:3;17389:5;17395:1;17389:8;;;;;;;;:::i;:::-;;;;;;;17366:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17351:47;-1:-1:-1;17351:47:2;17408:93;;17449:41;17470:3;17480:5;17486:1;17480:8;;;;;;;;:::i;:::-;;;;;;;17475:14;;17449:41;;;;;;;:::i;:::-;;;;;;;;17408:93;-1:-1:-1;;;;;;;;;;;15168:34:2;;-1:-1:-1;;;;;17527:18:2;;17546:3;17551:5;17557:1;17551:8;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;17527:53:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17590:12;17612:17;17669:3;-1:-1:-1;;;;;17669:14:2;17684:4;17669:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17651:38:2;;-1:-1:-1;17651:38:2;-1:-1:-1;17708:38:2;17651;17729:16;17734:11;17729:2;:16;:::i;17708:38::-;17701:45;;17771:7;:37;;;;;-1:-1:-1;;;17782:4:2;:26;17771:37;17767:573;;;17886:143;17909:3;17926:4;17971:3;17976:11;17954:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;17944:45;;;;;;18008:5;18014:1;18008:8;;;;;;;;:::i;:::-;;;;;;;18003:14;;17886:143;;;;;;;;;:::i;:::-;;;;;;;;18141:5;18147:1;18141:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;18041:15:2;;18136:14;18041:15;;;;;;;;;;-1:-1:-1;;;;;;18041:21:2;;;;;;;;;18086:34;;18141:8;;18041:21;;18086:34;;18103:3;;18108:11;;18086:34;;:::i;:::-;;;;;;;;;;;;;18076:45;;;;;;18041:92;;;;;;;;;;;:109;;;;18257:4;18162;:10;;:15;18173:3;-1:-1:-1;;;;;18162:15:2;-1:-1:-1;;;;;18162:15:2;;;;;;;;;;;;:21;18178:4;-1:-1:-1;;;;;18162:21:2;;-1:-1:-1;;;;;18162:21:2;;;;;;;;;;;;;:92;18224:3;18229:11;18207:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;18197:45;;;;;;18162:92;;;;;;;;;;;;:99;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;15168:34:2;;-1:-1:-1;;;;;18273:18:2;;18292:3;18297:5;18303:1;18297:8;;;;;;;;:::i;:::-;;;;;;;18307:4;18273:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18324:5;;;;;17767:573;-1:-1:-1;;;;;;;;;;;15168:34:2;;-1:-1:-1;;;;;18349:18:2;;18368:3;18373:5;18379:1;18373:8;;;;;;;;:::i;:::-;;;;;;;18383:4;18349:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17341:1056;;;17336:3;;;;;:::i;:::-;;;;17301:1096;;;;17271:1259;;;18417:106;;;-1:-1:-1;;;18417:106:2;;47728:2:125;18417:106:2;;;47710:21:125;47747:18;;;47740:30;;;;47806:34;47786:18;;;47779:62;47877:34;47857:18;;;47850:62;47929:19;;18417:106:2;47526:428:125;18417:106:2;-1:-1:-1;;;;;18551:15:2;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;18551:21:2;;;;;;;;;18583:34;;18551:21;;:15;18583:34;;18600:3;;18605:11;;18583:34;;:::i;:::-;;;;-1:-1:-1;;18583:34:2;;;;;;;;;18573:45;;18583:34;18573:45;;;;18551:68;;;;;;;;;;-1:-1:-1;18551:68:2;;;;18536:146;;;;-1:-1:-1;;;18536:146:2;;48161:2:125;18536:146:2;;;48143:21:125;48200:2;48180:18;;;48173:30;48239:34;48219:18;;;48212:62;-1:-1:-1;;;48290:18:125;;;48283:45;48345:19;;18536:146:2;47959:411:125;18536:146:2;18696:12;;;18689:19;;-1:-1:-1;;;;;;18689:19:2;;;18721:9;;;18714:16;;-1:-1:-1;;18714:16:2;;;18736:17;-1:-1:-1;18743:10:2;;18696:12;18736:17;:::i;:::-;18759:18;18766:11;;;18759:18;;;-1:-1:-1;;;;;18791:15:2;;;;;;;;;;;;-1:-1:-1;;;;;;18791:21:2;;;;;;;;;18823:34;;18791:21;;18759:18;18823:34;;18840:3;;18845:11;;18823:34;;:::i;:::-;;;;;;;;;;;;;18813:45;;;;;;18791:68;;;;;;;;;;;;18784:75;;;;;;;;;15827:3037;;;:::o;22396:280::-;22482:7;22499:11;22517:8;22539:2;22528:1;:8;:13;:29;;22549:1;:8;22528:29;;;22544:2;22528:29;22517:40;;22568:6;22563:93;22584:3;22580:1;:7;22563:93;;;22643:5;:1;22647;22643:5;:::i;:::-;22617:1;22619:10;22628:1;22619:6;:10;:::i;:::-;22617:13;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;22617:13:2;22609:40;;22602:47;;;;;22589:3;;;;:::i;:::-;;;;22563:93;;;-1:-1:-1;22668:3:2;;22396:280;-1:-1:-1;;;;22396:280:2:o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:118:125;100:5;93:13;86:21;79:5;76:32;66:60;;122:1;119;112:12;137:241;193:6;246:2;234:9;225:7;221:23;217:32;214:52;;;262:1;259;252:12;214:52;301:9;288:23;320:28;342:5;320:28;:::i;625:139::-;-1:-1:-1;;;;;708:31:125;;698:42;;688:70;;754:1;751;744:12;769:571;875:6;883;891;944:2;932:9;923:7;919:23;915:32;912:52;;;960:1;957;950:12;912:52;999:9;986:23;1018:39;1051:5;1018:39;:::i;:::-;1076:5;-1:-1:-1;1133:2:125;1118:18;;1105:32;1146:41;1105:32;1146:41;:::i;:::-;1206:7;-1:-1:-1;1265:2:125;1250:18;;1237:32;1278:30;1237:32;1278:30;:::i;:::-;1327:7;1317:17;;;769:571;;;;;:::o;1553:127::-;1614:10;1609:3;1605:20;1602:1;1595:31;1645:4;1642:1;1635:15;1669:4;1666:1;1659:15;1685:275;1756:2;1750:9;1821:2;1802:13;;-1:-1:-1;;1798:27:125;1786:40;;1856:18;1841:34;;1877:22;;;1838:62;1835:88;;;1903:18;;:::i;:::-;1939:2;1932:22;1685:275;;-1:-1:-1;1685:275:125:o;1965:187::-;2014:4;2047:18;2039:6;2036:30;2033:56;;;2069:18;;:::i;:::-;-1:-1:-1;2135:2:125;2114:15;-1:-1:-1;;2110:29:125;2141:4;2106:40;;1965:187::o;2157:965::-;2244:6;2252;2260;2313:2;2301:9;2292:7;2288:23;2284:32;2281:52;;;2329:1;2326;2319:12;2281:52;2368:9;2355:23;2387:39;2420:5;2387:39;:::i;:::-;2445:5;-1:-1:-1;2502:2:125;2487:18;;2474:32;2515:41;2474:32;2515:41;:::i;:::-;2575:7;-1:-1:-1;2633:2:125;2618:18;;2605:32;2660:18;2649:30;;2646:50;;;2692:1;2689;2682:12;2646:50;2715:22;;2768:4;2760:13;;2756:27;-1:-1:-1;2746:55:125;;2797:1;2794;2787:12;2746:55;2833:2;2820:16;2858:49;2874:32;2903:2;2874:32;:::i;:::-;2858:49;:::i;:::-;2930:2;2923:5;2916:17;2970:7;2965:2;2960;2956;2952:11;2948:20;2945:33;2942:53;;;2991:1;2988;2981:12;2942:53;3046:2;3041;3037;3033:11;3028:2;3021:5;3017:14;3004:45;3090:1;3085:2;3080;3073:5;3069:14;3065:23;3058:34;3111:5;3101:15;;;;;2157:965;;;;;:::o;3581:160::-;3645:5;3690:3;3681:6;3676:3;3672:16;3668:26;3665:46;;;3707:1;3704;3697:12;3665:46;-1:-1:-1;3729:6:125;3581:160;-1:-1:-1;3581:160:125:o;3746:411::-;3878:6;3886;3930:9;3921:7;3917:23;3960:3;3956:2;3952:12;3949:32;;;3977:1;3974;3967:12;3949:32;4000:58;4050:7;4039:9;4000:58;:::i;:::-;3990:68;-1:-1:-1;4093:2:125;-1:-1:-1;;4074:17:125;;4070:26;4067:46;;;4109:1;4106;4099:12;4067:46;;4147:3;4136:9;4132:19;4122:29;;3746:411;;;;;:::o;4162:182::-;4221:4;4254:18;4246:6;4243:30;4240:56;;;4276:18;;:::i;:::-;-1:-1:-1;4321:1:125;4317:14;4333:4;4313:25;;4162:182::o;4349:889::-;4432:6;4463:2;4506;4494:9;4485:7;4481:23;4477:32;4474:52;;;4522:1;4519;4512:12;4474:52;4562:9;4549:23;4595:18;4587:6;4584:30;4581:50;;;4627:1;4624;4617:12;4581:50;4650:22;;4703:4;4695:13;;4691:27;-1:-1:-1;4681:55:125;;4732:1;4729;4722:12;4681:55;4768:2;4755:16;4791:59;4807:42;4846:2;4807:42;:::i;4791:59::-;4884:15;;;4966:1;4962:10;;;;4954:19;;4950:28;;;4915:12;;;;4990:19;;;4987:39;;;5022:1;5019;5012:12;4987:39;5046:11;;;;5066:142;5082:6;5077:3;5074:15;5066:142;;;5148:17;;5136:30;;5099:12;;;;5186;;;;5066:142;;;5227:5;4349:889;-1:-1:-1;;;;;;;4349:889:125:o;5243:248::-;5334:6;5387:3;5375:9;5366:7;5362:23;5358:33;5355:53;;;5404:1;5401;5394:12;5355:53;5427:58;5477:7;5466:9;5427:58;:::i;5678:407::-;5771:6;5779;5787;5840:2;5828:9;5819:7;5815:23;5811:32;5808:52;;;5856:1;5853;5846:12;5808:52;5895:9;5882:23;5914:39;5947:5;5914:39;:::i;:::-;5972:5;6024:2;6009:18;;5996:32;;-1:-1:-1;6075:2:125;6060:18;;;6047:32;;5678:407;-1:-1:-1;;;5678:407:125:o;7359:404::-;7427:6;7435;7488:2;7476:9;7467:7;7463:23;7459:32;7456:52;;;7504:1;7501;7494:12;7456:52;7543:9;7530:23;7562:39;7595:5;7562:39;:::i;:::-;7620:5;-1:-1:-1;7677:2:125;7662:18;;7649:32;7690:41;7649:32;7690:41;:::i;:::-;7750:7;7740:17;;;7359:404;;;;;:::o;8234:339::-;8318:6;8326;8379:2;8367:9;8358:7;8354:23;8350:32;8347:52;;;8395:1;8392;8385:12;8347:52;8434:9;8421:23;8453:39;8486:5;8453:39;:::i;:::-;8511:5;8563:2;8548:18;;;;8535:32;;-1:-1:-1;;;8234:339:125:o;9019:739::-;-1:-1:-1;;;;;9466:15:125;;;9448:34;;9518:15;;;;9513:2;9498:18;;9491:43;9565:2;9550:18;;9543:34;;;;9608:2;9593:18;;9586:34;;;;9651:3;9636:19;;9629:35;9428:3;9680:19;;9673:35;9739:3;9724:19;;9717:35;;;;9397:3;9382:19;;9019:739::o;9763:184::-;9833:6;9886:2;9874:9;9865:7;9861:23;9857:32;9854:52;;;9902:1;9899;9892:12;9854:52;-1:-1:-1;9925:16:125;;9763:184;-1:-1:-1;9763:184:125:o;9952:701::-;-1:-1:-1;;;;;10353:32:125;;;;10335:51;;10417:2;10402:18;;10395:34;;;;10460:2;10445:18;;10438:34;;;;10503:2;10488:18;;10481:34;;;;10546:3;10531:19;;10524:35;10373:3;10575:19;;10568:35;10634:3;10619:19;;10612:35;10322:3;10307:19;;9952:701::o;10937:245::-;11004:6;11057:2;11045:9;11036:7;11032:23;11028:32;11025:52;;;11073:1;11070;11063:12;11025:52;11105:9;11099:16;11124:28;11146:5;11124:28;:::i;13561:774::-;-1:-1:-1;;;;;14034:15:125;;;14016:34;;14086:15;;;14081:2;14066:18;;14059:43;14138:15;;;;14133:2;14118:18;;14111:43;14185:2;14170:18;;14163:34;;;;14228:3;14213:19;;14206:35;13996:3;14257:19;;14250:35;;;;14316:3;14301:19;;14294:35;;;;13965:3;13950:19;;13561:774::o;14340:376::-;-1:-1:-1;;;;;14591:32:125;;;;14573:51;;14655:2;14640:18;;14633:34;;;;14698:2;14683:18;;14676:34;14561:2;14546:18;;14340:376::o;15318:319::-;-1:-1:-1;;;;;15555:32:125;;;;15537:51;;15619:2;15604:18;;15597:34;15525:2;15510:18;;15318:319::o;16610:127::-;16671:10;16666:3;16662:20;16659:1;16652:31;16702:4;16699:1;16692:15;16726:4;16723:1;16716:15;16742:125;16782:4;16810:1;16807;16804:8;16801:34;;;16815:18;;:::i;:::-;-1:-1:-1;16852:9:125;;16742:125::o;18666:258::-;18738:1;18748:113;18762:6;18759:1;18756:13;18748:113;;;18838:11;;;18832:18;18819:11;;;18812:39;18784:2;18777:10;18748:113;;;18879:6;18876:1;18873:13;18870:48;;;-1:-1:-1;;18914:1:125;18896:16;;18889:27;18666:258::o;18929:::-;18971:3;19009:5;19003:12;19036:6;19031:3;19024:19;19052:63;19108:6;19101:4;19096:3;19092:14;19085:4;19078:5;19074:16;19052:63;:::i;:::-;19169:2;19148:15;-1:-1:-1;;19144:29:125;19135:39;;;;19176:4;19131:50;;18929:258;-1:-1:-1;;18929:258:125:o;19192:317::-;-1:-1:-1;;;;;19369:32:125;;19351:51;;19438:2;19433;19418:18;;19411:30;;;-1:-1:-1;;19458:45:125;;19484:18;;19476:6;19458:45;:::i;19514:255::-;19573:6;19626:2;19614:9;19605:7;19601:23;19597:32;19594:52;;;19642:1;19639;19632:12;19594:52;19681:9;19668:23;19700:39;19733:5;19700:39;:::i;20359:127::-;20420:10;20415:3;20411:20;20408:1;20401:31;20451:4;20448:1;20441:15;20475:4;20472:1;20465:15;20491:636;20571:6;20624:2;20612:9;20603:7;20599:23;20595:32;20592:52;;;20640:1;20637;20630:12;20592:52;20673:9;20667:16;20706:18;20698:6;20695:30;20692:50;;;20738:1;20735;20728:12;20692:50;20761:22;;20814:4;20806:13;;20802:27;-1:-1:-1;20792:55:125;;20843:1;20840;20833:12;20792:55;20872:2;20866:9;20897:49;20913:32;20942:2;20913:32;:::i;20897:49::-;20969:2;20962:5;20955:17;21009:7;21004:2;20999;20995;20991:11;20987:20;20984:33;20981:53;;;21030:1;21027;21020:12;20981:53;21043:54;21094:2;21089;21082:5;21078:14;21073:2;21069;21065:11;21043:54;:::i;:::-;21116:5;20491:636;-1:-1:-1;;;;;20491:636:125:o;21132:470::-;21311:3;21349:6;21343:13;21365:53;21411:6;21406:3;21399:4;21391:6;21387:17;21365:53;:::i;:::-;21481:13;;21440:16;;;;21503:57;21481:13;21440:16;21537:4;21525:17;;21503:57;:::i;:::-;21576:20;;21132:470;-1:-1:-1;;;;21132:470:125:o;21607:429::-;21828:3;21866:6;21860:13;21882:53;21928:6;21923:3;21916:4;21908:6;21904:17;21882:53;:::i;:::-;-1:-1:-1;;;21957:16:125;;21982:19;;;-1:-1:-1;22028:1:125;22017:13;;21607:429;-1:-1:-1;21607:429:125:o;22041:135::-;22080:3;22101:17;;;22098:43;;22121:18;;:::i;:::-;-1:-1:-1;22168:1:125;22157:13;;22041:135::o;22181:615::-;22555:25;;;-1:-1:-1;;;;;22616:32:125;;;;22611:2;22596:18;;22589:60;22680:2;22665:18;;22658:34;22723:2;22708:18;;22701:34;-1:-1:-1;;;22766:3:125;22751:19;;22744:46;22542:3;22527:19;;22181:615::o;23275:811::-;-1:-1:-1;;;;;23750:15:125;;;23732:34;;23802:15;;;;23797:2;23782:18;;23775:43;23849:2;23834:18;;23827:34;;;;23892:2;23877:18;;23870:34;;;;23935:3;23920:19;;23913:35;23712:3;23964:19;;23957:35;24023:3;24008:19;;24001:35;24067:3;24052:19;;24045:35;;;;23681:3;23666:19;;23275:811::o;24091:380::-;24170:1;24166:12;;;;24213;;;24234:61;;24288:4;24280:6;24276:17;24266:27;;24234:61;24341:2;24333:6;24330:14;24310:18;24307:38;24304:161;;24387:10;24382:3;24378:20;24375:1;24368:31;24422:4;24419:1;24412:15;24450:4;24447:1;24440:15;24602:1042;24687:12;;24652:3;;24742:1;24762:18;;;;24815;;;;24842:61;;24896:4;24888:6;24884:17;24874:27;;24842:61;24922:2;24970;24962:6;24959:14;24939:18;24936:38;24933:161;;25016:10;25011:3;25007:20;25004:1;24997:31;25051:4;25048:1;25041:15;25079:4;25076:1;25069:15;24933:161;14808:19;;;14860:4;14851:14;;25180:18;25207:104;;;;25325:1;25320:318;;;;25173:465;;25207:104;-1:-1:-1;;25242:24:125;;25228:39;;25287:14;;;;-1:-1:-1;25207:104:125;;25320:318;24549:1;24542:14;;;24586:4;24573:18;;25414:1;25428:167;25442:6;25439:1;25436:13;25428:167;;;25522:14;;25507:13;;;25500:37;25565:16;;;;25457:10;;25428:167;;;25615:13;;;-1:-1:-1;;25173:465:125;;;;;;;;24602:1042;;;;:::o;25649:225::-;25795:2;25784:9;25777:21;25758:4;25815:53;25864:2;25853:9;25849:18;25841:6;25815:53;:::i;26484:422::-;26573:1;26616:5;26573:1;26630:270;26651:7;26641:8;26638:21;26630:270;;;26710:4;26706:1;26702:6;26698:17;26692:4;26689:27;26686:53;;;26719:18;;:::i;:::-;26769:7;26759:8;26755:22;26752:55;;;26789:16;;;;26752:55;26868:22;;;;26828:15;;;;26630:270;;;26634:3;26484:422;;;;;:::o;26911:806::-;26960:5;26990:8;26980:80;;-1:-1:-1;27031:1:125;27045:5;;26980:80;27079:4;27069:76;;-1:-1:-1;27116:1:125;27130:5;;27069:76;27161:4;27179:1;27174:59;;;;27247:1;27242:130;;;;27154:218;;27174:59;27204:1;27195:10;;27218:5;;;27242:130;27279:3;27269:8;27266:17;27263:43;;;27286:18;;:::i;:::-;-1:-1:-1;;27342:1:125;27328:16;;27357:5;;27154:218;;27456:2;27446:8;27443:16;27437:3;27431:4;27428:13;27424:36;27418:2;27408:8;27405:16;27400:2;27394:4;27391:12;27387:35;27384:77;27381:159;;;-1:-1:-1;27493:19:125;;;27525:5;;27381:159;27572:34;27597:8;27591:4;27572:34;:::i;:::-;27642:6;27638:1;27634:6;27630:19;27621:7;27618:32;27615:58;;;27653:18;;:::i;:::-;27691:20;;26911:806;-1:-1:-1;;;26911:806:125:o;27722:131::-;27782:5;27811:36;27838:8;27832:4;27811:36;:::i;27858:217::-;27898:1;27924;27914:132;;27968:10;27963:3;27959:20;27956:1;27949:31;28003:4;28000:1;27993:15;28031:4;28028:1;28021:15;27914:132;-1:-1:-1;28060:9:125;;27858:217::o;28359:371::-;-1:-1:-1;;;;;;28544:33:125;;28532:46;;28601:13;;28514:3;;28623:61;28601:13;28673:1;28664:11;;28657:4;28645:17;;28623:61;:::i;:::-;28704:16;;;;28722:1;28700:24;;28359:371;-1:-1:-1;;;28359:371:125:o;28735:274::-;28864:3;28902:6;28896:13;28918:53;28964:6;28959:3;28952:4;28944:6;28940:17;28918:53;:::i;:::-;28987:16;;;;;28735:274;-1:-1:-1;;28735:274:125:o;29437:537::-;29705:14;;29698:22;29680:41;;29764:14;;29757:22;29752:2;29737:18;;29730:50;29823:14;;29816:22;29811:2;29796:18;;29789:50;29882:14;29875:22;29870:2;29855:18;;29848:50;-1:-1:-1;;;;;29935:32:125;29929:3;29914:19;;29907:61;29667:3;29652:19;;29437:537::o;30169:273::-;30237:6;30290:2;30278:9;30269:7;30265:23;30261:32;30258:52;;;30306:1;30303;30296:12;30258:52;30338:9;30332:16;30388:4;30381:5;30377:16;30370:5;30367:27;30357:55;;30408:1;30405;30398:12;30447:168;30487:7;30553:1;30549;30545:6;30541:14;30538:1;30535:21;30530:1;30523:9;30516:17;30512:45;30509:71;;;30560:18;;:::i;:::-;-1:-1:-1;30600:9:125;;30447:168::o;32725:446::-;32975:2;32964:9;32957:21;33014:1;33009:2;32998:9;32994:18;32987:29;-1:-1:-1;;;33047:2:125;33036:9;33032:18;33025:35;33098:3;33091:4;33080:9;33076:20;33069:33;32938:4;33119:46;33160:3;33149:9;33145:19;33137:6;33119:46;:::i;33485:291::-;33610:6;33618;33671:2;33659:9;33650:7;33646:23;33642:32;33639:52;;;33687:1;33684;33677:12;33639:52;-1:-1:-1;;33710:16:125;;33766:2;33751:18;;;33745:25;33710:16;;33745:25;;-1:-1:-1;33485:291:125:o;33781:578::-;-1:-1:-1;;;;;34032:32:125;;34014:51;;34101:3;34096:2;34081:18;;34074:31;;;-1:-1:-1;;34128:54:125;;34162:19;;34154:6;34128:54;:::i;:::-;34230:9;34222:6;34218:22;34213:2;34202:9;34198:18;34191:50;34258:41;34292:6;34284;34258:41;:::i;:::-;34250:49;;;34347:4;34339:6;34335:17;34330:2;34319:9;34315:18;34308:45;33781:578;;;;;;;:::o;35195:128::-;35235:3;35266:1;35262:6;35259:1;35256:13;35253:39;;;35272:18;;:::i;:::-;-1:-1:-1;35308:9:125;;35195:128::o;35328:127::-;35389:10;35384:3;35380:20;35377:1;35370:31;35420:4;35417:1;35410:15;35444:4;35441:1;35434:15;35460:220;35609:2;35598:9;35591:21;35572:4;35629:45;35670:2;35659:9;35655:18;35647:6;35629:45;:::i;37876:348::-;38106:2;38095:9;38088:21;38069:4;38126:49;38171:2;38160:9;38156:18;37789:2;37777:15;;-1:-1:-1;;;37817:4:125;37808:14;;37801:36;37862:2;37853:12;;37712:159;38126:49;38118:57;;38211:6;38206:2;38195:9;38191:18;38184:34;37876:348;;;;:::o;38393:::-;38623:2;38612:9;38605:21;38586:4;38643:49;38688:2;38677:9;38673:18;38306:2;38294:15;;-1:-1:-1;;;38334:4:125;38325:14;;38318:36;38379:2;38370:12;;38229:159;39149:440;39399:2;39388:9;39381:21;39362:4;39425:49;39470:2;39459:9;39455:18;37789:2;37777:15;;-1:-1:-1;;;37817:4:125;37808:14;;37801:36;37862:2;37853:12;;37712:159;39425:49;39522:9;39514:6;39510:22;39505:2;39494:9;39490:18;39483:50;39550:33;39576:6;39568;39550:33;:::i;39594:440::-;39844:2;39833:9;39826:21;39807:4;39870:49;39915:2;39904:9;39900:18;38306:2;38294:15;;-1:-1:-1;;;38334:4:125;38325:14;;38318:36;38379:2;38370:12;;38229:159;41501:259;41571:6;41624:2;41612:9;41603:7;41599:23;41595:32;41592:52;;;41640:1;41637;41630:12;41592:52;41672:9;41666:16;41691:39;41724:5;41691:39;:::i;43395:374::-;43625:2;43614:9;43607:21;43588:4;43645:49;43690:2;43679:9;43675:18;37789:2;37777:15;;-1:-1:-1;;;37817:4:125;37808:14;;37801:36;37862:2;37853:12;;37712:159;43645:49;-1:-1:-1;;;;;43730:32:125;;;;43725:2;43710:18;;;;43703:60;;;;-1:-1:-1;43637:57:125;43395:374::o;43774:::-;44004:2;43993:9;43986:21;43967:4;44024:49;44069:2;44058:9;44054:18;38306:2;38294:15;;-1:-1:-1;;;38334:4:125;38325:14;;38318:36;38379:2;38370:12;;38229:159;44153:610;44399:13;;44342:3;;44373;;44452:4;44479:15;;;44342:3;44522:175;44536:6;44533:1;44530:13;44522:175;;;44599:13;;44585:28;;44635:14;;;;44672:15;;;;44558:1;44551:9;44522:175;;;-1:-1:-1;;44706:21:125;;;-1:-1:-1;44743:14:125;;;;;-1:-1:-1;;;44153:610:125:o;44957:556::-;45159:2;45141:21;;;45198:3;45178:18;;;45171:31;45238:34;45233:2;45218:18;;45211:62;45309:34;45304:2;45289:18;;45282:62;45381:34;45375:3;45360:19;;45353:63;-1:-1:-1;;;45447:3:125;45432:19;;45425:46;45503:3;45488:19;;44957:556::o;45518:658::-;45583:5;45636:3;45629:4;45621:6;45617:17;45613:27;45603:55;;45654:1;45651;45644:12;45603:55;45683:6;45677:13;45709:4;45733:59;45749:42;45788:2;45749:42;:::i;45733:59::-;45826:15;;;45912:1;45908:10;;;;45896:23;;45892:32;;;45857:12;;;;45936:15;;;45933:35;;;45964:1;45961;45954:12;45933:35;46000:2;45992:6;45988:15;46012:135;46028:6;46023:3;46020:15;46012:135;;;46094:10;;46082:23;;46125:12;;;;46045;;46012:135;;;-1:-1:-1;46165:5:125;45518:658;-1:-1:-1;;;;;;45518:658:125:o;46181:614::-;46310:6;46318;46371:2;46359:9;46350:7;46346:23;46342:32;46339:52;;;46387:1;46384;46377:12;46339:52;46420:9;46414:16;46449:18;46490:2;46482:6;46479:14;46476:34;;;46506:1;46503;46496:12;46476:34;46529:72;46593:7;46584:6;46573:9;46569:22;46529:72;:::i;:::-;46519:82;;46647:2;46636:9;46632:18;46626:25;46610:41;;46676:2;46666:8;46663:16;46660:36;;;46692:1;46689;46682:12;46660:36;;46715:74;46781:7;46770:8;46759:9;46755:24;46715:74;:::i;:::-;46705:84;;;46181:614;;;;;:::o;47079:442::-;-1:-1:-1;;;;;47326:32:125;;;;47308:51;;-1:-1:-1;;;;;;47395:33:125;;;;47390:2;47375:18;;47368:61;47460:2;47445:18;;47438:34;47503:2;47488:18;;47481:34;47295:3;47280:19;;47079:442::o;48375:127::-;48436:10;48431:3;48427:20;48424:1;48417:31;48467:4;48464:1;48457:15;48491:4;48488:1;48481:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "cash(address,uint256)": "d56a22f0",
    "cash(address,uint256,uint256)": "6cc12a24",
    "echoSender()": "1e91f8cb",
    "failed()": "ba414fa6",
    "logary(int256[])": "521606d2",
    "logary(uint256[])": "b84e3eda",
    "makerExecute((address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256))": "6c49c32c",
    "makerPosthook((address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256),(bytes32,bytes32))": "3d3d130d",
    "setUp()": "0a9254e4",
    "setupMaker(address,address,string)": "bfdc3588",
    "setupMakerDeployer(address,address)": "bbab0fac",
    "setupMangrove()": "8c004832",
    "setupMangrove(address,address)": "ea14b5c3",
    "setupMangrove(address,address,bool)": "0b3d8c42",
    "setupMangrove(bool)": "0645f2be",
    "setupTaker(address,address,string)": "3336a63f",
    "test_balance_after_fail_and_retract()": "d48b10ea",
    "test_best_in_posthook_is_correct()": "031047df",
    "test_check_offer_in_posthook()": "1f859aa7",
    "test_failed_offer_is_not_executed()": "722abdb3",
    "test_failed_offer_truncates()": "52166b9d",
    "test_lastId_in_posthook_is_correct()": "32325d82",
    "test_makerRevert_is_logged()": "9a5c458d",
    "test_posthook_of_skipped_offer_wrong_gas_should_not_be_called()": "e2c015ee",
    "test_posthook_of_skipped_offer_wrong_price_should_not_be_called()": "05e08bdf",
    "test_renew_offer_after_complete_fill()": "51f55cb2",
    "test_renew_offer_after_failed_execution()": "01b5070b",
    "test_renew_offer_after_partial_fill()": "1687e8d5",
    "test_retract_offer_after_fail_in_posthook()": "df894467",
    "test_retract_offer_in_posthook()": "e43260cd",
    "test_reverting_posthook_does_not_revert_offer()": "50198541",
    "test_update_offer_after_deprovision_in_posthook_succeeds()": "53abc4a7",
    "test_update_offer_with_more_gasprice()": "167d0ea0",
    "vm()": "3a768463"
  },
  "ast": {
    "absolutePath": "packages/mangrove-solidity/test/core/MakerPosthook.t.sol",
    "id": 61895,
    "exportedSymbols": {
      "AbstractMangrove": [22838],
      "AccessControlled": [43417],
      "DSTest": [1786],
      "HasMgvEvents": [24715],
      "IERC20": [24851],
      "IMaker": [24733],
      "IMgvMonitor": [24773],
      "ITaker": [24745],
      "InvertedMangrove": [23581],
      "MakerDeployer": [72689],
      "MakerPosthookTest": [61894],
      "Mangrove": [23707],
      "MangroveTest": [70515],
      "MgvLib": [24540],
      "P": [24511],
      "Script": [2022],
      "StdStorage": [3553],
      "Test": [3455],
      "Test2": [70890],
      "TestMaker": [73404],
      "TestMoriartyMaker": [73653],
      "TestTaker": [73996],
      "TestToken": [76251],
      "TrivialTestMaker": [72724],
      "Utilities": [72490],
      "Vm": [5425],
      "console": [13489],
      "console2": [21553],
      "csl": [21553],
      "stdError": [3525],
      "stdMath": [4796],
      "stdStorage": [4655]
    },
    "nodeType": "SourceUnit",
    "src": "37:18723:93",
    "nodes": [
      {
        "id": 59653,
        "nodeType": "PragmaDirective",
        "src": "37:24:93",
        "literals": ["solidity", "^", "0.8", ".10"]
      },
      {
        "id": 59654,
        "nodeType": "ImportDirective",
        "src": "63:39:93",
        "absolutePath": "packages/mangrove-solidity/test/lib/MangroveTest.sol",
        "file": "mgv_test/lib/MangroveTest.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61895,
        "sourceUnit": 70516,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 61894,
        "nodeType": "ContractDefinition",
        "src": "104:18655:93",
        "nodes": [
          {
            "id": 59661,
            "nodeType": "VariableDeclaration",
            "src": "159:13:93",
            "constant": false,
            "mutability": "mutable",
            "name": "tkr",
            "nameLocation": "169:3:93",
            "scope": 61894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestTaker_$73996",
              "typeString": "contract TestTaker"
            },
            "typeName": {
              "id": 59660,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 59659,
                "name": "TestTaker",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 73996,
                "src": "159:9:93"
              },
              "referencedDeclaration": 73996,
              "src": "159:9:93",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestTaker_$73996",
                "typeString": "contract TestTaker"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 59664,
            "nodeType": "VariableDeclaration",
            "src": "176:21:93",
            "constant": false,
            "mutability": "mutable",
            "name": "gasreq",
            "nameLocation": "181:6:93",
            "scope": 61894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 59662,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "176:4:93",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3230305f303030",
              "id": 59663,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "190:7:93",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_200000_by_1",
                "typeString": "int_const 200000"
              },
              "value": "200_000"
            },
            "visibility": "internal"
          },
          {
            "id": 59666,
            "nodeType": "VariableDeclaration",
            "src": "201:8:93",
            "constant": false,
            "mutability": "mutable",
            "name": "ofr",
            "nameLocation": "206:3:93",
            "scope": 61894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 59665,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "201:4:93",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 59669,
            "nodeType": "VariableDeclaration",
            "src": "213:19:93",
            "constant": false,
            "mutability": "mutable",
            "name": "_gasprice",
            "nameLocation": "218:9:93",
            "scope": 61894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 59667,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "213:4:93",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3530",
              "id": 59668,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "230:2:93",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50_by_1",
                "typeString": "int_const 50"
              },
              "value": "50"
            },
            "visibility": "internal"
          },
          {
            "id": 59671,
            "nodeType": "VariableDeclaration",
            "src": "285:16:93",
            "constant": false,
            "mutability": "mutable",
            "name": "weiBalMaker",
            "nameLocation": "290:11:93",
            "scope": 61894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 59670,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "285:4:93",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 59674,
            "nodeType": "VariableDeclaration",
            "src": "305:21:93",
            "constant": false,
            "mutability": "mutable",
            "name": "willFail",
            "nameLocation": "310:8:93",
            "scope": 61894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 59672,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "305:4:93",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 59673,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "321:5:93",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "id": 59677,
            "nodeType": "VariableDeclaration",
            "src": "330:24:93",
            "constant": false,
            "mutability": "mutable",
            "name": "makerRevert",
            "nameLocation": "335:11:93",
            "scope": 61894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 59675,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "330:4:93",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 59676,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "349:5:93",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "id": 59679,
            "nodeType": "VariableDeclaration",
            "src": "358:11:93",
            "constant": false,
            "mutability": "mutable",
            "name": "called",
            "nameLocation": "363:6:93",
            "scope": 61894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 59678,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "358:4:93",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 59682,
            "nodeType": "VariableDeclaration",
            "src": "373:33:93",
            "constant": false,
            "mutability": "mutable",
            "name": "sExecuteRevertData",
            "nameLocation": "380:18:93",
            "scope": 61894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 59680,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "373:6:93",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "4e4f4b",
              "id": 59681,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "401:5:93",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_8fb505ed75d9d38475c70bac2c3ea62d45335173a71b2e4936bd9f05bf0ddfea",
                "typeString": "literal_string \"NOK\""
              },
              "value": "NOK"
            },
            "visibility": "internal"
          },
          {
            "id": 59685,
            "nodeType": "VariableDeclaration",
            "src": "410:34:93",
            "constant": false,
            "mutability": "mutable",
            "name": "bExecuteRevertData",
            "nameLocation": "418:18:93",
            "scope": 61894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 59683,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "410:7:93",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "4e4f4b",
              "id": 59684,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "439:5:93",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_8fb505ed75d9d38475c70bac2c3ea62d45335173a71b2e4936bd9f05bf0ddfea",
                "typeString": "literal_string \"NOK\""
              },
              "value": "NOK"
            },
            "visibility": "internal"
          },
          {
            "id": 59688,
            "nodeType": "VariableDeclaration",
            "src": "448:33:93",
            "constant": false,
            "mutability": "mutable",
            "name": "executeReturnData",
            "nameLocation": "456:17:93",
            "scope": 61894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 59686,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "448:7:93",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "4e4f4b",
              "id": 59687,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "476:5:93",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_8fb505ed75d9d38475c70bac2c3ea62d45335173a71b2e4936bd9f05bf0ddfea",
                "typeString": "literal_string \"NOK\""
              },
              "value": "NOK"
            },
            "visibility": "internal"
          },
          {
            "id": 59702,
            "nodeType": "EventDefinition",
            "src": "486:132:93",
            "anonymous": false,
            "eventSelector": "1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c2",
            "name": "Execute",
            "nameLocation": "492:7:93",
            "parameters": {
              "id": 59701,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59690,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "mgv",
                  "nameLocation": "513:3:93",
                  "nodeType": "VariableDeclaration",
                  "scope": 59702,
                  "src": "505:11:93",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59689,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "505:7:93",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59692,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "base",
                  "nameLocation": "530:4:93",
                  "nodeType": "VariableDeclaration",
                  "scope": 59702,
                  "src": "522:12:93",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59691,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "522:7:93",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59694,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "quote",
                  "nameLocation": "548:5:93",
                  "nodeType": "VariableDeclaration",
                  "scope": 59702,
                  "src": "540:13:93",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59693,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "540:7:93",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59696,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "564:7:93",
                  "nodeType": "VariableDeclaration",
                  "scope": 59702,
                  "src": "559:12:93",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59695,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "559:4:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59698,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "takerWants",
                  "nameLocation": "582:10:93",
                  "nodeType": "VariableDeclaration",
                  "scope": 59702,
                  "src": "577:15:93",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59697,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "577:4:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59700,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "takerGives",
                  "nameLocation": "603:10:93",
                  "nodeType": "VariableDeclaration",
                  "scope": 59702,
                  "src": "598:15:93",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59699,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "598:4:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "499:118:93"
            }
          },
          {
            "id": 59745,
            "nodeType": "FunctionDefinition",
            "src": "622:392:93",
            "body": {
              "id": 59744,
              "nodeType": "Block",
              "src": "729:285:93",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 59717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 59712,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "743:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 59713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "743:10:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 59715,
                              "name": "mgv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69379,
                              "src": "759:3:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                                "typeString": "contract AbstractMangrove"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                                "typeString": "contract AbstractMangrove"
                              }
                            ],
                            "id": 59714,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70446,
                            "src": "757:1:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                              "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                            }
                          },
                          "id": 59716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "757:6:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "743:20:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 59711,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "735:7:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 59718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "735:29:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59719,
                  "nodeType": "ExpressionStatement",
                  "src": "735:29:93"
                },
                {
                  "condition": {
                    "id": 59720,
                    "name": "makerRevert",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 59677,
                    "src": "774:11:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59726,
                  "nodeType": "IfStatement",
                  "src": "770:58:93",
                  "trueBody": {
                    "id": 59725,
                    "nodeType": "Block",
                    "src": "787:41:93",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 59722,
                              "name": "sExecuteRevertData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59682,
                              "src": "802:18:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            ],
                            "id": 59721,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-19, -19],
                            "referencedDeclaration": -19,
                            "src": "795:6:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 59723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "795:26:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 59724,
                        "nodeType": "ExpressionStatement",
                        "src": "795:26:93"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 59728,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "853:3:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 59729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "853:10:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 59730,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59705,
                          "src": "871:5:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SingleOrder_$24534_calldata_ptr",
                            "typeString": "struct MgvLib.SingleOrder calldata"
                          }
                        },
                        "id": 59731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "outbound_tkn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24513,
                        "src": "871:18:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 59732,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59705,
                          "src": "897:5:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SingleOrder_$24534_calldata_ptr",
                            "typeString": "struct MgvLib.SingleOrder calldata"
                          }
                        },
                        "id": 59733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "inbound_tkn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24515,
                        "src": "897:17:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 59734,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59705,
                          "src": "922:5:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SingleOrder_$24534_calldata_ptr",
                            "typeString": "struct MgvLib.SingleOrder calldata"
                          }
                        },
                        "id": 59735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24517,
                        "src": "922:13:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 59736,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59705,
                          "src": "943:5:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SingleOrder_$24534_calldata_ptr",
                            "typeString": "struct MgvLib.SingleOrder calldata"
                          }
                        },
                        "id": 59737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "wants",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24522,
                        "src": "943:11:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 59738,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59705,
                          "src": "962:5:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SingleOrder_$24534_calldata_ptr",
                            "typeString": "struct MgvLib.SingleOrder calldata"
                          }
                        },
                        "id": 59739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "gives",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24524,
                        "src": "962:11:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 59727,
                      "name": "Execute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59702,
                      "src": "838:7:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 59740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "838:141:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59741,
                  "nodeType": "EmitStatement",
                  "src": "833:146:93"
                },
                {
                  "expression": {
                    "id": 59742,
                    "name": "executeReturnData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 59688,
                    "src": "992:17:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 59710,
                  "id": 59743,
                  "nodeType": "Return",
                  "src": "985:24:93"
                }
              ]
            },
            "baseFunctions": [24723],
            "functionSelector": "6c49c32c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "makerExecute",
            "nameLocation": "631:12:93",
            "overrides": {
              "id": 59707,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "696:8:93"
            },
            "parameters": {
              "id": 59706,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59705,
                  "mutability": "mutable",
                  "name": "trade",
                  "nameLocation": "672:5:93",
                  "nodeType": "VariableDeclaration",
                  "scope": 59745,
                  "src": "644:33:93",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SingleOrder_$24534_calldata_ptr",
                    "typeString": "struct MgvLib.SingleOrder"
                  },
                  "typeName": {
                    "id": 59704,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59703,
                      "name": "MgvLib.SingleOrder",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24534,
                      "src": "644:18:93"
                    },
                    "referencedDeclaration": 24534,
                    "src": "644:18:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SingleOrder_$24534_storage_ptr",
                      "typeString": "struct MgvLib.SingleOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "643:35:93"
            },
            "returnParameters": {
              "id": 59710,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59709,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59745,
                  "src": "718:7:93",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 59708,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "718:7:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "717:9:93"
            },
            "scope": 61894,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 59776,
            "nodeType": "FunctionDefinition",
            "src": "1018:323:93",
            "body": {
              "id": 59775,
              "nodeType": "Block",
              "src": "1136:205:93",
              "statements": [
                {
                  "expression": {
                    "id": 59756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59754,
                      "name": "called",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59679,
                      "src": "1142:6:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 59755,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1151:4:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1142:13:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59757,
                  "nodeType": "ExpressionStatement",
                  "src": "1142:13:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 59761,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59748,
                          "src": "1184:5:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SingleOrder_$24534_calldata_ptr",
                            "typeString": "struct MgvLib.SingleOrder calldata"
                          }
                        },
                        "id": 59762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "outbound_tkn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24513,
                        "src": "1184:18:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 59763,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59748,
                          "src": "1210:5:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SingleOrder_$24534_calldata_ptr",
                            "typeString": "struct MgvLib.SingleOrder calldata"
                          }
                        },
                        "id": 59764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "inbound_tkn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24515,
                        "src": "1210:17:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 59765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1235:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 59766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1250:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "id": 59767,
                        "name": "gasreq",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59664,
                        "src": "1265:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 59768,
                        "name": "_gasprice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59669,
                        "src": "1279:9:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 59769,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59748,
                          "src": "1296:5:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SingleOrder_$24534_calldata_ptr",
                            "typeString": "struct MgvLib.SingleOrder calldata"
                          }
                        },
                        "id": 59770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24517,
                        "src": "1296:13:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 59771,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59748,
                          "src": "1317:5:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SingleOrder_$24534_calldata_ptr",
                            "typeString": "struct MgvLib.SingleOrder calldata"
                          }
                        },
                        "id": 59772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24517,
                        "src": "1317:13:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 59758,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "1161:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 59760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25200,
                      "src": "1161:15:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256,uint256) payable external"
                      }
                    },
                    "id": 59773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1161:175:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59774,
                  "nodeType": "ExpressionStatement",
                  "src": "1161:175:93"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "renew_offer_at_posthook",
            "nameLocation": "1027:23:93",
            "parameters": {
              "id": 59752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59748,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "1084:5:93",
                  "nodeType": "VariableDeclaration",
                  "scope": 59776,
                  "src": "1056:33:93",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SingleOrder_$24534_calldata_ptr",
                    "typeString": "struct MgvLib.SingleOrder"
                  },
                  "typeName": {
                    "id": 59747,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59746,
                      "name": "MgvLib.SingleOrder",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24534,
                      "src": "1056:18:93"
                    },
                    "referencedDeclaration": 24534,
                    "src": "1056:18:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SingleOrder_$24534_storage_ptr",
                      "typeString": "struct MgvLib.SingleOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59751,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59776,
                  "src": "1095:27:93",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OrderResult_$24539_calldata_ptr",
                    "typeString": "struct MgvLib.OrderResult"
                  },
                  "typeName": {
                    "id": 59750,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59749,
                      "name": "MgvLib.OrderResult",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24539,
                      "src": "1095:18:93"
                    },
                    "referencedDeclaration": 24539,
                    "src": "1095:18:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OrderResult_$24539_storage_ptr",
                      "typeString": "struct MgvLib.OrderResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1050:76:93"
            },
            "returnParameters": {
              "id": 59753,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1136:0:93"
            },
            "scope": 61894,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 59807,
            "nodeType": "FunctionDefinition",
            "src": "1345:328:93",
            "body": {
              "id": 59806,
              "nodeType": "Block",
              "src": "1468:205:93",
              "statements": [
                {
                  "expression": {
                    "id": 59787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59785,
                      "name": "called",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59679,
                      "src": "1474:6:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 59786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1483:4:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1474:13:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59788,
                  "nodeType": "ExpressionStatement",
                  "src": "1474:13:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 59792,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59779,
                          "src": "1516:5:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SingleOrder_$24534_calldata_ptr",
                            "typeString": "struct MgvLib.SingleOrder calldata"
                          }
                        },
                        "id": 59793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "outbound_tkn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24513,
                        "src": "1516:18:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 59794,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59779,
                          "src": "1542:5:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SingleOrder_$24534_calldata_ptr",
                            "typeString": "struct MgvLib.SingleOrder calldata"
                          }
                        },
                        "id": 59795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "inbound_tkn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24515,
                        "src": "1542:17:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 59796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1567:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 59797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1582:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "id": 59798,
                        "name": "gasreq",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59664,
                        "src": "1597:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 59799,
                        "name": "_gasprice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59669,
                        "src": "1611:9:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 59800,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59779,
                          "src": "1628:5:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SingleOrder_$24534_calldata_ptr",
                            "typeString": "struct MgvLib.SingleOrder calldata"
                          }
                        },
                        "id": 59801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24517,
                        "src": "1628:13:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 59802,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59779,
                          "src": "1649:5:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SingleOrder_$24534_calldata_ptr",
                            "typeString": "struct MgvLib.SingleOrder calldata"
                          }
                        },
                        "id": 59803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24517,
                        "src": "1649:13:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 59789,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "1493:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 59791,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25200,
                      "src": "1493:15:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256,uint256) payable external"
                      }
                    },
                    "id": 59804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1493:175:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59805,
                  "nodeType": "ExpressionStatement",
                  "src": "1493:175:93"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "update_gas_offer_at_posthook",
            "nameLocation": "1354:28:93",
            "parameters": {
              "id": 59783,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59779,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "1416:5:93",
                  "nodeType": "VariableDeclaration",
                  "scope": 59807,
                  "src": "1388:33:93",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SingleOrder_$24534_calldata_ptr",
                    "typeString": "struct MgvLib.SingleOrder"
                  },
                  "typeName": {
                    "id": 59778,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59777,
                      "name": "MgvLib.SingleOrder",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24534,
                      "src": "1388:18:93"
                    },
                    "referencedDeclaration": 24534,
                    "src": "1388:18:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SingleOrder_$24534_storage_ptr",
                      "typeString": "struct MgvLib.SingleOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59782,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59807,
                  "src": "1427:27:93",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OrderResult_$24539_calldata_ptr",
                    "typeString": "struct MgvLib.OrderResult"
                  },
                  "typeName": {
                    "id": 59781,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59780,
                      "name": "MgvLib.OrderResult",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24539,
                      "src": "1427:18:93"
                    },
                    "referencedDeclaration": 24539,
                    "src": "1427:18:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OrderResult_$24539_storage_ptr",
                      "typeString": "struct MgvLib.OrderResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1382:76:93"
            },
            "returnParameters": {
              "id": 59784,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1468:0:93"
            },
            "scope": 61894,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 59825,
            "nodeType": "FunctionDefinition",
            "src": "1677:171:93",
            "body": {
              "id": 59824,
              "nodeType": "Block",
              "src": "1781:67:93",
              "statements": [
                {
                  "expression": {
                    "id": 59818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59816,
                      "name": "called",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59679,
                      "src": "1787:6:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 59817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1796:4:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1787:13:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59819,
                  "nodeType": "ExpressionStatement",
                  "src": "1787:13:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "506f7374686f6f6b2073686f756c64206e6f742062652063616c6c6564",
                        "id": 59821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1811:31:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f7b2b0eec0f88efeedea9d99e3b4aef869c24e2a9a6aff9b56fc15ea5d6e9e7",
                          "typeString": "literal_string \"Posthook should not be called\""
                        },
                        "value": "Posthook should not be called"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1f7b2b0eec0f88efeedea9d99e3b4aef869c24e2a9a6aff9b56fc15ea5d6e9e7",
                          "typeString": "literal_string \"Posthook should not be called\""
                        }
                      ],
                      "id": 59820,
                      "name": "fail",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [2718, 216],
                      "referencedDeclaration": 2718,
                      "src": "1806:4:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 59822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1806:37:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59823,
                  "nodeType": "ExpressionStatement",
                  "src": "1806:37:93"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "failer_posthook",
            "nameLocation": "1686:15:93",
            "parameters": {
              "id": 59814,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59810,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59825,
                  "src": "1707:27:93",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SingleOrder_$24534_calldata_ptr",
                    "typeString": "struct MgvLib.SingleOrder"
                  },
                  "typeName": {
                    "id": 59809,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59808,
                      "name": "MgvLib.SingleOrder",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24534,
                      "src": "1707:18:93"
                    },
                    "referencedDeclaration": 24534,
                    "src": "1707:18:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SingleOrder_$24534_storage_ptr",
                      "typeString": "struct MgvLib.SingleOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59813,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59825,
                  "src": "1740:27:93",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OrderResult_$24539_calldata_ptr",
                    "typeString": "struct MgvLib.OrderResult"
                  },
                  "typeName": {
                    "id": 59812,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59811,
                      "name": "MgvLib.OrderResult",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24539,
                      "src": "1740:18:93"
                    },
                    "referencedDeclaration": 24539,
                    "src": "1740:18:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OrderResult_$24539_storage_ptr",
                      "typeString": "struct MgvLib.OrderResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1701:70:93"
            },
            "returnParameters": {
              "id": 59815,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1781:0:93"
            },
            "scope": 61894,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 59875,
            "nodeType": "FunctionDefinition",
            "src": "1852:400:93",
            "body": {
              "id": 59874,
              "nodeType": "Block",
              "src": "1962:290:93",
              "statements": [
                {
                  "expression": {
                    "id": 59836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59834,
                      "name": "called",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59679,
                      "src": "1968:6:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 59835,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1977:4:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1968:13:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59837,
                  "nodeType": "ExpressionStatement",
                  "src": "1968:13:93"
                },
                {
                  "assignments": [59839],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59839,
                      "mutability": "mutable",
                      "name": "bal",
                      "nameLocation": "1992:3:93",
                      "nodeType": "VariableDeclaration",
                      "scope": 59874,
                      "src": "1987:8:93",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 59838,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1987:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59846,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 59843,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2014:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                              "typeString": "contract MakerPosthookTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                              "typeString": "contract MakerPosthookTest"
                            }
                          ],
                          "id": 59842,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70497,
                          "src": "2012:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 59844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2012:7:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 59840,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "1998:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 59841,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24218,
                      "src": "1998:13:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 59845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1998:22:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1987:33:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 59851,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "2045:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 59850,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "2043:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 59852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2043:7:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 59854,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "2054:5:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 59853,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "2052:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 59855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2052:8:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 59856,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59666,
                        "src": "2062:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 59857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2067:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 59847,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "2026:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 59849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "retractOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25353,
                      "src": "2026:16:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,bool) external returns (uint256)"
                      }
                    },
                    "id": 59858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2026:46:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 59859,
                  "nodeType": "ExpressionStatement",
                  "src": "2026:46:93"
                },
                {
                  "condition": {
                    "id": 59860,
                    "name": "makerRevert",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 59677,
                    "src": "2082:11:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59873,
                  "nodeType": "IfStatement",
                  "src": "2078:170:93",
                  "trueBody": {
                    "id": 59872,
                    "nodeType": "Block",
                    "src": "2095:153:93",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 59862,
                              "name": "bal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59839,
                              "src": "2121:3:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 59866,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "2150:4:93",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                                        "typeString": "contract MakerPosthookTest"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                                        "typeString": "contract MakerPosthookTest"
                                      }
                                    ],
                                    "id": 59865,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      70446, 70463, 70480, 70497, 70514
                                    ],
                                    "referencedDeclaration": 70497,
                                    "src": "2148:1:93",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                                      "typeString": "function (contract Test) pure returns (address payable)"
                                    }
                                  },
                                  "id": 59867,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2148:7:93",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "expression": {
                                  "id": 59863,
                                  "name": "mgv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69379,
                                  "src": "2134:3:93",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                                    "typeString": "contract AbstractMangrove"
                                  }
                                },
                                "id": 59864,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balanceOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 24218,
                                "src": "2134:13:93",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view external returns (uint256)"
                                }
                              },
                              "id": 59868,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2134:22:93",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "43616e63656c206f66666572206f662061206661696c6564206f666665722073686f756c64206e6f7420676976652070726f766973696f6e20746f206d616b6572",
                              "id": 59869,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2166:67:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4a9df95dd402530092681280c52002a790d81d6b40ee46fc8b69d5732c14304a",
                                "typeString": "literal_string \"Cancel offer of a failed offer should not give provision to maker\""
                              },
                              "value": "Cancel offer of a failed offer should not give provision to maker"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4a9df95dd402530092681280c52002a790d81d6b40ee46fc8b69d5732c14304a",
                                "typeString": "literal_string \"Cancel offer of a failed offer should not give provision to maker\""
                              }
                            ],
                            "id": 59861,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996,
                              3033, 3070, 320, 345, 375, 400, 459, 484, 514,
                              539, 1639, 1674
                            ],
                            "referencedDeclaration": 539,
                            "src": "2103:8:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 59870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2103:138:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 59871,
                        "nodeType": "ExpressionStatement",
                        "src": "2103:138:93"
                      }
                    ]
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retractOffer_posthook",
            "nameLocation": "1861:21:93",
            "parameters": {
              "id": 59832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59828,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59875,
                  "src": "1888:27:93",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SingleOrder_$24534_calldata_ptr",
                    "typeString": "struct MgvLib.SingleOrder"
                  },
                  "typeName": {
                    "id": 59827,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59826,
                      "name": "MgvLib.SingleOrder",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24534,
                      "src": "1888:18:93"
                    },
                    "referencedDeclaration": 24534,
                    "src": "1888:18:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SingleOrder_$24534_storage_ptr",
                      "typeString": "struct MgvLib.SingleOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59831,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59875,
                  "src": "1921:27:93",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OrderResult_$24539_calldata_ptr",
                    "typeString": "struct MgvLib.OrderResult"
                  },
                  "typeName": {
                    "id": 59830,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59829,
                      "name": "MgvLib.OrderResult",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24539,
                      "src": "1921:18:93"
                    },
                    "referencedDeclaration": 24539,
                    "src": "1921:18:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OrderResult_$24539_storage_ptr",
                      "typeString": "struct MgvLib.OrderResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1882:70:93"
            },
            "returnParameters": {
              "id": 59833,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1962:0:93"
            },
            "scope": 61894,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 59885,
            "nodeType": "VariableDeclaration",
            "src": "2256:76:93",
            "constant": false,
            "mutability": "mutable",
            "name": "_posthook",
            "nameLocation": "2323:9:93",
            "scope": 61894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
              "typeString": "function (struct MgvLib.SingleOrder,struct MgvLib.OrderResult)"
            },
            "typeName": {
              "id": 59884,
              "nodeType": "FunctionTypeName",
              "parameterTypes": {
                "id": 59882,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 59878,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 59884,
                    "src": "2265:27:93",
                    "stateVariable": false,
                    "storageLocation": "calldata",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SingleOrder_$24534_calldata_ptr",
                      "typeString": "struct MgvLib.SingleOrder"
                    },
                    "typeName": {
                      "id": 59877,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 59876,
                        "name": "MgvLib.SingleOrder",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 24534,
                        "src": "2265:18:93"
                      },
                      "referencedDeclaration": 24534,
                      "src": "2265:18:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SingleOrder_$24534_storage_ptr",
                        "typeString": "struct MgvLib.SingleOrder"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 59881,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 59884,
                    "src": "2294:27:93",
                    "stateVariable": false,
                    "storageLocation": "calldata",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OrderResult_$24539_calldata_ptr",
                      "typeString": "struct MgvLib.OrderResult"
                    },
                    "typeName": {
                      "id": 59880,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 59879,
                        "name": "MgvLib.OrderResult",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 24539,
                        "src": "2294:18:93"
                      },
                      "referencedDeclaration": 24539,
                      "src": "2294:18:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OrderResult_$24539_storage_ptr",
                        "typeString": "struct MgvLib.OrderResult"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "2264:58:93"
              },
              "returnParameterTypes": {
                "id": 59883,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "2323:0:93"
              },
              "src": "2256:76:93",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                "typeString": "function (struct MgvLib.SingleOrder,struct MgvLib.OrderResult)"
              },
              "visibility": "internal"
            },
            "visibility": "internal"
          },
          {
            "id": 59966,
            "nodeType": "FunctionDefinition",
            "src": "2337:780:93",
            "body": {
              "id": 59965,
              "nodeType": "Block",
              "src": "2461:656:93",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 59901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 59896,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2475:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 59897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2475:10:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 59899,
                              "name": "mgv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69379,
                              "src": "2491:3:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                                "typeString": "contract AbstractMangrove"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                                "typeString": "contract AbstractMangrove"
                              }
                            ],
                            "id": 59898,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70446,
                            "src": "2489:1:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                              "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                            }
                          },
                          "id": 59900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2489:6:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2475:20:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 59895,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "2467:7:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 59902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2467:29:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59903,
                  "nodeType": "ExpressionStatement",
                  "src": "2467:29:93"
                },
                {
                  "assignments": [59905],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59905,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "2507:7:93",
                      "nodeType": "VariableDeclaration",
                      "scope": 59965,
                      "src": "2502:12:93",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 59904,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2502:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59911,
                  "initialValue": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 59909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 59906,
                            "name": "result",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59891,
                            "src": "2518:6:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OrderResult_$24539_calldata_ptr",
                              "typeString": "struct MgvLib.OrderResult calldata"
                            }
                          },
                          "id": 59907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mgvData",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24538,
                          "src": "2518:14:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "6d67762f747261646553756363657373",
                          "id": 59908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2536:18:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                            "typeString": "literal_string \"mgv/tradeSuccess\""
                          },
                          "value": "mgv/tradeSuccess"
                        },
                        "src": "2518:36:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 59910,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2517:38:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2502:53:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59913,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59905,
                        "src": "2570:7:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 59918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2579:26:93",
                        "subExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 59916,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 59914,
                                "name": "makerRevert",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59677,
                                "src": "2581:11:93",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "id": 59915,
                                "name": "willFail",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59674,
                                "src": "2596:8:93",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "2581:23:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 59917,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2580:25:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e636f7272656374207375636365737320666c6167",
                        "id": 59919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2607:24:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f1ec4f0c4b7d8e2b616fc3bc415d26417116fe0c9de8572cc28aa5c9f9e25e83",
                          "typeString": "literal_string \"incorrect success flag\""
                        },
                        "value": "incorrect success flag"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f1ec4f0c4b7d8e2b616fc3bc415d26417116fe0c9de8572cc28aa5c9f9e25e83",
                          "typeString": "literal_string \"incorrect success flag\""
                        }
                      ],
                      "id": 59912,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 2804,
                      "src": "2561:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,bool,string memory)"
                      }
                    },
                    "id": 59920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2561:71:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59921,
                  "nodeType": "ExpressionStatement",
                  "src": "2561:71:93"
                },
                {
                  "condition": {
                    "id": 59922,
                    "name": "makerRevert",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 59677,
                    "src": "2642:11:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 59941,
                    "nodeType": "Block",
                    "src": "2784:134:93",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 59932,
                                "name": "result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59891,
                                "src": "2810:6:93",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderResult_$24539_calldata_ptr",
                                  "typeString": "struct MgvLib.OrderResult calldata"
                                }
                              },
                              "id": 59933,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mgvData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 24538,
                              "src": "2810:14:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "6d67762f747261646553756363657373",
                                  "id": 59936,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2842:18:93",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                                    "typeString": "literal_string \"mgv/tradeSuccess\""
                                  },
                                  "value": "mgv/tradeSuccess"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                                    "typeString": "literal_string \"mgv/tradeSuccess\""
                                  }
                                ],
                                "id": 59935,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2834:7:93",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes32_$",
                                  "typeString": "type(bytes32)"
                                },
                                "typeName": {
                                  "id": 59934,
                                  "name": "bytes32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2834:7:93",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 59937,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2834:27:93",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "6d6776446174612073686f756c6420626520747261646553756363657373",
                              "id": 59938,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2871:32:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_61d5da5e54380674736e6996688a18b6953dea9a364ad94cb2584c6ebdd6cc56",
                                "typeString": "literal_string \"mgvData should be tradeSuccess\""
                              },
                              "value": "mgvData should be tradeSuccess"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_61d5da5e54380674736e6996688a18b6953dea9a364ad94cb2584c6ebdd6cc56",
                                "typeString": "literal_string \"mgvData should be tradeSuccess\""
                              }
                            ],
                            "id": 59931,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996,
                              3033, 3070, 320, 345, 375, 400, 459, 484, 514,
                              539, 1639, 1674
                            ],
                            "referencedDeclaration": 400,
                            "src": "2792:8:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bytes32,bytes32,string memory)"
                            }
                          },
                          "id": 59939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2792:119:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 59940,
                        "nodeType": "ExpressionStatement",
                        "src": "2792:119:93"
                      }
                    ]
                  },
                  "id": 59942,
                  "nodeType": "IfStatement",
                  "src": "2638:280:93",
                  "trueBody": {
                    "id": 59930,
                    "nodeType": "Block",
                    "src": "2655:123:93",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 59924,
                                "name": "result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59891,
                                "src": "2681:6:93",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderResult_$24539_calldata_ptr",
                                  "typeString": "struct MgvLib.OrderResult calldata"
                                }
                              },
                              "id": 59925,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mgvData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 24538,
                              "src": "2681:14:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "6d67762f6d616b6572526576657274",
                              "id": 59926,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2705:17:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7f1767113efd8f000c2792fdbf6264b4b726d4e8bf3e972fc7ed78ddedf9a514",
                                "typeString": "literal_string \"mgv/makerRevert\""
                              },
                              "value": "mgv/makerRevert"
                            },
                            {
                              "hexValue": "6d6776446174612073686f756c64206265206d616b6572526576657274",
                              "id": 59927,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2732:31:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5ac3c2ac25666f23f1bf3d0fb82772ae6a00fe9d193e87d226560d2dbc4a4f72",
                                "typeString": "literal_string \"mgvData should be makerRevert\""
                              },
                              "value": "mgvData should be makerRevert"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7f1767113efd8f000c2792fdbf6264b4b726d4e8bf3e972fc7ed78ddedf9a514",
                                "typeString": "literal_string \"mgv/makerRevert\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5ac3c2ac25666f23f1bf3d0fb82772ae6a00fe9d193e87d226560d2dbc4a4f72",
                                "typeString": "literal_string \"mgvData should be makerRevert\""
                              }
                            ],
                            "id": 59923,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996,
                              3033, 3070, 320, 345, 375, 400, 459, 484, 514,
                              539, 1639, 1674
                            ],
                            "referencedDeclaration": 400,
                            "src": "2663:8:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bytes32,bytes32,string memory)"
                            }
                          },
                          "id": 59928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2663:108:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 59929,
                        "nodeType": "ExpressionStatement",
                        "src": "2663:108:93"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2941:93:93",
                        "subExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 59948,
                                    "name": "order",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 59888,
                                    "src": "2973:5:93",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_SingleOrder_$24534_calldata_ptr",
                                      "typeString": "struct MgvLib.SingleOrder calldata"
                                    }
                                  },
                                  "id": 59949,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "outbound_tkn",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 24513,
                                  "src": "2973:18:93",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 59950,
                                    "name": "order",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 59888,
                                    "src": "2993:5:93",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_SingleOrder_$24534_calldata_ptr",
                                      "typeString": "struct MgvLib.SingleOrder calldata"
                                    }
                                  },
                                  "id": 59951,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "inbound_tkn",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 24515,
                                  "src": "2993:17:93",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 59952,
                                    "name": "order",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 59888,
                                    "src": "3012:5:93",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_SingleOrder_$24534_calldata_ptr",
                                      "typeString": "struct MgvLib.SingleOrder calldata"
                                    }
                                  },
                                  "id": 59953,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "offerId",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 24517,
                                  "src": "3012:13:93",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 59946,
                                  "name": "mgv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69379,
                                  "src": "2962:3:93",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                                    "typeString": "contract AbstractMangrove"
                                  }
                                },
                                "id": 59947,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "offers",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 24205,
                                "src": "2962:10:93",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_userDefinedValueType$_t_$32167_$",
                                  "typeString": "function (address,address,uint256) view external returns (t)"
                                }
                              },
                              "id": 59954,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2962:64:93",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                                "typeString": "t"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                                "typeString": "t"
                              }
                            ],
                            "expression": {
                              "id": 59944,
                              "name": "mgv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69379,
                              "src": "2942:3:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                                "typeString": "contract AbstractMangrove"
                              }
                            },
                            "id": 59945,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isLive",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24506,
                            "src": "2942:10:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_pure$_t_userDefinedValueType$_t_$32167_$returns$_t_bool_$",
                              "typeString": "function (t) pure external returns (bool)"
                            }
                          },
                          "id": 59955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2942:92:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6666657220776173206e6f742072656d6f7665642061667465722074616b65",
                        "id": 59957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3042:34:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_62fa094e305e585a952a6f5e9eab9b66882f8e2681db7b371e685ebd0c58223d",
                          "typeString": "literal_string \"Offer was not removed after take\""
                        },
                        "value": "Offer was not removed after take"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_62fa094e305e585a952a6f5e9eab9b66882f8e2681db7b371e685ebd0c58223d",
                          "typeString": "literal_string \"Offer was not removed after take\""
                        }
                      ],
                      "id": 59943,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "2923:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 59958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2923:159:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59959,
                  "nodeType": "ExpressionStatement",
                  "src": "2923:159:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59961,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59888,
                        "src": "3098:5:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SingleOrder_$24534_calldata_ptr",
                          "typeString": "struct MgvLib.SingleOrder calldata"
                        }
                      },
                      {
                        "id": 59962,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59891,
                        "src": "3105:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OrderResult_$24539_calldata_ptr",
                          "typeString": "struct MgvLib.OrderResult calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SingleOrder_$24534_calldata_ptr",
                          "typeString": "struct MgvLib.SingleOrder calldata"
                        },
                        {
                          "typeIdentifier": "t_struct$_OrderResult_$24539_calldata_ptr",
                          "typeString": "struct MgvLib.OrderResult calldata"
                        }
                      ],
                      "id": 59960,
                      "name": "_posthook",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59885,
                      "src": "3088:9:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                        "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata)"
                      }
                    },
                    "id": 59963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3088:24:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59964,
                  "nodeType": "ExpressionStatement",
                  "src": "3088:24:93"
                }
              ]
            },
            "baseFunctions": [24732],
            "functionSelector": "3d3d130d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "makerPosthook",
            "nameLocation": "2346:13:93",
            "overrides": {
              "id": 59893,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2452:8:93"
            },
            "parameters": {
              "id": 59892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59888,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "2393:5:93",
                  "nodeType": "VariableDeclaration",
                  "scope": 59966,
                  "src": "2365:33:93",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SingleOrder_$24534_calldata_ptr",
                    "typeString": "struct MgvLib.SingleOrder"
                  },
                  "typeName": {
                    "id": 59887,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59886,
                      "name": "MgvLib.SingleOrder",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24534,
                      "src": "2365:18:93"
                    },
                    "referencedDeclaration": 24534,
                    "src": "2365:18:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SingleOrder_$24534_storage_ptr",
                      "typeString": "struct MgvLib.SingleOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59891,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "2432:6:93",
                  "nodeType": "VariableDeclaration",
                  "scope": 59966,
                  "src": "2404:34:93",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OrderResult_$24539_calldata_ptr",
                    "typeString": "struct MgvLib.OrderResult"
                  },
                  "typeName": {
                    "id": 59890,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59889,
                      "name": "MgvLib.OrderResult",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24539,
                      "src": "2404:18:93"
                    },
                    "referencedDeclaration": 24539,
                    "src": "2404:18:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OrderResult_$24539_storage_ptr",
                      "typeString": "struct MgvLib.OrderResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2359:83:93"
            },
            "returnParameters": {
              "id": 59894,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2461:0:93"
            },
            "scope": 61894,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 60032,
            "nodeType": "FunctionDefinition",
            "src": "3121:315:93",
            "body": {
              "id": 60031,
              "nodeType": "Block",
              "src": "3154:282:93",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 59970,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "3160:5:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_MakerPosthookTest_$61894_$",
                          "typeString": "type(contract super MakerPosthookTest)"
                        }
                      },
                      "id": 59972,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setUp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 69507,
                      "src": "3160:11:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 59973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3160:13:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59974,
                  "nodeType": "ExpressionStatement",
                  "src": "3160:13:93"
                },
                {
                  "expression": {
                    "id": 59985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59975,
                      "name": "tkr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59661,
                      "src": "3180:3:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestTaker_$73996",
                        "typeString": "contract TestTaker"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 59978,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69382,
                              "src": "3199:4:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 59977,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "3197:1:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 59979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3197:7:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 59981,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69385,
                              "src": "3208:5:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 59980,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "3206:1:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 59982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3206:8:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "54616b6572",
                          "id": 59983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3216:7:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_0d29b18dac8eed1f8f259977664b47cdd78620bcdd0d7888047d3bdcef820dbc",
                            "typeString": "literal_string \"Taker\""
                          },
                          "value": "Taker"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_0d29b18dac8eed1f8f259977664b47cdd78620bcdd0d7888047d3bdcef820dbc",
                            "typeString": "literal_string \"Taker\""
                          }
                        ],
                        "id": 59976,
                        "name": "setupTaker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70378,
                        "src": "3186:10:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$_t_contract$_TestTaker_$73996_$",
                          "typeString": "function (address,address,string memory) returns (contract TestTaker)"
                        }
                      },
                      "id": 59984,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3186:38:93",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestTaker_$73996",
                        "typeString": "contract TestTaker"
                      }
                    },
                    "src": "3180:44:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestTaker_$73996",
                      "typeString": "contract TestTaker"
                    }
                  },
                  "id": 59986,
                  "nodeType": "ExpressionStatement",
                  "src": "3180:44:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 59989,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "3237:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 59988,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "3235:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 59990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3235:7:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 59992,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3246:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                              "typeString": "contract MakerPosthookTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                              "typeString": "contract MakerPosthookTest"
                            }
                          ],
                          "id": 59991,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70497,
                          "src": "3244:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 59993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3244:7:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 59994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3253:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        }
                      ],
                      "id": 59987,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [2399, 2416, 2519],
                      "referencedDeclaration": 2416,
                      "src": "3230:4:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 59995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3230:31:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59996,
                  "nodeType": "ExpressionStatement",
                  "src": "3230:31:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 59999,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "3274:5:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 59998,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "3272:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 60000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3272:8:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 60003,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59661,
                            "src": "3290:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          ],
                          "id": 60002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3282:7:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 60001,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3282:7:93",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 60004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3282:12:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 60005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3296:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 59997,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [2399, 2416, 2519],
                      "referencedDeclaration": 2416,
                      "src": "3267:4:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 60006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3267:37:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60007,
                  "nodeType": "ExpressionStatement",
                  "src": "3267:37:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60011,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69382,
                        "src": "3326:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 60012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3332:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 60008,
                        "name": "tkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59661,
                        "src": "3311:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$73996",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 60010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approveMgv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73728,
                      "src": "3311:14:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,uint256) external"
                      }
                    },
                    "id": 60013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3311:29:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60014,
                  "nodeType": "ExpressionStatement",
                  "src": "3311:29:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60018,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69385,
                        "src": "3373:5:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 60019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3380:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 60015,
                        "name": "tkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59661,
                        "src": "3358:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$73996",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 60017,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approveMgv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73728,
                      "src": "3358:14:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,uint256) external"
                      }
                    },
                    "id": 60020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3358:30:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60021,
                  "nodeType": "ExpressionStatement",
                  "src": "3358:30:93"
                },
                {
                  "expression": {
                    "id": 60029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60022,
                      "name": "weiBalMaker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59671,
                      "src": "3395:11:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 60026,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "3425:4:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                                "typeString": "contract MakerPosthookTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                                "typeString": "contract MakerPosthookTest"
                              }
                            ],
                            "id": 60025,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70497,
                            "src": "3423:1:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                              "typeString": "function (contract Test) pure returns (address payable)"
                            }
                          },
                          "id": 60027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3423:7:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "expression": {
                          "id": 60023,
                          "name": "mgv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69379,
                          "src": "3409:3:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                            "typeString": "contract AbstractMangrove"
                          }
                        },
                        "id": 60024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24218,
                        "src": "3409:13:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 60028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3409:22:93",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3395:36:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 60030,
                  "nodeType": "ExpressionStatement",
                  "src": "3395:36:93"
                }
              ]
            },
            "baseFunctions": [69507],
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "3130:5:93",
            "overrides": {
              "id": 59968,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3145:8:93"
            },
            "parameters": {
              "id": 59967,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3135:2:93"
            },
            "returnParameters": {
              "id": 59969,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3154:0:93"
            },
            "scope": 61894,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 60155,
            "nodeType": "FunctionDefinition",
            "src": "3440:1072:93",
            "body": {
              "id": 60154,
              "nodeType": "Block",
              "src": "3494:1018:93",
              "statements": [
                {
                  "assignments": [60036],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60036,
                      "mutability": "mutable",
                      "name": "mkr_provision",
                      "nameLocation": "3505:13:93",
                      "nodeType": "VariableDeclaration",
                      "scope": 60154,
                      "src": "3500:18:93",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 60035,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3500:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60047,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 60039,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "3536:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 60038,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "3534:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 60040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3534:7:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 60042,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "3545:5:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 60041,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "3543:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 60043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3543:8:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 60044,
                        "name": "gasreq",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59664,
                        "src": "3553:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 60045,
                        "name": "_gasprice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59669,
                        "src": "3561:9:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 60037,
                      "name": "getProvision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [69975, 70042],
                      "referencedDeclaration": 70042,
                      "src": "3521:12:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 60046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3521:50:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3500:71:93"
                },
                {
                  "expression": {
                    "id": 60050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60048,
                      "name": "_posthook",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59885,
                      "src": "3577:9:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                        "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 60049,
                      "name": "renew_offer_at_posthook",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59776,
                      "src": "3589:23:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                        "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata)"
                      }
                    },
                    "src": "3577:35:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                      "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata)"
                    }
                  },
                  "id": 60051,
                  "nodeType": "ExpressionStatement",
                  "src": "3577:35:93"
                },
                {
                  "expression": {
                    "id": 60067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60052,
                      "name": "ofr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59666,
                      "src": "3619:3:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 60056,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69382,
                              "src": "3647:4:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 60055,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "3645:1:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 60057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3645:7:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 60059,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69385,
                              "src": "3662:5:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 60058,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "3660:1:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 60060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3660:8:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 60061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3676:7:93",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "31",
                          "id": 60062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3691:7:93",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "id": 60063,
                          "name": "gasreq",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59664,
                          "src": "3706:6:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 60064,
                          "name": "_gasprice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59669,
                          "src": "3720:9:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 60065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3737:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "id": 60053,
                          "name": "mgv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69379,
                          "src": "3625:3:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                            "typeString": "contract AbstractMangrove"
                          }
                        },
                        "id": 60054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "newOffer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25045,
                        "src": "3625:12:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 60066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3625:119:93",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3619:125:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 60068,
                  "nodeType": "ExpressionStatement",
                  "src": "3619:125:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 60073,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3782:4:93",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                                  "typeString": "contract MakerPosthookTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                                  "typeString": "contract MakerPosthookTest"
                                }
                              ],
                              "id": 60072,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70497,
                              "src": "3780:1:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                                "typeString": "function (contract Test) pure returns (address payable)"
                              }
                            },
                            "id": 60074,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3780:7:93",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 60070,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "3766:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          },
                          "id": 60071,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24218,
                          "src": "3766:13:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 60075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3766:22:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 60078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 60076,
                          "name": "weiBalMaker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59671,
                          "src": "3796:11:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 60077,
                          "name": "mkr_provision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60036,
                          "src": "3810:13:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3796:27:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374206d616b65722062616c616e6365206265666f72652074616b65",
                        "id": 60079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3871:37:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8245f276f759e21a347097e3a619ee7c9b1fba423244af9723ab5d4da613faac",
                          "typeString": "literal_string \"Incorrect maker balance before take\""
                        },
                        "value": "Incorrect maker balance before take"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8245f276f759e21a347097e3a619ee7c9b1fba423244af9723ab5d4da613faac",
                          "typeString": "literal_string \"Incorrect maker balance before take\""
                        }
                      ],
                      "id": 60069,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "3750:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 60080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3750:164:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60081,
                  "nodeType": "ExpressionStatement",
                  "src": "3750:164:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 60084,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "3934:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 60083,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70446,
                          "src": "3932:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 60085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3932:6:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 60082,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70817,
                      "src": "3921:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 60086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3921:18:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60087,
                  "nodeType": "ExpressionStatement",
                  "src": "3921:18:93"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 60090,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "3970:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 60089,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "3968:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 60091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3968:7:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 60093,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "3985:5:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 60092,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "3983:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 60094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3983:8:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 60096,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4001:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                              "typeString": "contract MakerPosthookTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                              "typeString": "contract MakerPosthookTest"
                            }
                          ],
                          "id": 60095,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70497,
                          "src": "3999:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 60097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3999:7:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 60098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4014:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 60099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4029:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "id": 60100,
                        "name": "_gasprice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59669,
                        "src": "4044:9:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 60101,
                        "name": "gasreq",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59664,
                        "src": "4061:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 60102,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59666,
                        "src": "4075:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 60103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4086:1:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 60088,
                      "name": "OfferWrite",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24706,
                      "src": "3950:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 60104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3950:143:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60105,
                  "nodeType": "EmitStatement",
                  "src": "3945:148:93"
                },
                {
                  "assignments": [60107],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60107,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "4104:7:93",
                      "nodeType": "VariableDeclaration",
                      "scope": 60154,
                      "src": "4099:12:93",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 60106,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4099:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60113,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 60110,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59666,
                        "src": "4123:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "302e35",
                        "id": 60111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4128:9:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "value": "0.5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 60108,
                        "name": "tkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59661,
                        "src": "4114:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$73996",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 60109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "take",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73782,
                      "src": "4114:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256,uint256) external returns (bool)"
                      }
                    },
                    "id": 60112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4114:24:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4099:39:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60115,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60107,
                        "src": "4155:7:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536e6970652073686f756c642073756363656564",
                        "id": 60116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4164:22:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_235d9bd4a0656a377f46136e840c1f3b3f9cbae06df49060139f7eb13837dc73",
                          "typeString": "literal_string \"Snipe should succeed\""
                        },
                        "value": "Snipe should succeed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_235d9bd4a0656a377f46136e840c1f3b3f9cbae06df49060139f7eb13837dc73",
                          "typeString": "literal_string \"Snipe should succeed\""
                        }
                      ],
                      "id": 60114,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "4144:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 60117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4144:43:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60118,
                  "nodeType": "ExpressionStatement",
                  "src": "4144:43:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60120,
                        "name": "called",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59679,
                        "src": "4204:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f7374486f6f6b206e6f742063616c6c6564",
                        "id": 60121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4212:21:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e243c7ce5a07bba9eed337c8e12a4dc1ca01ed6676e6d192bdc7a6eee2cce2f3",
                          "typeString": "literal_string \"PostHook not called\""
                        },
                        "value": "PostHook not called"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e243c7ce5a07bba9eed337c8e12a4dc1ca01ed6676e6d192bdc7a6eee2cce2f3",
                          "typeString": "literal_string \"PostHook not called\""
                        }
                      ],
                      "id": 60119,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "4193:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 60122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4193:41:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60123,
                  "nodeType": "ExpressionStatement",
                  "src": "4193:41:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 60128,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4273:4:93",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                                  "typeString": "contract MakerPosthookTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                                  "typeString": "contract MakerPosthookTest"
                                }
                              ],
                              "id": 60127,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70497,
                              "src": "4271:1:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                                "typeString": "function (contract Test) pure returns (address payable)"
                              }
                            },
                            "id": 60129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4271:7:93",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 60125,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "4257:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          },
                          "id": 60126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24218,
                          "src": "4257:13:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 60130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4257:22:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 60133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 60131,
                          "name": "weiBalMaker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59671,
                          "src": "4287:11:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 60132,
                          "name": "mkr_provision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60036,
                          "src": "4301:13:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4287:27:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374206d616b65722062616c616e63652061667465722074616b65",
                        "id": 60134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4339:36:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0266a58fa229fd33b42df294abbc3bde03b6ac0b99e3fd0d5d94cdd403ed8359",
                          "typeString": "literal_string \"Incorrect maker balance after take\""
                        },
                        "value": "Incorrect maker balance after take"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0266a58fa229fd33b42df294abbc3bde03b6ac0b99e3fd0d5d94cdd403ed8359",
                          "typeString": "literal_string \"Incorrect maker balance after take\""
                        }
                      ],
                      "id": 60124,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "4241:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 60135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4241:140:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60136,
                  "nodeType": "ExpressionStatement",
                  "src": "4241:140:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 60141,
                                    "name": "base",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 69382,
                                    "src": "4416:4:93",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestToken_$76251",
                                      "typeString": "contract TestToken"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestToken_$76251",
                                      "typeString": "contract TestToken"
                                    }
                                  ],
                                  "id": 60140,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    70446, 70463, 70480, 70497, 70514
                                  ],
                                  "referencedDeclaration": 70514,
                                  "src": "4414:1:93",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                    "typeString": "function (contract IERC20) pure returns (address payable)"
                                  }
                                },
                                "id": 60142,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4414:7:93",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 60144,
                                    "name": "quote",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 69385,
                                    "src": "4425:5:93",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestToken_$76251",
                                      "typeString": "contract TestToken"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestToken_$76251",
                                      "typeString": "contract TestToken"
                                    }
                                  ],
                                  "id": 60143,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    70446, 70463, 70480, 70497, 70514
                                  ],
                                  "referencedDeclaration": 70514,
                                  "src": "4423:1:93",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                    "typeString": "function (contract IERC20) pure returns (address payable)"
                                  }
                                },
                                "id": 60145,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4423:8:93",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 60146,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59666,
                                "src": "4433:3:93",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 60138,
                                "name": "mgv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69379,
                                "src": "4403:3:93",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                                  "typeString": "contract AbstractMangrove"
                                }
                              },
                              "id": 60139,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "offers",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 24205,
                              "src": "4403:10:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_userDefinedValueType$_t_$32167_$",
                                "typeString": "function (address,address,uint256) view external returns (t)"
                              }
                            },
                            "id": 60147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4403:34:93",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                              "typeString": "t"
                            }
                          },
                          "id": 60148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "gives",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32588,
                          "src": "4403:40:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$32167_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$32167_$",
                            "typeString": "function (t) pure returns (uint256)"
                          }
                        },
                        "id": 60149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4403:42:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 60150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4453:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "4f6666657220776173206e6f7420636f72726563746c792075706461746564",
                        "id": 60151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4468:33:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd85e6f0af3e8991caaa9693a15c42cccd7f9a28f4e3451a31fed213835f0f95",
                          "typeString": "literal_string \"Offer was not correctly updated\""
                        },
                        "value": "Offer was not correctly updated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd85e6f0af3e8991caaa9693a15c42cccd7f9a28f4e3451a31fed213835f0f95",
                          "typeString": "literal_string \"Offer was not correctly updated\""
                        }
                      ],
                      "id": 60137,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "4387:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 60152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4387:120:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60153,
                  "nodeType": "ExpressionStatement",
                  "src": "4387:120:93"
                }
              ]
            },
            "functionSelector": "1687e8d5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_renew_offer_after_partial_fill",
            "nameLocation": "3449:35:93",
            "parameters": {
              "id": 60033,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3484:2:93"
            },
            "returnParameters": {
              "id": 60034,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3494:0:93"
            },
            "scope": 61894,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 60278,
            "nodeType": "FunctionDefinition",
            "src": "4516:1072:93",
            "body": {
              "id": 60277,
              "nodeType": "Block",
              "src": "4571:1017:93",
              "statements": [
                {
                  "assignments": [60159],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60159,
                      "mutability": "mutable",
                      "name": "mkr_provision",
                      "nameLocation": "4582:13:93",
                      "nodeType": "VariableDeclaration",
                      "scope": 60277,
                      "src": "4577:18:93",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 60158,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4577:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60170,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 60162,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "4613:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 60161,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "4611:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 60163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4611:7:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 60165,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "4622:5:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 60164,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "4620:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 60166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4620:8:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 60167,
                        "name": "gasreq",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59664,
                        "src": "4630:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 60168,
                        "name": "_gasprice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59669,
                        "src": "4638:9:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 60160,
                      "name": "getProvision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [69975, 70042],
                      "referencedDeclaration": 70042,
                      "src": "4598:12:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 60169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4598:50:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4577:71:93"
                },
                {
                  "expression": {
                    "id": 60173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60171,
                      "name": "_posthook",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59885,
                      "src": "4654:9:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                        "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 60172,
                      "name": "renew_offer_at_posthook",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59776,
                      "src": "4666:23:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                        "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata)"
                      }
                    },
                    "src": "4654:35:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                      "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata)"
                    }
                  },
                  "id": 60174,
                  "nodeType": "ExpressionStatement",
                  "src": "4654:35:93"
                },
                {
                  "expression": {
                    "id": 60190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60175,
                      "name": "ofr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59666,
                      "src": "4696:3:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 60179,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69382,
                              "src": "4724:4:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 60178,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "4722:1:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 60180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4722:7:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 60182,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69385,
                              "src": "4739:5:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 60181,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "4737:1:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 60183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4737:8:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 60184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4753:7:93",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "31",
                          "id": 60185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4768:7:93",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "id": 60186,
                          "name": "gasreq",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59664,
                          "src": "4783:6:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 60187,
                          "name": "_gasprice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59669,
                          "src": "4797:9:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 60188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4814:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "id": 60176,
                          "name": "mgv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69379,
                          "src": "4702:3:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                            "typeString": "contract AbstractMangrove"
                          }
                        },
                        "id": 60177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "newOffer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25045,
                        "src": "4702:12:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 60189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4702:119:93",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4696:125:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 60191,
                  "nodeType": "ExpressionStatement",
                  "src": "4696:125:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 60196,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4860:4:93",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                                  "typeString": "contract MakerPosthookTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                                  "typeString": "contract MakerPosthookTest"
                                }
                              ],
                              "id": 60195,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70497,
                              "src": "4858:1:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                                "typeString": "function (contract Test) pure returns (address payable)"
                              }
                            },
                            "id": 60197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4858:7:93",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 60193,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "4844:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          },
                          "id": 60194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24218,
                          "src": "4844:13:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 60198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4844:22:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 60201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 60199,
                          "name": "weiBalMaker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59671,
                          "src": "4874:11:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 60200,
                          "name": "mkr_provision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60159,
                          "src": "4888:13:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4874:27:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374206d616b65722062616c616e6365206265666f72652074616b65",
                        "id": 60202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4949:37:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8245f276f759e21a347097e3a619ee7c9b1fba423244af9723ab5d4da613faac",
                          "typeString": "literal_string \"Incorrect maker balance before take\""
                        },
                        "value": "Incorrect maker balance before take"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8245f276f759e21a347097e3a619ee7c9b1fba423244af9723ab5d4da613faac",
                          "typeString": "literal_string \"Incorrect maker balance before take\""
                        }
                      ],
                      "id": 60192,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "4828:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 60203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4828:164:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60204,
                  "nodeType": "ExpressionStatement",
                  "src": "4828:164:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 60207,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "5012:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 60206,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70446,
                          "src": "5010:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 60208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5010:6:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 60205,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70817,
                      "src": "4999:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 60209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4999:18:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60210,
                  "nodeType": "ExpressionStatement",
                  "src": "4999:18:93"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 60213,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "5048:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 60212,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "5046:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 60214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5046:7:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 60216,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "5063:5:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 60215,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "5061:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 60217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5061:8:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 60219,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5079:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                              "typeString": "contract MakerPosthookTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                              "typeString": "contract MakerPosthookTest"
                            }
                          ],
                          "id": 60218,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70497,
                          "src": "5077:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 60220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5077:7:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 60221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5092:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 60222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5107:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "id": 60223,
                        "name": "_gasprice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59669,
                        "src": "5122:9:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 60224,
                        "name": "gasreq",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59664,
                        "src": "5139:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 60225,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59666,
                        "src": "5153:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 60226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5164:1:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 60211,
                      "name": "OfferWrite",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24706,
                      "src": "5028:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 60227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5028:143:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60228,
                  "nodeType": "EmitStatement",
                  "src": "5023:148:93"
                },
                {
                  "assignments": [60230],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60230,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "5182:7:93",
                      "nodeType": "VariableDeclaration",
                      "scope": 60277,
                      "src": "5177:12:93",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 60229,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5177:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60236,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 60233,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59666,
                        "src": "5201:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 60234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5206:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 60231,
                        "name": "tkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59661,
                        "src": "5192:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$73996",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 60232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "take",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73782,
                      "src": "5192:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256,uint256) external returns (bool)"
                      }
                    },
                    "id": 60235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5192:22:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5177:37:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60238,
                        "name": "called",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59679,
                        "src": "5231:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f7374486f6f6b206e6f742063616c6c6564",
                        "id": 60239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5239:21:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e243c7ce5a07bba9eed337c8e12a4dc1ca01ed6676e6d192bdc7a6eee2cce2f3",
                          "typeString": "literal_string \"PostHook not called\""
                        },
                        "value": "PostHook not called"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e243c7ce5a07bba9eed337c8e12a4dc1ca01ed6676e6d192bdc7a6eee2cce2f3",
                          "typeString": "literal_string \"PostHook not called\""
                        }
                      ],
                      "id": 60237,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "5220:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 60240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5220:41:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60241,
                  "nodeType": "ExpressionStatement",
                  "src": "5220:41:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60243,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60230,
                        "src": "5278:7:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536e6970652073686f756c642073756363656564",
                        "id": 60244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5287:22:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_235d9bd4a0656a377f46136e840c1f3b3f9cbae06df49060139f7eb13837dc73",
                          "typeString": "literal_string \"Snipe should succeed\""
                        },
                        "value": "Snipe should succeed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_235d9bd4a0656a377f46136e840c1f3b3f9cbae06df49060139f7eb13837dc73",
                          "typeString": "literal_string \"Snipe should succeed\""
                        }
                      ],
                      "id": 60242,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "5267:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 60245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5267:43:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60246,
                  "nodeType": "ExpressionStatement",
                  "src": "5267:43:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 60251,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "5349:4:93",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                                  "typeString": "contract MakerPosthookTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                                  "typeString": "contract MakerPosthookTest"
                                }
                              ],
                              "id": 60250,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70497,
                              "src": "5347:1:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                                "typeString": "function (contract Test) pure returns (address payable)"
                              }
                            },
                            "id": 60252,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5347:7:93",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 60248,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "5333:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          },
                          "id": 60249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24218,
                          "src": "5333:13:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 60253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5333:22:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 60256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 60254,
                          "name": "weiBalMaker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59671,
                          "src": "5363:11:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 60255,
                          "name": "mkr_provision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60159,
                          "src": "5377:13:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5363:27:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374206d616b65722062616c616e63652061667465722074616b65",
                        "id": 60257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5415:36:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0266a58fa229fd33b42df294abbc3bde03b6ac0b99e3fd0d5d94cdd403ed8359",
                          "typeString": "literal_string \"Incorrect maker balance after take\""
                        },
                        "value": "Incorrect maker balance after take"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0266a58fa229fd33b42df294abbc3bde03b6ac0b99e3fd0d5d94cdd403ed8359",
                          "typeString": "literal_string \"Incorrect maker balance after take\""
                        }
                      ],
                      "id": 60247,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "5317:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 60258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5317:140:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60259,
                  "nodeType": "ExpressionStatement",
                  "src": "5317:140:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 60264,
                                    "name": "base",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 69382,
                                    "src": "5492:4:93",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestToken_$76251",
                                      "typeString": "contract TestToken"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestToken_$76251",
                                      "typeString": "contract TestToken"
                                    }
                                  ],
                                  "id": 60263,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    70446, 70463, 70480, 70497, 70514
                                  ],
                                  "referencedDeclaration": 70514,
                                  "src": "5490:1:93",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                    "typeString": "function (contract IERC20) pure returns (address payable)"
                                  }
                                },
                                "id": 60265,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5490:7:93",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 60267,
                                    "name": "quote",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 69385,
                                    "src": "5501:5:93",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestToken_$76251",
                                      "typeString": "contract TestToken"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestToken_$76251",
                                      "typeString": "contract TestToken"
                                    }
                                  ],
                                  "id": 60266,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    70446, 70463, 70480, 70497, 70514
                                  ],
                                  "referencedDeclaration": 70514,
                                  "src": "5499:1:93",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                    "typeString": "function (contract IERC20) pure returns (address payable)"
                                  }
                                },
                                "id": 60268,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5499:8:93",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 60269,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59666,
                                "src": "5509:3:93",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 60261,
                                "name": "mgv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69379,
                                "src": "5479:3:93",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                                  "typeString": "contract AbstractMangrove"
                                }
                              },
                              "id": 60262,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "offers",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 24205,
                              "src": "5479:10:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_userDefinedValueType$_t_$32167_$",
                                "typeString": "function (address,address,uint256) view external returns (t)"
                              }
                            },
                            "id": 60270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5479:34:93",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                              "typeString": "t"
                            }
                          },
                          "id": 60271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "gives",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32588,
                          "src": "5479:40:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$32167_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$32167_$",
                            "typeString": "function (t) pure returns (uint256)"
                          }
                        },
                        "id": 60272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5479:42:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 60273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5529:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "4f6666657220776173206e6f7420636f72726563746c792075706461746564",
                        "id": 60274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5544:33:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd85e6f0af3e8991caaa9693a15c42cccd7f9a28f4e3451a31fed213835f0f95",
                          "typeString": "literal_string \"Offer was not correctly updated\""
                        },
                        "value": "Offer was not correctly updated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd85e6f0af3e8991caaa9693a15c42cccd7f9a28f4e3451a31fed213835f0f95",
                          "typeString": "literal_string \"Offer was not correctly updated\""
                        }
                      ],
                      "id": 60260,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "5463:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 60275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5463:120:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60276,
                  "nodeType": "ExpressionStatement",
                  "src": "5463:120:93"
                }
              ]
            },
            "functionSelector": "51f55cb2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_renew_offer_after_complete_fill",
            "nameLocation": "4525:36:93",
            "parameters": {
              "id": 60156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4561:2:93"
            },
            "returnParameters": {
              "id": 60157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4571:0:93"
            },
            "scope": 61894,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 60367,
            "nodeType": "FunctionDefinition",
            "src": "5592:703:93",
            "body": {
              "id": 60366,
              "nodeType": "Block",
              "src": "5650:645:93",
              "statements": [
                {
                  "expression": {
                    "id": 60283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60281,
                      "name": "_posthook",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59885,
                      "src": "5656:9:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                        "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 60282,
                      "name": "renew_offer_at_posthook",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59776,
                      "src": "5668:23:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                        "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata)"
                      }
                    },
                    "src": "5656:35:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                      "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata)"
                    }
                  },
                  "id": 60284,
                  "nodeType": "ExpressionStatement",
                  "src": "5656:35:93"
                },
                {
                  "expression": {
                    "id": 60300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60285,
                      "name": "ofr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59666,
                      "src": "5698:3:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 60289,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69382,
                              "src": "5726:4:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 60288,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "5724:1:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 60290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5724:7:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 60292,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69385,
                              "src": "5741:5:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 60291,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "5739:1:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 60293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5739:8:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 60294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5755:7:93",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "31",
                          "id": 60295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5770:7:93",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "id": 60296,
                          "name": "gasreq",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59664,
                          "src": "5785:6:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 60297,
                          "name": "_gasprice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59669,
                          "src": "5799:9:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 60298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5816:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "id": 60286,
                          "name": "mgv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69379,
                          "src": "5704:3:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                            "typeString": "contract AbstractMangrove"
                          }
                        },
                        "id": 60287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "newOffer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25045,
                        "src": "5704:12:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 60299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5704:119:93",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5698:125:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 60301,
                  "nodeType": "ExpressionStatement",
                  "src": "5698:125:93"
                },
                {
                  "expression": {
                    "id": 60304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60302,
                      "name": "makerRevert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59677,
                      "src": "5829:11:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 60303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5843:4:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5829:18:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 60305,
                  "nodeType": "ExpressionStatement",
                  "src": "5829:18:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 60308,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "5867:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 60307,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70446,
                          "src": "5865:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 60309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5865:6:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 60306,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70817,
                      "src": "5854:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 60310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5854:18:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60311,
                  "nodeType": "ExpressionStatement",
                  "src": "5854:18:93"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 60314,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "5903:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 60313,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "5901:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 60315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5901:7:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 60317,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "5918:5:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 60316,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "5916:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 60318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5916:8:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 60320,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5934:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                              "typeString": "contract MakerPosthookTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                              "typeString": "contract MakerPosthookTest"
                            }
                          ],
                          "id": 60319,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70497,
                          "src": "5932:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 60321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5932:7:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 60322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5947:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 60323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5962:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "id": 60324,
                        "name": "_gasprice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59669,
                        "src": "5977:9:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 60325,
                        "name": "gasreq",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59664,
                        "src": "5994:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 60326,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59666,
                        "src": "6008:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 60327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6019:1:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 60312,
                      "name": "OfferWrite",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24706,
                      "src": "5883:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 60328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5883:143:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60329,
                  "nodeType": "EmitStatement",
                  "src": "5878:148:93"
                },
                {
                  "assignments": [60331],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60331,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "6037:7:93",
                      "nodeType": "VariableDeclaration",
                      "scope": 60366,
                      "src": "6032:12:93",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 60330,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6032:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60337,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 60334,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59666,
                        "src": "6056:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 60335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6061:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 60332,
                        "name": "tkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59661,
                        "src": "6047:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$73996",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 60333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "take",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73782,
                      "src": "6047:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256,uint256) external returns (bool)"
                      }
                    },
                    "id": 60336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6047:22:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6032:37:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6086:8:93",
                        "subExpression": {
                          "id": 60339,
                          "name": "success",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60331,
                          "src": "6087:7:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536e6970652073686f756c64206661696c",
                        "id": 60341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6096:19:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a648d0f68cada8cb2e4646f47f539f24e9b0a9dfd258dc8267d3f4e5832e763d",
                          "typeString": "literal_string \"Snipe should fail\""
                        },
                        "value": "Snipe should fail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a648d0f68cada8cb2e4646f47f539f24e9b0a9dfd258dc8267d3f4e5832e763d",
                          "typeString": "literal_string \"Snipe should fail\""
                        }
                      ],
                      "id": 60338,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "6075:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 60342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6075:41:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60343,
                  "nodeType": "ExpressionStatement",
                  "src": "6075:41:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60345,
                        "name": "called",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59679,
                        "src": "6133:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f7374486f6f6b206e6f742063616c6c6564",
                        "id": 60346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6141:21:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e243c7ce5a07bba9eed337c8e12a4dc1ca01ed6676e6d192bdc7a6eee2cce2f3",
                          "typeString": "literal_string \"PostHook not called\""
                        },
                        "value": "PostHook not called"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e243c7ce5a07bba9eed337c8e12a4dc1ca01ed6676e6d192bdc7a6eee2cce2f3",
                          "typeString": "literal_string \"PostHook not called\""
                        }
                      ],
                      "id": 60344,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "6122:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 60347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6122:41:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60348,
                  "nodeType": "ExpressionStatement",
                  "src": "6122:41:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 60353,
                                    "name": "base",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 69382,
                                    "src": "6199:4:93",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestToken_$76251",
                                      "typeString": "contract TestToken"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestToken_$76251",
                                      "typeString": "contract TestToken"
                                    }
                                  ],
                                  "id": 60352,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    70446, 70463, 70480, 70497, 70514
                                  ],
                                  "referencedDeclaration": 70514,
                                  "src": "6197:1:93",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                    "typeString": "function (contract IERC20) pure returns (address payable)"
                                  }
                                },
                                "id": 60354,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6197:7:93",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 60356,
                                    "name": "quote",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 69385,
                                    "src": "6208:5:93",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestToken_$76251",
                                      "typeString": "contract TestToken"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestToken_$76251",
                                      "typeString": "contract TestToken"
                                    }
                                  ],
                                  "id": 60355,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    70446, 70463, 70480, 70497, 70514
                                  ],
                                  "referencedDeclaration": 70514,
                                  "src": "6206:1:93",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                    "typeString": "function (contract IERC20) pure returns (address payable)"
                                  }
                                },
                                "id": 60357,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6206:8:93",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 60358,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59666,
                                "src": "6216:3:93",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 60350,
                                "name": "mgv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69379,
                                "src": "6186:3:93",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                                  "typeString": "contract AbstractMangrove"
                                }
                              },
                              "id": 60351,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "offers",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 24205,
                              "src": "6186:10:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_userDefinedValueType$_t_$32167_$",
                                "typeString": "function (address,address,uint256) view external returns (t)"
                              }
                            },
                            "id": 60359,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6186:34:93",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                              "typeString": "t"
                            }
                          },
                          "id": 60360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "gives",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32588,
                          "src": "6186:40:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$32167_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$32167_$",
                            "typeString": "function (t) pure returns (uint256)"
                          }
                        },
                        "id": 60361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6186:42:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 60362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6236:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "4f6666657220776173206e6f7420636f72726563746c792075706461746564",
                        "id": 60363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6251:33:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd85e6f0af3e8991caaa9693a15c42cccd7f9a28f4e3451a31fed213835f0f95",
                          "typeString": "literal_string \"Offer was not correctly updated\""
                        },
                        "value": "Offer was not correctly updated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd85e6f0af3e8991caaa9693a15c42cccd7f9a28f4e3451a31fed213835f0f95",
                          "typeString": "literal_string \"Offer was not correctly updated\""
                        }
                      ],
                      "id": 60349,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "6170:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 60364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6170:120:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60365,
                  "nodeType": "ExpressionStatement",
                  "src": "6170:120:93"
                }
              ]
            },
            "functionSelector": "01b5070b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_renew_offer_after_failed_execution",
            "nameLocation": "5601:39:93",
            "parameters": {
              "id": 60279,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5640:2:93"
            },
            "returnParameters": {
              "id": 60280,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5650:0:93"
            },
            "scope": 61894,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 60399,
            "nodeType": "FunctionDefinition",
            "src": "6299:315:93",
            "body": {
              "id": 60398,
              "nodeType": "Block",
              "src": "6414:200:93",
              "statements": [
                {
                  "assignments": [60377],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60377,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "6425:7:93",
                      "nodeType": "VariableDeclaration",
                      "scope": 60398,
                      "src": "6420:12:93",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 60376,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6420:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60383,
                  "initialValue": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 60381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 60378,
                            "name": "res",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60373,
                            "src": "6436:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OrderResult_$24539_calldata_ptr",
                              "typeString": "struct MgvLib.OrderResult calldata"
                            }
                          },
                          "id": 60379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mgvData",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24538,
                          "src": "6436:11:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "6d67762f747261646553756363657373",
                          "id": 60380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6451:18:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                            "typeString": "literal_string \"mgv/tradeSuccess\""
                          },
                          "value": "mgv/tradeSuccess"
                        },
                        "src": "6436:33:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 60382,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "6435:35:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6420:50:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6487:8:93",
                        "subExpression": {
                          "id": 60385,
                          "name": "success",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60377,
                          "src": "6488:7:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f666665722073686f756c64206265206d61726b6564206173206661696c6564",
                        "id": 60387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6497:34:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_27d727a895f82298bfe89af41cde84ce5caf0ad4d68121b30132920f02625bb5",
                          "typeString": "literal_string \"Offer should be marked as failed\""
                        },
                        "value": "Offer should be marked as failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_27d727a895f82298bfe89af41cde84ce5caf0ad4d68121b30132920f02625bb5",
                          "typeString": "literal_string \"Offer should be marked as failed\""
                        }
                      ],
                      "id": 60384,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "6476:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 60388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6476:56:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60389,
                  "nodeType": "ExpressionStatement",
                  "src": "6476:56:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 60394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 60391,
                            "name": "res",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60373,
                            "src": "6549:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OrderResult_$24539_calldata_ptr",
                              "typeString": "struct MgvLib.OrderResult calldata"
                            }
                          },
                          "id": 60392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "makerData",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24536,
                          "src": "6549:13:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 60393,
                          "name": "bExecuteRevertData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59685,
                          "src": "6566:18:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "6549:35:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374206d616b65722064617461",
                        "id": 60395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6586:22:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7dbb148c7f280cf1f7f5b1dc48e019c2b9417b4ba04d99fc537d0c53864205db",
                          "typeString": "literal_string \"Incorrect maker data\""
                        },
                        "value": "Incorrect maker data"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7dbb148c7f280cf1f7f5b1dc48e019c2b9417b4ba04d99fc537d0c53864205db",
                          "typeString": "literal_string \"Incorrect maker data\""
                        }
                      ],
                      "id": 60390,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "6538:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 60396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6538:71:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60397,
                  "nodeType": "ExpressionStatement",
                  "src": "6538:71:93"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "treat_fail_at_posthook",
            "nameLocation": "6308:22:93",
            "parameters": {
              "id": 60374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60370,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 60399,
                  "src": "6336:27:93",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SingleOrder_$24534_calldata_ptr",
                    "typeString": "struct MgvLib.SingleOrder"
                  },
                  "typeName": {
                    "id": 60369,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 60368,
                      "name": "MgvLib.SingleOrder",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24534,
                      "src": "6336:18:93"
                    },
                    "referencedDeclaration": 24534,
                    "src": "6336:18:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SingleOrder_$24534_storage_ptr",
                      "typeString": "struct MgvLib.SingleOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60373,
                  "mutability": "mutable",
                  "name": "res",
                  "nameLocation": "6397:3:93",
                  "nodeType": "VariableDeclaration",
                  "scope": 60399,
                  "src": "6369:31:93",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OrderResult_$24539_calldata_ptr",
                    "typeString": "struct MgvLib.OrderResult"
                  },
                  "typeName": {
                    "id": 60372,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 60371,
                      "name": "MgvLib.OrderResult",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24539,
                      "src": "6369:18:93"
                    },
                    "referencedDeclaration": 24539,
                    "src": "6369:18:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OrderResult_$24539_storage_ptr",
                      "typeString": "struct MgvLib.OrderResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6330:74:93"
            },
            "returnParameters": {
              "id": 60375,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6414:0:93"
            },
            "scope": 61894,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 60511,
            "nodeType": "FunctionDefinition",
            "src": "6618:949:93",
            "body": {
              "id": 60510,
              "nodeType": "Block",
              "src": "6664:903:93",
              "statements": [
                {
                  "expression": {
                    "id": 60404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60402,
                      "name": "sExecuteRevertData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59682,
                      "src": "6670:18:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "6162636465666768696a6b6c6d6e6f707172737475767778797a31323334353637",
                      "id": 60403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6691:35:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_531c657aaeb8a69f891c0ad5ec11efc931ce42d389e5fe415f9b9fad198c0813",
                        "typeString": "literal_string \"abcdefghijklmnopqrstuvwxyz1234567\""
                      },
                      "value": "abcdefghijklmnopqrstuvwxyz1234567"
                    },
                    "src": "6670:56:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 60405,
                  "nodeType": "ExpressionStatement",
                  "src": "6670:56:93"
                },
                {
                  "expression": {
                    "id": 60408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60406,
                      "name": "bExecuteRevertData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59685,
                      "src": "6732:18:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "6162636465666768696a6b6c6d6e6f707172737475767778797a313233343536",
                      "id": 60407,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6753:34:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_b3eae197a287fc6713806f1bab91dffee8c3445e8cc629b7cb0b1a2efdbcf93b",
                        "typeString": "literal_string \"abcdefghijklmnopqrstuvwxyz123456\""
                      },
                      "value": "abcdefghijklmnopqrstuvwxyz123456"
                    },
                    "src": "6732:55:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 60409,
                  "nodeType": "ExpressionStatement",
                  "src": "6732:55:93"
                },
                {
                  "assignments": [60411],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60411,
                      "mutability": "mutable",
                      "name": "balMaker",
                      "nameLocation": "6798:8:93",
                      "nodeType": "VariableDeclaration",
                      "scope": 60510,
                      "src": "6793:13:93",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 60410,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6793:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60418,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 60415,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6826:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                              "typeString": "contract MakerPosthookTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                              "typeString": "contract MakerPosthookTest"
                            }
                          ],
                          "id": 60414,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70497,
                          "src": "6824:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 60416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6824:7:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 60412,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69382,
                        "src": "6809:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 60413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74388,
                      "src": "6809:14:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 60417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6809:23:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6793:39:93"
                },
                {
                  "assignments": [60420],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60420,
                      "mutability": "mutable",
                      "name": "balTaker",
                      "nameLocation": "6843:8:93",
                      "nodeType": "VariableDeclaration",
                      "scope": 60510,
                      "src": "6838:13:93",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 60419,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6838:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60428,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 60425,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59661,
                            "src": "6878:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          ],
                          "id": 60424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6870:7:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 60423,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6870:7:93",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 60426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6870:12:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 60421,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69385,
                        "src": "6854:5:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 60422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74388,
                      "src": "6854:15:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 60427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6854:29:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6838:45:93"
                },
                {
                  "expression": {
                    "id": 60444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60429,
                      "name": "ofr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59666,
                      "src": "6889:3:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 60433,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69382,
                              "src": "6917:4:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 60432,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "6915:1:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 60434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6915:7:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 60436,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69385,
                              "src": "6932:5:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 60435,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "6930:1:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 60437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6930:8:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 60438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6946:7:93",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "31",
                          "id": 60439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6961:7:93",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "id": 60440,
                          "name": "gasreq",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59664,
                          "src": "6976:6:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 60441,
                          "name": "_gasprice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59669,
                          "src": "6990:9:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 60442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7007:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "id": 60430,
                          "name": "mgv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69379,
                          "src": "6895:3:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                            "typeString": "contract AbstractMangrove"
                          }
                        },
                        "id": 60431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "newOffer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25045,
                        "src": "6895:12:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 60443,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6895:119:93",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6889:125:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 60445,
                  "nodeType": "ExpressionStatement",
                  "src": "6889:125:93"
                },
                {
                  "expression": {
                    "id": 60448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60446,
                      "name": "makerRevert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59677,
                      "src": "7020:11:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 60447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7034:4:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "7020:18:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 60449,
                  "nodeType": "ExpressionStatement",
                  "src": "7020:18:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 60452,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "7057:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 60451,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70446,
                          "src": "7055:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 60453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7055:6:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 60450,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70817,
                      "src": "7044:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 60454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7044:18:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60455,
                  "nodeType": "ExpressionStatement",
                  "src": "7044:18:93"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 60458,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "7092:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 60457,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "7090:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 60459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7090:7:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 60461,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "7107:5:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 60460,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "7105:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 60462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7105:8:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 60463,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59666,
                        "src": "7121:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 60466,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59661,
                            "src": "7140:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          ],
                          "id": 60465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7132:7:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 60464,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7132:7:93",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 60467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7132:12:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 60468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7152:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 60469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7167:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "6d67762f6d616b6572526576657274",
                        "id": 60470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7182:17:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f1767113efd8f000c2792fdbf6264b4b726d4e8bf3e972fc7ed78ddedf9a514",
                          "typeString": "literal_string \"mgv/makerRevert\""
                        },
                        "value": "mgv/makerRevert"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f1767113efd8f000c2792fdbf6264b4b726d4e8bf3e972fc7ed78ddedf9a514",
                          "typeString": "literal_string \"mgv/makerRevert\""
                        }
                      ],
                      "id": 60456,
                      "name": "OfferFail",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24662,
                      "src": "7073:9:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,uint256,address,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 60471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7073:132:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60472,
                  "nodeType": "EmitStatement",
                  "src": "7068:137:93"
                },
                {
                  "assignments": [60474],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60474,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "7216:7:93",
                      "nodeType": "VariableDeclaration",
                      "scope": 60510,
                      "src": "7211:12:93",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 60473,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7211:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60480,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 60477,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59666,
                        "src": "7235:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 60478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7240:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 60475,
                        "name": "tkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59661,
                        "src": "7226:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$73996",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 60476,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "take",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73782,
                      "src": "7226:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256,uint256) external returns (bool)"
                      }
                    },
                    "id": 60479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7226:22:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7211:37:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7265:8:93",
                        "subExpression": {
                          "id": 60482,
                          "name": "success",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60474,
                          "src": "7266:7:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536e6970652073686f756c64206661696c",
                        "id": 60484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7275:19:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a648d0f68cada8cb2e4646f47f539f24e9b0a9dfd258dc8267d3f4e5832e763d",
                          "typeString": "literal_string \"Snipe should fail\""
                        },
                        "value": "Snipe should fail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a648d0f68cada8cb2e4646f47f539f24e9b0a9dfd258dc8267d3f4e5832e763d",
                          "typeString": "literal_string \"Snipe should fail\""
                        }
                      ],
                      "id": 60481,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "7254:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 60485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7254:41:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60486,
                  "nodeType": "ExpressionStatement",
                  "src": "7254:41:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 60491,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "7334:4:93",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                                  "typeString": "contract MakerPosthookTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                                  "typeString": "contract MakerPosthookTest"
                                }
                              ],
                              "id": 60490,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70497,
                              "src": "7332:1:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                                "typeString": "function (contract Test) pure returns (address payable)"
                              }
                            },
                            "id": 60492,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7332:7:93",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 60488,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "7317:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          },
                          "id": 60489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 74388,
                          "src": "7317:14:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 60493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7317:23:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 60494,
                        "name": "balMaker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60411,
                        "src": "7348:8:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "4d616b65722073686f756c64206e6f742068617665206265656e2064656269746564206f6620686572206261736520746f6b656e73",
                        "id": 60495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7364:55:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e63f9c4cc9c3b62a3d8ea307cc898d0dd436297c4d816c1db74b8bd29b11923",
                          "typeString": "literal_string \"Maker should not have been debited of her base tokens\""
                        },
                        "value": "Maker should not have been debited of her base tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e63f9c4cc9c3b62a3d8ea307cc898d0dd436297c4d816c1db74b8bd29b11923",
                          "typeString": "literal_string \"Maker should not have been debited of her base tokens\""
                        }
                      ],
                      "id": 60487,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "7301:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 60496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7301:124:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60497,
                  "nodeType": "ExpressionStatement",
                  "src": "7301:124:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 60503,
                                "name": "tkr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59661,
                                "src": "7471:3:93",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestTaker_$73996",
                                  "typeString": "contract TestTaker"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestTaker_$73996",
                                  "typeString": "contract TestTaker"
                                }
                              ],
                              "id": 60502,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7463:7:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 60501,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7463:7:93",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 60504,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7463:12:93",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 60499,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "7447:5:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          },
                          "id": 60500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 74388,
                          "src": "7447:15:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 60505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7447:29:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 60506,
                        "name": "balTaker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60420,
                        "src": "7484:8:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "54616b65722073686f756c64206e6f742068617665206265656e2064656269746564206f66206865722071756f746520746f6b656e73",
                        "id": 60507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7500:56:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_211c6084064e11edc5a7ae62ffcfb6b4c00e7ee37c9d121a3c4638469f574f6d",
                          "typeString": "literal_string \"Taker should not have been debited of her quote tokens\""
                        },
                        "value": "Taker should not have been debited of her quote tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_211c6084064e11edc5a7ae62ffcfb6b4c00e7ee37c9d121a3c4638469f574f6d",
                          "typeString": "literal_string \"Taker should not have been debited of her quote tokens\""
                        }
                      ],
                      "id": 60498,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "7431:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 60508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7431:131:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60509,
                  "nodeType": "ExpressionStatement",
                  "src": "7431:131:93"
                }
              ]
            },
            "functionSelector": "52166b9d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_failed_offer_truncates",
            "nameLocation": "6627:27:93",
            "parameters": {
              "id": 60400,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6654:2:93"
            },
            "returnParameters": {
              "id": 60401,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6664:0:93"
            },
            "scope": 61894,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 60619,
            "nodeType": "FunctionDefinition",
            "src": "7571:873:93",
            "body": {
              "id": 60618,
              "nodeType": "Block",
              "src": "7623:821:93",
              "statements": [
                {
                  "expression": {
                    "id": 60516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60514,
                      "name": "_posthook",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59885,
                      "src": "7629:9:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                        "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 60515,
                      "name": "treat_fail_at_posthook",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60399,
                      "src": "7641:22:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                        "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata)"
                      }
                    },
                    "src": "7629:34:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                      "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata)"
                    }
                  },
                  "id": 60517,
                  "nodeType": "ExpressionStatement",
                  "src": "7629:34:93"
                },
                {
                  "assignments": [60519],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60519,
                      "mutability": "mutable",
                      "name": "balMaker",
                      "nameLocation": "7674:8:93",
                      "nodeType": "VariableDeclaration",
                      "scope": 60618,
                      "src": "7669:13:93",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 60518,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7669:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60526,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 60523,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7702:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                              "typeString": "contract MakerPosthookTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                              "typeString": "contract MakerPosthookTest"
                            }
                          ],
                          "id": 60522,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70497,
                          "src": "7700:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 60524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7700:7:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 60520,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69382,
                        "src": "7685:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 60521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74388,
                      "src": "7685:14:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 60525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7685:23:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7669:39:93"
                },
                {
                  "assignments": [60528],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60528,
                      "mutability": "mutable",
                      "name": "balTaker",
                      "nameLocation": "7719:8:93",
                      "nodeType": "VariableDeclaration",
                      "scope": 60618,
                      "src": "7714:13:93",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 60527,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7714:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60536,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 60533,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59661,
                            "src": "7754:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          ],
                          "id": 60532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7746:7:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 60531,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7746:7:93",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 60534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7746:12:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 60529,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69385,
                        "src": "7730:5:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 60530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74388,
                      "src": "7730:15:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 60535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7730:29:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7714:45:93"
                },
                {
                  "expression": {
                    "id": 60552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60537,
                      "name": "ofr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59666,
                      "src": "7765:3:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 60541,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69382,
                              "src": "7793:4:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 60540,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "7791:1:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 60542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7791:7:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 60544,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69385,
                              "src": "7808:5:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 60543,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "7806:1:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 60545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7806:8:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 60546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7822:7:93",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "31",
                          "id": 60547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7837:7:93",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "id": 60548,
                          "name": "gasreq",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59664,
                          "src": "7852:6:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 60549,
                          "name": "_gasprice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59669,
                          "src": "7866:9:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 60550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7883:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "id": 60538,
                          "name": "mgv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69379,
                          "src": "7771:3:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                            "typeString": "contract AbstractMangrove"
                          }
                        },
                        "id": 60539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "newOffer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25045,
                        "src": "7771:12:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 60551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7771:119:93",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7765:125:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 60553,
                  "nodeType": "ExpressionStatement",
                  "src": "7765:125:93"
                },
                {
                  "expression": {
                    "id": 60556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60554,
                      "name": "makerRevert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59677,
                      "src": "7896:11:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 60555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7910:4:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "7896:18:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 60557,
                  "nodeType": "ExpressionStatement",
                  "src": "7896:18:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 60560,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "7934:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 60559,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70446,
                          "src": "7932:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 60561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7932:6:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 60558,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70817,
                      "src": "7921:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 60562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7921:18:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60563,
                  "nodeType": "ExpressionStatement",
                  "src": "7921:18:93"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 60566,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "7969:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 60565,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "7967:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 60567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7967:7:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 60569,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "7984:5:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 60568,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "7982:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 60570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7982:8:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 60571,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59666,
                        "src": "7998:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 60574,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59661,
                            "src": "8017:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          ],
                          "id": 60573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8009:7:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 60572,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8009:7:93",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 60575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8009:12:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 60576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8029:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 60577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8044:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "6d67762f6d616b6572526576657274",
                        "id": 60578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8059:17:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f1767113efd8f000c2792fdbf6264b4b726d4e8bf3e972fc7ed78ddedf9a514",
                          "typeString": "literal_string \"mgv/makerRevert\""
                        },
                        "value": "mgv/makerRevert"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f1767113efd8f000c2792fdbf6264b4b726d4e8bf3e972fc7ed78ddedf9a514",
                          "typeString": "literal_string \"mgv/makerRevert\""
                        }
                      ],
                      "id": 60564,
                      "name": "OfferFail",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24662,
                      "src": "7950:9:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,uint256,address,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 60579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7950:132:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60580,
                  "nodeType": "EmitStatement",
                  "src": "7945:137:93"
                },
                {
                  "assignments": [60582],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60582,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "8093:7:93",
                      "nodeType": "VariableDeclaration",
                      "scope": 60618,
                      "src": "8088:12:93",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 60581,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "8088:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60588,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 60585,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59666,
                        "src": "8112:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 60586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8117:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 60583,
                        "name": "tkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59661,
                        "src": "8103:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$73996",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 60584,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "take",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73782,
                      "src": "8103:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256,uint256) external returns (bool)"
                      }
                    },
                    "id": 60587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8103:22:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8088:37:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8142:8:93",
                        "subExpression": {
                          "id": 60590,
                          "name": "success",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60582,
                          "src": "8143:7:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536e6970652073686f756c64206661696c",
                        "id": 60592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8152:19:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a648d0f68cada8cb2e4646f47f539f24e9b0a9dfd258dc8267d3f4e5832e763d",
                          "typeString": "literal_string \"Snipe should fail\""
                        },
                        "value": "Snipe should fail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a648d0f68cada8cb2e4646f47f539f24e9b0a9dfd258dc8267d3f4e5832e763d",
                          "typeString": "literal_string \"Snipe should fail\""
                        }
                      ],
                      "id": 60589,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "8131:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 60593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8131:41:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60594,
                  "nodeType": "ExpressionStatement",
                  "src": "8131:41:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 60599,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "8211:4:93",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                                  "typeString": "contract MakerPosthookTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                                  "typeString": "contract MakerPosthookTest"
                                }
                              ],
                              "id": 60598,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70497,
                              "src": "8209:1:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                                "typeString": "function (contract Test) pure returns (address payable)"
                              }
                            },
                            "id": 60600,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8209:7:93",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 60596,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "8194:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          },
                          "id": 60597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 74388,
                          "src": "8194:14:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 60601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8194:23:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 60602,
                        "name": "balMaker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60519,
                        "src": "8225:8:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "4d616b65722073686f756c64206e6f742068617665206265656e2064656269746564206f6620686572206261736520746f6b656e73",
                        "id": 60603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8241:55:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e63f9c4cc9c3b62a3d8ea307cc898d0dd436297c4d816c1db74b8bd29b11923",
                          "typeString": "literal_string \"Maker should not have been debited of her base tokens\""
                        },
                        "value": "Maker should not have been debited of her base tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e63f9c4cc9c3b62a3d8ea307cc898d0dd436297c4d816c1db74b8bd29b11923",
                          "typeString": "literal_string \"Maker should not have been debited of her base tokens\""
                        }
                      ],
                      "id": 60595,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "8178:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 60604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8178:124:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60605,
                  "nodeType": "ExpressionStatement",
                  "src": "8178:124:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 60611,
                                "name": "tkr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59661,
                                "src": "8348:3:93",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestTaker_$73996",
                                  "typeString": "contract TestTaker"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestTaker_$73996",
                                  "typeString": "contract TestTaker"
                                }
                              ],
                              "id": 60610,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8340:7:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 60609,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8340:7:93",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 60612,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8340:12:93",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 60607,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "8324:5:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          },
                          "id": 60608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 74388,
                          "src": "8324:15:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 60613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8324:29:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 60614,
                        "name": "balTaker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60528,
                        "src": "8361:8:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "54616b65722073686f756c64206e6f742068617665206265656e2064656269746564206f66206865722071756f746520746f6b656e73",
                        "id": 60615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8377:56:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_211c6084064e11edc5a7ae62ffcfb6b4c00e7ee37c9d121a3c4638469f574f6d",
                          "typeString": "literal_string \"Taker should not have been debited of her quote tokens\""
                        },
                        "value": "Taker should not have been debited of her quote tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_211c6084064e11edc5a7ae62ffcfb6b4c00e7ee37c9d121a3c4638469f574f6d",
                          "typeString": "literal_string \"Taker should not have been debited of her quote tokens\""
                        }
                      ],
                      "id": 60606,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "8308:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 60616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8308:131:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60617,
                  "nodeType": "ExpressionStatement",
                  "src": "8308:131:93"
                }
              ]
            },
            "functionSelector": "722abdb3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_failed_offer_is_not_executed",
            "nameLocation": "7580:33:93",
            "parameters": {
              "id": 60512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7613:2:93"
            },
            "returnParameters": {
              "id": 60513,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7623:0:93"
            },
            "scope": 61894,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 60754,
            "nodeType": "FunctionDefinition",
            "src": "8448:1137:93",
            "body": {
              "id": 60753,
              "nodeType": "Block",
              "src": "8503:1082:93",
              "statements": [
                {
                  "assignments": [60623],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60623,
                      "mutability": "mutable",
                      "name": "mkr_provision",
                      "nameLocation": "8514:13:93",
                      "nodeType": "VariableDeclaration",
                      "scope": 60753,
                      "src": "8509:18:93",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 60622,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8509:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60634,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 60626,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "8545:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 60625,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "8543:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 60627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8543:7:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 60629,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "8554:5:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 60628,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "8552:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 60630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8552:8:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 60631,
                        "name": "gasreq",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59664,
                        "src": "8562:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 60632,
                        "name": "_gasprice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59669,
                        "src": "8570:9:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 60624,
                      "name": "getProvision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [69975, 70042],
                      "referencedDeclaration": 70042,
                      "src": "8530:12:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 60633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8530:50:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8509:71:93"
                },
                {
                  "assignments": [60636],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60636,
                      "mutability": "mutable",
                      "name": "standard_provision",
                      "nameLocation": "8591:18:93",
                      "nodeType": "VariableDeclaration",
                      "scope": 60753,
                      "src": "8586:23:93",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 60635,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8586:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60646,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 60639,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "8627:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 60638,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "8625:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 60640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8625:7:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 60642,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "8636:5:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 60641,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "8634:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 60643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8634:8:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 60644,
                        "name": "gasreq",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59664,
                        "src": "8644:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 60637,
                      "name": "getProvision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [69975, 70042],
                      "referencedDeclaration": 69975,
                      "src": "8612:12:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256) view returns (uint256)"
                      }
                    },
                    "id": 60645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8612:39:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8586:65:93"
                },
                {
                  "expression": {
                    "id": 60649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60647,
                      "name": "_posthook",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59885,
                      "src": "8657:9:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                        "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 60648,
                      "name": "update_gas_offer_at_posthook",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59807,
                      "src": "8669:28:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                        "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata)"
                      }
                    },
                    "src": "8657:40:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                      "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata)"
                    }
                  },
                  "id": 60650,
                  "nodeType": "ExpressionStatement",
                  "src": "8657:40:93"
                },
                {
                  "expression": {
                    "id": 60666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60651,
                      "name": "ofr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59666,
                      "src": "8744:3:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 60655,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69382,
                              "src": "8765:4:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 60654,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "8763:1:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 60656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8763:7:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 60658,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69385,
                              "src": "8774:5:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 60657,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "8772:1:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 60659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8772:8:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 60660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8782:7:93",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "31",
                          "id": 60661,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8791:7:93",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "id": 60662,
                          "name": "gasreq",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59664,
                          "src": "8800:6:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 60663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8808:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "30",
                          "id": 60664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8811:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "id": 60652,
                          "name": "mgv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69379,
                          "src": "8750:3:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                            "typeString": "contract AbstractMangrove"
                          }
                        },
                        "id": 60653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "newOffer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25045,
                        "src": "8750:12:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 60665,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8750:63:93",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8744:69:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 60667,
                  "nodeType": "ExpressionStatement",
                  "src": "8744:69:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 60672,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "8852:4:93",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                                  "typeString": "contract MakerPosthookTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                                  "typeString": "contract MakerPosthookTest"
                                }
                              ],
                              "id": 60671,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70497,
                              "src": "8850:1:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                                "typeString": "function (contract Test) pure returns (address payable)"
                              }
                            },
                            "id": 60673,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8850:7:93",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 60669,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "8836:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          },
                          "id": 60670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24218,
                          "src": "8836:13:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 60674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8836:22:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 60677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 60675,
                          "name": "weiBalMaker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59671,
                          "src": "8866:11:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 60676,
                          "name": "standard_provision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60636,
                          "src": "8880:18:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8866:32:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374206d616b65722062616c616e6365206265666f72652074616b65",
                        "id": 60678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8946:37:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8245f276f759e21a347097e3a619ee7c9b1fba423244af9723ab5d4da613faac",
                          "typeString": "literal_string \"Incorrect maker balance before take\""
                        },
                        "value": "Incorrect maker balance before take"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8245f276f759e21a347097e3a619ee7c9b1fba423244af9723ab5d4da613faac",
                          "typeString": "literal_string \"Incorrect maker balance before take\""
                        }
                      ],
                      "id": 60668,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "8820:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 60679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8820:169:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60680,
                  "nodeType": "ExpressionStatement",
                  "src": "8820:169:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 60683,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "9009:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 60682,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70446,
                          "src": "9007:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 60684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9007:6:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 60681,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70817,
                      "src": "8996:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 60685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8996:18:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60686,
                  "nodeType": "ExpressionStatement",
                  "src": "8996:18:93"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 60689,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "9045:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 60688,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "9043:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 60690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9043:7:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 60692,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "9060:5:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 60691,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "9058:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 60693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9058:8:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 60695,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9076:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                              "typeString": "contract MakerPosthookTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                              "typeString": "contract MakerPosthookTest"
                            }
                          ],
                          "id": 60694,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70497,
                          "src": "9074:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 60696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9074:7:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 60697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9089:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 60698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9104:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "id": 60699,
                        "name": "_gasprice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59669,
                        "src": "9119:9:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 60700,
                        "name": "gasreq",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59664,
                        "src": "9136:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 60701,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59666,
                        "src": "9150:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 60702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9161:1:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 60687,
                      "name": "OfferWrite",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24706,
                      "src": "9025:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 60703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9025:143:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60704,
                  "nodeType": "EmitStatement",
                  "src": "9020:148:93"
                },
                {
                  "assignments": [60706],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60706,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "9179:7:93",
                      "nodeType": "VariableDeclaration",
                      "scope": 60753,
                      "src": "9174:12:93",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 60705,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9174:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60712,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 60709,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59666,
                        "src": "9198:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 60710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9203:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 60707,
                        "name": "tkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59661,
                        "src": "9189:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$73996",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 60708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "take",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73782,
                      "src": "9189:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256,uint256) external returns (bool)"
                      }
                    },
                    "id": 60711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9189:22:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9174:37:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60714,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60706,
                        "src": "9228:7:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536e6970652073686f756c642073756363656564",
                        "id": 60715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9237:22:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_235d9bd4a0656a377f46136e840c1f3b3f9cbae06df49060139f7eb13837dc73",
                          "typeString": "literal_string \"Snipe should succeed\""
                        },
                        "value": "Snipe should succeed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_235d9bd4a0656a377f46136e840c1f3b3f9cbae06df49060139f7eb13837dc73",
                          "typeString": "literal_string \"Snipe should succeed\""
                        }
                      ],
                      "id": 60713,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "9217:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 60716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9217:43:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60717,
                  "nodeType": "ExpressionStatement",
                  "src": "9217:43:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60719,
                        "name": "called",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59679,
                        "src": "9277:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f7374486f6f6b206e6f742063616c6c6564",
                        "id": 60720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9285:21:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e243c7ce5a07bba9eed337c8e12a4dc1ca01ed6676e6d192bdc7a6eee2cce2f3",
                          "typeString": "literal_string \"PostHook not called\""
                        },
                        "value": "PostHook not called"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e243c7ce5a07bba9eed337c8e12a4dc1ca01ed6676e6d192bdc7a6eee2cce2f3",
                          "typeString": "literal_string \"PostHook not called\""
                        }
                      ],
                      "id": 60718,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "9266:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 60721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9266:41:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60722,
                  "nodeType": "ExpressionStatement",
                  "src": "9266:41:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 60727,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "9346:4:93",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                                  "typeString": "contract MakerPosthookTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                                  "typeString": "contract MakerPosthookTest"
                                }
                              ],
                              "id": 60726,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70497,
                              "src": "9344:1:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                                "typeString": "function (contract Test) pure returns (address payable)"
                              }
                            },
                            "id": 60728,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9344:7:93",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 60724,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "9330:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          },
                          "id": 60725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24218,
                          "src": "9330:13:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 60729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9330:22:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 60732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 60730,
                          "name": "weiBalMaker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59671,
                          "src": "9360:11:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 60731,
                          "name": "mkr_provision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60623,
                          "src": "9374:13:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9360:27:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374206d616b65722062616c616e63652061667465722074616b65",
                        "id": 60733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9412:36:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0266a58fa229fd33b42df294abbc3bde03b6ac0b99e3fd0d5d94cdd403ed8359",
                          "typeString": "literal_string \"Incorrect maker balance after take\""
                        },
                        "value": "Incorrect maker balance after take"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0266a58fa229fd33b42df294abbc3bde03b6ac0b99e3fd0d5d94cdd403ed8359",
                          "typeString": "literal_string \"Incorrect maker balance after take\""
                        }
                      ],
                      "id": 60723,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "9314:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 60734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9314:140:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60735,
                  "nodeType": "ExpressionStatement",
                  "src": "9314:140:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 60740,
                                    "name": "base",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 69382,
                                    "src": "9489:4:93",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestToken_$76251",
                                      "typeString": "contract TestToken"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestToken_$76251",
                                      "typeString": "contract TestToken"
                                    }
                                  ],
                                  "id": 60739,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    70446, 70463, 70480, 70497, 70514
                                  ],
                                  "referencedDeclaration": 70514,
                                  "src": "9487:1:93",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                    "typeString": "function (contract IERC20) pure returns (address payable)"
                                  }
                                },
                                "id": 60741,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9487:7:93",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 60743,
                                    "name": "quote",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 69385,
                                    "src": "9498:5:93",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestToken_$76251",
                                      "typeString": "contract TestToken"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestToken_$76251",
                                      "typeString": "contract TestToken"
                                    }
                                  ],
                                  "id": 60742,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    70446, 70463, 70480, 70497, 70514
                                  ],
                                  "referencedDeclaration": 70514,
                                  "src": "9496:1:93",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                    "typeString": "function (contract IERC20) pure returns (address payable)"
                                  }
                                },
                                "id": 60744,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9496:8:93",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 60745,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59666,
                                "src": "9506:3:93",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 60737,
                                "name": "mgv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69379,
                                "src": "9476:3:93",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                                  "typeString": "contract AbstractMangrove"
                                }
                              },
                              "id": 60738,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "offers",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 24205,
                              "src": "9476:10:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_userDefinedValueType$_t_$32167_$",
                                "typeString": "function (address,address,uint256) view external returns (t)"
                              }
                            },
                            "id": 60746,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9476:34:93",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                              "typeString": "t"
                            }
                          },
                          "id": 60747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "gives",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32588,
                          "src": "9476:40:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$32167_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$32167_$",
                            "typeString": "function (t) pure returns (uint256)"
                          }
                        },
                        "id": 60748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9476:42:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 60749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9526:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "4f6666657220776173206e6f7420636f72726563746c792075706461746564",
                        "id": 60750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9541:33:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd85e6f0af3e8991caaa9693a15c42cccd7f9a28f4e3451a31fed213835f0f95",
                          "typeString": "literal_string \"Offer was not correctly updated\""
                        },
                        "value": "Offer was not correctly updated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd85e6f0af3e8991caaa9693a15c42cccd7f9a28f4e3451a31fed213835f0f95",
                          "typeString": "literal_string \"Offer was not correctly updated\""
                        }
                      ],
                      "id": 60736,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "9460:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 60751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9460:120:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60752,
                  "nodeType": "ExpressionStatement",
                  "src": "9460:120:93"
                }
              ]
            },
            "functionSelector": "167d0ea0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_update_offer_with_more_gasprice",
            "nameLocation": "8457:36:93",
            "parameters": {
              "id": 60620,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8493:2:93"
            },
            "returnParameters": {
              "id": 60621,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8503:0:93"
            },
            "scope": 61894,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 60810,
            "nodeType": "FunctionDefinition",
            "src": "9589:489:93",
            "body": {
              "id": 60809,
              "nodeType": "Block",
              "src": "9675:403:93",
              "statements": [
                {
                  "expression": {
                    "id": 60759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60757,
                      "name": "_posthook",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59885,
                      "src": "9681:9:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                        "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 60758,
                      "name": "failer_posthook",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59825,
                      "src": "9693:15:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                        "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata)"
                      }
                    },
                    "src": "9681:27:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                      "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata)"
                    }
                  },
                  "id": 60760,
                  "nodeType": "ExpressionStatement",
                  "src": "9681:27:93"
                },
                {
                  "expression": {
                    "id": 60776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60761,
                      "name": "ofr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59666,
                      "src": "9715:3:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 60765,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69382,
                              "src": "9743:4:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 60764,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "9741:1:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 60766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9741:7:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 60768,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69385,
                              "src": "9758:5:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 60767,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "9756:1:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 60769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9756:8:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 60770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9772:7:93",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "31",
                          "id": 60771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9787:7:93",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "id": 60772,
                          "name": "gasreq",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59664,
                          "src": "9802:6:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 60773,
                          "name": "_gasprice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59669,
                          "src": "9816:9:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 60774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9833:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "id": 60762,
                          "name": "mgv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69379,
                          "src": "9721:3:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                            "typeString": "contract AbstractMangrove"
                          }
                        },
                        "id": 60763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "newOffer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25045,
                        "src": "9721:12:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 60775,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9721:119:93",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9715:125:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 60777,
                  "nodeType": "ExpressionStatement",
                  "src": "9715:125:93"
                },
                {
                  "assignments": [60779],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60779,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "9852:7:93",
                      "nodeType": "VariableDeclaration",
                      "scope": 60809,
                      "src": "9847:12:93",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 60778,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9847:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60796,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 60782,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "9879:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 60784,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "9892:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 60783,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "9890:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 60785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9890:7:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 60787,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "9907:5:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 60786,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "9905:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 60788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9905:8:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 60789,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59666,
                        "src": "9921:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 60790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9932:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 60791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9947:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 60794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 60792,
                          "name": "gasreq",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59664,
                          "src": "9962:6:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 60793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9971:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "9962:10:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 60780,
                        "name": "tkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59661,
                        "src": "9862:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$73996",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 60781,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipe",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73900,
                      "src": "9862:9:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_AbstractMangrove_$22838_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (contract AbstractMangrove,address,address,uint256,uint256,uint256,uint256) external returns (bool)"
                      }
                    },
                    "id": 60795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9862:116:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9847:131:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9995:7:93",
                        "subExpression": {
                          "id": 60798,
                          "name": "called",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59679,
                          "src": "9996:6:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f7374486f6f6b207761732063616c6c6564",
                        "id": 60800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10004:21:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8418e8491a1f7c7caede78211fed7e576cb0067ac1cb7552ab404e6f69b1581d",
                          "typeString": "literal_string \"PostHook was called\""
                        },
                        "value": "PostHook was called"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8418e8491a1f7c7caede78211fed7e576cb0067ac1cb7552ab404e6f69b1581d",
                          "typeString": "literal_string \"PostHook was called\""
                        }
                      ],
                      "id": 60797,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "9984:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 60801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9984:42:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60802,
                  "nodeType": "ExpressionStatement",
                  "src": "9984:42:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "10043:8:93",
                        "subExpression": {
                          "id": 60804,
                          "name": "success",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60779,
                          "src": "10044:7:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536e6970652073686f756c64206661696c",
                        "id": 60806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10053:19:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a648d0f68cada8cb2e4646f47f539f24e9b0a9dfd258dc8267d3f4e5832e763d",
                          "typeString": "literal_string \"Snipe should fail\""
                        },
                        "value": "Snipe should fail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a648d0f68cada8cb2e4646f47f539f24e9b0a9dfd258dc8267d3f4e5832e763d",
                          "typeString": "literal_string \"Snipe should fail\""
                        }
                      ],
                      "id": 60803,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "10032:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 60807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10032:41:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60808,
                  "nodeType": "ExpressionStatement",
                  "src": "10032:41:93"
                }
              ]
            },
            "functionSelector": "e2c015ee",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_posthook_of_skipped_offer_wrong_gas_should_not_be_called",
            "nameLocation": "9598:61:93",
            "parameters": {
              "id": 60755,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9659:2:93"
            },
            "returnParameters": {
              "id": 60756,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9675:0:93"
            },
            "scope": 61894,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 60864,
            "nodeType": "FunctionDefinition",
            "src": "10082:487:93",
            "body": {
              "id": 60863,
              "nodeType": "Block",
              "src": "10170:399:93",
              "statements": [
                {
                  "expression": {
                    "id": 60815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60813,
                      "name": "_posthook",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59885,
                      "src": "10176:9:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                        "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 60814,
                      "name": "failer_posthook",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59825,
                      "src": "10188:15:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                        "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata)"
                      }
                    },
                    "src": "10176:27:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                      "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata)"
                    }
                  },
                  "id": 60816,
                  "nodeType": "ExpressionStatement",
                  "src": "10176:27:93"
                },
                {
                  "expression": {
                    "id": 60832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60817,
                      "name": "ofr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59666,
                      "src": "10209:3:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 60821,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69382,
                              "src": "10237:4:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 60820,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "10235:1:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 60822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10235:7:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 60824,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69385,
                              "src": "10252:5:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 60823,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "10250:1:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 60825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10250:8:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 60826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10266:7:93",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "31",
                          "id": 60827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10281:7:93",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "id": 60828,
                          "name": "gasreq",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59664,
                          "src": "10296:6:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 60829,
                          "name": "_gasprice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59669,
                          "src": "10310:9:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 60830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10327:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "id": 60818,
                          "name": "mgv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69379,
                          "src": "10215:3:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                            "typeString": "contract AbstractMangrove"
                          }
                        },
                        "id": 60819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "newOffer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25045,
                        "src": "10215:12:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 60831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10215:119:93",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10209:125:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 60833,
                  "nodeType": "ExpressionStatement",
                  "src": "10209:125:93"
                },
                {
                  "assignments": [60835],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60835,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "10345:7:93",
                      "nodeType": "VariableDeclaration",
                      "scope": 60863,
                      "src": "10340:12:93",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 60834,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "10340:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60850,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 60838,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "10372:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 60840,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "10385:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 60839,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "10383:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 60841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10383:7:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 60843,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "10400:5:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 60842,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "10398:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 60844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10398:8:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 60845,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59666,
                        "src": "10414:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "312e31",
                        "id": 60846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10425:9:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1100000000000000000_by_1",
                          "typeString": "int_const 1100000000000000000"
                        },
                        "value": "1.1"
                      },
                      {
                        "hexValue": "31",
                        "id": 60847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10442:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "id": 60848,
                        "name": "gasreq",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59664,
                        "src": "10457:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1100000000000000000_by_1",
                          "typeString": "int_const 1100000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 60836,
                        "name": "tkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59661,
                        "src": "10355:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$73996",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 60837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipe",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73900,
                      "src": "10355:9:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_AbstractMangrove_$22838_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (contract AbstractMangrove,address,address,uint256,uint256,uint256,uint256) external returns (bool)"
                      }
                    },
                    "id": 60849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10355:114:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10340:129:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "10486:8:93",
                        "subExpression": {
                          "id": 60852,
                          "name": "success",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60835,
                          "src": "10487:7:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536e6970652073686f756c64206661696c",
                        "id": 60854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10496:19:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a648d0f68cada8cb2e4646f47f539f24e9b0a9dfd258dc8267d3f4e5832e763d",
                          "typeString": "literal_string \"Snipe should fail\""
                        },
                        "value": "Snipe should fail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a648d0f68cada8cb2e4646f47f539f24e9b0a9dfd258dc8267d3f4e5832e763d",
                          "typeString": "literal_string \"Snipe should fail\""
                        }
                      ],
                      "id": 60851,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "10475:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 60855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10475:41:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60856,
                  "nodeType": "ExpressionStatement",
                  "src": "10475:41:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "10533:7:93",
                        "subExpression": {
                          "id": 60858,
                          "name": "called",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59679,
                          "src": "10534:6:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f7374486f6f6b207761732063616c6c6564",
                        "id": 60860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10542:21:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8418e8491a1f7c7caede78211fed7e576cb0067ac1cb7552ab404e6f69b1581d",
                          "typeString": "literal_string \"PostHook was called\""
                        },
                        "value": "PostHook was called"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8418e8491a1f7c7caede78211fed7e576cb0067ac1cb7552ab404e6f69b1581d",
                          "typeString": "literal_string \"PostHook was called\""
                        }
                      ],
                      "id": 60857,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "10522:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 60861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10522:42:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60862,
                  "nodeType": "ExpressionStatement",
                  "src": "10522:42:93"
                }
              ]
            },
            "functionSelector": "05e08bdf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_posthook_of_skipped_offer_wrong_price_should_not_be_called",
            "nameLocation": "10091:63:93",
            "parameters": {
              "id": 60811,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10154:2:93"
            },
            "returnParameters": {
              "id": 60812,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10170:0:93"
            },
            "scope": 61894,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 60995,
            "nodeType": "FunctionDefinition",
            "src": "10573:994:93",
            "body": {
              "id": 60994,
              "nodeType": "Block",
              "src": "10622:945:93",
              "statements": [
                {
                  "assignments": [60868],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60868,
                      "mutability": "mutable",
                      "name": "mkr_provision",
                      "nameLocation": "10633:13:93",
                      "nodeType": "VariableDeclaration",
                      "scope": 60994,
                      "src": "10628:18:93",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 60867,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10628:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60879,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 60871,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "10664:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 60870,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "10662:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 60872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10662:7:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 60874,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "10673:5:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 60873,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "10671:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 60875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10671:8:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 60876,
                        "name": "gasreq",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59664,
                        "src": "10681:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 60877,
                        "name": "_gasprice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59669,
                        "src": "10689:9:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 60869,
                      "name": "getProvision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [69975, 70042],
                      "referencedDeclaration": 70042,
                      "src": "10649:12:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 60878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10649:50:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10628:71:93"
                },
                {
                  "expression": {
                    "id": 60882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60880,
                      "name": "_posthook",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59885,
                      "src": "10705:9:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                        "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 60881,
                      "name": "retractOffer_posthook",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59875,
                      "src": "10717:21:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                        "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata)"
                      }
                    },
                    "src": "10705:33:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                      "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata)"
                    }
                  },
                  "id": 60883,
                  "nodeType": "ExpressionStatement",
                  "src": "10705:33:93"
                },
                {
                  "expression": {
                    "id": 60899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60884,
                      "name": "ofr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59666,
                      "src": "10744:3:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 60888,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69382,
                              "src": "10772:4:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 60887,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "10770:1:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 60889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10770:7:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 60891,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69385,
                              "src": "10787:5:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 60890,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "10785:1:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 60892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10785:8:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 60893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10801:7:93",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "31",
                          "id": 60894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10816:7:93",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "id": 60895,
                          "name": "gasreq",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59664,
                          "src": "10831:6:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 60896,
                          "name": "_gasprice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59669,
                          "src": "10845:9:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 60897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10862:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "id": 60885,
                          "name": "mgv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69379,
                          "src": "10750:3:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                            "typeString": "contract AbstractMangrove"
                          }
                        },
                        "id": 60886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "newOffer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25045,
                        "src": "10750:12:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 60898,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10750:119:93",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10744:125:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 60900,
                  "nodeType": "ExpressionStatement",
                  "src": "10744:125:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 60905,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "10907:4:93",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                                  "typeString": "contract MakerPosthookTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                                  "typeString": "contract MakerPosthookTest"
                                }
                              ],
                              "id": 60904,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70497,
                              "src": "10905:1:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                                "typeString": "function (contract Test) pure returns (address payable)"
                              }
                            },
                            "id": 60906,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10905:7:93",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 60902,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "10891:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          },
                          "id": 60903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24218,
                          "src": "10891:13:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 60907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10891:22:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 60910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 60908,
                          "name": "weiBalMaker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59671,
                          "src": "10921:11:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 60909,
                          "name": "mkr_provision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60868,
                          "src": "10935:13:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10921:27:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374206d616b65722062616c616e6365206265666f72652074616b65",
                        "id": 60911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10996:37:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8245f276f759e21a347097e3a619ee7c9b1fba423244af9723ab5d4da613faac",
                          "typeString": "literal_string \"Incorrect maker balance before take\""
                        },
                        "value": "Incorrect maker balance before take"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8245f276f759e21a347097e3a619ee7c9b1fba423244af9723ab5d4da613faac",
                          "typeString": "literal_string \"Incorrect maker balance before take\""
                        }
                      ],
                      "id": 60901,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "10875:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 60912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10875:164:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60913,
                  "nodeType": "ExpressionStatement",
                  "src": "10875:164:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 60916,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "11058:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 60915,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70446,
                          "src": "11056:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 60917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11056:6:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 60914,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70817,
                      "src": "11045:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 60918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11045:18:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60919,
                  "nodeType": "ExpressionStatement",
                  "src": "11045:18:93"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 60922,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "11089:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 60921,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "11087:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 60923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11087:7:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 60925,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "11098:5:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 60924,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "11096:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 60926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11096:8:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 60927,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59666,
                        "src": "11106:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 60930,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59661,
                            "src": "11119:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          ],
                          "id": 60929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11111:7:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 60928,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11111:7:93",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 60931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11111:12:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 60932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11125:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 60933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11134:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 60920,
                      "name": "OfferSuccess",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24646,
                      "src": "11074:12:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,address,uint256,uint256)"
                      }
                    },
                    "id": 60934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11074:68:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60935,
                  "nodeType": "EmitStatement",
                  "src": "11069:73:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 60938,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "11161:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 60937,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70446,
                          "src": "11159:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 60939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11159:6:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 60936,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70817,
                      "src": "11148:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 60940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11148:18:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60941,
                  "nodeType": "ExpressionStatement",
                  "src": "11148:18:93"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 60944,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "11186:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                              "typeString": "contract MakerPosthookTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                              "typeString": "contract MakerPosthookTest"
                            }
                          ],
                          "id": 60943,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70497,
                          "src": "11184:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 60945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11184:7:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 60946,
                        "name": "mkr_provision",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60868,
                        "src": "11193:13:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 60942,
                      "name": "Credit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24548,
                      "src": "11177:6:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 60947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11177:30:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60948,
                  "nodeType": "EmitStatement",
                  "src": "11172:35:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 60951,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "11226:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 60950,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70446,
                          "src": "11224:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 60952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11224:6:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 60949,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70817,
                      "src": "11213:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 60953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11213:18:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60954,
                  "nodeType": "ExpressionStatement",
                  "src": "11213:18:93"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 60957,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "11257:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 60956,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "11255:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 60958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11255:7:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 60960,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "11266:5:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 60959,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "11264:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 60961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11264:8:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 60962,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59666,
                        "src": "11274:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 60955,
                      "name": "OfferRetract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24714,
                      "src": "11242:12:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 60963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11242:36:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60964,
                  "nodeType": "EmitStatement",
                  "src": "11237:41:93"
                },
                {
                  "assignments": [60966],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60966,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "11289:7:93",
                      "nodeType": "VariableDeclaration",
                      "scope": 60994,
                      "src": "11284:12:93",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 60965,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "11284:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60972,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 60969,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59666,
                        "src": "11308:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 60970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11313:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 60967,
                        "name": "tkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59661,
                        "src": "11299:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$73996",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 60968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "take",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73782,
                      "src": "11299:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256,uint256) external returns (bool)"
                      }
                    },
                    "id": 60971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11299:22:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11284:37:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60974,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60966,
                        "src": "11338:7:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536e6970652073686f756c642073756363656564",
                        "id": 60975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11347:22:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_235d9bd4a0656a377f46136e840c1f3b3f9cbae06df49060139f7eb13837dc73",
                          "typeString": "literal_string \"Snipe should succeed\""
                        },
                        "value": "Snipe should succeed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_235d9bd4a0656a377f46136e840c1f3b3f9cbae06df49060139f7eb13837dc73",
                          "typeString": "literal_string \"Snipe should succeed\""
                        }
                      ],
                      "id": 60973,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "11327:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 60976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11327:43:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60977,
                  "nodeType": "ExpressionStatement",
                  "src": "11327:43:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60979,
                        "name": "called",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59679,
                        "src": "11387:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f7374486f6f6b206e6f742063616c6c6564",
                        "id": 60980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11395:21:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e243c7ce5a07bba9eed337c8e12a4dc1ca01ed6676e6d192bdc7a6eee2cce2f3",
                          "typeString": "literal_string \"PostHook not called\""
                        },
                        "value": "PostHook not called"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e243c7ce5a07bba9eed337c8e12a4dc1ca01ed6676e6d192bdc7a6eee2cce2f3",
                          "typeString": "literal_string \"PostHook not called\""
                        }
                      ],
                      "id": 60978,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "11376:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 60981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11376:41:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60982,
                  "nodeType": "ExpressionStatement",
                  "src": "11376:41:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 60987,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "11456:4:93",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                                  "typeString": "contract MakerPosthookTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                                  "typeString": "contract MakerPosthookTest"
                                }
                              ],
                              "id": 60986,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70497,
                              "src": "11454:1:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                                "typeString": "function (contract Test) pure returns (address payable)"
                              }
                            },
                            "id": 60988,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11454:7:93",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 60984,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "11440:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          },
                          "id": 60985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24218,
                          "src": "11440:13:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 60989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11440:22:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 60990,
                        "name": "weiBalMaker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59671,
                        "src": "11470:11:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374206d616b65722062616c616e63652061667465722074616b65",
                        "id": 60991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11520:36:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0266a58fa229fd33b42df294abbc3bde03b6ac0b99e3fd0d5d94cdd403ed8359",
                          "typeString": "literal_string \"Incorrect maker balance after take\""
                        },
                        "value": "Incorrect maker balance after take"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0266a58fa229fd33b42df294abbc3bde03b6ac0b99e3fd0d5d94cdd403ed8359",
                          "typeString": "literal_string \"Incorrect maker balance after take\""
                        }
                      ],
                      "id": 60983,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "11424:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 60992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11424:138:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60993,
                  "nodeType": "ExpressionStatement",
                  "src": "11424:138:93"
                }
              ]
            },
            "functionSelector": "e43260cd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_retract_offer_in_posthook",
            "nameLocation": "10582:30:93",
            "parameters": {
              "id": 60865,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10612:2:93"
            },
            "returnParameters": {
              "id": 60866,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10622:0:93"
            },
            "scope": 61894,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 61153,
            "nodeType": "FunctionDefinition",
            "src": "11571:1273:93",
            "body": {
              "id": 61152,
              "nodeType": "Block",
              "src": "11625:1219:93",
              "statements": [
                {
                  "assignments": [60999],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60999,
                      "mutability": "mutable",
                      "name": "mkr_provision",
                      "nameLocation": "11636:13:93",
                      "nodeType": "VariableDeclaration",
                      "scope": 61152,
                      "src": "11631:18:93",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 60998,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11631:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61010,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61002,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "11667:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 61001,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "11665:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 61003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11665:7:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 61005,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "11676:5:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 61004,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "11674:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 61006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11674:8:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 61007,
                        "name": "gasreq",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59664,
                        "src": "11684:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 61008,
                        "name": "_gasprice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59669,
                        "src": "11692:9:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 61000,
                      "name": "getProvision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [69975, 70042],
                      "referencedDeclaration": 70042,
                      "src": "11652:12:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 61009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11652:50:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11631:71:93"
                },
                {
                  "assignments": [61012],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61012,
                      "mutability": "mutable",
                      "name": "tkr_weis",
                      "nameLocation": "11713:8:93",
                      "nodeType": "VariableDeclaration",
                      "scope": 61152,
                      "src": "11708:13:93",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 61011,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11708:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61018,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 61015,
                          "name": "tkr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59661,
                          "src": "11732:3:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestTaker_$73996",
                            "typeString": "contract TestTaker"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_TestTaker_$73996",
                            "typeString": "contract TestTaker"
                          }
                        ],
                        "id": 61014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "11724:7:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 61013,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11724:7:93",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 61016,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11724:12:93",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 61017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "11724:20:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11708:36:93"
                },
                {
                  "expression": {
                    "id": 61021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61019,
                      "name": "_posthook",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59885,
                      "src": "11750:9:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                        "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 61020,
                      "name": "retractOffer_posthook",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59875,
                      "src": "11762:21:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                        "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata)"
                      }
                    },
                    "src": "11750:33:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                      "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata)"
                    }
                  },
                  "id": 61022,
                  "nodeType": "ExpressionStatement",
                  "src": "11750:33:93"
                },
                {
                  "expression": {
                    "id": 61038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61023,
                      "name": "ofr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59666,
                      "src": "11789:3:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 61027,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69382,
                              "src": "11817:4:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 61026,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "11815:1:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 61028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11815:7:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 61030,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69385,
                              "src": "11832:5:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 61029,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "11830:1:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 61031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11830:8:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 61032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11846:7:93",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "31",
                          "id": 61033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11861:7:93",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "id": 61034,
                          "name": "gasreq",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59664,
                          "src": "11876:6:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 61035,
                          "name": "_gasprice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59669,
                          "src": "11890:9:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 61036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11907:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "id": 61024,
                          "name": "mgv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69379,
                          "src": "11795:3:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                            "typeString": "contract AbstractMangrove"
                          }
                        },
                        "id": 61025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "newOffer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25045,
                        "src": "11795:12:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 61037,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11795:119:93",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11789:125:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 61039,
                  "nodeType": "ExpressionStatement",
                  "src": "11789:125:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 61044,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "11952:4:93",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                                  "typeString": "contract MakerPosthookTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                                  "typeString": "contract MakerPosthookTest"
                                }
                              ],
                              "id": 61043,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70497,
                              "src": "11950:1:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                                "typeString": "function (contract Test) pure returns (address payable)"
                              }
                            },
                            "id": 61045,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11950:7:93",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 61041,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "11936:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          },
                          "id": 61042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24218,
                          "src": "11936:13:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 61046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11936:22:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 61049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 61047,
                          "name": "weiBalMaker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59671,
                          "src": "11966:11:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 61048,
                          "name": "mkr_provision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60999,
                          "src": "11980:13:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11966:27:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374206d616b65722062616c616e6365206265666f72652074616b65",
                        "id": 61050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12041:37:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8245f276f759e21a347097e3a619ee7c9b1fba423244af9723ab5d4da613faac",
                          "typeString": "literal_string \"Incorrect maker balance before take\""
                        },
                        "value": "Incorrect maker balance before take"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8245f276f759e21a347097e3a619ee7c9b1fba423244af9723ab5d4da613faac",
                          "typeString": "literal_string \"Incorrect maker balance before take\""
                        }
                      ],
                      "id": 61040,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "11920:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 61051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11920:164:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61052,
                  "nodeType": "ExpressionStatement",
                  "src": "11920:164:93"
                },
                {
                  "expression": {
                    "id": 61055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61053,
                      "name": "makerRevert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59677,
                      "src": "12090:11:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 61054,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12104:4:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "12090:18:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 61056,
                  "nodeType": "ExpressionStatement",
                  "src": "12090:18:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61059,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "12127:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 61058,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70446,
                          "src": "12125:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 61060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12125:6:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 61057,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70817,
                      "src": "12114:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 61061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12114:18:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61062,
                  "nodeType": "ExpressionStatement",
                  "src": "12114:18:93"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61065,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "12162:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 61064,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "12160:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 61066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12160:7:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 61068,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "12177:5:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 61067,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "12175:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 61069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12175:8:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 61070,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59666,
                        "src": "12191:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 61073,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59661,
                            "src": "12210:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          ],
                          "id": 61072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12202:7:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 61071,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12202:7:93",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 61074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12202:12:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 61075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12222:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 61076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12237:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "6d67762f6d616b6572526576657274",
                        "id": 61077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12252:17:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f1767113efd8f000c2792fdbf6264b4b726d4e8bf3e972fc7ed78ddedf9a514",
                          "typeString": "literal_string \"mgv/makerRevert\""
                        },
                        "value": "mgv/makerRevert"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f1767113efd8f000c2792fdbf6264b4b726d4e8bf3e972fc7ed78ddedf9a514",
                          "typeString": "literal_string \"mgv/makerRevert\""
                        }
                      ],
                      "id": 61063,
                      "name": "OfferFail",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24662,
                      "src": "12143:9:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,uint256,address,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 61078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12143:132:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61079,
                  "nodeType": "EmitStatement",
                  "src": "12138:137:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61082,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "12294:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 61081,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70446,
                          "src": "12292:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 61083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12292:6:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 61080,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70817,
                      "src": "12281:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 61084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12281:18:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61085,
                  "nodeType": "ExpressionStatement",
                  "src": "12281:18:93"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61088,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "12325:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 61087,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "12323:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 61089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12323:7:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 61091,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "12334:5:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 61090,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "12332:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 61092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12332:8:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 61093,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59666,
                        "src": "12342:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 61086,
                      "name": "OfferRetract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24714,
                      "src": "12310:12:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 61094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12310:36:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61095,
                  "nodeType": "EmitStatement",
                  "src": "12305:41:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 61099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12468:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 61100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12474:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 61101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12480:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 61102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12486:5:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "arguments": [
                          {
                            "id": 61104,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "12495:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 61103,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70446,
                          "src": "12493:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 61105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12493:6:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 61096,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "12454:2:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 61098,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5103,
                      "src": "12454:13:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$_t_address_$returns$__$",
                        "typeString": "function (bool,bool,bool,bool,address) external"
                      }
                    },
                    "id": 61106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12454:46:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61107,
                  "nodeType": "ExpressionStatement",
                  "src": "12454:46:93"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61110,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12527:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                              "typeString": "contract MakerPosthookTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                              "typeString": "contract MakerPosthookTest"
                            }
                          ],
                          "id": 61109,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70497,
                          "src": "12525:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 61111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12525:7:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 61112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12540:1:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 61108,
                      "name": "Credit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24548,
                      "src": "12511:6:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 61113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12511:48:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61114,
                  "nodeType": "EmitStatement",
                  "src": "12506:53:93"
                },
                {
                  "assignments": [61116],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61116,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "12570:7:93",
                      "nodeType": "VariableDeclaration",
                      "scope": 61152,
                      "src": "12565:12:93",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 61115,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "12565:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61122,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 61119,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59666,
                        "src": "12589:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 61120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12594:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 61117,
                        "name": "tkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59661,
                        "src": "12580:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$73996",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 61118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "take",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73782,
                      "src": "12580:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256,uint256) external returns (bool)"
                      }
                    },
                    "id": 61121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12580:22:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12565:37:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "12619:8:93",
                        "subExpression": {
                          "id": 61124,
                          "name": "success",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61116,
                          "src": "12620:7:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536e6970652073686f756c64206661696c",
                        "id": 61126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12629:19:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a648d0f68cada8cb2e4646f47f539f24e9b0a9dfd258dc8267d3f4e5832e763d",
                          "typeString": "literal_string \"Snipe should fail\""
                        },
                        "value": "Snipe should fail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a648d0f68cada8cb2e4646f47f539f24e9b0a9dfd258dc8267d3f4e5832e763d",
                          "typeString": "literal_string \"Snipe should fail\""
                        }
                      ],
                      "id": 61123,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "12608:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 61127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12608:41:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61128,
                  "nodeType": "ExpressionStatement",
                  "src": "12608:41:93"
                },
                {
                  "assignments": [61130],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61130,
                      "mutability": "mutable",
                      "name": "penalty",
                      "nameLocation": "12660:7:93",
                      "nodeType": "VariableDeclaration",
                      "scope": 61152,
                      "src": "12655:12:93",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 61129,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12655:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61139,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 61138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 61131,
                      "name": "weiBalMaker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59671,
                      "src": "12670:11:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 61135,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "12700:4:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                                "typeString": "contract MakerPosthookTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                                "typeString": "contract MakerPosthookTest"
                              }
                            ],
                            "id": 61134,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70497,
                            "src": "12698:1:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                              "typeString": "function (contract Test) pure returns (address payable)"
                            }
                          },
                          "id": 61136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12698:7:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "expression": {
                          "id": 61132,
                          "name": "mgv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69379,
                          "src": "12684:3:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                            "typeString": "contract AbstractMangrove"
                          }
                        },
                        "id": 61133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24218,
                        "src": "12684:13:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 61137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12684:22:93",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12670:36:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12655:51:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61141,
                        "name": "penalty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61130,
                        "src": "12728:7:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 61148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 61144,
                                "name": "tkr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59661,
                                "src": "12751:3:93",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestTaker_$73996",
                                  "typeString": "contract TestTaker"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestTaker_$73996",
                                  "typeString": "contract TestTaker"
                                }
                              ],
                              "id": 61143,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12743:7:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 61142,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12743:7:93",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 61145,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12743:12:93",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 61146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "12743:20:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 61147,
                          "name": "tkr_weis",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61012,
                          "src": "12766:8:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12743:31:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374206f766572616c6c2062616c616e63652061667465722070656e616c747920666f722074616b6572",
                        "id": 61149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12782:51:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a07cd8e63f74b20f5b7a0b7cdeff4fdb2bb5a70bf68354bf9895d20cab40f05c",
                          "typeString": "literal_string \"Incorrect overall balance after penalty for taker\""
                        },
                        "value": "Incorrect overall balance after penalty for taker"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a07cd8e63f74b20f5b7a0b7cdeff4fdb2bb5a70bf68354bf9895d20cab40f05c",
                          "typeString": "literal_string \"Incorrect overall balance after penalty for taker\""
                        }
                      ],
                      "id": 61140,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "12712:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 61150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12712:127:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61151,
                  "nodeType": "ExpressionStatement",
                  "src": "12712:127:93"
                }
              ]
            },
            "functionSelector": "d48b10ea",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_balance_after_fail_and_retract",
            "nameLocation": "11580:35:93",
            "parameters": {
              "id": 60996,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11615:2:93"
            },
            "returnParameters": {
              "id": 60997,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11625:0:93"
            },
            "scope": 61894,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 61251,
            "nodeType": "FunctionDefinition",
            "src": "12848:703:93",
            "body": {
              "id": 61250,
              "nodeType": "Block",
              "src": "12923:628:93",
              "statements": [
                {
                  "expression": {
                    "id": 61158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61156,
                      "name": "_posthook",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59885,
                      "src": "12929:9:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                        "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 61157,
                      "name": "retractOffer_posthook",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59875,
                      "src": "12941:21:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                        "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata)"
                      }
                    },
                    "src": "12929:33:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                      "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata)"
                    }
                  },
                  "id": 61159,
                  "nodeType": "ExpressionStatement",
                  "src": "12929:33:93"
                },
                {
                  "expression": {
                    "id": 61175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61160,
                      "name": "ofr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59666,
                      "src": "12968:3:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 61164,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69382,
                              "src": "12996:4:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 61163,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "12994:1:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 61165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12994:7:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 61167,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69385,
                              "src": "13011:5:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 61166,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "13009:1:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 61168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13009:8:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 61169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13025:7:93",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "31",
                          "id": 61170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13040:7:93",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "id": 61171,
                          "name": "gasreq",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59664,
                          "src": "13055:6:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 61172,
                          "name": "_gasprice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59669,
                          "src": "13069:9:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 61173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13086:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "id": 61161,
                          "name": "mgv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69379,
                          "src": "12974:3:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                            "typeString": "contract AbstractMangrove"
                          }
                        },
                        "id": 61162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "newOffer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25045,
                        "src": "12974:12:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 61174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12974:119:93",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12968:125:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 61176,
                  "nodeType": "ExpressionStatement",
                  "src": "12968:125:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61179,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "13112:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 61178,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70446,
                          "src": "13110:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 61180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13110:6:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 61177,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70817,
                      "src": "13099:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 61181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13099:18:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61182,
                  "nodeType": "ExpressionStatement",
                  "src": "13099:18:93"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61185,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "13143:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 61184,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "13141:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 61186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13141:7:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 61188,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "13152:5:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 61187,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "13150:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 61189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13150:8:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 61190,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59666,
                        "src": "13160:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 61193,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59661,
                            "src": "13173:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          ],
                          "id": 61192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13165:7:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 61191,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13165:7:93",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 61194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13165:12:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 61195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13179:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 61196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13188:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 61183,
                      "name": "OfferSuccess",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24646,
                      "src": "13128:12:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,address,uint256,uint256)"
                      }
                    },
                    "id": 61197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13128:68:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61198,
                  "nodeType": "EmitStatement",
                  "src": "13123:73:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61201,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "13215:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 61200,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70446,
                          "src": "13213:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 61202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13213:6:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 61199,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70817,
                      "src": "13202:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 61203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13202:18:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61204,
                  "nodeType": "ExpressionStatement",
                  "src": "13202:18:93"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61207,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "13246:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 61206,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "13244:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 61208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13244:7:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 61210,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "13255:5:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 61209,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "13253:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 61211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13253:8:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 61212,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59666,
                        "src": "13263:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 61205,
                      "name": "OfferRetract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24714,
                      "src": "13231:12:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 61213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13231:36:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61214,
                  "nodeType": "EmitStatement",
                  "src": "13226:41:93"
                },
                {
                  "assignments": [61216],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61216,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "13278:7:93",
                      "nodeType": "VariableDeclaration",
                      "scope": 61250,
                      "src": "13273:12:93",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 61215,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "13273:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61222,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 61219,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59666,
                        "src": "13297:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 61220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13302:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 61217,
                        "name": "tkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59661,
                        "src": "13288:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$73996",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 61218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "take",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73782,
                      "src": "13288:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256,uint256) external returns (bool)"
                      }
                    },
                    "id": 61221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13288:22:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13273:37:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61224,
                        "name": "called",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59679,
                        "src": "13327:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f7374486f6f6b206e6f742063616c6c6564",
                        "id": 61225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13335:21:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e243c7ce5a07bba9eed337c8e12a4dc1ca01ed6676e6d192bdc7a6eee2cce2f3",
                          "typeString": "literal_string \"PostHook not called\""
                        },
                        "value": "PostHook not called"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e243c7ce5a07bba9eed337c8e12a4dc1ca01ed6676e6d192bdc7a6eee2cce2f3",
                          "typeString": "literal_string \"PostHook not called\""
                        }
                      ],
                      "id": 61223,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "13316:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 61226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13316:41:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61227,
                  "nodeType": "ExpressionStatement",
                  "src": "13316:41:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61229,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61216,
                        "src": "13375:7:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536e6970652073686f756c642073756363656564",
                        "id": 61230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13384:22:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_235d9bd4a0656a377f46136e840c1f3b3f9cbae06df49060139f7eb13837dc73",
                          "typeString": "literal_string \"Snipe should succeed\""
                        },
                        "value": "Snipe should succeed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_235d9bd4a0656a377f46136e840c1f3b3f9cbae06df49060139f7eb13837dc73",
                          "typeString": "literal_string \"Snipe should succeed\""
                        }
                      ],
                      "id": 61228,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "13364:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 61231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13364:43:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61232,
                  "nodeType": "ExpressionStatement",
                  "src": "13364:43:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61237,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "13438:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 61236,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "13436:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 61238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13436:7:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 61240,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "13453:5:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 61239,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "13451:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 61241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13451:8:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 61242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13467:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 61243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13482:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "id": 61244,
                        "name": "gasreq",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59664,
                        "src": "13497:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 61245,
                        "name": "_gasprice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59669,
                        "src": "13511:9:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 61246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13528:1:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 61247,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59666,
                        "src": "13537:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 61233,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "13413:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 61235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25200,
                      "src": "13413:15:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256,uint256) payable external"
                      }
                    },
                    "id": 61248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13413:133:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61249,
                  "nodeType": "ExpressionStatement",
                  "src": "13413:133:93"
                }
              ]
            },
            "functionSelector": "53abc4a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_update_offer_after_deprovision_in_posthook_succeeds",
            "nameLocation": "12857:56:93",
            "parameters": {
              "id": 61154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12913:2:93"
            },
            "returnParameters": {
              "id": 61155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12923:0:93"
            },
            "scope": 61894,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 61287,
            "nodeType": "FunctionDefinition",
            "src": "13555:286:93",
            "body": {
              "id": 61286,
              "nodeType": "Block",
              "src": "13672:169:93",
              "statements": [
                {
                  "expression": {
                    "id": 61262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61260,
                      "name": "called",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59679,
                      "src": "13678:6:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 61261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13687:4:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "13678:13:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 61263,
                  "nodeType": "ExpressionStatement",
                  "src": "13678:13:93"
                },
                {
                  "assignments": [null, 61269],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 61269,
                      "mutability": "mutable",
                      "name": "cfg",
                      "nameLocation": "13710:3:93",
                      "nodeType": "VariableDeclaration",
                      "scope": 61286,
                      "src": "13700:13:93",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_t_$31225",
                        "typeString": "t"
                      },
                      "typeName": {
                        "id": 61268,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 61267,
                          "name": "P.Local.t",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 31225,
                          "src": "13700:9:93"
                        },
                        "referencedDeclaration": 31225,
                        "src": "13700:9:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_t_$31225",
                          "typeString": "t"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61277,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 61272,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61254,
                          "src": "13728:5:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SingleOrder_$24534_calldata_ptr",
                            "typeString": "struct MgvLib.SingleOrder calldata"
                          }
                        },
                        "id": 61273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "outbound_tkn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24513,
                        "src": "13728:18:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 61274,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61254,
                          "src": "13748:5:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SingleOrder_$24534_calldata_ptr",
                            "typeString": "struct MgvLib.SingleOrder calldata"
                          }
                        },
                        "id": 61275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "inbound_tkn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24515,
                        "src": "13748:17:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 61270,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "13717:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 61271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "config",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28600,
                      "src": "13717:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_userDefinedValueType$_t_$30356_$_t_userDefinedValueType$_t_$31225_$",
                        "typeString": "function (address,address) view external returns (t,t)"
                      }
                    },
                    "id": 61276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13717:49:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_userDefinedValueType$_t_$30356_$_t_userDefinedValueType$_t_$31225_$",
                      "typeString": "tuple(t,t)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13697:69:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 61279,
                            "name": "cfg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61269,
                            "src": "13781:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_t_$31225",
                              "typeString": "t"
                            }
                          },
                          "id": 61280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "best",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31925,
                          "src": "13781:8:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$31225_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$31225_$",
                            "typeString": "function (t) pure returns (uint256)"
                          }
                        },
                        "id": 61281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13781:10:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 61282,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59666,
                        "src": "13793:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f72726563742062657374206f6666657220696420696e20706f7374686f6f6b",
                        "id": 61283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13798:37:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5eb4992645979b80c194f4ca9dd0c9de8ecee87c255640fa3547fcace9808c6b",
                          "typeString": "literal_string \"Incorrect best offer id in posthook\""
                        },
                        "value": "Incorrect best offer id in posthook"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5eb4992645979b80c194f4ca9dd0c9de8ecee87c255640fa3547fcace9808c6b",
                          "typeString": "literal_string \"Incorrect best offer id in posthook\""
                        }
                      ],
                      "id": 61278,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "13772:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 61284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13772:64:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61285,
                  "nodeType": "ExpressionStatement",
                  "src": "13772:64:93"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "check_best_in_posthook",
            "nameLocation": "13564:22:93",
            "parameters": {
              "id": 61258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61254,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "13620:5:93",
                  "nodeType": "VariableDeclaration",
                  "scope": 61287,
                  "src": "13592:33:93",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SingleOrder_$24534_calldata_ptr",
                    "typeString": "struct MgvLib.SingleOrder"
                  },
                  "typeName": {
                    "id": 61253,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61252,
                      "name": "MgvLib.SingleOrder",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24534,
                      "src": "13592:18:93"
                    },
                    "referencedDeclaration": 24534,
                    "src": "13592:18:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SingleOrder_$24534_storage_ptr",
                      "typeString": "struct MgvLib.SingleOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61257,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 61287,
                  "src": "13631:27:93",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OrderResult_$24539_calldata_ptr",
                    "typeString": "struct MgvLib.OrderResult"
                  },
                  "typeName": {
                    "id": 61256,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61255,
                      "name": "MgvLib.OrderResult",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24539,
                      "src": "13631:18:93"
                    },
                    "referencedDeclaration": 24539,
                    "src": "13631:18:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OrderResult_$24539_storage_ptr",
                      "typeString": "struct MgvLib.OrderResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13586:76:93"
            },
            "returnParameters": {
              "id": 61259,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13672:0:93"
            },
            "scope": 61894,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 61363,
            "nodeType": "FunctionDefinition",
            "src": "13845:583:93",
            "body": {
              "id": 61362,
              "nodeType": "Block",
              "src": "13896:532:93",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61294,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "13917:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 61293,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "13915:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 61295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13915:7:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 61297,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "13926:5:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 61296,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "13924:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 61298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13924:8:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 61299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13934:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "31",
                        "id": 61300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13943:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "id": 61301,
                        "name": "gasreq",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59664,
                        "src": "13952:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 61302,
                        "name": "_gasprice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59669,
                        "src": "13960:9:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 61303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13971:1:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 61290,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "13902:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 61292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25045,
                      "src": "13902:12:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 61304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13902:71:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 61305,
                  "nodeType": "ExpressionStatement",
                  "src": "13902:71:93"
                },
                {
                  "expression": {
                    "id": 61321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61306,
                      "name": "ofr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59666,
                      "src": "13979:3:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 61310,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69382,
                              "src": "14007:4:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 61309,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "14005:1:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 61311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14005:7:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 61313,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69385,
                              "src": "14022:5:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 61312,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "14020:1:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 61314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14020:8:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 61315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14036:7:93",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "31",
                          "id": 61316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14051:7:93",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "id": 61317,
                          "name": "gasreq",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59664,
                          "src": "14066:6:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 61318,
                          "name": "_gasprice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59669,
                          "src": "14080:9:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 61319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14097:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "id": 61307,
                          "name": "mgv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69379,
                          "src": "13985:3:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                            "typeString": "contract AbstractMangrove"
                          }
                        },
                        "id": 61308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "newOffer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25045,
                        "src": "13985:12:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 61320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13985:119:93",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13979:125:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 61322,
                  "nodeType": "ExpressionStatement",
                  "src": "13979:125:93"
                },
                {
                  "assignments": [61324],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61324,
                      "mutability": "mutable",
                      "name": "best",
                      "nameLocation": "14115:4:93",
                      "nodeType": "VariableDeclaration",
                      "scope": 61362,
                      "src": "14110:9:93",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 61323,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14110:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61339,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61328,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "14144:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 61327,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "14142:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 61329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14142:7:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 61331,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "14159:5:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 61330,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "14157:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 61332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14157:8:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "302e35",
                        "id": 61333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14173:9:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "value": "0.5"
                      },
                      {
                        "hexValue": "31",
                        "id": 61334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14190:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "id": 61335,
                        "name": "gasreq",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59664,
                        "src": "14205:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 61336,
                        "name": "_gasprice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59669,
                        "src": "14219:9:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 61337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14236:1:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 61325,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "14122:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 61326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25045,
                      "src": "14122:12:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 61338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14122:121:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14110:133:93"
                },
                {
                  "expression": {
                    "id": 61342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61340,
                      "name": "_posthook",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59885,
                      "src": "14249:9:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                        "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 61341,
                      "name": "check_best_in_posthook",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61287,
                      "src": "14261:22:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                        "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata)"
                      }
                    },
                    "src": "14249:34:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                      "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata)"
                    }
                  },
                  "id": 61343,
                  "nodeType": "ExpressionStatement",
                  "src": "14249:34:93"
                },
                {
                  "assignments": [61345],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61345,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "14294:7:93",
                      "nodeType": "VariableDeclaration",
                      "scope": 61362,
                      "src": "14289:12:93",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 61344,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "14289:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61351,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 61348,
                        "name": "best",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61324,
                        "src": "14313:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 61349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14319:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 61346,
                        "name": "tkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59661,
                        "src": "14304:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$73996",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 61347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "take",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73782,
                      "src": "14304:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256,uint256) external returns (bool)"
                      }
                    },
                    "id": 61350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14304:23:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14289:38:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61353,
                        "name": "called",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59679,
                        "src": "14344:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f7374486f6f6b206e6f742063616c6c6564",
                        "id": 61354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14352:21:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e243c7ce5a07bba9eed337c8e12a4dc1ca01ed6676e6d192bdc7a6eee2cce2f3",
                          "typeString": "literal_string \"PostHook not called\""
                        },
                        "value": "PostHook not called"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e243c7ce5a07bba9eed337c8e12a4dc1ca01ed6676e6d192bdc7a6eee2cce2f3",
                          "typeString": "literal_string \"PostHook not called\""
                        }
                      ],
                      "id": 61352,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "14333:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 61355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14333:41:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61356,
                  "nodeType": "ExpressionStatement",
                  "src": "14333:41:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61358,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61345,
                        "src": "14391:7:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536e6970652073686f756c642073756363656564",
                        "id": 61359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14400:22:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_235d9bd4a0656a377f46136e840c1f3b3f9cbae06df49060139f7eb13837dc73",
                          "typeString": "literal_string \"Snipe should succeed\""
                        },
                        "value": "Snipe should succeed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_235d9bd4a0656a377f46136e840c1f3b3f9cbae06df49060139f7eb13837dc73",
                          "typeString": "literal_string \"Snipe should succeed\""
                        }
                      ],
                      "id": 61357,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "14380:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 61360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14380:43:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61361,
                  "nodeType": "ExpressionStatement",
                  "src": "14380:43:93"
                }
              ]
            },
            "functionSelector": "031047df",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_best_in_posthook_is_correct",
            "nameLocation": "13854:32:93",
            "parameters": {
              "id": 61288,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13886:2:93"
            },
            "returnParameters": {
              "id": 61289,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13896:0:93"
            },
            "scope": 61894,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 61444,
            "nodeType": "FunctionDefinition",
            "src": "14432:703:93",
            "body": {
              "id": 61443,
              "nodeType": "Block",
              "src": "14550:585:93",
              "statements": [
                {
                  "expression": {
                    "id": 61374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61372,
                      "name": "called",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59679,
                      "src": "14556:6:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 61373,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14565:4:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "14556:13:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 61375,
                  "nodeType": "ExpressionStatement",
                  "src": "14556:13:93"
                },
                {
                  "assignments": [61377],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61377,
                      "mutability": "mutable",
                      "name": "__wants",
                      "nameLocation": "14580:7:93",
                      "nodeType": "VariableDeclaration",
                      "scope": 61443,
                      "src": "14575:12:93",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 61376,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14575:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61382,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "expression": {
                          "id": 61378,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61366,
                          "src": "14590:5:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SingleOrder_$24534_calldata_ptr",
                            "typeString": "struct MgvLib.SingleOrder calldata"
                          }
                        },
                        "id": 61379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24520,
                        "src": "14590:11:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                          "typeString": "t"
                        }
                      },
                      "id": 61380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "wants",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32530,
                      "src": "14590:17:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$32167_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$32167_$",
                        "typeString": "function (t) pure returns (uint256)"
                      }
                    },
                    "id": 61381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14590:19:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14575:34:93"
                },
                {
                  "assignments": [61384],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61384,
                      "mutability": "mutable",
                      "name": "__gives",
                      "nameLocation": "14620:7:93",
                      "nodeType": "VariableDeclaration",
                      "scope": 61443,
                      "src": "14615:12:93",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 61383,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14615:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61389,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "expression": {
                          "id": 61385,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61366,
                          "src": "14630:5:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SingleOrder_$24534_calldata_ptr",
                            "typeString": "struct MgvLib.SingleOrder calldata"
                          }
                        },
                        "id": 61386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24520,
                        "src": "14630:11:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                          "typeString": "t"
                        }
                      },
                      "id": 61387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "gives",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32588,
                      "src": "14630:17:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$32167_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$32167_$",
                        "typeString": "function (t) pure returns (uint256)"
                      }
                    },
                    "id": 61388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14630:19:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14615:34:93"
                },
                {
                  "assignments": [61391],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61391,
                      "mutability": "mutable",
                      "name": "__maker",
                      "nameLocation": "14663:7:93",
                      "nodeType": "VariableDeclaration",
                      "scope": 61443,
                      "src": "14655:15:93",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 61390,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "14655:7:93",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61396,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "expression": {
                          "id": 61392,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61366,
                          "src": "14673:5:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SingleOrder_$24534_calldata_ptr",
                            "typeString": "struct MgvLib.SingleOrder calldata"
                          }
                        },
                        "id": 61393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerDetail",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24527,
                        "src": "14673:17:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_t_$32720",
                          "typeString": "t"
                        }
                      },
                      "id": 61394,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "maker",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32985,
                      "src": "14673:23:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$32720_$returns$_t_address_$bound_to$_t_userDefinedValueType$_t_$32720_$",
                        "typeString": "function (t) pure returns (address)"
                      }
                    },
                    "id": 61395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14673:25:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14655:43:93"
                },
                {
                  "assignments": [61398],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61398,
                      "mutability": "mutable",
                      "name": "__gasreq",
                      "nameLocation": "14709:8:93",
                      "nodeType": "VariableDeclaration",
                      "scope": 61443,
                      "src": "14704:13:93",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 61397,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14704:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61403,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "expression": {
                          "id": 61399,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61366,
                          "src": "14720:5:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SingleOrder_$24534_calldata_ptr",
                            "typeString": "struct MgvLib.SingleOrder calldata"
                          }
                        },
                        "id": 61400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerDetail",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24527,
                        "src": "14720:17:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_t_$32720",
                          "typeString": "t"
                        }
                      },
                      "id": 61401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "gasreq",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33049,
                      "src": "14720:24:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$32720_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$32720_$",
                        "typeString": "function (t) pure returns (uint256)"
                      }
                    },
                    "id": 61402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14720:26:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14704:42:93"
                },
                {
                  "assignments": [61405],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61405,
                      "mutability": "mutable",
                      "name": "__gasprice",
                      "nameLocation": "14757:10:93",
                      "nodeType": "VariableDeclaration",
                      "scope": 61443,
                      "src": "14752:15:93",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 61404,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14752:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61410,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "expression": {
                          "id": 61406,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61366,
                          "src": "14770:5:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SingleOrder_$24534_calldata_ptr",
                            "typeString": "struct MgvLib.SingleOrder calldata"
                          }
                        },
                        "id": 61407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerDetail",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24527,
                        "src": "14770:17:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_t_$32720",
                          "typeString": "t"
                        }
                      },
                      "id": 61408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "gasprice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33165,
                      "src": "14770:26:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$32720_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$32720_$",
                        "typeString": "function (t) pure returns (uint256)"
                      }
                    },
                    "id": 61409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14770:28:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14752:46:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61412,
                        "name": "__wants",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61377,
                        "src": "14813:7:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 61413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14822:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "496e636f72726563742077616e747320666f72206f6666657220696e20706f7374686f6f6b",
                        "id": 61414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14831:39:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7445c387e2bfd85f2a4229288c4b55261e20d61c945275dc5b69c1f33cb98cf9",
                          "typeString": "literal_string \"Incorrect wants for offer in posthook\""
                        },
                        "value": "Incorrect wants for offer in posthook"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7445c387e2bfd85f2a4229288c4b55261e20d61c945275dc5b69c1f33cb98cf9",
                          "typeString": "literal_string \"Incorrect wants for offer in posthook\""
                        }
                      ],
                      "id": 61411,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "14804:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 61415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14804:67:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61416,
                  "nodeType": "ExpressionStatement",
                  "src": "14804:67:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61418,
                        "name": "__gives",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61384,
                        "src": "14886:7:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 61419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14895:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "496e636f727265637420676976657320666f72206f6666657220696e20706f7374686f6f6b",
                        "id": 61420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14904:39:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_94397e8499e25acf0ba5622a09344154bb7f621a9dc98c3f02836459d4d1c43e",
                          "typeString": "literal_string \"Incorrect gives for offer in posthook\""
                        },
                        "value": "Incorrect gives for offer in posthook"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_94397e8499e25acf0ba5622a09344154bb7f621a9dc98c3f02836459d4d1c43e",
                          "typeString": "literal_string \"Incorrect gives for offer in posthook\""
                        }
                      ],
                      "id": 61417,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "14877:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 61421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14877:67:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61422,
                  "nodeType": "ExpressionStatement",
                  "src": "14877:67:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61424,
                        "name": "__gasprice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61405,
                        "src": "14959:10:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "353030",
                        "id": 61425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14971:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500_by_1",
                          "typeString": "int_const 500"
                        },
                        "value": "500"
                      },
                      {
                        "hexValue": "496e636f727265637420676173707269636520666f72206f6666657220696e20706f7374686f6f6b",
                        "id": 61426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14976:42:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1fe74006b29127ef54503fe2dd1685d51301156a92ab0ea6957013980dcd2b9d",
                          "typeString": "literal_string \"Incorrect gasprice for offer in posthook\""
                        },
                        "value": "Incorrect gasprice for offer in posthook"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_500_by_1",
                          "typeString": "int_const 500"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1fe74006b29127ef54503fe2dd1685d51301156a92ab0ea6957013980dcd2b9d",
                          "typeString": "literal_string \"Incorrect gasprice for offer in posthook\""
                        }
                      ],
                      "id": 61423,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "14950:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 61427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14950:69:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61428,
                  "nodeType": "ExpressionStatement",
                  "src": "14950:69:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61430,
                        "name": "__maker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61391,
                        "src": "15034:7:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 61432,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "15045:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                              "typeString": "contract MakerPosthookTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                              "typeString": "contract MakerPosthookTest"
                            }
                          ],
                          "id": 61431,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70497,
                          "src": "15043:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 61433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15043:7:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374206d616b65722061646472657373",
                        "id": 61434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15052:25:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cf5f7e3eac5da0125fa1d5e0462f3e659a6bc3c2d3d05316e5e669049e19fb58",
                          "typeString": "literal_string \"Incorrect maker address\""
                        },
                        "value": "Incorrect maker address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cf5f7e3eac5da0125fa1d5e0462f3e659a6bc3c2d3d05316e5e669049e19fb58",
                          "typeString": "literal_string \"Incorrect maker address\""
                        }
                      ],
                      "id": 61429,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 345,
                      "src": "15025:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory)"
                      }
                    },
                    "id": 61435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15025:53:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61436,
                  "nodeType": "ExpressionStatement",
                  "src": "15025:53:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61438,
                        "name": "__gasreq",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61398,
                        "src": "15093:8:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 61439,
                        "name": "gasreq",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59664,
                        "src": "15103:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f727265637420676173726571",
                        "id": 61440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15111:18:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_05277186aa3a46dc2c4eb55667a0e060dfbcf49229b3233baf64a6bde8ba2639",
                          "typeString": "literal_string \"Incorrect gasreq\""
                        },
                        "value": "Incorrect gasreq"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_05277186aa3a46dc2c4eb55667a0e060dfbcf49229b3233baf64a6bde8ba2639",
                          "typeString": "literal_string \"Incorrect gasreq\""
                        }
                      ],
                      "id": 61437,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "15084:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 61441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15084:46:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61442,
                  "nodeType": "ExpressionStatement",
                  "src": "15084:46:93"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "check_offer_in_posthook",
            "nameLocation": "14441:23:93",
            "parameters": {
              "id": 61370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61366,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "14498:5:93",
                  "nodeType": "VariableDeclaration",
                  "scope": 61444,
                  "src": "14470:33:93",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SingleOrder_$24534_calldata_ptr",
                    "typeString": "struct MgvLib.SingleOrder"
                  },
                  "typeName": {
                    "id": 61365,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61364,
                      "name": "MgvLib.SingleOrder",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24534,
                      "src": "14470:18:93"
                    },
                    "referencedDeclaration": 24534,
                    "src": "14470:18:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SingleOrder_$24534_storage_ptr",
                      "typeString": "struct MgvLib.SingleOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61369,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 61444,
                  "src": "14509:27:93",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OrderResult_$24539_calldata_ptr",
                    "typeString": "struct MgvLib.OrderResult"
                  },
                  "typeName": {
                    "id": 61368,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61367,
                      "name": "MgvLib.OrderResult",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24539,
                      "src": "14509:18:93"
                    },
                    "referencedDeclaration": 24539,
                    "src": "14509:18:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OrderResult_$24539_storage_ptr",
                      "typeString": "struct MgvLib.OrderResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14464:76:93"
            },
            "returnParameters": {
              "id": 61371,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14550:0:93"
            },
            "scope": 61894,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 61487,
            "nodeType": "FunctionDefinition",
            "src": "15139:309:93",
            "body": {
              "id": 61486,
              "nodeType": "Block",
              "src": "15186:262:93",
              "statements": [
                {
                  "expression": {
                    "id": 61462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61447,
                      "name": "ofr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59666,
                      "src": "15192:3:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 61451,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69382,
                              "src": "15213:4:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 61450,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "15211:1:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 61452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15211:7:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 61454,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69385,
                              "src": "15222:5:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 61453,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "15220:1:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 61455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15220:8:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 61456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15230:7:93",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "32",
                          "id": 61457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15239:7:93",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2000000000000000000_by_1",
                            "typeString": "int_const 2000000000000000000"
                          },
                          "value": "2"
                        },
                        {
                          "id": 61458,
                          "name": "gasreq",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59664,
                          "src": "15248:6:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "353030",
                          "id": 61459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15256:3:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_500_by_1",
                            "typeString": "int_const 500"
                          },
                          "value": "500"
                        },
                        {
                          "hexValue": "30",
                          "id": 61460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15261:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_2000000000000000000_by_1",
                            "typeString": "int_const 2000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_500_by_1",
                            "typeString": "int_const 500"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "id": 61448,
                          "name": "mgv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69379,
                          "src": "15198:3:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                            "typeString": "contract AbstractMangrove"
                          }
                        },
                        "id": 61449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "newOffer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25045,
                        "src": "15198:12:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 61461,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15198:65:93",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15192:71:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 61463,
                  "nodeType": "ExpressionStatement",
                  "src": "15192:71:93"
                },
                {
                  "expression": {
                    "id": 61466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61464,
                      "name": "_posthook",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59885,
                      "src": "15269:9:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                        "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 61465,
                      "name": "check_offer_in_posthook",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61444,
                      "src": "15281:23:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                        "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata)"
                      }
                    },
                    "src": "15269:35:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                      "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata)"
                    }
                  },
                  "id": 61467,
                  "nodeType": "ExpressionStatement",
                  "src": "15269:35:93"
                },
                {
                  "assignments": [61469],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61469,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "15315:7:93",
                      "nodeType": "VariableDeclaration",
                      "scope": 61486,
                      "src": "15310:12:93",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 61468,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "15310:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61475,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 61472,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59666,
                        "src": "15334:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 61473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15339:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 61470,
                        "name": "tkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59661,
                        "src": "15325:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$73996",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 61471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "take",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73782,
                      "src": "15325:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256,uint256) external returns (bool)"
                      }
                    },
                    "id": 61474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15325:22:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15310:37:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61477,
                        "name": "called",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59679,
                        "src": "15364:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f7374486f6f6b206e6f742063616c6c6564",
                        "id": 61478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15372:21:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e243c7ce5a07bba9eed337c8e12a4dc1ca01ed6676e6d192bdc7a6eee2cce2f3",
                          "typeString": "literal_string \"PostHook not called\""
                        },
                        "value": "PostHook not called"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e243c7ce5a07bba9eed337c8e12a4dc1ca01ed6676e6d192bdc7a6eee2cce2f3",
                          "typeString": "literal_string \"PostHook not called\""
                        }
                      ],
                      "id": 61476,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "15353:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 61479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15353:41:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61480,
                  "nodeType": "ExpressionStatement",
                  "src": "15353:41:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61482,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61469,
                        "src": "15411:7:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536e6970652073686f756c642073756363656564",
                        "id": 61483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15420:22:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_235d9bd4a0656a377f46136e840c1f3b3f9cbae06df49060139f7eb13837dc73",
                          "typeString": "literal_string \"Snipe should succeed\""
                        },
                        "value": "Snipe should succeed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_235d9bd4a0656a377f46136e840c1f3b3f9cbae06df49060139f7eb13837dc73",
                          "typeString": "literal_string \"Snipe should succeed\""
                        }
                      ],
                      "id": 61481,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "15400:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 61484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15400:43:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61485,
                  "nodeType": "ExpressionStatement",
                  "src": "15400:43:93"
                }
              ]
            },
            "functionSelector": "1f859aa7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_check_offer_in_posthook",
            "nameLocation": "15148:28:93",
            "parameters": {
              "id": 61445,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15176:2:93"
            },
            "returnParameters": {
              "id": 61446,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15186:0:93"
            },
            "scope": 61894,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 61523,
            "nodeType": "FunctionDefinition",
            "src": "15452:288:93",
            "body": {
              "id": 61522,
              "nodeType": "Block",
              "src": "15571:169:93",
              "statements": [
                {
                  "expression": {
                    "id": 61498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61496,
                      "name": "called",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59679,
                      "src": "15577:6:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 61497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15586:4:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "15577:13:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 61499,
                  "nodeType": "ExpressionStatement",
                  "src": "15577:13:93"
                },
                {
                  "assignments": [null, 61505],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 61505,
                      "mutability": "mutable",
                      "name": "cfg",
                      "nameLocation": "15609:3:93",
                      "nodeType": "VariableDeclaration",
                      "scope": 61522,
                      "src": "15599:13:93",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_t_$31225",
                        "typeString": "t"
                      },
                      "typeName": {
                        "id": 61504,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 61503,
                          "name": "P.Local.t",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 31225,
                          "src": "15599:9:93"
                        },
                        "referencedDeclaration": 31225,
                        "src": "15599:9:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_t_$31225",
                          "typeString": "t"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61513,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 61508,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61490,
                          "src": "15627:5:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SingleOrder_$24534_calldata_ptr",
                            "typeString": "struct MgvLib.SingleOrder calldata"
                          }
                        },
                        "id": 61509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "outbound_tkn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24513,
                        "src": "15627:18:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 61510,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61490,
                          "src": "15647:5:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SingleOrder_$24534_calldata_ptr",
                            "typeString": "struct MgvLib.SingleOrder calldata"
                          }
                        },
                        "id": 61511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "inbound_tkn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24515,
                        "src": "15647:17:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 61506,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "15616:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 61507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "config",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28600,
                      "src": "15616:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_userDefinedValueType$_t_$30356_$_t_userDefinedValueType$_t_$31225_$",
                        "typeString": "function (address,address) view external returns (t,t)"
                      }
                    },
                    "id": 61512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15616:49:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_userDefinedValueType$_t_$30356_$_t_userDefinedValueType$_t_$31225_$",
                      "typeString": "tuple(t,t)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15596:69:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 61515,
                            "name": "cfg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61505,
                            "src": "15680:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_t_$31225",
                              "typeString": "t"
                            }
                          },
                          "id": 61516,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "last",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31983,
                          "src": "15680:8:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$31225_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$31225_$",
                            "typeString": "function (t) pure returns (uint256)"
                          }
                        },
                        "id": 61517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15680:10:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 61518,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59666,
                        "src": "15692:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374206c617374206f6666657220696420696e20706f7374686f6f6b",
                        "id": 61519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15697:37:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1f61c60e1ea2c4c2b5d822b0b1a4de71457caaf63c47fcdb93bfcc0bfdf2d55",
                          "typeString": "literal_string \"Incorrect last offer id in posthook\""
                        },
                        "value": "Incorrect last offer id in posthook"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1f61c60e1ea2c4c2b5d822b0b1a4de71457caaf63c47fcdb93bfcc0bfdf2d55",
                          "typeString": "literal_string \"Incorrect last offer id in posthook\""
                        }
                      ],
                      "id": 61514,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "15671:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 61520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15671:64:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61521,
                  "nodeType": "ExpressionStatement",
                  "src": "15671:64:93"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "check_lastId_in_posthook",
            "nameLocation": "15461:24:93",
            "parameters": {
              "id": 61494,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61490,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "15519:5:93",
                  "nodeType": "VariableDeclaration",
                  "scope": 61523,
                  "src": "15491:33:93",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SingleOrder_$24534_calldata_ptr",
                    "typeString": "struct MgvLib.SingleOrder"
                  },
                  "typeName": {
                    "id": 61489,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61488,
                      "name": "MgvLib.SingleOrder",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24534,
                      "src": "15491:18:93"
                    },
                    "referencedDeclaration": 24534,
                    "src": "15491:18:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SingleOrder_$24534_storage_ptr",
                      "typeString": "struct MgvLib.SingleOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61493,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 61523,
                  "src": "15530:27:93",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OrderResult_$24539_calldata_ptr",
                    "typeString": "struct MgvLib.OrderResult"
                  },
                  "typeName": {
                    "id": 61492,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61491,
                      "name": "MgvLib.OrderResult",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24539,
                      "src": "15530:18:93"
                    },
                    "referencedDeclaration": 24539,
                    "src": "15530:18:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OrderResult_$24539_storage_ptr",
                      "typeString": "struct MgvLib.OrderResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15485:76:93"
            },
            "returnParameters": {
              "id": 61495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15571:0:93"
            },
            "scope": 61894,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 61582,
            "nodeType": "FunctionDefinition",
            "src": "15744:449:93",
            "body": {
              "id": 61581,
              "nodeType": "Block",
              "src": "15797:396:93",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61530,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "15818:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 61529,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "15816:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 61531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15816:7:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 61533,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "15827:5:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 61532,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "15825:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 61534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15825:8:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 61535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15835:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 61536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15844:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "id": 61537,
                        "name": "gasreq",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59664,
                        "src": "15853:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 61538,
                        "name": "_gasprice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59669,
                        "src": "15861:9:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 61539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15872:1:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 61526,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "15803:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 61528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25045,
                      "src": "15803:12:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 61540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15803:71:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 61541,
                  "nodeType": "ExpressionStatement",
                  "src": "15803:71:93"
                },
                {
                  "expression": {
                    "id": 61557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61542,
                      "name": "ofr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59666,
                      "src": "15880:3:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 61546,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69382,
                              "src": "15908:4:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 61545,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "15906:1:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 61547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15906:7:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 61549,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69385,
                              "src": "15923:5:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 61548,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "15921:1:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 61550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15921:8:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "302e35",
                          "id": 61551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15937:9:93",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_500000000000000000_by_1",
                            "typeString": "int_const 500000000000000000"
                          },
                          "value": "0.5"
                        },
                        {
                          "hexValue": "31",
                          "id": 61552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15954:7:93",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "id": 61553,
                          "name": "gasreq",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59664,
                          "src": "15969:6:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 61554,
                          "name": "_gasprice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59669,
                          "src": "15983:9:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 61555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16000:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_500000000000000000_by_1",
                            "typeString": "int_const 500000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "id": 61543,
                          "name": "mgv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69379,
                          "src": "15886:3:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                            "typeString": "contract AbstractMangrove"
                          }
                        },
                        "id": 61544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "newOffer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25045,
                        "src": "15886:12:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 61556,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15886:121:93",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15880:127:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 61558,
                  "nodeType": "ExpressionStatement",
                  "src": "15880:127:93"
                },
                {
                  "expression": {
                    "id": 61561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61559,
                      "name": "_posthook",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59885,
                      "src": "16013:9:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                        "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 61560,
                      "name": "check_lastId_in_posthook",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61523,
                      "src": "16025:24:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                        "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata)"
                      }
                    },
                    "src": "16013:36:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                      "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata)"
                    }
                  },
                  "id": 61562,
                  "nodeType": "ExpressionStatement",
                  "src": "16013:36:93"
                },
                {
                  "assignments": [61564],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61564,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "16060:7:93",
                      "nodeType": "VariableDeclaration",
                      "scope": 61581,
                      "src": "16055:12:93",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 61563,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "16055:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61570,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 61567,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59666,
                        "src": "16079:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 61568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16084:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 61565,
                        "name": "tkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59661,
                        "src": "16070:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$73996",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 61566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "take",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73782,
                      "src": "16070:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256,uint256) external returns (bool)"
                      }
                    },
                    "id": 61569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16070:22:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16055:37:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61572,
                        "name": "called",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59679,
                        "src": "16109:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f7374486f6f6b206e6f742063616c6c6564",
                        "id": 61573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16117:21:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e243c7ce5a07bba9eed337c8e12a4dc1ca01ed6676e6d192bdc7a6eee2cce2f3",
                          "typeString": "literal_string \"PostHook not called\""
                        },
                        "value": "PostHook not called"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e243c7ce5a07bba9eed337c8e12a4dc1ca01ed6676e6d192bdc7a6eee2cce2f3",
                          "typeString": "literal_string \"PostHook not called\""
                        }
                      ],
                      "id": 61571,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "16098:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 61574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16098:41:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61575,
                  "nodeType": "ExpressionStatement",
                  "src": "16098:41:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61577,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61564,
                        "src": "16156:7:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536e6970652073686f756c642073756363656564",
                        "id": 61578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16165:22:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_235d9bd4a0656a377f46136e840c1f3b3f9cbae06df49060139f7eb13837dc73",
                          "typeString": "literal_string \"Snipe should succeed\""
                        },
                        "value": "Snipe should succeed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_235d9bd4a0656a377f46136e840c1f3b3f9cbae06df49060139f7eb13837dc73",
                          "typeString": "literal_string \"Snipe should succeed\""
                        }
                      ],
                      "id": 61576,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "16145:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 61579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16145:43:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61580,
                  "nodeType": "ExpressionStatement",
                  "src": "16145:43:93"
                }
              ]
            },
            "functionSelector": "32325d82",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_lastId_in_posthook_is_correct",
            "nameLocation": "15753:34:93",
            "parameters": {
              "id": 61524,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15787:2:93"
            },
            "returnParameters": {
              "id": 61525,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15797:0:93"
            },
            "scope": 61894,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 61725,
            "nodeType": "FunctionDefinition",
            "src": "16197:1256:93",
            "body": {
              "id": 61724,
              "nodeType": "Block",
              "src": "16257:1196:93",
              "statements": [
                {
                  "assignments": [61586],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61586,
                      "mutability": "mutable",
                      "name": "mkr_provision",
                      "nameLocation": "16268:13:93",
                      "nodeType": "VariableDeclaration",
                      "scope": 61724,
                      "src": "16263:18:93",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 61585,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "16263:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61597,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61589,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "16299:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 61588,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "16297:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 61590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16297:7:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 61592,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "16308:5:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 61591,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "16306:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 61593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16306:8:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 61594,
                        "name": "gasreq",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59664,
                        "src": "16316:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 61595,
                        "name": "_gasprice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59669,
                        "src": "16324:9:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 61587,
                      "name": "getProvision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [69975, 70042],
                      "referencedDeclaration": 70042,
                      "src": "16284:12:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 61596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16284:50:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16263:71:93"
                },
                {
                  "expression": {
                    "id": 61600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61598,
                      "name": "_posthook",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59885,
                      "src": "16340:9:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                        "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 61599,
                      "name": "retractOffer_posthook",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59875,
                      "src": "16352:21:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                        "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata)"
                      }
                    },
                    "src": "16340:33:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                      "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata)"
                    }
                  },
                  "id": 61601,
                  "nodeType": "ExpressionStatement",
                  "src": "16340:33:93"
                },
                {
                  "expression": {
                    "id": 61617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61602,
                      "name": "ofr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59666,
                      "src": "16379:3:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 61606,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69382,
                              "src": "16407:4:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 61605,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "16405:1:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 61607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16405:7:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 61609,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69385,
                              "src": "16422:5:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 61608,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "16420:1:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 61610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16420:8:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 61611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16436:7:93",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "31",
                          "id": 61612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16451:7:93",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "id": 61613,
                          "name": "gasreq",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59664,
                          "src": "16466:6:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 61614,
                          "name": "_gasprice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59669,
                          "src": "16480:9:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 61615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16497:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "id": 61603,
                          "name": "mgv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69379,
                          "src": "16385:3:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                            "typeString": "contract AbstractMangrove"
                          }
                        },
                        "id": 61604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "newOffer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25045,
                        "src": "16385:12:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 61616,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16385:119:93",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16379:125:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 61618,
                  "nodeType": "ExpressionStatement",
                  "src": "16379:125:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 61623,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "16542:4:93",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                                  "typeString": "contract MakerPosthookTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                                  "typeString": "contract MakerPosthookTest"
                                }
                              ],
                              "id": 61622,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70497,
                              "src": "16540:1:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                                "typeString": "function (contract Test) pure returns (address payable)"
                              }
                            },
                            "id": 61624,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16540:7:93",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 61620,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "16526:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          },
                          "id": 61621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24218,
                          "src": "16526:13:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 61625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16526:22:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 61628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 61626,
                          "name": "weiBalMaker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59671,
                          "src": "16556:11:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 61627,
                          "name": "mkr_provision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61586,
                          "src": "16570:13:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "16556:27:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374206d616b65722062616c616e6365206265666f72652074616b65",
                        "id": 61629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16631:37:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8245f276f759e21a347097e3a619ee7c9b1fba423244af9723ab5d4da613faac",
                          "typeString": "literal_string \"Incorrect maker balance before take\""
                        },
                        "value": "Incorrect maker balance before take"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8245f276f759e21a347097e3a619ee7c9b1fba423244af9723ab5d4da613faac",
                          "typeString": "literal_string \"Incorrect maker balance before take\""
                        }
                      ],
                      "id": 61619,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "16510:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 61630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16510:164:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61631,
                  "nodeType": "ExpressionStatement",
                  "src": "16510:164:93"
                },
                {
                  "expression": {
                    "id": 61634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61632,
                      "name": "makerRevert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59677,
                      "src": "16680:11:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 61633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16694:4:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "16680:18:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 61635,
                  "nodeType": "ExpressionStatement",
                  "src": "16680:18:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61638,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "16738:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 61637,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70446,
                          "src": "16736:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 61639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16736:6:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 61636,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70817,
                      "src": "16725:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 61640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16725:18:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61641,
                  "nodeType": "ExpressionStatement",
                  "src": "16725:18:93"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61644,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "16773:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 61643,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "16771:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 61645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16771:7:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 61647,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "16788:5:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 61646,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "16786:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 61648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16786:8:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 61649,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59666,
                        "src": "16802:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 61652,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59661,
                            "src": "16821:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          ],
                          "id": 61651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16813:7:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 61650,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16813:7:93",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 61653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16813:12:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 61654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16833:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 61655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16848:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "6d67762f6d616b6572526576657274",
                        "id": 61656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16863:17:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f1767113efd8f000c2792fdbf6264b4b726d4e8bf3e972fc7ed78ddedf9a514",
                          "typeString": "literal_string \"mgv/makerRevert\""
                        },
                        "value": "mgv/makerRevert"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f1767113efd8f000c2792fdbf6264b4b726d4e8bf3e972fc7ed78ddedf9a514",
                          "typeString": "literal_string \"mgv/makerRevert\""
                        }
                      ],
                      "id": 61642,
                      "name": "OfferFail",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24662,
                      "src": "16754:9:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,uint256,address,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 61657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16754:132:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61658,
                  "nodeType": "EmitStatement",
                  "src": "16749:137:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61661,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "16905:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 61660,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70446,
                          "src": "16903:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 61662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16903:6:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 61659,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70817,
                      "src": "16892:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 61663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16892:18:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61664,
                  "nodeType": "ExpressionStatement",
                  "src": "16892:18:93"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61667,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "16936:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 61666,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "16934:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 61668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16934:7:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 61670,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "16945:5:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 61669,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "16943:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 61671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16943:8:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 61672,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59666,
                        "src": "16953:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 61665,
                      "name": "OfferRetract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24714,
                      "src": "16921:12:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 61673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16921:36:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61674,
                  "nodeType": "EmitStatement",
                  "src": "16916:41:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 61678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17079:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 61679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17085:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 61680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17091:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 61681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17097:5:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "arguments": [
                          {
                            "id": 61683,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "17106:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 61682,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70446,
                          "src": "17104:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 61684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17104:6:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 61675,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "17065:2:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 61677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5103,
                      "src": "17065:13:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$_t_address_$returns$__$",
                        "typeString": "function (bool,bool,bool,bool,address) external"
                      }
                    },
                    "id": 61685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17065:46:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61686,
                  "nodeType": "ExpressionStatement",
                  "src": "17065:46:93"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61689,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "17138:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                              "typeString": "contract MakerPosthookTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                              "typeString": "contract MakerPosthookTest"
                            }
                          ],
                          "id": 61688,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70497,
                          "src": "17136:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 61690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17136:7:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 61691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17151:1:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 61687,
                      "name": "Credit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24548,
                      "src": "17122:6:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 61692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17122:47:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61693,
                  "nodeType": "EmitStatement",
                  "src": "17117:52:93"
                },
                {
                  "assignments": [61695],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61695,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "17180:7:93",
                      "nodeType": "VariableDeclaration",
                      "scope": 61724,
                      "src": "17175:12:93",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 61694,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "17175:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61701,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 61698,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59666,
                        "src": "17199:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 61699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17204:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 61696,
                        "name": "tkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59661,
                        "src": "17190:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$73996",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 61697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "take",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73782,
                      "src": "17190:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256,uint256) external returns (bool)"
                      }
                    },
                    "id": 61700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17190:22:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17175:37:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61703,
                        "name": "called",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59679,
                        "src": "17229:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f7374486f6f6b206e6f742063616c6c6564",
                        "id": 61704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17237:21:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e243c7ce5a07bba9eed337c8e12a4dc1ca01ed6676e6d192bdc7a6eee2cce2f3",
                          "typeString": "literal_string \"PostHook not called\""
                        },
                        "value": "PostHook not called"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e243c7ce5a07bba9eed337c8e12a4dc1ca01ed6676e6d192bdc7a6eee2cce2f3",
                          "typeString": "literal_string \"PostHook not called\""
                        }
                      ],
                      "id": 61702,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "17218:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 61705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17218:41:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61706,
                  "nodeType": "ExpressionStatement",
                  "src": "17218:41:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "17277:8:93",
                        "subExpression": {
                          "id": 61708,
                          "name": "success",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61695,
                          "src": "17278:7:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536e6970652073686f756c64206661696c",
                        "id": 61710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17287:19:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a648d0f68cada8cb2e4646f47f539f24e9b0a9dfd258dc8267d3f4e5832e763d",
                          "typeString": "literal_string \"Snipe should fail\""
                        },
                        "value": "Snipe should fail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a648d0f68cada8cb2e4646f47f539f24e9b0a9dfd258dc8267d3f4e5832e763d",
                          "typeString": "literal_string \"Snipe should fail\""
                        }
                      ],
                      "id": 61707,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "17266:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 61711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17266:41:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61712,
                  "nodeType": "ExpressionStatement",
                  "src": "17266:41:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 61717,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "17346:4:93",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                                  "typeString": "contract MakerPosthookTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                                  "typeString": "contract MakerPosthookTest"
                                }
                              ],
                              "id": 61716,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70497,
                              "src": "17344:1:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                                "typeString": "function (contract Test) pure returns (address payable)"
                              }
                            },
                            "id": 61718,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17344:7:93",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 61714,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "17330:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          },
                          "id": 61715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24218,
                          "src": "17330:13:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 61719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17330:22:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 61720,
                        "name": "weiBalMaker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59671,
                        "src": "17360:11:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "4d616b65722062616c616e63652061667465722074616b652073686f756c64206265206c657373207468616e206f726967696e616c2062616c616e6365",
                        "id": 61721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17379:63:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d8d2f1ee6ed84ba42ce74cc2bc5b0e09a58310beb884ea07d64f03b07880b4b",
                          "typeString": "literal_string \"Maker balance after take should be less than original balance\""
                        },
                        "value": "Maker balance after take should be less than original balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d8d2f1ee6ed84ba42ce74cc2bc5b0e09a58310beb884ea07d64f03b07880b4b",
                          "typeString": "literal_string \"Maker balance after take should be less than original balance\""
                        }
                      ],
                      "id": 61713,
                      "name": "assertLt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [1161, 1186, 1216, 1241],
                      "referencedDeclaration": 1186,
                      "src": "17314:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 61722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17314:134:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61723,
                  "nodeType": "ExpressionStatement",
                  "src": "17314:134:93"
                }
              ]
            },
            "functionSelector": "df894467",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_retract_offer_after_fail_in_posthook",
            "nameLocation": "16206:41:93",
            "parameters": {
              "id": 61583,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16247:2:93"
            },
            "returnParameters": {
              "id": 61584,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16257:0:93"
            },
            "scope": 61894,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 61784,
            "nodeType": "FunctionDefinition",
            "src": "17457:449:93",
            "body": {
              "id": 61783,
              "nodeType": "Block",
              "src": "17502:404:93",
              "statements": [
                {
                  "expression": {
                    "id": 61743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61728,
                      "name": "ofr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59666,
                      "src": "17508:3:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 61732,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69382,
                              "src": "17536:4:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 61731,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "17534:1:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 61733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17534:7:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 61735,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69385,
                              "src": "17551:5:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 61734,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "17549:1:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 61736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17549:8:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 61737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17565:7:93",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "31",
                          "id": 61738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17580:7:93",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "id": 61739,
                          "name": "gasreq",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59664,
                          "src": "17595:6:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 61740,
                          "name": "_gasprice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59669,
                          "src": "17609:9:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 61741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17626:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "id": 61729,
                          "name": "mgv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69379,
                          "src": "17514:3:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                            "typeString": "contract AbstractMangrove"
                          }
                        },
                        "id": 61730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "newOffer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25045,
                        "src": "17514:12:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 61742,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17514:119:93",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17508:125:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 61744,
                  "nodeType": "ExpressionStatement",
                  "src": "17508:125:93"
                },
                {
                  "expression": {
                    "id": 61747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61745,
                      "name": "makerRevert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59677,
                      "src": "17639:11:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 61746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17653:4:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "17639:18:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 61748,
                  "nodeType": "ExpressionStatement",
                  "src": "17639:18:93"
                },
                {
                  "assignments": [61750],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61750,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "17689:7:93",
                      "nodeType": "VariableDeclaration",
                      "scope": 61783,
                      "src": "17684:12:93",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 61749,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "17684:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61751,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17684:12:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61754,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "17715:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 61753,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70446,
                          "src": "17713:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 61755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17713:6:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 61752,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70817,
                      "src": "17702:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 61756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17702:18:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61757,
                  "nodeType": "ExpressionStatement",
                  "src": "17702:18:93"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61760,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "17750:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 61759,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "17748:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 61761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17748:7:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 61763,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "17765:5:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 61762,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "17763:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 61764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17763:8:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 61765,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59666,
                        "src": "17779:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 61768,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59661,
                            "src": "17798:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          ],
                          "id": 61767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17790:7:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 61766,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17790:7:93",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 61769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17790:12:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 61770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17810:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 61771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17825:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "6d67762f6d616b6572526576657274",
                        "id": 61772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17840:17:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f1767113efd8f000c2792fdbf6264b4b726d4e8bf3e972fc7ed78ddedf9a514",
                          "typeString": "literal_string \"mgv/makerRevert\""
                        },
                        "value": "mgv/makerRevert"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f1767113efd8f000c2792fdbf6264b4b726d4e8bf3e972fc7ed78ddedf9a514",
                          "typeString": "literal_string \"mgv/makerRevert\""
                        }
                      ],
                      "id": 61758,
                      "name": "OfferFail",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24662,
                      "src": "17731:9:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,uint256,address,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 61773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17731:132:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61774,
                  "nodeType": "EmitStatement",
                  "src": "17726:137:93"
                },
                {
                  "expression": {
                    "id": 61781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61775,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61750,
                      "src": "17869:7:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 61778,
                          "name": "ofr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59666,
                          "src": "17888:3:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "32",
                          "id": 61779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17893:7:93",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2000000000000000000_by_1",
                            "typeString": "int_const 2000000000000000000"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_2000000000000000000_by_1",
                            "typeString": "int_const 2000000000000000000"
                          }
                        ],
                        "expression": {
                          "id": 61776,
                          "name": "tkr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59661,
                          "src": "17879:3:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestTaker_$73996",
                            "typeString": "contract TestTaker"
                          }
                        },
                        "id": 61777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "take",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 73782,
                        "src": "17879:8:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256,uint256) external returns (bool)"
                        }
                      },
                      "id": 61780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17879:22:93",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "17869:32:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 61782,
                  "nodeType": "ExpressionStatement",
                  "src": "17869:32:93"
                }
              ]
            },
            "functionSelector": "9a5c458d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_makerRevert_is_logged",
            "nameLocation": "17466:26:93",
            "parameters": {
              "id": 61726,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17492:2:93"
            },
            "returnParameters": {
              "id": 61727,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17502:0:93"
            },
            "scope": 61894,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 61798,
            "nodeType": "FunctionDefinition",
            "src": "17910:136:93",
            "body": {
              "id": 61797,
              "nodeType": "Block",
              "src": "18022:24:93",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 61794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18035:5:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 61793,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "18028:6:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 61795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18028:13:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61796,
                  "nodeType": "ExpressionStatement",
                  "src": "18028:13:93"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reverting_posthook",
            "nameLocation": "17919:18:93",
            "parameters": {
              "id": 61791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61787,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 61798,
                  "src": "17943:27:93",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SingleOrder_$24534_calldata_ptr",
                    "typeString": "struct MgvLib.SingleOrder"
                  },
                  "typeName": {
                    "id": 61786,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61785,
                      "name": "MgvLib.SingleOrder",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24534,
                      "src": "17943:18:93"
                    },
                    "referencedDeclaration": 24534,
                    "src": "17943:18:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SingleOrder_$24534_storage_ptr",
                      "typeString": "struct MgvLib.SingleOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61790,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 61798,
                  "src": "17976:27:93",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OrderResult_$24539_calldata_ptr",
                    "typeString": "struct MgvLib.OrderResult"
                  },
                  "typeName": {
                    "id": 61789,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61788,
                      "name": "MgvLib.OrderResult",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24539,
                      "src": "17976:18:93"
                    },
                    "referencedDeclaration": 24539,
                    "src": "17976:18:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OrderResult_$24539_storage_ptr",
                      "typeString": "struct MgvLib.OrderResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17937:70:93"
            },
            "returnParameters": {
              "id": 61792,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18022:0:93"
            },
            "scope": 61894,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 61893,
            "nodeType": "FunctionDefinition",
            "src": "18050:707:93",
            "body": {
              "id": 61892,
              "nodeType": "Block",
              "src": "18114:643:93",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61803,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "18135:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 61802,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "18133:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 61804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18133:7:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 61806,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "18144:5:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 61805,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "18142:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 61807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18142:8:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 61808,
                        "name": "gasreq",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59664,
                        "src": "18152:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 61809,
                        "name": "_gasprice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59669,
                        "src": "18160:9:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 61801,
                      "name": "getProvision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [69975, 70042],
                      "referencedDeclaration": 70042,
                      "src": "18120:12:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 61810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18120:50:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 61811,
                  "nodeType": "ExpressionStatement",
                  "src": "18120:50:93"
                },
                {
                  "assignments": [61813],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61813,
                      "mutability": "mutable",
                      "name": "balMaker",
                      "nameLocation": "18181:8:93",
                      "nodeType": "VariableDeclaration",
                      "scope": 61892,
                      "src": "18176:13:93",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 61812,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "18176:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61820,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61817,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "18209:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                              "typeString": "contract MakerPosthookTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                              "typeString": "contract MakerPosthookTest"
                            }
                          ],
                          "id": 61816,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70497,
                          "src": "18207:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 61818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18207:7:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 61814,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69382,
                        "src": "18192:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 61815,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74388,
                      "src": "18192:14:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 61819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18192:23:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18176:39:93"
                },
                {
                  "assignments": [61822],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61822,
                      "mutability": "mutable",
                      "name": "balTaker",
                      "nameLocation": "18226:8:93",
                      "nodeType": "VariableDeclaration",
                      "scope": 61892,
                      "src": "18221:13:93",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 61821,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "18221:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61830,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61827,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59661,
                            "src": "18261:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          ],
                          "id": 61826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18253:7:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 61825,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18253:7:93",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 61828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18253:12:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 61823,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69385,
                        "src": "18237:5:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 61824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74388,
                      "src": "18237:15:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 61829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18237:29:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18221:45:93"
                },
                {
                  "expression": {
                    "id": 61833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61831,
                      "name": "_posthook",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59885,
                      "src": "18272:9:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                        "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 61832,
                      "name": "reverting_posthook",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61798,
                      "src": "18284:18:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                        "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata) pure"
                      }
                    },
                    "src": "18272:30:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$24534_calldata_ptr_$_t_struct$_OrderResult_$24539_calldata_ptr_$returns$__$",
                      "typeString": "function (struct MgvLib.SingleOrder calldata,struct MgvLib.OrderResult calldata)"
                    }
                  },
                  "id": 61834,
                  "nodeType": "ExpressionStatement",
                  "src": "18272:30:93"
                },
                {
                  "expression": {
                    "id": 61850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61835,
                      "name": "ofr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59666,
                      "src": "18309:3:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 61839,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69382,
                              "src": "18337:4:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 61838,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "18335:1:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 61840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18335:7:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 61842,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69385,
                              "src": "18352:5:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 61841,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "18350:1:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 61843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18350:8:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 61844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18366:7:93",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "31",
                          "id": 61845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18381:7:93",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "id": 61846,
                          "name": "gasreq",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59664,
                          "src": "18396:6:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 61847,
                          "name": "_gasprice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59669,
                          "src": "18410:9:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 61848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18427:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "id": 61836,
                          "name": "mgv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69379,
                          "src": "18315:3:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                            "typeString": "contract AbstractMangrove"
                          }
                        },
                        "id": 61837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "newOffer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25045,
                        "src": "18315:12:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 61849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18315:119:93",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18309:125:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 61851,
                  "nodeType": "ExpressionStatement",
                  "src": "18309:125:93"
                },
                {
                  "assignments": [61853],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61853,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "18445:7:93",
                      "nodeType": "VariableDeclaration",
                      "scope": 61892,
                      "src": "18440:12:93",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 61852,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "18440:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61859,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 61856,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59666,
                        "src": "18464:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 61857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18469:7:93",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 61854,
                        "name": "tkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59661,
                        "src": "18455:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$73996",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 61855,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "take",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73782,
                      "src": "18455:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256,uint256) external returns (bool)"
                      }
                    },
                    "id": 61858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18455:22:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18440:37:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61861,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61853,
                        "src": "18494:7:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "736e6970652073686f756c642073756363656564",
                        "id": 61862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18503:22:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8dc00572b0a01c7308e41ed384f8520a436fd96f91a070e50f7a00ed1792a43",
                          "typeString": "literal_string \"snipe should succeed\""
                        },
                        "value": "snipe should succeed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8dc00572b0a01c7308e41ed384f8520a436fd96f91a070e50f7a00ed1792a43",
                          "typeString": "literal_string \"snipe should succeed\""
                        }
                      ],
                      "id": 61860,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "18483:10:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 61863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18483:43:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61864,
                  "nodeType": "ExpressionStatement",
                  "src": "18483:43:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 61868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 61866,
                          "name": "balMaker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61813,
                          "src": "18548:8:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 61867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18559:7:93",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        "src": "18548:18:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 61872,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "18591:4:93",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                                  "typeString": "contract MakerPosthookTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MakerPosthookTest_$61894",
                                  "typeString": "contract MakerPosthookTest"
                                }
                              ],
                              "id": 61871,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70497,
                              "src": "18589:1:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                                "typeString": "function (contract Test) pure returns (address payable)"
                              }
                            },
                            "id": 61873,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18589:7:93",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 61869,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "18574:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          },
                          "id": 61870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 74388,
                          "src": "18574:14:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 61874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18574:23:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374206d616b65722062616c616e6365",
                        "id": 61875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18605:25:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_85f524299926543208299d3c83a08f8f1dbe23d066ef04d3ed502dff27f3f0d6",
                          "typeString": "literal_string \"Incorrect maker balance\""
                        },
                        "value": "Incorrect maker balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_85f524299926543208299d3c83a08f8f1dbe23d066ef04d3ed502dff27f3f0d6",
                          "typeString": "literal_string \"Incorrect maker balance\""
                        }
                      ],
                      "id": 61865,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "18532:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 61876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18532:104:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61877,
                  "nodeType": "ExpressionStatement",
                  "src": "18532:104:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 61881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 61879,
                          "name": "balTaker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61822,
                          "src": "18658:8:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 61880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18669:7:93",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        "src": "18658:18:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 61886,
                                "name": "tkr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59661,
                                "src": "18708:3:93",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestTaker_$73996",
                                  "typeString": "contract TestTaker"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestTaker_$73996",
                                  "typeString": "contract TestTaker"
                                }
                              ],
                              "id": 61885,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "18700:7:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 61884,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "18700:7:93",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 61887,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18700:12:93",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 61882,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "18684:5:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          },
                          "id": 61883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 74388,
                          "src": "18684:15:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 61888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18684:29:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f72726563742074616b65722062616c616e6365",
                        "id": 61889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18721:25:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_56ad059b3484dd563b8255041af90ba7e9e1d5a5c91f19726f49c7c88c3f5c9f",
                          "typeString": "literal_string \"Incorrect taker balance\""
                        },
                        "value": "Incorrect taker balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_56ad059b3484dd563b8255041af90ba7e9e1d5a5c91f19726f49c7c88c3f5c9f",
                          "typeString": "literal_string \"Incorrect taker balance\""
                        }
                      ],
                      "id": 61878,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "18642:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 61890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18642:110:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61891,
                  "nodeType": "ExpressionStatement",
                  "src": "18642:110:93"
                }
              ]
            },
            "functionSelector": "50198541",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_reverting_posthook_does_not_revert_offer",
            "nameLocation": "18059:45:93",
            "parameters": {
              "id": 61799,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18104:2:93"
            },
            "returnParameters": {
              "id": 61800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18114:0:93"
            },
            "scope": 61894,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 59655,
              "name": "MangroveTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 70515,
              "src": "134:12:93"
            },
            "id": 59656,
            "nodeType": "InheritanceSpecifier",
            "src": "134:12:93"
          },
          {
            "baseName": {
              "id": 59657,
              "name": "IMaker",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24733,
              "src": "148:6:93"
            },
            "id": 59658,
            "nodeType": "InheritanceSpecifier",
            "src": "148:6:93"
          }
        ],
        "canonicalName": "MakerPosthookTest",
        "contractDependencies": [23581, 23707, 72689, 73404, 73996, 76251],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          61894, 24733, 70515, 24715, 70890, 72490, 3455, 2022, 1786
        ],
        "name": "MakerPosthookTest",
        "nameLocation": "113:17:93",
        "scope": 61895,
        "usedErrors": []
      }
    ],
    "license": "AGPL-3.0"
  },
  "id": 93
}
