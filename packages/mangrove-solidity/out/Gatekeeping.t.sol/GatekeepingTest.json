{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Credit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Debit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Kill",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "NewMgv",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "base",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "quote",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "offerIds",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "wants",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "gives",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "makerAddr",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "gasreqs",
          "type": "uint256[]"
        }
      ],
      "name": "OBState",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerWants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGives",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "mgvData",
          "type": "bytes32"
        }
      ],
      "name": "OfferFail",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "OfferRetract",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerWants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGives",
          "type": "uint256"
        }
      ],
      "name": "OfferSuccess",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gives",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasprice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasreq",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "prev",
          "type": "uint256"
        }
      ],
      "name": "OfferWrite",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGot",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGave",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "penalty",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feePaid",
          "type": "uint256"
        }
      ],
      "name": "OrderComplete",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "OrderStart",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "posthookData",
          "type": "bytes32"
        }
      ],
      "name": "PosthookFail",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "SetActive",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetDensity",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "offer_gasbase",
          "type": "uint256"
        }
      ],
      "name": "SetGasbase",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetGasmax",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetGasprice",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "SetGovernance",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "SetMonitor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "SetNotify",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "SetUseOracle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "SetVault",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "outbound",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "inbound",
          "type": "address"
        }
      ],
      "name": "offers_head",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gives",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasreq",
          "type": "uint256"
        }
      ],
      "name": "offers_line",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "t",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "power",
          "type": "uint256"
        }
      ],
      "name": "cash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "t",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "cash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "echoSender",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256[]",
          "name": "ints",
          "type": "int256[]"
        }
      ],
      "name": "logary",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "uints",
          "type": "uint256[]"
        }
      ],
      "name": "logary",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            },
            {
              "internalType": "t",
              "name": "offer",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "wants",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gives",
              "type": "uint256"
            },
            {
              "internalType": "t",
              "name": "offerDetail",
              "type": "uint256"
            },
            {
              "internalType": "t",
              "name": "global",
              "type": "uint256"
            },
            {
              "internalType": "t",
              "name": "local",
              "type": "uint256"
            }
          ],
          "internalType": "struct MgvLib.SingleOrder",
          "name": "",
          "type": "tuple"
        }
      ],
      "name": "makerExecute",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "ret",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            },
            {
              "internalType": "t",
              "name": "offer",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "wants",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gives",
              "type": "uint256"
            },
            {
              "internalType": "t",
              "name": "offerDetail",
              "type": "uint256"
            },
            {
              "internalType": "t",
              "name": "global",
              "type": "uint256"
            },
            {
              "internalType": "t",
              "name": "local",
              "type": "uint256"
            }
          ],
          "internalType": "struct MgvLib.SingleOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "makerData",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "mgvData",
              "type": "bytes32"
            }
          ],
          "internalType": "struct MgvLib.OrderResult",
          "name": "result",
          "type": "tuple"
        }
      ],
      "name": "makerPosthook",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marketOrderKO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_base",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_quote",
          "type": "address"
        }
      ],
      "name": "marketOrderOK",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "newOfferKO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_base",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_quote",
          "type": "address"
        }
      ],
      "name": "newOfferOK",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "retractOfferKO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_base",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_quote",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "retractOfferOK",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "$out",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "$in",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "label",
          "type": "string"
        }
      ],
      "name": "setupMaker",
      "outputs": [
        {
          "internalType": "contract TestMaker",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "$out",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "$in",
          "type": "address"
        }
      ],
      "name": "setupMakerDeployer",
      "outputs": [
        {
          "internalType": "contract MakerDeployer",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "inverted",
          "type": "bool"
        }
      ],
      "name": "setupMangrove",
      "outputs": [
        {
          "internalType": "contract AbstractMangrove",
          "name": "_mgv",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "inverted",
          "type": "bool"
        }
      ],
      "name": "setupMangrove",
      "outputs": [
        {
          "internalType": "contract AbstractMangrove",
          "name": "_mgv",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setupMangrove",
      "outputs": [
        {
          "internalType": "contract AbstractMangrove",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "inbound_tkn",
          "type": "address"
        }
      ],
      "name": "setupMangrove",
      "outputs": [
        {
          "internalType": "contract AbstractMangrove",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "$out",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "$in",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "label",
          "type": "string"
        }
      ],
      "name": "setupTaker",
      "outputs": [
        {
          "internalType": "contract TestTaker",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "snipesKO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_base",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_quote",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "snipesOK",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_activation_emits_events_in_order",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_can_marketOrderFor_for_with_allowance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_cannot_marketOrderFor_for_without_allowance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_cannot_snipesFor_for_without_allowance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_empty_mgv_ok",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_gov_can_transfer_rights",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_gov_cant_be_zero",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_gov_is_not_sender",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_initial_allowance_is_zero",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_kill_is_idempotent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_killing_updates_config",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_makerGasprice_wider_than_16_bits_fails_newOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_makerGasreq_at_density_suceeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_makerGasreq_at_gasmax_succeeds_newOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_makerGasreq_bigger_than_gasmax_fails_newOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_makerGasreq_lower_than_density_fails_newOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_makerGasreq_wider_than_24_bits_fails_newOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_makerGives_wider_than_96_bits_fails_newOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_makerWants_wider_than_96_bits_fails_newOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_marketOrder_on_closed_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_marketOrder_on_posthook_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_marketOrder_on_reentrancy_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_marketOrder_on_reentrancy_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_newOffer_on_closed_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_newOffer_on_inactive_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_newOffer_on_posthook_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_newOffer_on_reentrancy_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_newOffer_on_reentrancy_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_only_gov_can_kill",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_only_gov_can_set_active",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_only_gov_can_set_density",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_only_gov_can_set_fee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_only_gov_can_set_gasbase",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_only_gov_can_set_gasmax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_only_gov_can_set_gasprice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_only_gov_can_set_monitor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_only_gov_can_set_vault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_receive_on_closed_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_retractOffer_on_closed_ok",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_retractOffer_on_posthook_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_retractOffer_on_reentrancy_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_retractOffer_on_reentrancy_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_retractOffer_wrong_owner_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_set_density_ceiling",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_set_fee_ceiling",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_set_gasbase_ceiling",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_set_gasmax_ceiling",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_set_gasprice_ceiling",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_set_zero_density",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_set_zero_gasbase",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_snipe_on_closed_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_snipe_on_reentrancy_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_snipes_on_posthook_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_snipes_on_reentrancy_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_take_on_closed_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_takerGives_above_96bits_fails_snipes",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_takerWants_above_96bits_fails_snipes",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_takerWants_wider_than_160_bits_fails_marketOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_updateOffer_on_closed_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_updateOffer_on_inactive_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_updateOffer_on_posthook_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_updateOffer_on_reentrancy_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_updateOffer_on_reentrancy_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_withdraw_on_closed_ok",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ofr",
          "type": "uint256"
        }
      ],
      "name": "updateOfferKO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_base",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_quote",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "ofr",
          "type": "uint256"
        }
      ],
      "name": "updateOfferOK",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1368:26:0:-:0;;;-1:-1:-1;;163:28:1;;;;;-1:-1:-1;2152:20:100;;;;3904:34;;;;186:22060:90;1728:237:99;;;1793:64;;;;-1:-1:-1;;;1793:64:99;;;;1368:26:0;1793:64:99;;;;;;;;-1:-1:-1;;;1793:64:99;;;;1853:2;-1:-1:-1;1793:64:99;;;-1:-1:-1;1728:237:99;;;1872:65;;;;-1:-1:-1;;;1872:65:99;;1793:64;1872:65;;;;-1:-1:-1;1872:65:99;;;;;-1:-1:-1;;;1872:65:99;;-1:-1:-1;1872:65:99;;;;-1:-1:-1;1872:65:99;-1:-1:-1;1728:237:99;;;;-1:-1:-1;1728:237:99;;;;1694:271;;;-1:-1:-1;;1694:271:99;;;186:22060:90;;1694:271:99;;1368:26:0;;1694:271:99;;;;;;1793:64;1694:271;:::i;:::-;-1:-1:-1;1694:271:99;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1694:271:99;;;;;;;;;;;;-1:-1:-1;;1694:271:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1694:271:99;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1694:271:99;;;;;;;;;;;;-1:-1:-1;;1694:271:99;;;;;;;;;;;;;;;;;;;;;;186:22060:90;;;;;;;;;-1:-1:-1;2020:32:99;;;-1:-1:-1;;;2020:32:99;;2029:9;2020:32;;;226:51:125;293:18;;;286:30;;;;352:1;332:18;;;325:29;-1:-1:-1;;;370:18:125;;;363:39;237:61:1;;2020:8:99;;419:19:125;;2020:32:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2058:32:99;;;-1:-1:-1;;;2058:32:99;;2069:4;2058:32;;;669:51:125;736:18;;;729:30;;;795:2;775:18;;;768:30;-1:-1:-1;;;814:18:125;;;807:41;2058:32:99;;237:61:1;;-1:-1:-1;2058:8:99;;-1:-1:-1;865:19:125;;;;;-1:-1:-1;;2058:32:99;;;;;;;-1:-1:-1;237:61:1;2058:32:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;186:22060:90;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;186:22060:90;;;-1:-1:-1;186:22060:90;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;895:380:125;974:1;970:12;;;;1017;;;1038:61;;1092:4;1084:6;1080:17;1070:27;;1038:61;1145:2;1137:6;1134:14;1114:18;1111:38;1108:161;;1191:10;1186:3;1182:20;1179:1;1172:31;1226:4;1223:1;1216:15;1254:4;1251:1;1244:15;1108:161;;895:380;;;:::o;:::-;186:22060:90;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMapi;:::-;;7192:411:99;;;;;;;;;;-1:-1:-1;7192:411:99;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;581:32:125;;;563:51;;551:2;536:18;7192:411:99;;;;;;;;5505:162:90;;;;;;;;;;;;;:::i;349:555::-;;;;;;;;;;;;;:::i;7867:243:99:-;;;;;;;;;;-1:-1:-1;7867:243:99;;;;;:::i;:::-;;:::i;8011:353:90:-;;;;;;;;;;;;;:::i;17002:461::-;;;;;;;;;;;;;:::i;3219:147::-;;;;;;;;;;;;;:::i;6921:747::-;;;;;;;;;;;;;:::i;3686:139::-;;;;;;;;;;;;;:::i;3539:143::-;;;;;;;;;;;;;:::i;14490:144::-;;;;;;;;;;-1:-1:-1;14490:144:90;;;;;:::i;:::-;;:::i;20959:95::-;;;;;;;;;;;;;:::i;780:82:100:-;;;;;;;;;;-1:-1:-1;847:10:100;780:82;;4198:167:90;;;;;;;;;;;;;:::i;11245:267::-;;;;;;;;;;;;;:::i;16557:275::-;;;;;;;;;;;;;:::i;18274:266::-;;;;;;;;;;;;;:::i;12550:169::-;;;;;;;;;;-1:-1:-1;12550:169:90;;;;;:::i;:::-;;:::i;9115:268:99:-;;;;;;;;;;-1:-1:-1;9115:268:99;;;;;:::i;:::-;;:::i;16401:152:90:-;;;;;;;;;;;;;:::i;19286:441::-;;;;;;;;;;;;;:::i;21516:373::-;;;;;;;;;;;;;:::i;5109:224::-;;;;;;;;;;;;;:::i;13256:600::-;;;;;;;;;;;;;:::i;303:38:1:-;;;;;;;;;;-1:-1:-1;303:38:1;-1:-1:-1;;;;;;;;;;;303:38:1;;18026:244:90;;;;;;;;;;-1:-1:-1;18026:244:90;;;;;:::i;:::-;;:::i;10622:416::-;;;;;;;;;;-1:-1:-1;10622:416:90;;;;;:::i;:::-;;:::i;11729:393::-;;;;;;;;;;;;;:::i;9629:546::-;;;;;;;;;;;;;:::i;20143:195::-;;;;;;;;;;;;;:::i;13860:596::-;;;;;;;;;;;;;:::i;746:282:101:-;;;;;;;;;;-1:-1:-1;746:282:101;;;;;:::i;:::-;;:::i;12126:390:90:-;;;;;;;;;;;;;:::i;14950:275::-;;;;;;;;;;-1:-1:-1;14950:275:90;;;;;:::i;:::-;;:::i;14638:278::-;;;;;;;;;;;;;:::i;1262:349::-;;;;;;;;;;;;;:::i;5671:229::-;;;;;;;;;;;;;:::i;10286:332::-;;;;;;;;;;-1:-1:-1;10286:332:90;;;;;:::i;:::-;;:::i;:::-;;;6304:25:125;;;6292:2;6277:18;10286:332:90;6158:177:125;9928:132:99;;;;;;;;;;-1:-1:-1;9928:132:99;;;;;:::i;:::-;;:::i;3072:143:90:-;;;;;;;;;;;;;:::i;4613:171::-;;;;;;;;;;;;;:::i;20830:125::-;;;;;;;;;;;;;:::i;5904:673::-;;;;;;;;;;;;;:::i;1935:154::-;;;;;;;;;;;;;:::i;1134:124::-;;;;;;;;;;;;;:::i;4065:129::-;;;;;;;;;;;;;:::i;2093:127::-;;;;;;;;;;;;;:::i;21893:351::-;;;;;;;;;;;;;:::i;7053:97:99:-;;;;;;;;;;;;;:::i;2224:338:90:-;;;;;;;;;;;;;:::i;8915:387::-;;;;;;;;;;;;;:::i;5337:164::-;;;;;;;;;;;;;:::i;16866:132::-;;;;;;;;;;-1:-1:-1;16866:132:90;;;;;:::i;:::-;;:::i;4522:87::-;;;;;;;;;;;;;:::i;7844:163::-;;;;;;;;;;;;;:::i;931:199::-;;;;;;;;;;;;;:::i;19937:202::-;;;;;;;;;;;;;:::i;3993:68::-;;;;;;;;;;;;;:::i;18813:469::-;;;;;;;;;;;;;:::i;6581:336::-;;;;;;;;;;;;;:::i;11091:150::-;;;;;;;;;;;;;:::i;20342:336::-;;;;;;;;;;;;;:::i;3829:160::-;;;;;;;;;;;;;:::i;461:281:101:-;;;;;;;;;;-1:-1:-1;461:281:101;;;;;:::i;:::-;;:::i;4369:149:90:-;;;;;;;;;;;;;:::i;1610:472:0:-;;;;;;;;;;;;;:::i;:::-;;;8403:14:125;;8396:22;8378:41;;8366:2;8351:18;1610:472:0;8238:187:125;8937:174:99;;;;;;;;;;-1:-1:-1;8937:174:99;;;;;:::i;:::-;;:::i;21058:198:90:-;;;;;;;;;;;;;:::i;8665:268:99:-;;;;;;;;;;-1:-1:-1;8665:268:99;;;;;:::i;:::-;;:::i;7672:168:90:-;;;;;;;;;;;;;:::i;4788:143::-;;;;;;;;;;;;;:::i;13085:167::-;;;;;;;;;;-1:-1:-1;13085:167:90;;;;;:::i;:::-;;:::i;15229:568::-;;;;;;;;;;;;;:::i;15801:566::-;;;;;;;;;;;;;:::i;3370:165::-;;;;;;;;;;;;;:::i;8725:186::-;;;;;;;;;;;;;:::i;18567:242::-;;;;;;;;;;-1:-1:-1;18567:242:90;;;;;:::i;:::-;;:::i;9600:169:99:-;;;;;;;;;;-1:-1:-1;9600:169:99;;;;;:::i;:::-;;:::i;12723:276:90:-;;;;;;;;;;;;;:::i;20682:144::-;;;;;;;;;;;;;:::i;2566:502::-;;;;;;;;;;;;;:::i;11595:130::-;;;;;;;;;;-1:-1:-1;11595:130:90;;;;;:::i;:::-;;:::i;1771:160::-;;;;;;;;;;;;;:::i;8368:353::-;;;;;;;;;;;;;:::i;7640:173:99:-;;;;;;;;;;-1:-1:-1;7640:173:99;;;;;:::i;:::-;;:::i;4935:170:90:-;;;;;;;;;;;;;:::i;21260:252::-;;;;;;;;;;;;;:::i;17467:532::-;;;;;;;;;;;;;:::i;163:28:1:-;;;;;;;;;;-1:-1:-1;163:28:1;;;;;;;;;;;1368:26:0;;;;;;;;;;-1:-1:-1;1368:26:0;;;;;;;;9306:319:90;;;;;;;;;;;;;:::i;19731:166::-;;;;;;;;;;;;;:::i;1615:152::-;1665:35;;-1:-1:-1;;;1665:35:90;;-1:-1:-1;;;;;;;;;;;237:61:1;1665:15:90;;:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1715:8:90;;1706:18;;-1:-1:-1;;;1706:18:90;;-1:-1:-1;;;;;1715:8:90;;;1706:18;;;563:51:125;-1:-1:-1;;;;;;;;;;;237:61:1;-1:-1:-1;1706:8:90;;-1:-1:-1;536:18:125;;1706::90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1730:3:90;;1743:4;;-1:-1:-1;;;;;1730:3:90;;;;-1:-1:-1;1730:10:90;;-1:-1:-1;1743:4:90;1741:7;1752:5;;-1:-1:-1;;;;;1752:5:90;1760:1;1730:32;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1615:152::o;7192:411:99:-;7246:21;7279:8;7275:272;;;7349:4;7374:2;7394:9;7304:108;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;7297:115;;7275:272;;;7477:4;7502:2;7522:9;7440:100;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;7433:107;;7275:272;-1:-1:-1;;;;;;;;;;;7552:8:99;7563:4;7552:29;;;-1:-1:-1;;;;;;7552:29:99;;;;;;;-1:-1:-1;;;;;11048:32:125;;;7552:29:99;;;11030:51:125;11097:18;;;11090:30;11156:1;11136:18;;;11129:29;-1:-1:-1;;;11174:18:125;;;11167:38;11222:19;;7552:29:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7192:411;;;:::o;5505:162:90:-;5580:48;;-1:-1:-1;;;5580:48:90;;11453:2:125;5580:48:90;;;11435:21:125;11492:2;11472:18;;;11465:30;11531:31;11511:18;;;11504:59;-1:-1:-1;;;;;;;;;;;237:61:1;5580:15:90;;11580:18:125;;5580:48:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5634:3:90;;:28;;-1:-1:-1;;;5634:28:90;;:3;:28;;;11879:25:125;;;11920:18;;;11913:34;5653:5:90;11963:18:125;;;11956:34;5634:3:90;12006:18:125;;;11999:34;-1:-1:-1;;;;;5634:3:90;;;;-1:-1:-1;5634:12:90;;-1:-1:-1;11851:19:125;;5634:28:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5505:162::o;349:555::-;388:13;:11;:13::i;:::-;414:4;;407:32;;-1:-1:-1;;;;;414:4:90;423;430:8;407:4;:32::i;:::-;465:4;;452:49;;-1:-1:-1;;;;;465:4:90;474:5;;-1:-1:-1;;;;;474:5:90;452:49;;;;;;;;;;;;;-1:-1:-1;;;452:49:90;;;:10;:49::i;:::-;446:3;:55;;-1:-1:-1;;;;;;446:55:90;-1:-1:-1;;;;;446:55:90;;;;;;526:4;;513:49;;526:4;535:5;;-1:-1:-1;;;;;535:5:90;513:49;;;;;;;;;;;;;-1:-1:-1;;;513:49:90;;;:10;:49::i;:::-;507:3;:55;;-1:-1:-1;;;;;;507:55:90;-1:-1:-1;;;;;507:55:90;;;;;;592:5;;579:49;;592:5;602:4;;-1:-1:-1;;;;;602:4:90;579:49;;;;;;;;;;;;;-1:-1:-1;;;579:49:90;;;:10;:49::i;:::-;568:8;:60;;-1:-1:-1;;;;;;568:60:90;-1:-1:-1;;;;;568:60:90;;;;;;635:3;;:25;;-1:-1:-1;;;635:25:90;;652:7;635:25;;;6304::125;635:3:90;;;:16;;6277:18:125;;635:25:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;666:8:90;;:30;;-1:-1:-1;;;666:30:90;;688:7;666:30;;;6304:25:125;-1:-1:-1;;;;;666:8:90;;;;-1:-1:-1;666:21:90;;-1:-1:-1;6277:18:125;;666:30:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;710:5:90;;703:37;;-1:-1:-1;;;;;;710:5:90;;-1:-1:-1;726:3:90;;-1:-1:-1;;;;;726:3:90;732:7;703:4;:37::i;:::-;753:5;;746:37;;-1:-1:-1;;;;;753:5:90;751:8;769:3;;-1:-1:-1;;;;;769:3:90;775:7;746:4;:37::i;:::-;796:4;;789:41;;-1:-1:-1;;;;;796:4:90;811:8;;-1:-1:-1;;;;;811:8:90;822:7;789:4;:41::i;:::-;837:3;;852:5;;837:30;;-1:-1:-1;;;837:30:90;;-1:-1:-1;;;;;837:3:90;;;;:14;;:30;;852:5;;;859:7;;837:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;885:14;:12;:14::i;:::-;874:8;:25;;-1:-1:-1;;;;;;874:25:90;-1:-1:-1;;;;;874:25:90;;;;;;;;;;349:555::o;7867:243:99:-;7978:21;8014:23;8028:8;8014:13;:23::i;:::-;8007:30;;8043:62;8063:12;8086:11;8100:4;8043:11;:62::i;:::-;7867:243;;;;;:::o;8011:353:90:-;8088:3;;:42;;-1:-1:-1;;;8088:42:90;;8101:7;8088:42;;;11879:25:125;;;11920:18;;;11913:34;8119:7:90;11963:18:125;;;11956:34;8077:8:90;12006:18:125;;;11999:34;;;8077:8:90;-1:-1:-1;;;;;8088:3:90;;:12;;11851:19:125;;8088:42:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8077:53;;8136:24;8163:93;;;;;;;;;8184:3;8163:93;;;;-1:-1:-1;;;;;8189:22:90;;8214:1;8189:26;;;;:::i;:::-;8163:93;;-1:-1:-1;;;;;8163:93:90;;;;-1:-1:-1;;8163:93:90;;;;;:12;:93::i;:::-;8262:47;;-1:-1:-1;;;8262:47:90;;13700:2:125;8262:47:90;;;13682:21:125;13739:2;13719:18;;;13712:30;13778;13758:18;;;13751:58;8136:120:90;;-1:-1:-1;;;;;;;;;;;;237:61:1;8262:15:90;;13826:18:125;;8262:47:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8315:3:90;;8328:4;;-1:-1:-1;;;;;8315:3:90;;;;-1:-1:-1;8315:10:90;;-1:-1:-1;8328:4:90;8337:5;;-1:-1:-1;;;;;8337:5:90;8345:7;8354:4;8315:44;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;8071:293;;8011:353::o;17002:461::-;17066:8;;:50;;-1:-1:-1;;;17066:50:90;;17084:9;17066:50;;;11879:25:125;;;11920:18;;;11913:34;17106:6:90;11963:18:125;;;11956:34;17066:8:90;12006:18:125;;;11999:34;-1:-1:-1;;;;;17066:8:90;;;;:17;;11851:19:125;;17066:50:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;17133:3:90;;17148:4;;17157:5;;17133:64;;-1:-1:-1;;;17133:64:90;;17122:8;;-1:-1:-1;;;;;17133:3:90;;;;:12;;:64;;17148:4;;;;17157:5;;17165:7;;;;17183;;17122:8;;;;17133:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17252:5;;17122:75;;-1:-1:-1;17229:4:90;;:18;;-1:-1:-1;;;;;17252:5:90;17262:4;;-1:-1:-1;;;;;17262:4:90;17214:55;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;17214:55:90;;;;;;;;;;;;;;-1:-1:-1;;;;;17214:55:90;;;;;;;;;;;;17203:66;;;-1:-1:-1;17203:8:90;;17214:55;17203:66;:::i;:::-;-1:-1:-1;17286:3:90;;:24;;-1:-1:-1;;;17286:24:90;;;;;17460:25:125;;;17300:9:90;17501:18:125;;;17494:34;17275:73:90;;-1:-1:-1;;;;;17286:3:90;;:8;;17433:18:125;;17286:24:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17275:73;;;;;;;;;;;;;;;;;:10;:73::i;:::-;17372:3;;17383:5;;17354:104;;-1:-1:-1;;;;;17372:3:90;;;;:8;;17383:5;17393:4;;-1:-1:-1;;;;;17393:4:90;17391:7;17372:27;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17403:1;17372:32;17354:104;;;;;;;;;;;;;;;;;:10;:104::i;3219:147::-;3273:35;;-1:-1:-1;;;3273:35:90;;-1:-1:-1;;;;;;;;;;;237:61:1;3273:15:90;;:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3323:8:90;;3314:18;;-1:-1:-1;;;3314:18:90;;-1:-1:-1;;;;;3323:8:90;;;3314:18;;;563:51:125;-1:-1:-1;;;;;;;;;;;237:61:1;-1:-1:-1;3314:8:90;;-1:-1:-1;536:18:125;;3314::90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3338:3:90;;-1:-1:-1;;;;;3338:3:90;;-1:-1:-1;3338:14:90;;-1:-1:-1;3355:4:90;3353:7;3338:23;;-1:-1:-1;;;;;;3338:23:90;;;;;;;-1:-1:-1;;;;;581:32:125;;;3338:23:90;;;563:51:125;536:18;;3338:23:90;383:237:125;6921:747:90;6981:3;;6998:4;;7007:5;;6981:38;;-1:-1:-1;;;6981:38:90;;-1:-1:-1;;;;;6981:3:90;;;;:14;;:38;;6998:4;;;;7007:5;;;7015:3;;6981:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7060:3:90;;7073:4;;7082:5;;7060:29;;-1:-1:-1;;;7060:29:90;;7026:15;;-1:-1:-1;7026:15:90;;-1:-1:-1;;;;;;7060:3:90;;;;:10;;:29;;7073:4;;;;7082:5;;;7060:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7025:64;;-1:-1:-1;7025:64:90;-1:-1:-1;7095:11:90;-1:-1:-1;;;;;5482:60:33;;;;;7110:23:90;5847:72:33;;;;;;7110:1:90;:23;:::i;:::-;7109:41;;;;:::i;:::-;7190:3;;7095:55;;-1:-1:-1;7177:18:90;;-1:-1:-1;;;;;7190:3:90;7177:10;:18::i;:::-;7241:5;;-1:-1:-1;;;;;7241:5:90;7226:4;;-1:-1:-1;;;;;7206:196:90;;;;7226:4;7263:3;;-1:-1:-1;;;;;7206:196:90;;;;;;7263:3;7275:6;;5534:62:32;;;;;;7352:1:90;7370;7387;7206:196;;;;;;;;;;;;:::i;:::-;;;;;;;;7421:3;;7408:18;;-1:-1:-1;;;;;7421:3:90;7177:10;:18::i;7408:::-;7451:3;;7472:4;;-1:-1:-1;;;;;7451:3:90;;;;7437:58;;7457:37;;7472:4;7481:5;;-1:-1:-1;;;;;7481:5:90;7489:1;7492;7457:12;:37::i;:::-;7437:58;;6304:25:125;;;6292:2;6277:18;7437:58:90;;;;;;;7512:3;;:34;;-1:-1:-1;;;7512:34:90;;;;;11879:25:125;;;11920:18;;;11913:34;;;7512:3:90;11963:18:125;;;11956:34;7501:8:90;12006:18:125;;;11999:34;;;7501:8:90;-1:-1:-1;;;;;7512:3:90;;:12;;11851:19:125;;7512:34:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7570:3;;7594:4;;7501:45;;-1:-1:-1;7552:111:90;;-1:-1:-1;;;;;7570:3:90;;;;:10;;:3;;7581:10;;7594:4;7592:7;7603:5;;-1:-1:-1;;;;;7603:5:90;7611:3;7581:34;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7570:46;;;;;;;;;;;;;6304:25:125;;6292:2;6277:18;;6158:177;7570:46:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7552:111;;;;;;;;;;;;;;;;;:10;:111::i;3686:139::-;3739:35;;-1:-1:-1;;;3739:35:90;;-1:-1:-1;;;;;;;;;;;237:61:1;3739:15:90;;:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3789:8:90;;3780:18;;-1:-1:-1;;;3780:18:90;;-1:-1:-1;;;;;3789:8:90;;;3780:18;;;563:51:125;-1:-1:-1;;;;;;;;;;;237:61:1;-1:-1:-1;3780:8:90;;-1:-1:-1;536:18:125;;3780::90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3804:3:90;;:16;;-1:-1:-1;;;3804:16:90;;:3;:16;;;6304:25:125;-1:-1:-1;;;;;3804:3:90;;;;-1:-1:-1;3804:13:90;;-1:-1:-1;6277:18:125;;3804:16:90;6158:177:125;3539:143:90;3594:35;;-1:-1:-1;;;3594:35:90;;-1:-1:-1;;;;;;;;;;;237:61:1;3594:15:90;;:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3644:8:90;;3635:18;;-1:-1:-1;;;3635:18:90;;-1:-1:-1;;;;;3644:8:90;;;3635:18;;;563:51:125;-1:-1:-1;;;;;;;;;;;237:61:1;-1:-1:-1;3635:8:90;;-1:-1:-1;536:18:125;;3635::90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3659:3:90;;:18;;-1:-1:-1;;;3659:18:90;;:3;:18;;;6304:25:125;-1:-1:-1;;;;;3659:3:90;;;;-1:-1:-1;3659:15:90;;-1:-1:-1;6277:18:125;;3659::90;6158:177:125;14490:144:90;14538:39;;-1:-1:-1;;;14538:39:90;;-1:-1:-1;;;;;;;;;;;237:61:1;14538:15:90;;:39;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14583:3:90;;14602:4;;14611:5;;14583:46;;-1:-1:-1;;;14583:46:90;;-1:-1:-1;;;;;14602:4:90;;;14583:46;;;21584:34:125;14611:5:90;;;21634:18:125;;;21627:43;21686:18;;;21679:34;;;-1:-1:-1;21729:18:125;;;21722:50;14583:3:90;;;-1:-1:-1;14583:16:90;;-1:-1:-1;21518:19:125;;14583:46:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14490:144;:::o;20959:95::-;21010:3;;;;;;;;;-1:-1:-1;;;;;21010:3:90;-1:-1:-1;;;;;21010:8:90;;:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21026:3:90;;:23;;-1:-1:-1;;;21026:23:90;;21039:9;21026:23;;;6304:25:125;-1:-1:-1;;;;;21026:3:90;;;;-1:-1:-1;21026:12:90;;-1:-1:-1;6277:18:125;;21026:23:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4198:167::-;4247:45;;-1:-1:-1;;;4247:45:90;;22191:2:125;4247:45:90;;;22173:21:125;22230:2;22210:18;;;22203:30;22269:28;22249:18;;;22242:56;-1:-1:-1;;;;;;;;;;;237:61:1;4247:15:90;;22315:18:125;;4247:45:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4298:3:90;;4315:4;;-1:-1:-1;;;;;4298:3:90;;;;-1:-1:-1;4298:14:90;;-1:-1:-1;4315:4:90;4324:5;;-1:-1:-1;;;;;4324:5:90;4332:27;-1:-1:-1;;;;;4358:1:90;4332:27;:::i;:::-;4298:62;;;;;;;;;;;;;;;;;:::i;11245:267::-;11314:3;;11329:4;;11338:5;;11314:64;;-1:-1:-1;;;11314:64:90;;11303:8;;-1:-1:-1;;;;;11314:3:90;;;;:12;;:64;;11329:4;;;;11338:5;;11346:7;;;;11364;;11303:8;;;;11314:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11395:35;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11395:35:90;-1:-1:-1;;;11395:35:90;;;11384:46;;11303:75;;-1:-1:-1;11384:46:90;;:8;;11395:35;11384:46;:::i;:::-;-1:-1:-1;11447:3:90;;:22;;-1:-1:-1;;;11447:22:90;;;;;17460:25:125;;;11461:7:90;17501:18:125;;;17494:34;11436:71:90;;-1:-1:-1;;;;;11447:3:90;;:8;;17433:18:125;;11447:22:90;17261:273:125;16557:275:90;16629:3;;16644:4;;16653:5;;16629:64;;-1:-1:-1;;;16629:64:90;;16618:8;;-1:-1:-1;;;;;16629:3:90;;;;:12;;:64;;16644:4;;;;16653:5;;16661:7;;;;16679;;16618:8;;;;16629:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16710:38;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16710:38:90;-1:-1:-1;;;16710:38:90;;;16699:49;;16618:75;;-1:-1:-1;16699:49:90;;:8;;16710:38;16699:49;:::i;:::-;-1:-1:-1;16765:3:90;;:24;;-1:-1:-1;;;16765:24:90;;;;;17460:25:125;;;16779:9:90;17501:18:125;;;17494:34;16754:73:90;;-1:-1:-1;;;;;16765:3:90;;:8;;17433:18:125;;16765:24:90;17261:273:125;18274:266:90;18340:3;;18355:4;;18364:5;;18340:63;;-1:-1:-1;;;18340:63:90;;18329:8;;-1:-1:-1;;;;;18340:3:90;;;;:12;;:63;;18355:4;;;;18364:5;;18372:7;;;;18390:6;;18329:8;;;;18340:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18329:74;;18435:4;-1:-1:-1;;;;;18435:13:90;;18451:3;18420:36;;;;;;6304:25:125;;6292:2;6277:18;;6158:177;18420:36:90;;;;-1:-1:-1;;18420:36:90;;;;;;;;;;;;;;-1:-1:-1;;;;;18420:36:90;;;;;;;;;;;;18409:47;;;-1:-1:-1;18409:8:90;;18420:36;18409:47;:::i;12550:169::-;12598:39;;-1:-1:-1;;;12598:39:90;;-1:-1:-1;;;;;;;;;;;237:61:1;12598:15:90;;:39;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12643:3:90;;12661:4;;-1:-1:-1;;;;;12643:3:90;;;;-1:-1:-1;12643:15:90;;-1:-1:-1;12661:4:90;12670:5;;-1:-1:-1;;;;;12670:5:90;12678:7;12687;12696:6;12704:1;12707;12710:3;12643:71;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12550:169;:::o;9115:268:99:-;9215:9;9232:12;9261:3;;;;;;;;;-1:-1:-1;;;;;9261:3:99;9273:4;9287:3;9247:45;;;;;:::i;:::-;-1:-1:-1;;;;;25312:15:125;;;25294:34;;25364:15;;;25359:2;25344:18;;25337:43;25416:15;;;25411:2;25396:18;;25389:43;25244:2;25229:18;9247:45:99;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9298:31:99;;-1:-1:-1;;;9298:31:99;;9232:60;;-1:-1:-1;;;;;;;;;;;;237:61:1;9298:7:99;;:31;;9232:60;;9319:9;;9298:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9335:28:99;;-1:-1:-1;;;9335:28:99;;-1:-1:-1;;;;;;;;;;;237:61:1;-1:-1:-1;9335:8:99;;-1:-1:-1;9335:28:99;;9352:2;;9357:5;;9335:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9376:2:99;;9115:268;-1:-1:-1;;;;;;;9115:268:99:o;16401:152:90:-;16441:39;;-1:-1:-1;;;16441:39:90;;-1:-1:-1;;;;;;;;;;;237:61:1;16441:15:90;;:39;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16486:3:90;;16504:4;;16513:5;;16486:62;;-1:-1:-1;;;16486:62:90;;-1:-1:-1;;;;;16504:4:90;;;16486:62;;;26955:34:125;16513:5:90;;;27005:18:125;;;26998:43;16521:9:90;27057:18:125;;;27050:34;;;27100:18;;;27093:34;16543:4:90;27143:19:125;;;27136:51;16486:3:90;;;-1:-1:-1;16486:15:90;;-1:-1:-1;26889:19:125;;16486:62:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;19286:441::-;19360:3;;:41;;-1:-1:-1;;;19360:41:90;;19373:7;19360:41;;;11879:25:125;;;11920:18;;;11913:34;19391:6:90;11963:18:125;;;11956:34;19343:14:90;12006:18:125;;;11999:34;;;19343:14:90;-1:-1:-1;;;;;19360:3:90;;:12;;11851:19:125;;19360:41:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19454:4;;19343:58;;-1:-1:-1;19436:4:90;;:13;;-1:-1:-1;;;;;19454:4:90;19463:5;;-1:-1:-1;;;;;19463:5:90;19471:9;19421:61;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;19421:61:90;;;;;;;;;;;;;;-1:-1:-1;;;;;19421:61:90;;;;;;;;;;;;19407:75;;;-1:-1:-1;19407:11:90;;19421:61;19407:75;:::i;:::-;-1:-1:-1;19500:3:90;;19515:4;;19524:5;;19500:64;;-1:-1:-1;;;19500:64:90;;19489:8;;-1:-1:-1;;;;;19500:3:90;;;;:12;;:64;;19515:4;;;;19524:5;;19532:7;;;;19550;;19489:8;;;;19500:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19581:3;;:22;;-1:-1:-1;;;19581:22:90;;;;;17460:25:125;;;19595:7:90;17501:18:125;;;17494:34;19489:75:90;;-1:-1:-1;19570:71:90;;-1:-1:-1;;;;;19581:3:90;;;;:8;;17433:18:125;;19581:22:90;17261:273:125;19570:71:90;19658:3;;19669:4;;19678:5;;19658:27;;-1:-1:-1;;;19658:27:90;;19647:75;;-1:-1:-1;;;;;19658:3:90;;;;:8;;:27;;19669:4;;;;19678:5;;19658:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19689:1;19658:32;19647:75;;;;;;;;;;;;;;;;;:10;:75::i;21516:373::-;21591:3;;21578:18;;-1:-1:-1;;;;;21591:3:90;7177:10;:18::i;21578:::-;21629:4;;21619:5;;21607:34;;21636:4;8378:41:125;;-1:-1:-1;;;;;21629:4:90;;;;21619:5;;;;21607:34;;8366:2:125;8351:18;21607:34:90;;;;;;;21660:3;;21647:18;;-1:-1:-1;;;;;21660:3:90;7177:10;:18::i;21647:::-;21695:4;;21685:5;;21676:28;;21702:1;6304:25:125;;-1:-1:-1;;;;;21695:4:90;;;;21685:5;;;;21676:28;;6292:2:125;6277:18;21676:28:90;;;;;;;21723:3;;21710:18;;-1:-1:-1;;;;;21723:3:90;7177:10;:18::i;21710:::-;21762:4;;21752:5;;21739:32;;21769:1;6304:25:125;;-1:-1:-1;;;;;21762:4:90;;;;21752:5;;;;21739:32;;6292:2:125;6277:18;21739:32:90;;;;;;;21790:3;;21777:18;;-1:-1:-1;;;;;21790:3:90;7177:10;:18::i;21777:::-;21829:4;;21819:5;;21806:32;;21836:1;6304:25:125;;-1:-1:-1;;;;;21829:4:90;;;;21819:5;;;;21806:32;;6292:2:125;6277:18;21806:32:90;;;;;;;21844:3;;21859:5;;21869:4;;21844:40;;-1:-1:-1;;;21844:40:90;;-1:-1:-1;;;;;21844:3:90;;;;:12;;:40;;21859:5;;;;21869:4;;;21876:1;;21879;;21882;;21844:40;;;:::i;5109:224::-;5180:3;;:41;;-1:-1:-1;;;5180:41:90;;5193:7;5180:41;;;11879:25:125;;;11920:18;;;11913:34;5211:6:90;11963:18:125;;;11956:34;5169:8:90;12006:18:125;;;11999:34;;;5169:8:90;-1:-1:-1;;;;;5180:3:90;;:12;;11851:19:125;;5180:41:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5227:48;;-1:-1:-1;;;5227:48:90;;30417:2:125;5227:48:90;;;30399:21:125;30456:2;30436:18;;;30429:30;30495:31;30475:18;;;30468:59;5169:52:90;;-1:-1:-1;;;;;;;;;;;;237:61:1;5227:15:90;;30544:18:125;;5227:48:90;30216:352:125;13256:600:90;13337:3;;13359:5;;13375:4;;13337:112;;-1:-1:-1;;;13337:112:90;;13320:14;;-1:-1:-1;;;;;13337:3:90;;;;:12;;:112;;13359:5;;;;13375:4;;13388:7;;;;13418;;13320:14;;;;13337:112;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13518:5;;13320:129;;-1:-1:-1;13489:4:90;;:18;;-1:-1:-1;;;;;13518:5:90;13528:4;;-1:-1:-1;;;;;13528:4:90;13535:9;13467:84;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;13467:84:90;;;;;;;;;;;;;;-1:-1:-1;;;;;13467:84:90;;;;;;;;;;;;13456:95;;;-1:-1:-1;13456:8:90;;13467:84;13456:95;:::i;:::-;-1:-1:-1;13568:3:90;;13583:4;;13592:5;;13568:64;;-1:-1:-1;;;13568:64:90;;13557:8;;-1:-1:-1;;;;;13568:3:90;;;;:12;;:64;;13583:4;;;;13592:5;;13600:7;;;;13618;;13557:8;;;;13568:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13649:3;;:22;;-1:-1:-1;;;13649:22:90;;;;;17460:25:125;;;13663:7:90;17501:18:125;;;17494:34;13557:75:90;;-1:-1:-1;13638:71:90;;-1:-1:-1;;;;;13649:3:90;;;;:8;;17433:18:125;;13649:22:90;17261:273:125;13638:71:90;13733:3;;13752:5;;13715:136;;13733:55;;-1:-1:-1;;;;;13733:3:90;;;;:16;;13752:5;13762:4;;-1:-1:-1;;;;;13762:4:90;13760:7;13769:9;13733:46;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4071:58:35;;;;;3990:145;13733:55:90;13792:6;13733:65;13715:136;;;;;;;;;;;;;;;;;:10;:136::i;18026:244::-;18068:24;18095:75;;;;;;;;;18116:2;18095:75;;;;18120:7;18095:75;;;;-1:-1:-1;;;;;18095:75:90;;;;;;18147:16;18095:75;;;;;:12;:75::i;:::-;18176:39;;-1:-1:-1;;;18176:39:90;;18068:102;;-1:-1:-1;;;;;;;;;;;;237:61:1;18176:15:90;;:39;;;;;:::i;10622:416::-;10752:12;10834:1;10813:11;:18;;;;;:::i;:::-;;;:22;10809:225;;;10859:25;;10861:4;;10859:25;;10872:11;;10859:25;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10845:39;;;;;10892:16;10912:6;:14;;;-1:-1:-1;;;10912:36:90;10892:57;;10957:70;10979:11;10968:22;;:7;:22;;;10957:70;;;;;;;;;;;;;;;;;:10;:70::i;10809:225::-;10746:292;10622:416;;:::o;11729:393::-;11801:3;;11816:4;;11825:5;;11801:64;;-1:-1:-1;;;11801:64:90;;11790:8;;-1:-1:-1;;;;;11801:3:90;;;;:12;;:64;;11816:4;;;;11825:5;;11833:7;;;;11851;;11790:8;;;;11801:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11917:5;;11790:75;;-1:-1:-1;11897:4:90;;:15;;-1:-1:-1;;;;;11917:5:90;11927:4;;-1:-1:-1;;;;;11927:4:90;11882:52;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;11882:52:90;;;;;;;;;;;;;;-1:-1:-1;;;;;11882:52:90;;;;;;;;;;;;11871:63;;;-1:-1:-1;11871:8:90;;11882:52;11871:63;:::i;:::-;-1:-1:-1;11951:3:90;;:22;;-1:-1:-1;;;11951:22:90;;;;;17460:25:125;;;11965:7:90;17501:18:125;;;17494:34;11940:71:90;;-1:-1:-1;;;;;11951:3:90;;:8;;17433:18:125;;11951:22:90;17261:273:125;11940:71:90;12035:3;;12046:5;;12056:4;;12035:27;;-1:-1:-1;;;12035:27:90;;12017:100;;-1:-1:-1;;;;;12035:3:90;;;;:8;;:27;;12046:5;;;;12056:4;;12035:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12066:1;12035:32;12017:100;;;;;;;;;;;;;;;;;:10;:100::i;9629:546::-;9703:4;;9696:36;;-1:-1:-1;;;;;9703:4:90;9701:7;10535:98:99;9696:36:90;9738:3;;9753:4;;9738:29;;-1:-1:-1;;;9738:29:90;;-1:-1:-1;;;;;9738:3:90;;;;:14;;:29;;9753:4;;;9759:7;;9738:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9773:3:90;;:42;;-1:-1:-1;;;9773:42:90;;9786:7;9773:42;;;11879:25:125;;;11920:18;;;11913:34;9804:7:90;11963:18:125;;;11956:34;9773:3:90;12006:18:125;;;11999:34;-1:-1:-1;;;;;9773:3:90;;;;-1:-1:-1;9773:12:90;;-1:-1:-1;11851:19:125;;9773:42:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9821:3:90;;-1:-1:-1;;;;;9821:3:90;:18;9842:4;9849:9;9821:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9903:3:90;;9931:4;;9946:5;;10010:3;;9903:117;;-1:-1:-1;;;9903:117:90;;9865:13;;-1:-1:-1;;;;;;9903:3:90;;;;-1:-1:-1;9903:18:90;;:117;;9931:4;;;9946:5;;;9960:7;;;;9990:4;;10010:3;;9903:117;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;10042:3:90;;10059:4;;10068:5;;10084:3;;10042:56;;;-1:-1:-1;;;10042:56:90;;-1:-1:-1;;;;;10059:4:90;;;10042:56;;;34805:34:125;10068:5:90;;;34855:18:125;;;34848:43;10084:3:90;;;34907:18:125;;;34900:43;10092:4:90;34959:18:125;;;34952:43;10042:56:90;9884:136;;-1:-1:-1;10026:144:90;;10042:3;;;;;-1:-1:-1;10042:14:90;;34739:19:125;;;;;10042:56:90;;;;;;;;;;:3;:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10106:9;10026:144;;;;;;;;;;;;;;;;;:8;:144::i;20143:195::-;20199:3;;20216:4;;20225:5;;20199:33;;-1:-1:-1;;;20199:33:90;;-1:-1:-1;;;;;20199:3:90;;;;:14;;:33;;20216:4;;;;20225:5;;;20199:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20238:31:90;;-1:-1:-1;;;20238:31:90;;35207:2:125;20238:31:90;;;35189:21:125;35246:2;35226:18;;;35219:30;-1:-1:-1;;;35265:18:125;;;35258:42;-1:-1:-1;;;;;;;;;;;237:61:1;-1:-1:-1;20238:15:90;;-1:-1:-1;35317:18:125;;20238:31:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20275:3:90;;20290:4;;-1:-1:-1;;;;;20275:3:90;;;;-1:-1:-1;20275:12:90;;-1:-1:-1;20290:4:90;20299:5;;-1:-1:-1;;;;;20299:5:90;20307:7;20316;20325:1;20328;20331;20275:58;;;;;;;;;;;;;;;;;;;;;:::i;13860:596::-;13939:3;;13961:4;;13976:5;;13939:112;;-1:-1:-1;;;13939:112:90;;13922:14;;-1:-1:-1;;;;;13939:3:90;;;;:12;;:112;;13961:4;;;;13976:5;;13990:7;;;;14020;;13922:14;;;;13939:112;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14122:4;;13922:129;;-1:-1:-1;14093:4:90;;:18;;-1:-1:-1;;;;;14122:4:90;14131:5;;-1:-1:-1;;;;;14131:5:90;14139:9;14071:84;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;14071:84:90;;;;;;;;;;;;;;-1:-1:-1;;;;;14071:84:90;;;;;;;;;;;;14057:98;;;-1:-1:-1;14057:11:90;;14071:84;14057:98;:::i;:::-;-1:-1:-1;14172:3:90;;14187:4;;14196:5;;14172:64;;-1:-1:-1;;;14172:64:90;;14161:8;;-1:-1:-1;;;;;14172:3:90;;;;:12;;:64;;14187:4;;;;14196:5;;14204:7;;;;14222;;14161:8;;;;14172:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14253:3;;:22;;-1:-1:-1;;;14253:22:90;;;;;17460:25:125;;;14267:7:90;17501:18:125;;;17494:34;14161:75:90;;-1:-1:-1;14242:71:90;;-1:-1:-1;;;;;14253:3:90;;;;:8;;17433:18:125;;14253:22:90;17261:273:125;14242:71:90;14337:3;;14356:4;;14319:132;;14337:55;;-1:-1:-1;;;;;14337:3:90;;;;:16;;14356:4;14365:5;;-1:-1:-1;;;;;14365:5:90;14363:8;10535:98:99;14337:55:90;14396:6;14337:65;14319:132;;;;;;;;;;;;;;;;;:10;:132::i;746:282:101:-;799:20;;;;;;;;;:15;:20;;;825:179;846:4;:11;842:1;:15;825:179;;;910:7;;890:1;;-1:-1:-1;;;;;;;;;;;237:61:1;893:11:101;;910:4;;915:1;;910:7;;;;;;:::i;:::-;;;;;;;893:26;;;;;;;;;;;;;6304:25:125;;6292:2;6277:18;;6158:177;893:26:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;893:26:101;;;;;;;;;;;;:::i;:::-;876:44;;;;;;;;;:::i;:::-;;;;;;;;;;;;;872:48;;950:1;936:4;:11;:15;;;;:::i;:::-;932:1;:19;928:70;;;981:1;967:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;963:26;;928:70;859:3;;;;:::i;:::-;;;;825:179;;;;1009:14;1021:1;1009:11;:14::i;12126:390:90:-;12196:3;;12211:4;;12220:5;;12196:64;;-1:-1:-1;;;12196:64:90;;12185:8;;-1:-1:-1;;;;;12196:3:90;;;;:12;;:64;;12211:4;;;;12220:5;;12228:7;;;;12246;;12185:8;;;;12196:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12315:4;;12185:75;;-1:-1:-1;12295:4:90;;:15;;-1:-1:-1;;;;;12315:4:90;12324:5;;-1:-1:-1;;;;;12324:5:90;12280:52;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;12280:52:90;;;;;;;;;;;;;;-1:-1:-1;;;;;12280:52:90;;;;;;;;;;;;12266:66;;;-1:-1:-1;12266:11:90;;12280:52;12266:66;:::i;:::-;-1:-1:-1;12349:3:90;;:22;;-1:-1:-1;;;12349:22:90;;;;;17460:25:125;;;12363:7:90;17501:18:125;;;17494:34;12338:71:90;;-1:-1:-1;;;;;12349:3:90;;:8;;17433:18:125;;12349:22:90;17261:273:125;12338:71:90;12433:3;;12444:4;;12453:5;;12433:27;;-1:-1:-1;;;12433:27:90;;12415:96;;-1:-1:-1;;;;;12433:3:90;;;;:8;;:27;;12444:4;;;;12453:5;;12433:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12464:1;12433:32;12415:96;;;;;;;;;;;;;;;;;:10;:96::i;14950:275::-;15062:3;;:42;;-1:-1:-1;;;15062:42:90;;-1:-1:-1;;;;;21602:15:125;;;15062:42:90;;;21584:34:125;21654:15;;;21634:18;;;21627:43;21686:18;;;21679:34;;;15045:14:90;21729:18:125;;;21722:50;;;15045:14:90;15062:3;;:16;;21518:19:125;;15062:42:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15045:59;;15110:110;15126:9;15143:1;15110:110;;;;;;;;;;;;;;;;;:8;:110::i;14638:278::-;14711:3;;14726:4;;14735:5;;14711:64;;-1:-1:-1;;;14711:64:90;;14700:8;;-1:-1:-1;;;;;14711:3:90;;;;:12;;:64;;14726:4;;;;14735:5;;14743:7;;;;14761;;14700:8;;;;14711:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14700:75;;14807:4;-1:-1:-1;;;;;14807:19:90;;14829:3;14792:42;;;;;;6304:25:125;;6292:2;6277:18;;6158:177;14792:42:90;;;;-1:-1:-1;;14792:42:90;;;;;;;;;;;;;;-1:-1:-1;;;;;14792:42:90;;;;;;;;;;;;14781:53;;;-1:-1:-1;14781:8:90;;14792:42;14781:53;:::i;1262:349::-;1328:3;;1315:18;;-1:-1:-1;;;;;1328:3:90;7177:10;:18::i;1315:::-;1358:8;;1344:23;;-1:-1:-1;;;;;1358:8:90;;;563:51:125;;1344:23:90;;551:2:125;536:18;1344:23:90;;;;;;;1373:3;;1391:8;;1373:27;;-1:-1:-1;;;1373:27:90;;-1:-1:-1;;;;;1391:8:90;;;1373:27;;;563:51:125;1373:3:90;;;:17;;536:18:125;;1373:27:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1407:35:90;;-1:-1:-1;;;1407:35:90;;-1:-1:-1;;;;;;;;;;;237:61:1;-1:-1:-1;1407:15:90;;-1:-1:-1;1407:35:90;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1448:3:90;;1461:4;;-1:-1:-1;;;;;1448:3:90;;;;-1:-1:-1;1448:10:90;;-1:-1:-1;1461:4:90;1470:5;;-1:-1:-1;;;;;1470:5:90;1478:1;1448:32;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1500:3:90;;1487:18;;-1:-1:-1;;;;;;1500:3:90;;-1:-1:-1;7177:10:90;:18::i;1487:::-;1534:5;;1525:4;;1516:28;;1542:1;6304:25:125;;-1:-1:-1;;;;;1534:5:90;;;;1525:4;;;;1516:28;;6292:2:125;6277:18;1516:28:90;;;;;;;1559:8;;1550:18;;-1:-1:-1;;;1550:18:90;;-1:-1:-1;;;;;1559:8:90;;;1550:18;;;563:51:125;-1:-1:-1;;;;;;;;;;;237:61:1;1550:8:90;;536:18:125;;1550::90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1574:3:90;;1587:4;;-1:-1:-1;;;;;1574:3:90;;;;-1:-1:-1;1574:10:90;;-1:-1:-1;1587:4:90;1596:5;;-1:-1:-1;;;;;1596:5:90;1604:1;1574:32;;;;;;;;;;;;;;;;;:::i;5671:229::-;5767:3;;5780:4;;5789:5;;5767:29;;-1:-1:-1;;;5767:29:90;;5747:14;;-1:-1:-1;;;;;5767:3:90;;;;:10;;:29;;5780:4;;;;5789:5;;5767:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5802:48:90;;-1:-1:-1;;;5802:48:90;;11453:2:125;5802:48:90;;;11435:21:125;11492:2;11472:18;;;11465:30;11531:31;11511:18;;;11504:59;5746:50:90;;-1:-1:-1;;;;;;;;;;;;237:61:1;5802:15:90;;11580:18:125;;5802:48:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5856:3:90;;-1:-1:-1;;;;;5856:3:90;;-1:-1:-1;5856:12:90;;-1:-1:-1;5856:3:90;;5875:16;5898:58:32;;;;;;5856:3:90;5875:16;:::i;:::-;5856:39;;-1:-1:-1;;;;;;5856:39:90;;;;;;;;;;11879:25:125;;;;11920:18;;;11913:34;;;;11963:18;;;11956:34;5893:1:90;12006:18:125;;;11999:34;11851:19;;5856:39:90;11609:430:125;10286:332:90;10376:11;10443:12;10483:1;10465:8;:15;;;;;:::i;:::-;;;:19;10461:138;;;10508:22;;10510:4;;10508:22;;10521:8;;10508:22;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10494:36;;;;;10538:54;10549:7;10538:54;;;;;;;;;;;;;;;;;:10;:54::i;:::-;-1:-1:-1;10604:9:90;;10286:332;-1:-1:-1;;10286:332:90:o;9928:132:99:-;10009:4;10046:9;10050:5;10046:2;:9;:::i;:::-;10028:15;10033:1;10036:6;10028:4;:15::i;:::-;:27;;;;:::i;:::-;10021:34;9928:132;-1:-1:-1;;;;9928:132:99:o;3072:143:90:-;3124:35;;-1:-1:-1;;;3124:35:90;;-1:-1:-1;;;;;;;;;;;237:61:1;3124:15:90;;:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3174:8:90;;3165:18;;-1:-1:-1;;;3165:18:90;;-1:-1:-1;;;;;3174:8:90;;;3165:18;;;563:51:125;-1:-1:-1;;;;;;;;;;;237:61:1;-1:-1:-1;3165:8:90;;-1:-1:-1;536:18:125;;3165::90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3189:3:90;;-1:-1:-1;;;;;3189:3:90;;-1:-1:-1;3189:12:90;;-1:-1:-1;3204:4:90;3202:7;10535:98:99;4613:171:90;4662:50;;-1:-1:-1;;;4662:50:90;;42096:2:125;4662:50:90;;;42078:21:125;42135:2;42115:18;;;42108:30;42174:33;42154:18;;;42147:61;-1:-1:-1;;;;;;;;;;;237:61:1;4662:15:90;;42225:18:125;;4662:50:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4718:3:90;;4735:4;;-1:-1:-1;;;;;4718:3:90;;;;-1:-1:-1;4718:14:90;;-1:-1:-1;4735:4:90;4744:5;;-1:-1:-1;;;;;4744:5:90;4752:26;4757:16;4777:1;4752:26;:::i;20830:125::-;20881:3;;;;;;;;;-1:-1:-1;;;;;20881:3:90;-1:-1:-1;;;;;20881:8:90;;:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20897:27:90;;-1:-1:-1;;;20897:27:90;;-1:-1:-1;;;;;;;;;;;237:61:1;-1:-1:-1;20897:15:90;;-1:-1:-1;20897:27:90;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20930:3:90;;:20;;-1:-1:-1;;;20930:20:90;;:3;:20;;;17460:25:125;20942:7:90;17501:18:125;;;17494:34;-1:-1:-1;;;;;20930:3:90;;;;-1:-1:-1;20930:8:90;;-1:-1:-1;17433:18:125;;20930:20:90;17261:273:125;5904:673:90;5994:3;;6007:4;;6016:5;;5994:29;;-1:-1:-1;;;5994:29:90;;5974:14;;-1:-1:-1;;;;;5994:3:90;;;;:10;;:29;;6007:4;;;;6016:5;;5994:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6063:3:90;;5973:50;;-1:-1:-1;6050:18:90;;-1:-1:-1;;;;;6063:3:90;7177:10;:18::i;6050:::-;6114:5;;-1:-1:-1;;;;;6114:5:90;6099:4;;-1:-1:-1;;;;;6079:208:90;;;;6099:4;6136:3;;-1:-1:-1;;;;;6079:208:90;;;;;;6136:3;6148:7;;5534:62:32;;;;;;5898:58;;;;;;6255:1:90;6272;6079:208;;;;;;;;;;;;:::i;:::-;;;;;;;;6306:3;;6293:18;;-1:-1:-1;;;;;6306:3:90;7177:10;:18::i;6293:::-;6336:3;;6357:4;;-1:-1:-1;;;;;6336:3:90;;;;6322:69;;6342:48;;6357:4;6366:5;;-1:-1:-1;;;;;6366:5:90;5898:58:32;;;;;;6388:1:90;6342:12;:48::i;:::-;6322:69;;6304:25:125;;;6292:2;6277:18;6322:69:90;;;;;;;6408:3;;6397:8;;-1:-1:-1;;;;;6408:3:90;:12;6421:7;;5898:58:32;;;;;;6408:47:90;;-1:-1:-1;;;;;;6408:47:90;;;;;;;;;;11879:25:125;;;;11920:18;;;11913:34;;;;11963:18;;;11956:34;6453:1:90;12006:18:125;;;11999:34;11851:19;;6408:47:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6479:3;;6503:4;;6397:58;;-1:-1:-1;6461:111:90;;-1:-1:-1;;;;;6479:3:90;;;;:10;;:3;;6490:10;;6503:4;6501:7;10535:98:99;1935:154:90;1994:3;;1981:18;;-1:-1:-1;;;;;1994:3:90;7177:10;:18::i;1981:::-;2032:5;;2023:4;;2010:32;;2040:1;6304:25:125;;-1:-1:-1;;;;;2032:5:90;;;;2023:4;;;;2010:32;;6292:2:125;6277:18;2010:32:90;;;;;;;2048:3;;2065:4;;-1:-1:-1;;;;;2048:3:90;;;;:14;;2065:4;2063:7;10535:98:99;1134:124:90;1180:38;;-1:-1:-1;;;1180:38:90;;44239:2:125;1180:38:90;;;44221:21:125;44278:2;44258:18;;;44251:30;-1:-1:-1;;;44297:18:125;;;44290:49;-1:-1:-1;;;;;;;;;;;237:61:1;1180:15:90;;44356:18:125;;1180:38:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1224:3:90;;:29;;-1:-1:-1;;;1224:29:90;;:3;:29;;;563:51:125;-1:-1:-1;;;;;1224:3:90;;;;-1:-1:-1;1224:17:90;;-1:-1:-1;536:18:125;;1224:29:90;383:237:125;4065:129:90;4110:39;;-1:-1:-1;;;4110:39:90;;44586:2:125;4110:39:90;;;44568:21:125;44625:2;44605:18;;;44598:30;-1:-1:-1;;;44644:18:125;;;44637:50;-1:-1:-1;;;;;;;;;;;237:61:1;4110:15:90;;44704:18:125;;4110:39:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4155:3:90;;4168:4;;-1:-1:-1;;;;;4155:3:90;;;;-1:-1:-1;4155:10:90;;-1:-1:-1;4168:4:90;4177:5;;-1:-1:-1;;;;;4177:5:90;4185:3;4155:34;;;;;;;;;;;;;;;;;:::i;2093:127::-;2140:35;;-1:-1:-1;;;2140:35:90;;-1:-1:-1;;;;;;;;;;;237:61:1;2140:15:90;;:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2190:8:90;;2181:18;;-1:-1:-1;;;2181:18:90;;-1:-1:-1;;;;;2190:8:90;;;2181:18;;;563:51:125;-1:-1:-1;;;;;;;;;;;237:61:1;-1:-1:-1;2181:8:90;;-1:-1:-1;536:18:125;;2181::90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2205:3;;;;;;;;;-1:-1:-1;;;;;2205:3:90;-1:-1:-1;;;;;2205:8:90;;:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21893:351;21963:3;;21978:4;;21987:5;;21963:58;;-1:-1:-1;;;21963:58:90;;21952:8;;-1:-1:-1;;;;;21963:3:90;;;;:12;;:58;;21978:4;;;;21987:5;;21995:7;;;;21952:8;;;;;;21963:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22040:3;;21952:69;;-1:-1:-1;22027:18:90;;-1:-1:-1;;;;;22040:3:90;7177:10;:18::i;22027:::-;22077:5;;22068:4;;22056:35;;22085:5;8378:41:125;;-1:-1:-1;;;;;22077:5:90;;;;22068:4;;;;22056:35;;8366:2:125;8351:18;22056:35:90;;;;;;;22097:3;;22114:4;;22123:5;;22097:33;;-1:-1:-1;;;22097:33:90;;-1:-1:-1;;;;;22097:3:90;;;;:14;;:33;;22114:4;;;;22123:5;;;22097:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;22136:31:90;;-1:-1:-1;;;22136:31:90;;35207:2:125;22136:31:90;;;35189:21:125;35246:2;35226:18;;;35219:30;-1:-1:-1;;;35265:18:125;;;35258:42;-1:-1:-1;;;;;;;;;;;237:61:1;-1:-1:-1;22136:15:90;;-1:-1:-1;35317:18:125;;22136:31:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;22173:3:90;;22191:4;;-1:-1:-1;;;;;22173:3:90;;;;-1:-1:-1;22173:15:90;;-1:-1:-1;22191:4:90;22200:5;;-1:-1:-1;;;;;22200:5:90;22208:7;22217;22226:1;22229;22232;22235:3;22173:66;;;;;;;;;;;;;;;;;;;;;;:::i;7053:97:99:-;7094:16;7125:20;7139:5;7125:13;:20::i;:::-;7118:27;;7053:97;:::o;2224:338:90:-;2300:3;;:34;;-1:-1:-1;;;2300:34:90;;2277:17;;-1:-1:-1;;;;;2300:3:90;;:10;;:34;;2277:17;;;;2300:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2276:58:90;-1:-1:-1;2340:53:90;6250:54:32;;;;;;6249:60;;2352:13:90;2351:14;2340:53;;;;;;;;;;;;;;;;;:10;:53::i;:::-;2412:3;;2399:18;;-1:-1:-1;;;;;2412:3:90;7177:10;:18::i;2399:::-;2428:6;;;;;;;2440:3;;;;;;;;;-1:-1:-1;;;;;2440:3:90;-1:-1:-1;;;;;2440:8:90;;:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2469:3:90;;:34;;-1:-1:-1;;;2469:34:90;;-1:-1:-1;;;;;2469:3:90;;;;-1:-1:-1;2469:10:90;;-1:-1:-1;2469:34:90;;:3;;;;:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2456:47:90;-1:-1:-1;2509:48:90;6250:54:32;;;;;;6249:60;;2509:48:90;;;;;;;;;;;;;-1:-1:-1;;;2509:48:90;;;:10;:48::i;8915:387::-;8990:4;;8983:36;;-1:-1:-1;;;;;8990:4:90;8988:7;10535:98:99;8983:36:90;9025:3;;9040:4;;9025:29;;-1:-1:-1;;;9025:29:90;;-1:-1:-1;;;;;9025:3:90;;;;:14;;:29;;9040:4;;;9046:7;;9025:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9071:3:90;;:42;;-1:-1:-1;;;9071:42:90;;9084:7;9071:42;;;11879:25:125;;;11920:18;;;11913:34;9102:7:90;11963:18:125;;;11956:34;9060:8:90;12006:18:125;;;11999:34;;;9060:8:90;-1:-1:-1;;;;;;9071:3:90;;;;-1:-1:-1;9071:12:90;;11851:19:125;;9071:42:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9120:35;;-1:-1:-1;;;9120:35:90;;46481:2:125;9120:35:90;;;46463:21:125;46520:2;46500:18;;;46493:30;-1:-1:-1;;;46539:18:125;;;46532:46;9060:53:90;;-1:-1:-1;;;;;;;;;;;;237:61:1;9120:15:90;;46595:18:125;;9120:35:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9161:3:90;;9184:4;;-1:-1:-1;;;;;9161:3:90;;;;-1:-1:-1;9161:13:90;;-1:-1:-1;9184:4:90;9199:5;;-1:-1:-1;;;;;9199:5:90;9213:46;;;;;;;;;9227:3;9213:46;;;;9232:7;9213:46;;;;9241:7;9213:46;;;;9250:7;9213:46;;;:12;:46::i;:::-;9287:3;;9161:136;;-1:-1:-1;;;;;;9161:136:90;;;;;;;;;;;;9267:4;;-1:-1:-1;;;;;9287:3:90;;;;9161:136;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;8977:325;8915:387::o;5337:164::-;5411:46;;-1:-1:-1;;;5411:46:90;;47521:2:125;5411:46:90;;;47503:21:125;47560:2;47540:18;;;47533:30;47599:29;47579:18;;;47572:57;-1:-1:-1;;;;;;;;;;;237:61:1;5411:15:90;;47646:18:125;;5411:46:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5463:3:90;;:33;;-1:-1:-1;;;5463:33:90;;:3;:33;;;11879:25:125;-1:-1:-1;;;11920:18:125;;;11913:34;5486:6:90;11963:18:125;;;11956:34;5463:3:90;12006:18:125;;;11999:34;-1:-1:-1;;;;;5463:3:90;;;;-1:-1:-1;5463:12:90;;-1:-1:-1;11851:19:125;;5463:33:90;11609:430:125;16866:132:90;16935:3;;:58;;-1:-1:-1;;;16935:58:90;;-1:-1:-1;;;;;26973:15:125;;;16935:58:90;;;26955:34:125;27025:15;;;27005:18;;;26998:43;16966:9:90;27057:18:125;;;27050:34;;;27100:18;;;27093:34;16935:3:90;27143:19:125;;;27136:51;16935:3:90;;;;:15;;26889:19:125;;16935:58:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4522:87::-;4568:3;;4585:4;;-1:-1:-1;;;;;4568:3:90;;;;:14;;4585:4;4583:7;10535:98:99;7844:163:90;7922:48;;-1:-1:-1;;;7922:48:90;;48920:2:125;7922:48:90;;;48902:21:125;48959:2;48939:18;;;48932:30;48998:31;48978:18;;;48971:59;-1:-1:-1;;;;;;;;;;;237:61:1;7922:15:90;;49047:18:125;;7922:48:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7976:3:90;;:26;;-1:-1:-1;;;7976:26:90;;-1:-1:-1;;;7976:26:90;;;17460:25:125;7976:3:90;17501:18:125;;;17494:34;-1:-1:-1;;;;;7976:3:90;;;;-1:-1:-1;7976:15:90;;-1:-1:-1;17433:18:125;;7976:26:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;931:199::-;1010:8;;984:60;;-1:-1:-1;;;;;1010:8:90;;;;;;;;984:60;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;978:3:90;:66;;-1:-1:-1;;;;;;978:66:90;-1:-1:-1;;;;;978:66:90;;;;;;;;;1059:16;;;-1:-1:-1;;;1059:16:90;;;;1050:75;;978:66;1059:14;;:16;;;;;;;;;;;;;;978:66;1059:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1077:8;;1050:75;;;;;;;;;;;;;-1:-1:-1;;;;;1077:8:90;;;;1050:75;;;;;:8;:75::i;:::-;931:199::o;19937:202::-;19998:3;;20013:4;;20022:5;;19998:58;;-1:-1:-1;;;19998:58:90;;19987:8;;-1:-1:-1;;;;;19998:3:90;;;;:12;;:58;;20013:4;;;;20022:5;;20030:7;;;;19987:8;;;;;;19998:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19987:69;;20063:3;;;;;;;;;-1:-1:-1;;;;;20063:3:90;-1:-1:-1;;;;;20063:8:90;;:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20079:27:90;;-1:-1:-1;;;20079:27:90;;-1:-1:-1;;;;;;;;;;;237:61:1;-1:-1:-1;20079:15:90;;-1:-1:-1;20079:27:90;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20112:3:90;;:22;;-1:-1:-1;;;20112:22:90;;;;;17460:25:125;;;20126:7:90;17501:18:125;;;17494:34;-1:-1:-1;;;;;20112:3:90;;;;-1:-1:-1;20112:8:90;;-1:-1:-1;17433:18:125;;20112:22:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3993:68::-;4035:3;;:21;;-1:-1:-1;;;4035:21:90;;:3;:21;;;17460:25:125;;;17501:18;;;17494:34;-1:-1:-1;;;;;4035:3:90;;;;:15;;17433:18:125;;4035:21:90;17261:273:125;18813:469:90;18889:8;;:46;;-1:-1:-1;;;18889:46:90;;18907:7;18889:46;;;11879:25:125;;;11920:18;;;11913:34;18925:6:90;11963:18:125;;;11956:34;18872:14:90;12006:18:125;;;11999:34;;;18872:14:90;-1:-1:-1;;;;;18889:8:90;;:17;;11851:19:125;;18889:46:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18985:5;;18872:63;;-1:-1:-1;18967:4:90;;:13;;-1:-1:-1;;;;;18985:5:90;18995:4;;-1:-1:-1;;;;;18995:4:90;19002:9;18952:61;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;18952:61:90;;;;;;;;;;;;;;-1:-1:-1;;;;;18952:61:90;;;;;;;;;;;;18941:72;;;-1:-1:-1;18941:8:90;;18952:61;18941:72;:::i;:::-;-1:-1:-1;19031:3:90;;19046:4;;19055:5;;19031:64;;-1:-1:-1;;;19031:64:90;;19020:8;;-1:-1:-1;;;;;19031:3:90;;;;:12;;:64;;19046:4;;;;19055:5;;19063:7;;;;19081;;19020:8;;;;19031:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19112:3;;:24;;-1:-1:-1;;;19112:24:90;;;;;17460:25:125;;;19126:9:90;17501:18:125;;;17494:34;19020:75:90;;-1:-1:-1;19101:73:90;;-1:-1:-1;;;;;19112:3:90;;;;:8;;17433:18:125;;19112:24:90;17261:273:125;19101:73:90;19198:3;;19209:5;;19219:4;;19198:27;;-1:-1:-1;;;19198:27:90;;19180:97;;-1:-1:-1;;;;;19198:3:90;;;;:8;;:27;;19209:5;;;;19219:4;;19198:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19229:1;19198:32;19180:97;;;;;;;;;;;;;;;;;:10;:97::i;6581:336::-;6656:3;;6673:4;;6682:5;;6656:38;;-1:-1:-1;;;6656:38:90;;-1:-1:-1;;;;;6656:3:90;;;;:14;;:38;;6673:4;;;;6682:5;;;6690:3;;6656:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6720:3:90;;6733:4;;6742:5;;6720:29;;-1:-1:-1;;;6720:29:90;;6703:13;;-1:-1:-1;;;;;;6720:3:90;;;;-1:-1:-1;6720:10:90;;:29;;6733:4;;;6742:5;;6720:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6700:49;-1:-1:-1;6755:11:90;;-1:-1:-1;;;;;;5482:60:33;;;;;6770:23:90;5847:72:33;;;;;;6770:1:90;:23;:::i;:::-;6769:41;;;;:::i;:::-;6816:48;;-1:-1:-1;;;6816:48:90;;50743:2:125;6816:48:90;;;50725:21:125;50782:2;50762:18;;;50755:30;50821:31;50801:18;;;50794:59;6755:55:90;;-1:-1:-1;;;;;;;;;;;;237:61:1;6816:15:90;;50870:18:125;;6816:48:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6870:3:90;;-1:-1:-1;;;;;6870:3:90;;-1:-1:-1;6870:12:90;;-1:-1:-1;6883:10:90;6870:3;6883:6;:10;:::i;:::-;6895;6904:1;6895:6;:10;:::i;:::-;6870:42;;-1:-1:-1;;;;;;6870:42:90;;;;;;;;;;11879:25:125;;;;11920:18;;;11913:34;6907:1:90;11963:18:125;;;11956:34;6910:1:90;12006:18:125;;;11999:34;11851:19;;6870:42:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;11091:150::-;11128:39;;-1:-1:-1;;;11128:39:90;;-1:-1:-1;;;;;;;;;;;237:61:1;11128:15:90;;:39;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11173:3:90;;11188:4;;-1:-1:-1;;;;;11173:3:90;;;;-1:-1:-1;11173:12:90;;-1:-1:-1;11188:4:90;11197:5;;-1:-1:-1;;;;;11197:5:90;11205:7;11214;11223:6;11231:1;11234;11173:63;;;;;;;;;;;;;;;;;;;;;:::i;20342:336::-;20395:3;;;;;;;;;-1:-1:-1;;;;;20395:3:90;-1:-1:-1;;;;;20395:8:90;;:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20453:3:90;;20451:32;;20413:12;;-1:-1:-1;20413:12:90;;-1:-1:-1;;;;;;20453:3:90;;;;20470:8;;20413:12;20451:32;20413:12;20451:32;20470:8;20453:3;20451:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20412:71;;;;20493:7;20489:185;;;20510:46;;;;;;;;;;;;;;;;;;:4;:46::i;20489:185::-;20577:15;20595:18;20605:7;20595:9;:18::i;:::-;20577:36;;20621:46;20630:1;20621:46;;;;;;;;;;;;;-1:-1:-1;;;20621:46:90;;;;;;;;;;;;;;;;-1:-1:-1;;;20621:46:90;;;:8;:46::i;3829:160::-;3883:35;;-1:-1:-1;;;3883:35:90;;-1:-1:-1;;;;;;;;;;;237:61:1;3883:15:90;;:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3933:8:90;;3924:18;;-1:-1:-1;;;3924:18:90;;-1:-1:-1;;;;;3933:8:90;;;3924:18;;;563:51:125;-1:-1:-1;;;;;;;;;;;237:61:1;-1:-1:-1;3924:8:90;;-1:-1:-1;536:18:125;;3924::90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3948:3:90;;3965:4;;-1:-1:-1;;;;;3948:3:90;;;;-1:-1:-1;3948:14:90;;-1:-1:-1;3965:4:90;3963:7;10535:98:99;461:281:101;516:20;;;;;;;;;:15;:20;;;542:176;563:5;:12;559:1;:16;542:176;;;623:8;;608:1;;-1:-1:-1;;;;;;;;;;;237:61:1;611:11:101;;623:5;;629:1;;623:8;;;;;;:::i;:::-;;;;;;;611:21;;;;;;;;;;;;;6304:25:125;;6292:2;6277:18;;6158:177;611:21:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;611:21:101;;;;;;;;;;;;:::i;:::-;594:39;;;;;;;;;:::i;:::-;;;;;;;;;;;;;590:43;;664:1;649:5;:12;:16;;;;:::i;:::-;645:1;:20;641:71;;;695:1;681:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;677:26;;641:71;577:3;;;;:::i;:::-;;;;542:176;;4369:149:90;4419:45;;-1:-1:-1;;;4419:45:90;;52074:2:125;4419:45:90;;;52056:21:125;52113:2;52093:18;;;52086:30;52152:28;52132:18;;;52125:56;-1:-1:-1;;;;;;;;;;;237:61:1;4419:15:90;;52198:18:125;;4419:45:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4470:3:90;;-1:-1:-1;;;;;4470:3:90;;-1:-1:-1;4470:15:90;;-1:-1:-1;4486:26:90;4491:16;4470:3;4486:26;:::i;:::-;4470:43;;;;;;;;;;;;;6304:25:125;;6292:2;6277:18;;6158:177;1610:472:0;1644:4;1660:7;;;;;;;1656:422;;;-1:-1:-1;1684:7:0;;;;;;;;1610:472::o;1656:422::-;1712:17;-1:-1:-1;;;;;;;;;;;2564:55:0;2637:16;1745:300;;1919:43;;1780:20;;-1:-1:-1;;;;;;;;;;;1459:61:0;1870:34;;1919:43;;1459:61;;-1:-1:-1;;;1944:17:0;1919:43;;;:::i;:::-;;;;-1:-1:-1;;1919:43:0;;;;;;;;;;1833:141;;;1919:43;1833:141;;:::i;:::-;;;;-1:-1:-1;;1833:141:0;;;;;;;;;;1804:180;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1777:207;;;2020:7;2009:27;;;;;;;;;;;;:::i;:::-;1994:42;;1767:278;1745:300;2059:12;1610:472;-1:-1:-1;1610:472:0:o;8937:174:99:-;9053:3;;9016:13;;9039:19;;-1:-1:-1;;;;;9053:3:99;9039:11;:19::i;:::-;-1:-1:-1;9090:3:99;;9072:33;;-1:-1:-1;;;;;9090:3:99;;;;9095:4;;9101:3;;9072:33;;;:::i;:::-;-1:-1:-1;;;;;25312:15:125;;;25294:34;;25364:15;;;25359:2;25344:18;;25337:43;25416:15;;;25411:2;25396:18;;25389:43;25244:2;25229:18;9072:33:99;;;;;;;;;;;;;;;;;;;;;;;9064:42;;8937:174;;;;;:::o;21058:198:90:-;21124:3;;21139:4;;21148:5;;21124:58;;-1:-1:-1;;;21124:58:90;;21113:8;;-1:-1:-1;;;;;21124:3:90;;;;:12;;:58;;21139:4;;;;21148:5;;21156:7;;;;21113:8;;;;;;21124:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21113:69;;21188:3;;;;;;;;;-1:-1:-1;;;;;21188:3:90;-1:-1:-1;;;;;21188:8:90;;:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8665:268:99;8765:9;8782:12;8811:3;;;;;;;;;-1:-1:-1;;;;;8811:3:99;8823:4;8837:3;8797:45;;;;;:::i;7672:168:90:-;7749:49;;-1:-1:-1;;;7749:49:90;;53785:2:125;7749:49:90;;;53767:21:125;53824:2;53804:18;;;53797:30;53863:32;53843:18;;;53836:60;-1:-1:-1;;;;;;;;;;;237:61:1;7749:15:90;;53913:18:125;;7749:49:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7804:3:90;;:31;;-1:-1:-1;;;7804:31:90;;:3;:31;;;54245:25:125;;;54286:18;;;54279:34;;;54329:18;;;54322:34;7826:5:90;54372:18:125;;;54365:34;7804:3:90;54415:19:125;;;54408:35;-1:-1:-1;;;;;7804:3:90;;;;-1:-1:-1;7804:12:90;;-1:-1:-1;54217:19:125;;7804:31:90;53942:507:125;4788:143:90;4836:43;;-1:-1:-1;;;4836:43:90;;54655:2:125;4836:43:90;;;54637:21:125;54694:2;54674:18;;;54667:30;54733:26;54713:18;;;54706:54;-1:-1:-1;;;;;;;;;;;237:61:1;4836:15:90;;54777:18:125;;4836:43:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4885:3:90;;-1:-1:-1;;;;;4885:3:90;;-1:-1:-1;4885:13:90;;-1:-1:-1;4899:26:90;4904:16;4885:3;4899:26;:::i;13085:167::-;13180:3;;:67;;-1:-1:-1;;;13180:67:90;;-1:-1:-1;;;;;13180:3:90;;;;:15;;:67;;13196:5;;13203:6;;13211:7;;13220;;13229:6;;13180:3;;;;13243;;13180:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15229:568;15311:3;;15333:5;;15349:4;;15311:111;;-1:-1:-1;;;15311:111:90;;15294:14;;-1:-1:-1;;;;;15311:3:90;;;;:12;;:111;;15333:5;;;;15349:4;;15362:7;;;;15392:6;;15294:14;;;;15311:111;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15491:5;;15294:128;;-1:-1:-1;15461:4:90;;:19;;-1:-1:-1;;;;;15491:5:90;15501:4;;-1:-1:-1;;;;;15501:4:90;15508:9;15439:85;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;15439:85:90;;;;;;;;;;;;;;-1:-1:-1;;;;;15439:85:90;;;;;;;;;;;;15428:96;;;-1:-1:-1;15428:8:90;;15439:85;15428:96;:::i;:::-;-1:-1:-1;15542:3:90;;15557:4;;15566:5;;15542:63;;-1:-1:-1;;;15542:63:90;;15531:8;;-1:-1:-1;;;;;15542:3:90;;;;:12;;:63;;15557:4;;;;15566:5;;15574:7;;;;15592:6;;15531:8;;;;15542:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15622:3;;:22;;-1:-1:-1;;;15622:22:90;;;;;17460:25:125;;;15636:7:90;17501:18:125;;;17494:34;15531:74:90;;-1:-1:-1;15611:71:90;;-1:-1:-1;;;;;15622:3:90;;;;:8;;17433:18:125;;15622:22:90;17261:273:125;15611:71:90;15706:3;;15717:5;;15727:4;;15706:27;;-1:-1:-1;;;15706:27:90;;15688:104;;-1:-1:-1;;;;;15706:3:90;;;;:8;;:27;;15717:5;;;;15727:4;;15706:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15737:1;15706:32;15688:104;;;;;;;;;;;;;;;;;:10;:104::i;15801:566::-;15881:3;;15903:4;;15918:5;;15881:112;;-1:-1:-1;;;15881:112:90;;15864:14;;-1:-1:-1;;;;;15881:3:90;;;;:12;;:112;;15903:4;;;;15918:5;;15932:7;;;;15962;;15864:14;;;;15881:112;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16065:4;;15864:129;;-1:-1:-1;16035:4:90;;:19;;-1:-1:-1;;;;;16065:4:90;16074:5;;-1:-1:-1;;;;;16074:5:90;16082:9;16013:85;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;16013:85:90;;;;;;;;;;;;;;-1:-1:-1;;;;;16013:85:90;;;;;;;;;;;;15999:99;;;-1:-1:-1;15999:11:90;;16013:85;15999:99;:::i;:::-;-1:-1:-1;16116:3:90;;16131:4;;16140:5;;16116:63;;-1:-1:-1;;;16116:63:90;;16105:8;;-1:-1:-1;;;;;16116:3:90;;;;:12;;:63;;16131:4;;;;16140:5;;16148:7;;;;16166:6;;16105:8;;;;16116:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16196:3;;:22;;-1:-1:-1;;;16196:22:90;;;;;17460:25:125;;;16210:7:90;17501:18:125;;;17494:34;16105:74:90;;-1:-1:-1;16185:71:90;;-1:-1:-1;;;;;16196:3:90;;;;:8;;17433:18:125;;16196:22:90;17261:273:125;16185:71:90;16280:3;;16291:4;;16300:5;;16280:27;;-1:-1:-1;;;16280:27:90;;16262:100;;-1:-1:-1;;;;;16280:3:90;;;;:8;;:27;;16291:4;;;;16300:5;;16280:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16311:1;16280:32;16262:100;;;;;;;;;;;;;;;;;:10;:100::i;3370:165::-;3423:35;;-1:-1:-1;;;3423:35:90;;-1:-1:-1;;;;;;;;;;;237:61:1;3423:15:90;;:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3473:8:90;;3464:18;;-1:-1:-1;;;3464:18:90;;-1:-1:-1;;;;;3473:8:90;;;3464:18;;;563:51:125;-1:-1:-1;;;;;;;;;;;237:61:1;-1:-1:-1;3464:8:90;;-1:-1:-1;536:18:125;;3464::90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3488:3:90;;3503:5;;-1:-1:-1;;;;;3488:3:90;;;;-1:-1:-1;3488:12:90;;-1:-1:-1;3503:5:90;3513:4;;-1:-1:-1;;;;;3513:4:90;3520:1;3523:3;3528:1;3488:42;;;;;;;;;;;;;;;;;;;:::i;8725:186::-;8796:3;;8813:4;;8822:5;;8838:3;;8796:56;;;-1:-1:-1;;;8796:56:90;;-1:-1:-1;;;;;8813:4:90;;;8796:56;;;34805:34:125;8822:5:90;;;34855:18:125;;;34848:43;8838:3:90;;;34907:18:125;;;34900:43;8846:4:90;34959:18:125;;;34952:43;8796:56:90;8780:126;;8796:3;;;;;:14;;34739:19:125;;;;;8796:56:90;;;;;;;;;;:3;:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8860:1;8780:126;;;;;;;;;;;;;;;;;:8;:126::i;18567:242::-;18656:24;18683:75;;;;;;;;;18704:2;18683:75;;;;18708:7;18683:75;;;;-1:-1:-1;;;;;18683:75:90;;;;;;18735:16;18683:75;;;;;:12;:75::i;:::-;18764:3;;:40;;-1:-1:-1;;;18764:40:90;;18656:102;;-1:-1:-1;;;;;;18764:3:90;;:10;;:40;;18775:5;;18782:6;;18656:102;;18764:3;;:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;18650:159;18567:242;;;:::o;9600:169:99:-;9653:4;9665:11;:9;:11::i;:::-;9682:13;9698:1;-1:-1:-1;;;;;9698:10:99;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9682:28;;;;9716:14;:12;:14::i;:::-;9752:12;9756:8;9752:2;:12;:::i;:::-;9743:21;;:6;:21;:::i;12723:276:90:-;12795:3;;12810:4;;12819:5;;12795:64;;-1:-1:-1;;;12795:64:90;;12784:8;;-1:-1:-1;;;;;12795:3:90;;;;:12;;:64;;12810:4;;;;12819:5;;12827:7;;;;12845;;12784:8;;;;12795:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12784:75;;12891:4;-1:-1:-1;;;;;12891:18:90;;12912:3;12876:41;;;;;;6304:25:125;;6292:2;6277:18;;6158:177;20682:144:90;20739:3;;;;;;;;;-1:-1:-1;;;;;20739:3:90;-1:-1:-1;;;;;20739:8:90;;:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20755:27:90;;-1:-1:-1;;;20755:27:90;;-1:-1:-1;;;;;;;;;;;237:61:1;-1:-1:-1;20755:15:90;;-1:-1:-1;20755:27:90;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20788:3:90;;:33;;-1:-1:-1;;;20788:33:90;;20804:7;20788:33;;;17460:25:125;;;17501:18;;;17494:34;-1:-1:-1;;;;;20788:3:90;;;;-1:-1:-1;20788:15:90;;-1:-1:-1;17433:18:125;;20788:33:90;17261:273:125;2566:502:90;2638:3;;:34;;-1:-1:-1;;;2638:34:90;;2615:17;;-1:-1:-1;;;;;2638:3:90;;:10;;:34;;2615:17;;;;2638:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2614:58:90;-1:-1:-1;2678:53:90;6250:54:32;;;;;;6249:60;;2690:13:90;6169:147:32;2678:53:90;2750:3;;2737:18;;-1:-1:-1;;;;;2750:3:90;7177:10;:18::i;2737:::-;2766:6;;;;;;;2778:3;;;;;;;;;-1:-1:-1;;;;;2778:3:90;-1:-1:-1;;;;;2778:8:90;;:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2807:3:90;;:34;;-1:-1:-1;;;2807:34:90;;-1:-1:-1;;;;;2807:3:90;;;;-1:-1:-1;2807:10:90;;-1:-1:-1;2807:34:90;;:3;;;;:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2794:47:90;-1:-1:-1;2847:47:90;6250:54:32;;;;;;6249:60;;2847:47:90;;;;;;;;;;;;;-1:-1:-1;;;2847:47:90;;;:10;:47::i;:::-;2913:3;;2900:18;;-1:-1:-1;;;;;2913:3:90;7177:10;:18::i;2900:::-;2929:6;;;;;;;2941:3;;;;;;;;;-1:-1:-1;;;;;2941:3:90;-1:-1:-1;;;;;2941:8:90;;:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2970:3:90;;:34;;-1:-1:-1;;;2970:34:90;;-1:-1:-1;;;;;2970:3:90;;;;-1:-1:-1;2970:10:90;;-1:-1:-1;2970:34:90;;:3;;;;:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2957:47:90;-1:-1:-1;3010:53:90;6250:54:32;;;;;;6249:60;;3010:53:90;;;;;;;;;;;;;;;;;:10;:53::i;11595:130::-;11661:3;;:59;;-1:-1:-1;;;11661:59:90;;-1:-1:-1;;;;;11661:3:90;;;;:12;;:59;;11674:5;;11681:6;;11689:7;;;;11707:6;;11661:3;;;;:59;;;:::i;1771:160::-;1825:35;;-1:-1:-1;;;1825:35:90;;-1:-1:-1;;;;;;;;;;;237:61:1;1825:15:90;;:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1875:8:90;;1866:18;;-1:-1:-1;;;1866:18:90;;-1:-1:-1;;;;;1875:8:90;;;1866:18;;;563:51:125;-1:-1:-1;;;;;;;;;;;237:61:1;-1:-1:-1;1866:8:90;;-1:-1:-1;536:18:125;;1866::90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1890:3:90;;1907:4;;-1:-1:-1;;;;;1890:3:90;;;;-1:-1:-1;1890:14:90;;-1:-1:-1;1907:4:90;1905:7;10535:98:99;8368:353:90;8445:3;;:42;;-1:-1:-1;;;8445:42:90;;8458:7;8445:42;;;11879:25:125;;;11920:18;;;11913:34;8476:7:90;11963:18:125;;;11956:34;8434:8:90;12006:18:125;;;11999:34;;;8434:8:90;-1:-1:-1;;;;;8445:3:90;;:12;;11851:19:125;;8445:42:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8434:53;;8493:24;8520:93;;;;;;;;;8541:3;8520:93;;;;-1:-1:-1;;;;;8520:93:90;;;;;;-1:-1:-1;;;;;8564:22:90;;8589:1;8564:26;;;;:::i;:::-;8520:93;;;;-1:-1:-1;;8520:93:90;;;:12;:93::i;:::-;8619:47;;-1:-1:-1;;;8619:47:90;;59087:2:125;8619:47:90;;;59069:21:125;59126:2;59106:18;;;59099:30;59165;59145:18;;;59138:58;8493:120:90;;-1:-1:-1;;;;;;;;;;;;237:61:1;8619:15:90;;59213:18:125;;8619:47:90;58886:351:125;7640:173:99;7728:16;7761:47;7775:12;7789:11;7802:5;7761:13;:47::i;4935:170:90:-;5009:46;;-1:-1:-1;;;5009:46:90;;59443:2:125;5009:46:90;;;59425:21:125;59482:2;59462:18;;;59455:30;59521:29;59501:18;;;59494:57;-1:-1:-1;;;;;;;;;;;237:61:1;5009:15:90;;59568:18:125;;5009:46:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5061:3:90;;:39;;-1:-1:-1;;;5061:39:90;;-1:-1:-1;;;5061:39:90;;;11879:25:125;5081:7:90;11920:18:125;;;11913:34;5090:6:90;11963:18:125;;;11956:34;5061:3:90;12006:18:125;;;11999:34;-1:-1:-1;;;;;5061:3:90;;;;-1:-1:-1;5061:12:90;;-1:-1:-1;11851:19:125;;5061:39:90;11609:430:125;21260:252:90;21328:3;;21343:4;;21352:5;;21328:58;;-1:-1:-1;;;21328:58:90;;21317:8;;-1:-1:-1;;;;;21328:3:90;;;;:12;;:58;;21343:4;;;;21352:5;;21360:7;;;;21317:8;;;;;;21328:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21317:69;;21392:3;;;;;;;;;-1:-1:-1;;;;;21392:3:90;-1:-1:-1;;;;;21392:8:90;;:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21408:27:90;;-1:-1:-1;;;21408:27:90;;-1:-1:-1;;;;;;;;;;;237:61:1;-1:-1:-1;21408:15:90;;-1:-1:-1;21408:27:90;;;;;:::i;17467:532::-;17540:3;;17562:4;;17577:5;;17540:116;;-1:-1:-1;;;17540:116:90;;17529:8;;-1:-1:-1;;;;;17540:3:90;;;;:12;;:116;;17562:4;;;;17577:5;;17591:9;;;;17625:7;;17529:8;;;;17540:116;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17662:3;;17677:4;;17686:5;;17662:68;;-1:-1:-1;;;17662:68:90;;17529:127;;-1:-1:-1;;;;;;17662:3:90;;;;:12;;:68;;17677:4;;;17686:5;;17694:9;;;;17716:7;;17725:1;;;;17662:68;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;17788:4:90;;17765;;:18;;-1:-1:-1;;;;;17788:4:90;17797:5;;-1:-1:-1;;;;;17797:5:90;17750:55;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;17750:55:90;;;;;;;;;;;;;;-1:-1:-1;;;;;17750:55:90;;;;;;;;;;;;17736:69;;;-1:-1:-1;17736:11:90;;17750:55;17736:69;:::i;:::-;-1:-1:-1;17822:3:90;;:24;;-1:-1:-1;;;17822:24:90;;;;;17460:25:125;;;17836:9:90;17501:18:125;;;17494:34;17811:73:90;;-1:-1:-1;;;;;17822:3:90;;:8;;17433:18:125;;17822:24:90;17261:273:125;17811:73:90;17908:3;;17919:4;;17890:104;;-1:-1:-1;;;;;17908:3:90;;;;:8;;17919:4;17928:5;;-1:-1:-1;;;;;17928:5:90;17926:8;10535:98:99;9306:319:90;9386:4;;9379:36;;-1:-1:-1;;;;;9386:4:90;9384:7;10535:98:99;9379:36:90;9421:3;;9436:4;;9421:29;;-1:-1:-1;;;9421:29:90;;-1:-1:-1;;;;;9421:3:90;;;;:14;;:29;;9436:4;;;9442:7;;9421:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9456:3:90;;:42;;-1:-1:-1;;;9456:42:90;;9469:7;9456:42;;;11879:25:125;;;11920:18;;;11913:34;9487:7:90;11963:18:125;;;11956:34;9456:3:90;12006:18:125;;;11999:34;-1:-1:-1;;;;;9456:3:90;;;;-1:-1:-1;9456:12:90;;-1:-1:-1;11851:19:125;;9456:42:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9504:35:90;;-1:-1:-1;;;9504:35:90;;46481:2:125;9504:35:90;;;46463:21:125;46520:2;46500:18;;;46493:30;-1:-1:-1;;;46539:18:125;;;46532:46;-1:-1:-1;;;;;;;;;;;237:61:1;9504:15:90;;46595:18:125;;9504:35:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9545:3:90;;9566:4;;9575:5;;9615:3;;9545:75;;-1:-1:-1;;;9545:75:90;;-1:-1:-1;;;;;9545:3:90;;;;-1:-1:-1;9545:18:90;;-1:-1:-1;9545:75:90;;9566:4;;;;9575:5;;;;9583:7;;;;9601:4;;9615:3;;;;9545:75;;;:::i;19731:166::-;19785:3;;;;;;;;;-1:-1:-1;;;;;19785:3:90;-1:-1:-1;;;;;19785:8:90;;:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19801:27:90;;-1:-1:-1;;;19801:27:90;;-1:-1:-1;;;;;;;;;;;237:61:1;-1:-1:-1;19801:15:90;;-1:-1:-1;19801:27:90;;;;;:::i;2244:802:99:-;2391:21;;2303:115;;2326:4;;2339:12;;2364:19;;2391:21;;;2303:115;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2296:4:99;:122;;-1:-1:-1;;;;;;2296:122:99;-1:-1:-1;;;;;2296:122:99;;;;;;;;;;2455:4;2522:22;;2432:118;;2468:13;;2494:20;;2522:22;;;;;2432:118;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2424:5:99;:126;;-1:-1:-1;;;;;;2424:126:99;-1:-1:-1;;;;;2424:126:99;;;;;;;;;2599:4;;2612:7;:24;2585:52;;2599:4;;;;;2424:126;2612:24;;2585:13;:52::i;:::-;2579:3;:58;;-1:-1:-1;;;;;;2579:58:99;-1:-1:-1;;;;;2579:58:99;;;;;;;;;2858:27;;;-1:-1:-1;;;2858:27:99;;;;:8;;2874;;2858:27;;;;;-1:-1:-1;;2858:27:99;;;;;;;2874:8;2579:58;2858:27;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2962:4:99;;2977:3;;2962:36;;-1:-1:-1;;;2962:36:99;;-1:-1:-1;;;;;2962:4:99;;;;-1:-1:-1;2962:12:99;;-1:-1:-1;2962:36:99;;-1:-1:-1;2977:3:99;;;-1:-1:-1;;2983:14:99;2962:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3004:5:99;;3020:3;;3004:37;;-1:-1:-1;;;3004:37:99;;-1:-1:-1;;;;;3004:5:99;;;;:13;;:37;;3020:3;;;-1:-1:-1;;3026:14:99;3004:37;;;:::i;3611:116:2:-;3694:28;3699:5;3706:2;3710:4;3716:5;3694:4;:28::i;3363:100:100:-;3405:20;3444:14;:12;:14::i;8114:349:99:-;8213:15;8225:2;8213:11;:15::i;:::-;;8234;8246:2;8234:11;:15::i;:::-;-1:-1:-1;8277:18:99;;8255:52;;-1:-1:-1;;;8255:52:99;;-1:-1:-1;;;;;8255:13:99;;;;;:52;;8269:2;;8273;;8277:18;8297:1;;8300:6;;8255:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8335:18:99;;8313:52;;-1:-1:-1;;;8313:52:99;;-1:-1:-1;;;;;8313:13:99;;;-1:-1:-1;8313:13:99;;-1:-1:-1;8313:52:99;;8327:2;;8331;;8335:18;8355:1;;8358:6;;8313:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;261:34:1;;245:52;;237:61;;-1:-1:-1;;;;;8386:8:99;;8395:2;8406;-1:-1:-1;;;;;8399:17:99;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8399:19:99;;;;;;;;;;;;:::i;:::-;8386:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;261:34:1;;245:52;;237:61;;-1:-1:-1;;;;;8425:8:99;;8434:2;8445;-1:-1:-1;;;;;8438:17:99;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8438:19:99;;;;;;;;;;;;:::i;:::-;8425:33;;;;;;;;;;;;;;;;:::i;3554:177:101:-;3678:16;;;3692:1;3678:16;;;;;;;;;3629;;3655:20;;3678:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3655:39;;3709:1;3700:3;3704:1;3700:6;;;;;;;;:::i;:::-;;;;;;;;;;:10;3723:3;3554:177;-1:-1:-1;;3554:177:101:o;2948:169:0:-;3023:9;3018:95;;-1:-1:-1;;;;;;;;;;;3073:3:0;3047:30;;;;;;:::i;:::-;;;;;;;;3085:21;3096:9;3085:10;:21::i;3505:97:100:-;3554:43;;-1:-1:-1;;;3554:43:100;;3568:4;3554:43;;;64719:41:125;;;64776:18;;;64769:50;;;64835:18;;;64828:50;;;64894:18;;;64887:50;-1:-1:-1;;;;;64974:32:125;;64953:19;;;64946:61;-1:-1:-1;;;;;;;;;;;237:61:1;3554:13:100;;64691:19:125;;3554:43:100;64484:529:125;6631:397:99;6805:3;;:21;;-1:-1:-1;;;6805:21:99;;6751:4;;;;;;-1:-1:-1;;;;;6805:3:99;;:10;;:21;;6816:4;;6822:3;;6805:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6763:63;;-1:-1:-1;6763:63:99;-1:-1:-1;6832:8:99;6871;5534:62:32;;;;;;6850:29:99;6846:115;;;-1:-1:-1;5534:62:32;;;;;;6846:115:99;;;-1:-1:-1;6946:8:99;6846:115;7011:3;6975:32;5847:72:33;;;;;;6975:6:99;:32;:::i;:::-;6974:40;;;;:::i;:::-;:48;;7017:5;6974:48;:::i;:::-;6966:57;6631:397;-1:-1:-1;;;;;;;;6631:397:99:o;4812:172:0:-;4905:1;4900;:6;4896:84;;-1:-1:-1;;;;;;;;;;;4947:3:0;4921:30;;;;;;:::i;:::-;;;;;;;;4959:14;4968:1;4971;4959:8;:14::i;5747:115:5:-;5798:59;5853:2;5814:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5814:42:5;;;;;;;;;;;;;;-1:-1:-1;;;;;5814:42:5;-1:-1:-1;;;5814:42:5;;;5798:15;:59::i;3368:178:0:-;3467:1;-1:-1:-1;;;;;3462:6:0;:1;-1:-1:-1;;;;;3462:6:0;;3458:84;;-1:-1:-1;;;;;;;;;;;3509:3:0;3483:30;;;;;;:::i;:::-;;;;;;;;3521:14;3530:1;3533;3521:8;:14::i;6954:108:2:-;-1:-1:-1;;;;;;;;;;;7041:3:2;7015:30;;;;;;:::i;:::-;;;;;;;;7051:6;:4;:6::i;2138:611:101:-;2217:20;2517;2565:1;2557:10;;2569;2540:40;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2517:63;;2586:8;2617:1;2597:10;:17;:21;;;;:::i;:::-;2656:2;2652:16;;2675:20;;;2652:16;2675:20;;-1:-1:-1;2715:29:101;;;;;;;;;;;:::i;13777:248:0:-;13944:1;13927:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;13917:30;;;;;;13910:1;13893:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;13883:30;;;;;;:64;13879:142;;-1:-1:-1;;;;;;;;;;;13988:3:0;13962:30;;;;;;:::i;:::-;;;;;;;;14000:14;14009:1;14012;14000:8;:14::i;3638:232:100:-;3688:4;-1:-1:-1;;;;;3704:15:100;;3700:136;;-1:-1:-1;;;;;;;;;;;3734:37:100;;;;66101:2:125;66083:21;;;66140:2;66120:18;;;66113:30;66179:32;66174:2;66159:18;;66152:60;66244:2;66229:18;;65899:354;3734:37:100;;;;;;;;3784:31;;;66470:21:125;;;66527:1;66507:18;;;66500:29;-1:-1:-1;;;66560:2:125;66545:18;;66538:37;-1:-1:-1;;;;;66649:32:125;;66642:4;66627:20;;66620:62;3784:31:100;;;;;;;66607:3:125;3784:31:100;;;3823:6;:4;:6::i;:::-;-1:-1:-1;;;;;;3849:15:100;;;;3638:232::o;1434:57::-;1470:16;1480:5;1470:9;:16::i;1517:186::-;1560:10;:15;1579:1;1560:20;1556:143;;1599:15;;1590:25;;-1:-1:-1;;;1590:25:100;;-1:-1:-1;;;;;1599:15:100;;;1590:25;;;563:51:125;-1:-1:-1;;;;;;;;;;;237:61:1;1590:8:100;;536:18:125;;1590:25:100;383:237:125;1556:143:100;1632:10;:15;1651:1;1632:20;1628:71;;1676:15;;1662:30;;-1:-1:-1;;;1662:30:100;;-1:-1:-1;;;;;1676:15:100;;;1662:30;;;563:51:125;-1:-1:-1;;;;;;;;;;;237:61:1;1662:13:100;;536:18:125;;1662:30:100;383:237:125;3731:764:2;3903:38;;;-1:-1:-1;;;;;581:32:125;;;3903:38:2;;;;563:51:125;;;;3903:38:2;;;;;;;;;;536:18:125;;;;3903:38:2;;;;;;;-1:-1:-1;;;;;3903:38:2;-1:-1:-1;;;3903:38:2;;;3885:62;;3861:20;;3885:10;;;:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3858:89;;;3953:12;3979:7;3968:27;;;;;;;;;;;;:::i;:::-;3953:42;-1:-1:-1;4024:71:2;4090:4;4024:51;4072:2;4024:38;-1:-1:-1;;;4024:22:2;:8;4040:5;4024:15;:22::i;:::-;:26;19133:9;;;:16;;-1:-1:-1;;19133:16:2;;;;;;;;;;;;:9;19028:143;4024:38;:47;19445:10;;;:44;;;;;;;-1:-1:-1;19445:44:2;;;;;;;-1:-1:-1;;;;;19469:18:2;;;;19445:44;;;:10;19335:176;4024:51;:65;;:71::i;:::-;4133:6;4129:362;;;4199:34;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4199:34:2;-1:-1:-1;;;4199:34:2;;;4179:62;;4152:23;;-1:-1:-1;;;;;4179:10:2;;;:62;;4199:34;4179:62;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4149:92;;;4249:11;4274:10;4263:30;;;;;;;;;;;;:::i;:::-;4249:44;;4312:7;4305:4;:14;4301:116;;;4342:14;4352:4;4342:7;:14;:::i;:::-;4331:26;;;;:::i;:::-;;;4301:116;;;4393:14;4400:7;4393:4;:14;:::i;:::-;4382:26;;;;:::i;:::-;;;4301:116;4424:60;4477:6;4424:38;-1:-1:-1;;;4424:22:2;:8;4440:5;4424:15;:22::i;:60::-;4141:350;;3825:670;;3731:764;;;;:::o;3013:121:100:-;3116:11;;3104:24;;-1:-1:-1;;;3104:24:100;;3055:4;;;;3091:38;;-1:-1:-1;;;;;;;;;;;237:61:1;3104:11:100;;:24;;;;6304:25:125;;;6292:2;6277:18;;6158:177;3104:24:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3104:24:100;;;;;;;;;;;;:::i;:::-;3091:12;:38::i;:::-;3084:45;;;;3013:121;;:::o;2809:135:0:-;2865:9;2860:80;;-1:-1:-1;;;;;;;;;;;2889:30:0;;;;66895:2:125;66877:21;;;66934:2;66914:18;;;66907:30;66973:25;66968:2;66953:18;;66946:53;67031:2;67016:18;;66693:347;4580:228:0;4638:1;4633;:6;4629:175;;-1:-1:-1;;;;;;;;;;;4654:41:0;;;;67247:2:125;67229:21;;;67286:2;67266:18;;;67259:30;67325:34;67320:2;67305:18;;67298:62;-1:-1:-1;;;67391:2:125;67376:18;;67369:32;67433:3;67418:19;;67045:398;4654:41:0;;;;;;;;4708:31;4737:1;4708:31;;;;;;:::i;:::-;;;;;;;;4752;4781:1;4752:31;;;;;;:::i;:::-;;;;;;;;4791:6;:4;:6::i;631:356:5:-;718:14;;583:42;834:2;821:16;;697:18;;718:14;821:16;583:42;873:5;853:124;844:133;;793:190;;631:356;:::o;3121:243:0:-;3185:1;-1:-1:-1;;;;;3180:6:0;:1;-1:-1:-1;;;;;3180:6:0;;3176:184;;-1:-1:-1;;;;;;;;;;;3201:44:0;;;;68684:2:125;68666:21;;;68723:2;68703:18;;;68696:30;68762:34;68757:2;68742:18;;68735:62;-1:-1:-1;;;68828:2:125;68813:18;;68806:35;68873:3;68858:19;;68482:401;3201:44:0;;;;;;;;3258:34;3290:1;3258:34;;;;;;:::i;:::-;;;;;;;;3305;3337:1;3305:34;;;;;;:::i;2086:353::-;-1:-1:-1;;;;;;;;;;;2564:55:0;2637:16;2117:298;;2283:64;;2148:11;;-1:-1:-1;;;;;;;;;;;1459:61:0;2227:43;;2283:64;;1459:61;;-1:-1:-1;;;2308:17:0;2340:4;;2283:64;;;:::i;:::-;;;;-1:-1:-1;;2283:64:0;;;;;;;;;;2192:165;;;2283:64;2192:165;;:::i;:::-;;;;-1:-1:-1;;2192:165:0;;;;;;;;;;2165:200;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2117:298:0;2420:7;:14;;-1:-1:-1;;2420:14:0;;;;;2086:353::o;13463:310::-;13595:1;13578:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;13568:30;;;;;;13561:1;13544:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;13534:30;;;;;;:64;13530:239;;-1:-1:-1;;;;;;;;;;;13613:43:0;;;;70198:2:125;70180:21;;;70237:2;70217:18;;;70210:30;70276:34;70271:2;70256:18;;70249:62;-1:-1:-1;;;70342:2:125;70327:18;;70320:34;70386:3;70371:19;;69996:400;13613:43:0;;;;;;;;-1:-1:-1;;;;;;;;;;;13700:1:0;13669:33;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;;;13746:1:0;13715:33;;;;;;:::i;959:444:100:-;1025:1;1007:10;:19;1050:17;;;-1:-1:-1;;;1050:17:100;;;;:4;;:15;;:17;;;;;;;;;;;;;;:4;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1032:15;:35;;-1:-1:-1;;;;;;1032:35:100;-1:-1:-1;;;;;1032:35:100;;;;;;;;;1104:4;1077:32;1073:326;;1180:4;-1:-1:-1;;;;;1180:15:100;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1161:15;;-1:-1:-1;;;;;1161:15:100;;;:36;;;1157:236;;1260:1;1242:10;:19;5634:28:90;5505:162::o;1157:236:100:-;1280:7;1276:117;;;1359:1;1341:10;:19;1370:14;;;-1:-1:-1;;;1370:14:100;;;;-1:-1:-1;;;;;;;;;;;237:61:1;1370:12:100;;:14;;;;;1341:15;;1370:14;;;;;;;1341:15;237:61:1;1370:14:100;;;;;;;;;;18868:156:2;18980:12;;;:22;;-1:-1:-1;;;;;;18980:22:2;-1:-1:-1;;;;;18980:22:2;;;;;;;;;;:12;18868:156::o;20119:111::-;20192:33;20206:4;20220:3;20192:13;:33::i;2616:393:100:-;2772:23;;;;;;2750:11;:13;;;;;;;;2823:12;;-1:-1:-1;;;;;;2823:12:100;;2749:47;;2823:12;;;6304:25:125;;;2749:47:100;-1:-1:-1;;;;;;;;;;;;;237:61:1;2823:7:100;;6277:18:125;;2823:12:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2935:17;;;;;;;;;;;-1:-1:-1;;;2935:17:100;;;;2921:32;;-1:-1:-1;;;2921:32:100;;2808:28;;-1:-1:-1;;;;;;;;;;;;237:61:1;2921:7:100;;:32;;2808:28;;2935:17;2921:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2959:21:100;;-1:-1:-1;;;2959:21:100;;-1:-1:-1;;;;;;;;;;;237:61:1;-1:-1:-1;2959:8:100;;-1:-1:-1;2959:21:100;;2968:4;;2974:5;;2959:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2616:393;;;:::o;20432:1000:2:-;20522:12;;;;20554:9;;;;20588:11;;;;20628:10;;;20605:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;20522:12:2;;;;20554:9;;;;;;20508:11;;20605:33;;20628:10;;20605:33;;20628:10;20605:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20645:17;20682:4;20688:12;20696:3;20688:7;:12::i;:::-;20665:36;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;20665:36:2;;;;;;;;;-1:-1:-1;;;;;20712:15:2;;;;;;:10;;;20665:36;20712:15;;;;;;-1:-1:-1;;;;;;20712:21:2;;;;;;;;;20665:36;;-1:-1:-1;20712:21:2;;:15;;20744:34;;20761:3;;20766:11;;20744:34;;:::i;:::-;;;;-1:-1:-1;;20744:34:2;;;;;;;;;20734:45;;20744:34;20734:45;;;;20712:68;;;;;;;;;;-1:-1:-1;20712:68:2;;;;20707:100;;20790:10;20795:4;20790;:10::i;:::-;;20707:100;-1:-1:-1;;;;;20842:15:2;;20812:12;20842:15;;;;;;;;;;;-1:-1:-1;;;;;;20842:21:2;;;;;;;;;20874:34;;20842:21;;20812:12;;20874:34;;20891:3;;20896:11;;20874:34;;:::i;:::-;;;;;;;;;;;;;20864:45;;;;;;20842:68;;;;;;;;;;;;20827:89;;20812:104;;20923:12;20952:17;20973:3;-1:-1:-1;;;;;20973:14:2;20988:4;20973:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20949:44:2;-1:-1:-1;21008:38:2;;-1:-1:-1;20949:44:2;21029:16;21034:11;21029:2;:16;:::i;:::-;21008:14;:38::i;:::-;21073:28;;-1:-1:-1;;;21073:28:2;;21001:45;;-1:-1:-1;21058:12:2;;-1:-1:-1;;;;;;;;;;;;21073:17:2;;;:28;;21091:3;;21096:4;;21073:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21058:43;;21120:4;21112;:12;21108:186;;21134:153;;-1:-1:-1;;;21134:153:2;;;;;;;:::i;:::-;;;;;;;;;21299:34;;-1:-1:-1;;;21299:34:2;;-1:-1:-1;;;;;;;;;;;21299:18:2;;;:34;;21318:3;;21323:4;;21329:3;;21299:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;21346:12:2;;;21339:19;;-1:-1:-1;;;;;;21339:19:2;;;-1:-1:-1;21371:9:2;;;21364:16;;-1:-1:-1;;21364:16:2;;;21386:17;-1:-1:-1;21393:10:2;;21346:12;21386:17;:::i;:::-;21416:4;:11;;21409:18;;;20502:930;;;;;;;;20432:1000;;:::o;22680:340::-;22739:12;22759:19;22791:1;:8;22802:2;22791:13;;;;:::i;:::-;22781:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22781:24:2;;22759:46;;22816:6;22811:185;22832:1;:8;22828:1;:12;22811:185;;;22855:9;22867:1;22869;22867:4;;;;;;;;:::i;:::-;;;;;;;22855:16;;22980:1;22974;22970:2;22966:10;22962:2;22958:19;22950:6;22946:32;22939:43;22929:61;22842:3;;;;;:::i;:::-;;;;22811:185;;;-1:-1:-1;23009:6:2;22680:340;-1:-1:-1;;22680:340:2:o;15827:3037::-;15910:12;;;;15942:9;;;;15976:11;;;;16016:10;;;15993:33;;;;;;;;;;;;;;;;;;;15884:4;;-1:-1:-1;;;;;15910:12:2;;15942:9;;;15976:11;15884:4;;15993:33;;16016:10;;15993:33;;;16016:10;15993:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;16069:15:2;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;16069:21:2;;;;;;;;;16101:34;;15993:33;;-1:-1:-1;16069:21:2;:15;;-1:-1:-1;16101:34:2;;-1:-1:-1;15993:33:2;;16123:11;;16101:34;;:::i;:::-;;;;-1:-1:-1;;16101:34:2;;;;;;;;;16091:45;;16101:34;16091:45;;;;16069:68;;;;;;;;;;-1:-1:-1;16069:68:2;;;;16065:172;;;-1:-1:-1;;;;;16162:15:2;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;16162:21:2;;;;;;;;;16194:34;;16162:21;;:10;16194:34;;16211:3;;16216:11;;16194:34;;:::i;:::-;;;;;;;;;;;;;16184:45;;;;;;16162:68;;;;;;;;;;;;16147:83;;;;;;15827:3037;;;:::o;16065:172::-;16242:17;16279:4;16285:12;16293:3;16285:7;:12::i;:::-;16262:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16242:56;;-1:-1:-1;;;;;;;;;;;15168:34:2;;-1:-1:-1;;;;;16304:19:2;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16331:12;16360:17;16381:3;-1:-1:-1;;;;;16381:14:2;16396:4;16381:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16357:44:2;-1:-1:-1;16416:38:2;;-1:-1:-1;16357:44:2;16437:16;16442:11;16437:2;:16;:::i;16416:38::-;16496:35;;-1:-1:-1;;;16496:35:2;;-1:-1:-1;;;;;581:32:125;;16496:35:2;;;563:51:125;16409:45:2;;-1:-1:-1;16468:22:2;;-1:-1:-1;;;;;;;;;;;;16496:21:2;;;536:18:125;;16496:35:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16496:35:2;;;;;;;;;;;;:::i;:::-;16467:64;;;16541:5;:12;16557:1;16541:17;16537:1993;;16568:12;-1:-1:-1;;;;;;;;;;;15168:34:2;;-1:-1:-1;;;;;16583:17:2;;16601:3;16606:5;16612:1;16606:8;;;;;;;;:::i;:::-;;;;;;;16583:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16568:47;-1:-1:-1;16568:47:2;16623:89;;16662:41;16683:3;16693:5;16699:1;16693:8;;;;;;;;:::i;:::-;;;;;;;16688:14;;16662:41;;;;;;;:::i;:::-;;;;;;;;16623:89;16731:4;16723;:12;16719:196;;16747:159;;-1:-1:-1;;;16747:159:2;;;;;;;:::i;:::-;16927:123;16946:3;16959:4;17000:3;17005:11;16983:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16973:45;;;;;;17033:5;17039:1;17033:8;;;;;;;;:::i;:::-;;;;;;;17028:14;;16927:123;;;;;;;;;:::i;:::-;;;;;;;;17150:5;17156:1;17150:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;17058:15:2;;17145:14;17058:15;;;;;;;;;;-1:-1:-1;;;;;;17058:21:2;;;;;;;;;17099:34;;17150:8;;17058:21;;17099:34;;17116:3;;17121:11;;17099:34;;:::i;:::-;;;;-1:-1:-1;;17099:34:2;;;;;;;;;17089:45;;17099:34;17089:45;;;;17058:84;;;;;;;;;;;;-1:-1:-1;17058:84:2;;;:101;;;;-1:-1:-1;;;;;17167:15:2;;;;17254:4;17167:10;;;:15;;;;;-1:-1:-1;;;;;;17167:21:2;;;;;;;;;17208:34;;17254:4;;-1:-1:-1;17208:34:2;;17225:3;;17230:11;;17208:34;;:::i;:::-;;;;;;;-1:-1:-1;;17208:34:2;;;;;;17198:45;;17208:34;17198:45;;;;17167:84;;;;;;;;;;-1:-1:-1;17167:84:2;:91;;-1:-1:-1;;17167:91:2;;;;;;;;;;-1:-1:-1;16537:1993:2;;;17290:1;17275:5;:12;:16;17271:1259;;;17306:6;17301:1096;17322:5;:12;17318:1;:16;17301:1096;;;17351:12;-1:-1:-1;;;;;;;;;;;15168:34:2;;-1:-1:-1;;;;;17366:17:2;;17384:3;17389:5;17395:1;17389:8;;;;;;;;:::i;:::-;;;;;;;17366:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17351:47;-1:-1:-1;17351:47:2;17408:93;;17449:41;17470:3;17480:5;17486:1;17480:8;;;;;;;;:::i;:::-;;;;;;;17475:14;;17449:41;;;;;;;:::i;:::-;;;;;;;;17408:93;-1:-1:-1;;;;;;;;;;;15168:34:2;;-1:-1:-1;;;;;17527:18:2;;17546:3;17551:5;17557:1;17551:8;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;17527:53:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17590:12;17612:17;17669:3;-1:-1:-1;;;;;17669:14:2;17684:4;17669:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17651:38:2;;-1:-1:-1;17651:38:2;-1:-1:-1;17708:38:2;17651;17729:16;17734:11;17729:2;:16;:::i;17708:38::-;17701:45;;17771:7;:37;;;;;-1:-1:-1;;;17782:4:2;:26;17771:37;17767:573;;;17886:143;17909:3;17926:4;17971:3;17976:11;17954:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;17944:45;;;;;;18008:5;18014:1;18008:8;;;;;;;;:::i;:::-;;;;;;;18003:14;;17886:143;;;;;;;;;:::i;:::-;;;;;;;;18141:5;18147:1;18141:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;18041:15:2;;18136:14;18041:15;;;;;;;;;;-1:-1:-1;;;;;;18041:21:2;;;;;;;;;18086:34;;18141:8;;18041:21;;18086:34;;18103:3;;18108:11;;18086:34;;:::i;:::-;;;;;;;;;;;;;18076:45;;;;;;18041:92;;;;;;;;;;;:109;;;;18257:4;18162;:10;;:15;18173:3;-1:-1:-1;;;;;18162:15:2;-1:-1:-1;;;;;18162:15:2;;;;;;;;;;;;:21;18178:4;-1:-1:-1;;;;;18162:21:2;;-1:-1:-1;;;;;18162:21:2;;;;;;;;;;;;;:92;18224:3;18229:11;18207:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;18197:45;;;;;;18162:92;;;;;;;;;;;;:99;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;15168:34:2;;-1:-1:-1;;;;;18273:18:2;;18292:3;18297:5;18303:1;18297:8;;;;;;;;:::i;:::-;;;;;;;18307:4;18273:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18324:5;;;;;17767:573;-1:-1:-1;;;;;;;;;;;15168:34:2;;-1:-1:-1;;;;;18349:18:2;;18368:3;18373:5;18379:1;18373:8;;;;;;;;:::i;:::-;;;;;;;18383:4;18349:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17341:1056;;;17336:3;;;;;:::i;:::-;;;;17301:1096;;;;17271:1259;;;18417:106;;;-1:-1:-1;;;18417:106:2;;75524:2:125;18417:106:2;;;75506:21:125;75543:18;;;75536:30;;;;75602:34;75582:18;;;75575:62;75673:34;75653:18;;;75646:62;75725:19;;18417:106:2;75322:428:125;18417:106:2;-1:-1:-1;;;;;18551:15:2;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;18551:21:2;;;;;;;;;18583:34;;18551:21;;:15;18583:34;;18600:3;;18605:11;;18583:34;;:::i;:::-;;;;-1:-1:-1;;18583:34:2;;;;;;;;;18573:45;;18583:34;18573:45;;;;18551:68;;;;;;;;;;-1:-1:-1;18551:68:2;;;;18536:146;;;;-1:-1:-1;;;18536:146:2;;75957:2:125;18536:146:2;;;75939:21:125;75996:2;75976:18;;;75969:30;76035:34;76015:18;;;76008:62;-1:-1:-1;;;76086:18:125;;;76079:45;76141:19;;18536:146:2;75755:411:125;18536:146:2;18696:12;;;18689:19;;-1:-1:-1;;;;;;18689:19:2;;;18721:9;;;18714:16;;-1:-1:-1;;18714:16:2;;;18736:17;-1:-1:-1;18743:10:2;;18696:12;18736:17;:::i;:::-;18759:18;18766:11;;;18759:18;;;-1:-1:-1;;;;;18791:15:2;;;;;;;;;;;;-1:-1:-1;;;;;;18791:21:2;;;;;;;;;18823:34;;18791:21;;18759:18;18823:34;;18840:3;;18845:11;;18823:34;;:::i;:::-;;;;;;;;;;;;;18813:45;;;;;;18791:68;;;;;;;;;;;;18784:75;;;;;;;;;15827:3037;;;:::o;22396:280::-;22482:7;22499:11;22517:8;22539:2;22528:1;:8;:13;:29;;22549:1;:8;22528:29;;;22544:2;22528:29;22517:40;;22568:6;22563:93;22584:3;22580:1;:7;22563:93;;;22643:5;:1;22647;22643:5;:::i;:::-;22617:1;22619:10;22628:1;22619:6;:10;:::i;:::-;22617:13;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;22617:13:2;22609:40;;22602:47;;;;;22589:3;;;;:::i;:::-;;;;22563:93;;;-1:-1:-1;22668:3:2;;22396:280;-1:-1:-1;;;;22396:280:2:o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:118:125;100:5;93:13;86:21;79:5;76:32;66:60;;122:1;119;112:12;137:241;193:6;246:2;234:9;225:7;221:23;217:32;214:52;;;262:1;259;252:12;214:52;301:9;288:23;320:28;342:5;320:28;:::i;625:139::-;-1:-1:-1;;;;;708:31:125;;698:42;;688:70;;754:1;751;744:12;769:571;875:6;883;891;944:2;932:9;923:7;919:23;915:32;912:52;;;960:1;957;950:12;912:52;999:9;986:23;1018:39;1051:5;1018:39;:::i;:::-;1076:5;-1:-1:-1;1133:2:125;1118:18;;1105:32;1146:41;1105:32;1146:41;:::i;:::-;1206:7;-1:-1:-1;1265:2:125;1250:18;;1237:32;1278:30;1237:32;1278:30;:::i;:::-;1327:7;1317:17;;;769:571;;;;;:::o;1345:180::-;1404:6;1457:2;1445:9;1436:7;1432:23;1428:32;1425:52;;;1473:1;1470;1463:12;1425:52;-1:-1:-1;1496:23:125;;1345:180;-1:-1:-1;1345:180:125:o;1738:127::-;1799:10;1794:3;1790:20;1787:1;1780:31;1830:4;1827:1;1820:15;1854:4;1851:1;1844:15;1870:275;1941:2;1935:9;2006:2;1987:13;;-1:-1:-1;;1983:27:125;1971:40;;2041:18;2026:34;;2062:22;;;2023:62;2020:88;;;2088:18;;:::i;:::-;2124:2;2117:22;1870:275;;-1:-1:-1;1870:275:125:o;2150:187::-;2199:4;2232:18;2224:6;2221:30;2218:56;;;2254:18;;:::i;:::-;-1:-1:-1;2320:2:125;2299:15;-1:-1:-1;;2295:29:125;2326:4;2291:40;;2150:187::o;2342:965::-;2429:6;2437;2445;2498:2;2486:9;2477:7;2473:23;2469:32;2466:52;;;2514:1;2511;2504:12;2466:52;2553:9;2540:23;2572:39;2605:5;2572:39;:::i;:::-;2630:5;-1:-1:-1;2687:2:125;2672:18;;2659:32;2700:41;2659:32;2700:41;:::i;:::-;2760:7;-1:-1:-1;2818:2:125;2803:18;;2790:32;2845:18;2834:30;;2831:50;;;2877:1;2874;2867:12;2831:50;2900:22;;2953:4;2945:13;;2941:27;-1:-1:-1;2931:55:125;;2982:1;2979;2972:12;2931:55;3018:2;3005:16;3043:49;3059:32;3088:2;3059:32;:::i;:::-;3043:49;:::i;:::-;3115:2;3108:5;3101:17;3155:7;3150:2;3145;3141;3137:11;3133:20;3130:33;3127:53;;;3176:1;3173;3166:12;3127:53;3231:2;3226;3222;3218:11;3213:2;3206:5;3202:14;3189:45;3275:1;3270:2;3265;3258:5;3254:14;3250:23;3243:34;3296:5;3286:15;;;;;2342:965;;;;;:::o;3766:160::-;3830:5;3875:3;3866:6;3861:3;3857:16;3853:26;3850:46;;;3892:1;3889;3882:12;3850:46;-1:-1:-1;3914:6:125;3766:160;-1:-1:-1;3766:160:125:o;3931:411::-;4063:6;4071;4115:9;4106:7;4102:23;4145:3;4141:2;4137:12;4134:32;;;4162:1;4159;4152:12;4134:32;4185:58;4235:7;4224:9;4185:58;:::i;:::-;4175:68;-1:-1:-1;4278:2:125;-1:-1:-1;;4259:17:125;;4255:26;4252:46;;;4294:1;4291;4284:12;4252:46;;4332:3;4321:9;4317:19;4307:29;;3931:411;;;;;:::o;4347:182::-;4406:4;4439:18;4431:6;4428:30;4425:56;;;4461:18;;:::i;:::-;-1:-1:-1;4506:1:125;4502:14;4518:4;4498:25;;4347:182::o;4534:889::-;4617:6;4648:2;4691;4679:9;4670:7;4666:23;4662:32;4659:52;;;4707:1;4704;4697:12;4659:52;4747:9;4734:23;4780:18;4772:6;4769:30;4766:50;;;4812:1;4809;4802:12;4766:50;4835:22;;4888:4;4880:13;;4876:27;-1:-1:-1;4866:55:125;;4917:1;4914;4907:12;4866:55;4953:2;4940:16;4976:59;4992:42;5031:2;4992:42;:::i;4976:59::-;5069:15;;;5151:1;5147:10;;;;5139:19;;5135:28;;;5100:12;;;;5175:19;;;5172:39;;;5207:1;5204;5197:12;5172:39;5231:11;;;;5251:142;5267:6;5262:3;5259:15;5251:142;;;5333:17;;5321:30;;5284:12;;;;5371;;;;5251:142;;;5412:5;4534:889;-1:-1:-1;;;;;;;4534:889:125:o;5428:472::-;5505:6;5513;5521;5574:2;5562:9;5553:7;5549:23;5545:32;5542:52;;;5590:1;5587;5580:12;5542:52;5629:9;5616:23;5648:39;5681:5;5648:39;:::i;:::-;5706:5;-1:-1:-1;5763:2:125;5748:18;;5735:32;5776:41;5735:32;5776:41;:::i;:::-;5428:472;;5836:7;;-1:-1:-1;;;5890:2:125;5875:18;;;;5862:32;;5428:472::o;5905:248::-;5996:6;6049:3;6037:9;6028:7;6024:23;6020:33;6017:53;;;6066:1;6063;6056:12;6017:53;6089:58;6139:7;6128:9;6089:58;:::i;6340:407::-;6433:6;6441;6449;6502:2;6490:9;6481:7;6477:23;6473:32;6470:52;;;6518:1;6515;6508:12;6470:52;6557:9;6544:23;6576:39;6609:5;6576:39;:::i;:::-;6634:5;6686:2;6671:18;;6658:32;;-1:-1:-1;6737:2:125;6722:18;;;6709:32;;6340:407;-1:-1:-1;;;6340:407:125:o;6934:404::-;7002:6;7010;7063:2;7051:9;7042:7;7038:23;7034:32;7031:52;;;7079:1;7076;7069:12;7031:52;7118:9;7105:23;7137:39;7170:5;7137:39;:::i;:::-;7195:5;-1:-1:-1;7252:2:125;7237:18;;7224:32;7265:41;7224:32;7265:41;:::i;:::-;7325:7;7315:17;;;6934:404;;;;;:::o;8896:339::-;8980:6;8988;9041:2;9029:9;9020:7;9016:23;9012:32;9009:52;;;9057:1;9054;9047:12;9009:52;9096:9;9083:23;9115:39;9148:5;9115:39;:::i;:::-;9173:5;9225:2;9210:18;;;;9197:32;;-1:-1:-1;;;8896:339:125:o;9681:::-;9882:2;9864:21;;;9921:2;9901:18;;;9894:30;-1:-1:-1;;;9955:2:125;9940:18;;9933:46;10011:2;9996:18;;9681:339::o;10025:399::-;-1:-1:-1;;;;;10307:15:125;;;10289:34;;10359:15;;;;10354:2;10339:18;;10332:43;10406:2;10391:18;;10384:34;;;;10239:2;10224:18;;10025:399::o;10429:376::-;-1:-1:-1;;;;;10680:32:125;;;;10662:51;;10744:2;10729:18;;10722:34;;;;10787:2;10772:18;;10765:34;10650:2;10635:18;;10429:376::o;12044:184::-;12114:6;12167:2;12155:9;12146:7;12142:23;12138:32;12135:52;;;12183:1;12180;12173:12;12135:52;-1:-1:-1;12206:16:125;;12044:184;-1:-1:-1;12044:184:125:o;12441:319::-;-1:-1:-1;;;;;12678:32:125;;;;12660:51;;12742:2;12727:18;;12720:34;12648:2;12633:18;;12441:319::o;13234:127::-;13295:10;13290:3;13286:20;13283:1;13276:31;13326:4;13323:1;13316:15;13350:4;13347:1;13340:15;13366:128;13406:3;13437:1;13433:6;13430:1;13427:13;13424:39;;;13443:18;;:::i;:::-;-1:-1:-1;13479:9:125;;13366:128::o;13855:795::-;13914:3;13952:5;13946:12;13979:6;13974:3;13967:19;14005:4;14034:2;14029:3;14025:12;14018:19;;14071:2;14064:5;14060:14;14092:1;14113;14123:502;14139:6;14134:3;14131:15;14123:502;;;14202:13;;14241:3;14324:1;14338:205;14354:4;14349:3;14346:13;14338:205;;;14427:15;;14413:30;;14512:17;;;;14469:14;;;;14378:1;14369:11;14338:205;;;-1:-1:-1;;;14572:4:125;14563:14;;;;;14600:15;;;;14165:1;14156:11;14123:502;;;-1:-1:-1;14641:3:125;;13855:795;-1:-1:-1;;;;;;13855:795:125:o;14655:610::-;-1:-1:-1;;;;;15012:15:125;;;14994:34;;15064:15;;15059:2;15044:18;;15037:43;15116:3;15111:2;15096:18;;15089:31;;;14937:4;;15137:63;;15180:19;;15172:6;15137:63;:::i;:::-;15129:71;;15250:6;15243:14;15236:22;15231:2;15220:9;15216:18;15209:50;14655:610;;;;;;;:::o;15270:430::-;15376:6;15384;15392;15400;15408;15461:3;15449:9;15440:7;15436:23;15432:33;15429:53;;;15478:1;15475;15468:12;15429:53;-1:-1:-1;;15501:16:125;;15557:2;15542:18;;15536:25;15601:2;15586:18;;15580:25;15645:2;15630:18;;15624:25;15689:3;15674:19;;;15668:26;15501:16;;15536:25;;-1:-1:-1;15580:25:125;15624;-1:-1:-1;15668:26:125;;-1:-1:-1;15270:430:125;-1:-1:-1;15270:430:125:o;16171:760::-;-1:-1:-1;;;;;16639:15:125;;;16621:34;;16691:15;;;;16686:2;16671:18;;16664:43;16738:2;16723:18;;16716:34;;;;16781:2;16766:18;;16759:34;;;;16824:3;16809:19;;16802:35;16601:3;16853:19;;16846:35;16912:3;16897:19;;16890:35;;;;16570:3;16555:19;;16171:760::o;16936:320::-;-1:-1:-1;;;;;17182:15:125;;;17164:34;;17234:15;;17229:2;17214:18;;17207:43;17114:2;17099:18;;16936:320::o;17539:245::-;17606:6;17659:2;17647:9;17638:7;17634:23;17630:32;17627:52;;;17675:1;17672;17665:12;17627:52;17707:9;17701:16;17726:28;17748:5;17726:28;:::i;18411:291::-;18536:6;18544;18597:2;18585:9;18576:7;18572:23;18568:32;18565:52;;;18613:1;18610;18603:12;18565:52;-1:-1:-1;;18636:16:125;;18692:2;18677:18;;;18671:25;18636:16;;18671:25;;-1:-1:-1;18411:291:125:o;18707:168::-;18747:7;18813:1;18809;18805:6;18801:14;18798:1;18795:21;18790:1;18783:9;18776:17;18772:45;18769:71;;;18820:18;;:::i;:::-;-1:-1:-1;18860:9:125;;18707:168::o;18880:657::-;-1:-1:-1;;;;;19237:32:125;;;;19219:51;;19301:2;19286:18;;19279:34;;;;19344:2;19329:18;;19322:34;;;;19387:2;19372:18;;19365:34;;;;19430:3;19415:19;;19408:35;19257:3;19459:19;;19452:35;19518:3;19503:19;;19496:35;19206:3;19191:19;;18880:657::o;20957:343::-;21158:2;21140:21;;;21197:2;21177:18;;;21170:30;-1:-1:-1;;;21231:2:125;21216:18;;21209:50;21291:2;21276:18;;20957:343::o;24152:831::-;-1:-1:-1;;;;;24647:15:125;;;24629:34;;24699:15;;;;24694:2;24679:18;;24672:43;24746:2;24731:18;;24724:34;;;;24789:2;24774:18;;24767:34;;;;24832:3;24817:19;;24810:35;24609:3;24861:19;;24854:35;24920:3;24905:19;;24898:35;24964:3;24949:19;;24942:35;;;;24578:3;24563:19;;24152:831::o;25750:258::-;25822:1;25832:113;25846:6;25843:1;25840:13;25832:113;;;25922:11;;;25916:18;25903:11;;;25896:39;25868:2;25861:10;25832:113;;;25963:6;25960:1;25957:13;25954:48;;;-1:-1:-1;;25998:1:125;25980:16;;25973:27;25750:258::o;26013:::-;26055:3;26093:5;26087:12;26120:6;26115:3;26108:19;26136:63;26192:6;26185:4;26180:3;26176:14;26169:4;26162:5;26158:16;26136:63;:::i;:::-;26253:2;26232:15;-1:-1:-1;;26228:29:125;26219:39;;;;26260:4;26215:50;;26013:258;-1:-1:-1;;26013:258:125:o;26276:317::-;-1:-1:-1;;;;;26453:32:125;;26435:51;;26522:2;26517;26502:18;;26495:30;;;-1:-1:-1;;26542:45:125;;26568:18;;26560:6;26542:45;:::i;27198:368::-;27295:6;27303;27311;27319;27372:3;27360:9;27351:7;27347:23;27343:33;27340:53;;;27389:1;27386;27379:12;27340:53;-1:-1:-1;;27412:16:125;;27468:2;27453:18;;27447:25;27512:2;27497:18;;27491:25;27556:2;27541:18;;;27535:25;27412:16;;27447:25;;-1:-1:-1;27535:25:125;;-1:-1:-1;27198:368:125;-1:-1:-1;27198:368:125:o;29184:559::-;-1:-1:-1;;;;;29539:15:125;;;29521:34;;29591:15;;;;29586:2;29571:18;;29564:43;29638:2;29623:18;;29616:34;;;;29681:2;29666:18;;29659:34;29724:3;29709:19;;29702:35;;;;29470:3;29455:19;;29184:559::o;31550:380::-;31629:1;31625:12;;;;31672;;;31693:61;;31747:4;31739:6;31735:17;31725:27;;31693:61;31800:2;31792:6;31789:14;31769:18;31766:38;31763:161;;31846:10;31841:3;31837:20;31834:1;31827:31;31881:4;31878:1;31871:15;31909:4;31906:1;31899:15;31935:811;32061:3;32090:1;32123:6;32117:13;32153:36;32179:9;32153:36;:::i;:::-;32208:1;32225:18;;;32252:104;;;;32370:1;32365:356;;;;32218:503;;32252:104;-1:-1:-1;;32285:24:125;;32273:37;;32330:16;;;;-1:-1:-1;32252:104:125;;32365:356;32396:6;32393:1;32386:17;32426:4;32471:2;32468:1;32458:16;32496:1;32510:165;32524:6;32521:1;32518:13;32510:165;;;32602:14;;32589:11;;;32582:35;32645:16;;;;32539:10;;32510:165;;;32514:3;;;32704:6;32699:3;32695:16;32688:23;;32218:503;-1:-1:-1;32737:3:125;;31935:811;-1:-1:-1;;;;;;31935:811:125:o;33829:678::-;-1:-1:-1;;;;;34234:15:125;;;34216:34;;34286:15;;;34281:2;34266:18;;34259:43;34333:2;34318:18;;34311:34;;;;34376:2;34361:18;;34354:34;;;;34432:14;34425:22;34419:3;34404:19;;34397:51;34485:15;;;34196:3;34464:19;;34457:44;34165:3;34150:19;;33829:678::o;36871:127::-;36932:10;36927:3;36923:20;36920:1;36913:31;36963:4;36960:1;36953:15;36987:4;36984:1;36977:15;37003:636;37083:6;37136:2;37124:9;37115:7;37111:23;37107:32;37104:52;;;37152:1;37149;37142:12;37104:52;37185:9;37179:16;37218:18;37210:6;37207:30;37204:50;;;37250:1;37247;37240:12;37204:50;37273:22;;37326:4;37318:13;;37314:27;-1:-1:-1;37304:55:125;;37355:1;37352;37345:12;37304:55;37384:2;37378:9;37409:49;37425:32;37454:2;37425:32;:::i;37409:49::-;37481:2;37474:5;37467:17;37521:7;37516:2;37511;37507;37503:11;37499:20;37496:33;37493:53;;;37542:1;37539;37532:12;37493:53;37555:54;37606:2;37601;37594:5;37590:14;37585:2;37581;37577:11;37555:54;:::i;:::-;37628:5;37003:636;-1:-1:-1;;;;;37003:636:125:o;37644:470::-;37823:3;37861:6;37855:13;37877:53;37923:6;37918:3;37911:4;37903:6;37899:17;37877:53;:::i;:::-;37993:13;;37952:16;;;;38015:57;37993:13;37952:16;38049:4;38037:17;;38015:57;:::i;:::-;38088:20;;37644:470;-1:-1:-1;;;;37644:470:125:o;38119:125::-;38159:4;38187:1;38184;38181:8;38178:34;;;38192:18;;:::i;:::-;-1:-1:-1;38229:9:125;;38119:125::o;38249:429::-;38470:3;38508:6;38502:13;38524:53;38570:6;38565:3;38558:4;38550:6;38546:17;38524:53;:::i;:::-;-1:-1:-1;;;38599:16:125;;38624:19;;;-1:-1:-1;38670:1:125;38659:13;;38249:429;-1:-1:-1;38249:429:125:o;38683:135::-;38722:3;38743:17;;;38740:43;;38763:18;;:::i;:::-;-1:-1:-1;38810:1:125;38799:13;;38683:135::o;40299:422::-;40388:1;40431:5;40388:1;40445:270;40466:7;40456:8;40453:21;40445:270;;;40525:4;40521:1;40517:6;40513:17;40507:4;40504:27;40501:53;;;40534:18;;:::i;:::-;40584:7;40574:8;40570:22;40567:55;;;40604:16;;;;40567:55;40683:22;;;;40643:15;;;;40445:270;;;40449:3;40299:422;;;;;:::o;40726:806::-;40775:5;40805:8;40795:80;;-1:-1:-1;40846:1:125;40860:5;;40795:80;40894:4;40884:76;;-1:-1:-1;40931:1:125;40945:5;;40884:76;40976:4;40994:1;40989:59;;;;41062:1;41057:130;;;;40969:218;;40989:59;41019:1;41010:10;;41033:5;;;41057:130;41094:3;41084:8;41081:17;41078:43;;;41101:18;;:::i;:::-;-1:-1:-1;;41157:1:125;41143:16;;41172:5;;40969:218;;41271:2;41261:8;41258:16;41252:3;41246:4;41243:13;41239:36;41233:2;41223:8;41220:16;41215:2;41209:4;41206:12;41202:35;41199:77;41196:159;;;-1:-1:-1;41308:19:125;;;41340:5;;41196:159;41387:34;41412:8;41406:4;41387:34;:::i;:::-;41457:6;41453:1;41449:6;41445:19;41436:7;41433:32;41430:58;;;41468:18;;:::i;:::-;41506:20;;40726:806;-1:-1:-1;;;40726:806:125:o;41537:131::-;41597:5;41626:36;41653:8;41647:4;41626:36;:::i;41673:217::-;41713:1;41739;41729:132;;41783:10;41778:3;41774:20;41771:1;41764:31;41818:4;41815:1;41808:15;41846:4;41843:1;41836:15;41729:132;-1:-1:-1;41875:9:125;;41673:217::o;42254:330::-;42455:2;42437:21;;;42494:1;42474:18;;;42467:29;-1:-1:-1;;;42527:2:125;42512:18;;42505:38;42575:2;42560:18;;42254:330::o;46624:691::-;46934:4;46980:1;46976;46971:3;46967:11;46963:19;47021:2;47013:6;47009:15;46998:9;46991:34;47073:2;47065:6;47061:15;47056:2;47045:9;47041:18;47034:43;47113:3;47108:2;47097:9;47093:18;47086:31;47134:63;47192:3;47181:9;47177:19;47169:6;47134:63;:::i;:::-;47240:14;;47233:22;47228:2;47213:18;;47206:50;47293:15;;;;47287:3;47272:19;;;47265:44;-1:-1:-1;47126:71:125;46624:691;-1:-1:-1;;;46624:691:125:o;50009:259::-;50079:6;50132:2;50120:9;50111:7;50107:23;50103:32;50100:52;;;50148:1;50145;50138:12;50100:52;50180:9;50174:16;50199:39;50232:5;50199:39;:::i;52506:371::-;-1:-1:-1;;;;;;52691:33:125;;52679:46;;52748:13;;52661:3;;52770:61;52748:13;52820:1;52811:11;;52804:4;52792:17;;52770:61;:::i;:::-;52851:16;;;;52869:1;52847:24;;52506:371;-1:-1:-1;;;52506:371:125:o;52882:274::-;53011:3;53049:6;53043:13;53065:53;53111:6;53106:3;53099:4;53091:6;53087:17;53065:53;:::i;:::-;53134:16;;;;;52882:274;-1:-1:-1;;52882:274:125:o;57555:273::-;57623:6;57676:2;57664:9;57655:7;57651:23;57647:32;57644:52;;;57692:1;57689;57682:12;57644:52;57724:9;57718:16;57774:4;57767:5;57763:16;57756:5;57753:27;57743:55;;57794:1;57791;57784:12;61879:735;61929:3;61970:5;61964:12;61999:36;62025:9;61999:36;:::i;:::-;62044:19;;;62082:4;62105:1;62122:18;;;62149:109;;;;62272:1;62267:341;;;;62115:493;;62149:109;-1:-1:-1;;62191:24:125;;62177:12;;;62170:46;62245:2;62236:12;;;-1:-1:-1;62149:109:125;;62267:341;62298:5;62295:1;62288:16;62345:2;62342:1;62332:16;62370:1;62384:174;62398:6;62395:1;62392:13;62384:174;;;62485:14;;62467:11;;;62463:20;;62456:44;62528:16;;;;62413:10;;62384:174;;;62582:11;;62578:20;;;-1:-1:-1;;62115:493:125;;;;;;61879:735;;;;:::o;62619:578::-;-1:-1:-1;;;;;62870:32:125;;62852:51;;62939:3;62934:2;62919:18;;62912:31;;;-1:-1:-1;;62966:54:125;;63000:19;;62992:6;62966:54;:::i;:::-;63068:9;63060:6;63056:22;63051:2;63040:9;63036:18;63029:50;63096:41;63130:6;63122;63096:41;:::i;:::-;63088:49;;;63185:4;63177:6;63173:17;63168:2;63157:9;63153:18;63146:45;62619:578;;;;;;;:::o;64033:446::-;64283:2;64272:9;64265:21;64322:1;64317:2;64306:9;64302:18;64295:29;-1:-1:-1;;;64355:2:125;64344:9;64340:18;64333:35;64406:3;64399:4;64388:9;64384:20;64377:33;64246:4;64427:46;64468:3;64457:9;64453:19;64445:6;64427:46;:::i;65018:220::-;65167:2;65156:9;65149:21;65130:4;65187:45;65228:2;65217:9;65213:18;65205:6;65187:45;:::i;65243:370::-;65446:10;65442:15;65434:6;65430:28;65425:3;65418:41;65400:3;65488:6;65482:13;65504:62;65559:6;65554:2;65549:3;65545:12;65538:4;65530:6;65526:17;65504:62;:::i;:::-;65586:16;;;;65604:2;65582:25;;65243:370;-1:-1:-1;;;65243:370:125:o;67612:348::-;67842:2;67831:9;67824:21;67805:4;67862:49;67907:2;67896:9;67892:18;67525:2;67513:15;;-1:-1:-1;;;67553:4:125;67544:14;;67537:36;67598:2;67589:12;;67448:159;67862:49;67854:57;;67947:6;67942:2;67931:9;67927:18;67920:34;67612:348;;;;:::o;68129:::-;68359:2;68348:9;68341:21;68322:4;68379:49;68424:2;68413:9;68409:18;68042:2;68030:15;;-1:-1:-1;;;68070:4:125;68061:14;;68054:36;68115:2;68106:12;;67965:159;68888:374;69118:2;69107:9;69100:21;69081:4;69138:49;69183:2;69172:9;69168:18;67525:2;67513:15;;-1:-1:-1;;;67553:4:125;67544:14;;67537:36;67598:2;67589:12;;67448:159;69138:49;-1:-1:-1;;;;;69223:32:125;;;;69218:2;69203:18;;;;69196:60;;;;-1:-1:-1;69130:57:125;68888:374::o;69267:::-;69497:2;69486:9;69479:21;69460:4;69517:49;69562:2;69551:9;69547:18;68042:2;68030:15;;-1:-1:-1;;;68070:4:125;68061:14;;68054:36;68115:2;68106:12;;67965:159;70401:440;70651:2;70640:9;70633:21;70614:4;70677:49;70722:2;70711:9;70707:18;67525:2;67513:15;;-1:-1:-1;;;67553:4:125;67544:14;;67537:36;67598:2;67589:12;;67448:159;70677:49;70774:9;70766:6;70762:22;70757:2;70746:9;70742:18;70735:50;70802:33;70828:6;70820;70802:33;:::i;70846:440::-;71096:2;71085:9;71078:21;71059:4;71122:49;71167:2;71156:9;71152:18;68042:2;68030:15;;-1:-1:-1;;;68070:4:125;68061:14;;68054:36;68115:2;68106:12;;67965:159;71949:610;72195:13;;72138:3;;72169;;72248:4;72275:15;;;72138:3;72318:175;72332:6;72329:1;72326:13;72318:175;;;72395:13;;72381:28;;72431:14;;;;72468:15;;;;72354:1;72347:9;72318:175;;;-1:-1:-1;;72502:21:125;;;-1:-1:-1;72539:14:125;;;;;-1:-1:-1;;;71949:610:125:o;72753:556::-;72955:2;72937:21;;;72994:3;72974:18;;;72967:31;73034:34;73029:2;73014:18;;73007:62;73105:34;73100:2;73085:18;;73078:62;73177:34;73171:3;73156:19;;73149:63;-1:-1:-1;;;73243:3:125;73228:19;;73221:46;73299:3;73284:19;;72753:556::o;73314:658::-;73379:5;73432:3;73425:4;73417:6;73413:17;73409:27;73399:55;;73450:1;73447;73440:12;73399:55;73479:6;73473:13;73505:4;73529:59;73545:42;73584:2;73545:42;:::i;73529:59::-;73622:15;;;73708:1;73704:10;;;;73692:23;;73688:32;;;73653:12;;;;73732:15;;;73729:35;;;73760:1;73757;73750:12;73729:35;73796:2;73788:6;73784:15;73808:135;73824:6;73819:3;73816:15;73808:135;;;73890:10;;73878:23;;73921:12;;;;73841;;73808:135;;;-1:-1:-1;73961:5:125;73314:658;-1:-1:-1;;;;;;73314:658:125:o;73977:614::-;74106:6;74114;74167:2;74155:9;74146:7;74142:23;74138:32;74135:52;;;74183:1;74180;74173:12;74135:52;74216:9;74210:16;74245:18;74286:2;74278:6;74275:14;74272:34;;;74302:1;74299;74292:12;74272:34;74325:72;74389:7;74380:6;74369:9;74365:22;74325:72;:::i;:::-;74315:82;;74443:2;74432:9;74428:18;74422:25;74406:41;;74472:2;74462:8;74459:16;74456:36;;;74488:1;74485;74478:12;74456:36;;74511:74;74577:7;74566:8;74555:9;74551:24;74511:74;:::i;:::-;74501:84;;;73977:614;;;;;:::o;74875:442::-;-1:-1:-1;;;;;75122:32:125;;;;75104:51;;-1:-1:-1;;;;;;75191:33:125;;;;75186:2;75171:18;;75164:61;75256:2;75241:18;;75234:34;75299:2;75284:18;;75277:34;75091:3;75076:19;;74875:442::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "cash(address,uint256)": "d56a22f0",
    "cash(address,uint256,uint256)": "6cc12a24",
    "echoSender()": "1e91f8cb",
    "failed()": "ba414fa6",
    "logary(int256[])": "521606d2",
    "logary(uint256[])": "b84e3eda",
    "makerExecute((address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256))": "6c49c32c",
    "makerPosthook((address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256),(bytes32,bytes32))": "3d3d130d",
    "marketOrderKO()": "3566f61b",
    "marketOrderOK(address,address)": "a00ecff3",
    "newOfferKO()": "b0a706b9",
    "newOfferOK(address,address)": "e2d73418",
    "retractOfferKO(uint256)": "1a58abf9",
    "retractOfferOK(address,address,uint256)": "5749f882",
    "setUp()": "0a9254e4",
    "setupMaker(address,address,string)": "bfdc3588",
    "setupMakerDeployer(address,address)": "bbab0fac",
    "setupMangrove()": "8c004832",
    "setupMangrove(address,address)": "ea14b5c3",
    "setupMangrove(address,address,bool)": "0b3d8c42",
    "setupMangrove(bool)": "0645f2be",
    "setupTaker(address,address,string)": "3336a63f",
    "snipesKO(uint256)": "3ab07a10",
    "snipesOK(address,address,uint256)": "d419469d",
    "test_activation_emits_events_in_order()": "3818b730",
    "test_can_marketOrderFor_for_with_allowance()": "4757fde9",
    "test_cannot_marketOrderFor_for_without_allowance()": "fe80d6da",
    "test_cannot_snipesFor_for_without_allowance()": "9aa488db",
    "test_empty_mgv_ok()": "aa951045",
    "test_gov_can_transfer_rights()": "5b61f512",
    "test_gov_cant_be_zero()": "81925b61",
    "test_gov_is_not_sender()": "a64e8122",
    "test_initial_allowance_is_zero()": "d1d15d69",
    "test_kill_is_idempotent()": "d7f557ed",
    "test_killing_updates_config()": "8cdfa8c3",
    "test_makerGasprice_wider_than_16_bits_fails_newOffer()": "c023e42f",
    "test_makerGasreq_at_density_suceeds()": "11c2bee1",
    "test_makerGasreq_at_gasmax_succeeds_newOffer()": "7c19a966",
    "test_makerGasreq_bigger_than_gasmax_fails_newOffer()": "5f420fe5",
    "test_makerGasreq_lower_than_density_fails_newOffer()": "af3777f4",
    "test_makerGasreq_wider_than_24_bits_fails_newOffer()": "091d3e9b",
    "test_makerGives_wider_than_96_bits_fails_newOffer()": "9e6f7567",
    "test_makerWants_wider_than_96_bits_fails_newOffer()": "ea837eef",
    "test_marketOrder_on_closed_fails()": "d7657ec4",
    "test_marketOrder_on_posthook_succeeds()": "ee95ec25",
    "test_marketOrder_on_reentrancy_fails()": "2b67606d",
    "test_marketOrder_on_reentrancy_succeeds()": "0d53ca48",
    "test_newOffer_on_closed_fails()": "fef6c457",
    "test_newOffer_on_inactive_fails()": "4ba9b07f",
    "test_newOffer_on_posthook_succeeds()": "521d68a6",
    "test_newOffer_on_reentrancy_fails()": "26210efb",
    "test_newOffer_on_reentrancy_succeeds()": "457dd4c5",
    "test_only_gov_can_kill()": "8425e355",
    "test_only_gov_can_set_active()": "ced79729",
    "test_only_gov_can_set_density()": "e451aa57",
    "test_only_gov_can_set_fee()": "0266522c",
    "test_only_gov_can_set_gasbase()": "b2abce47",
    "test_only_gov_can_set_gasmax()": "126b6ea5",
    "test_only_gov_can_set_gasprice()": "13adfa31",
    "test_only_gov_can_set_monitor()": "0e93c2ed",
    "test_only_gov_can_set_vault()": "6eb5cac1",
    "test_receive_on_closed_fails()": "b15c9128",
    "test_retractOffer_on_closed_ok()": "bcdb17b6",
    "test_retractOffer_on_posthook_succeeds()": "caf1b8db",
    "test_retractOffer_on_reentrancy_fails()": "5b29cdf5",
    "test_retractOffer_on_reentrancy_succeeds()": "cae50f54",
    "test_retractOffer_wrong_owner_fails()": "39a1e43b",
    "test_set_density_ceiling()": "2241e68f",
    "test_set_fee_ceiling()": "81e85c24",
    "test_set_gasbase_ceiling()": "7037e22b",
    "test_set_gasmax_ceiling()": "c0e3d6d8",
    "test_set_gasprice_ceiling()": "ba081c69",
    "test_set_zero_density()": "7f241084",
    "test_set_zero_gasbase()": "a1e7a826",
    "test_snipe_on_closed_fails()": "78db63bb",
    "test_snipe_on_reentrancy_fails()": "31e61c37",
    "test_snipes_on_posthook_succeeds()": "370219f5",
    "test_snipes_on_reentrancy_succeeds()": "aab4a415",
    "test_take_on_closed_fails()": "a7a05296",
    "test_takerGives_above_96bits_fails_snipes()": "e90d6353",
    "test_takerWants_above_96bits_fails_snipes()": "0ccd650d",
    "test_takerWants_wider_than_160_bits_fails_marketOrder()": "a218492e",
    "test_updateOffer_on_closed_fails()": "ec278bef",
    "test_updateOffer_on_inactive_fails()": "89ef9147",
    "test_updateOffer_on_posthook_succeeds()": "4c6f09ee",
    "test_updateOffer_on_reentrancy_fails()": "d61a7b90",
    "test_updateOffer_on_reentrancy_succeeds()": "39ee6a91",
    "test_withdraw_on_closed_ok()": "1a711c7a",
    "updateOfferKO(uint256)": "330ff418",
    "updateOfferOK(address,address,uint256)": "c1285555",
    "vm()": "3a768463"
  },
  "ast": {
    "absolutePath": "packages/mangrove-solidity/test/core/Gatekeeping.t.sol",
    "id": 53440,
    "exportedSymbols": {
      "AbstractMangrove": [22838],
      "AccessControlled": [43417],
      "DSTest": [1786],
      "GatekeepingTest": [53439],
      "HasMgvEvents": [24715],
      "IERC20": [24851],
      "IMaker": [24733],
      "IMgvMonitor": [24773],
      "ITaker": [24745],
      "InvertedMangrove": [23581],
      "MakerDeployer": [72689],
      "Mangrove": [23707],
      "MangroveTest": [70515],
      "MgvLib": [24540],
      "P": [24511],
      "Script": [2022],
      "StdStorage": [3553],
      "Test": [3455],
      "Test2": [70890],
      "TestMaker": [73404],
      "TestMoriartyMaker": [73653],
      "TestTaker": [73996],
      "TestToken": [76251],
      "TrivialTestMaker": [72724],
      "Utilities": [72490],
      "Vm": [5425],
      "console": [13489],
      "console2": [21553],
      "csl": [21553],
      "stdError": [3525],
      "stdMath": [4796],
      "stdStorage": [4655]
    },
    "nodeType": "SourceUnit",
    "src": "38:22209:90",
    "nodes": [
      {
        "id": 50038,
        "nodeType": "PragmaDirective",
        "src": "38:24:90",
        "literals": ["solidity", "^", "0.8", ".10"]
      },
      {
        "id": 50039,
        "nodeType": "PragmaDirective",
        "src": "63:19:90",
        "literals": ["abicoder", "v2"]
      },
      {
        "id": 50040,
        "nodeType": "ImportDirective",
        "src": "84:39:90",
        "absolutePath": "packages/mangrove-solidity/test/lib/MangroveTest.sol",
        "file": "mgv_test/lib/MangroveTest.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53440,
        "sourceUnit": 70516,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 53439,
        "nodeType": "ContractDefinition",
        "src": "186:22060:90",
        "nodes": [
          {
            "id": 50048,
            "nodeType": "FunctionDefinition",
            "src": "239:29:90",
            "body": {
              "id": 50047,
              "nodeType": "Block",
              "src": "266:2:90",
              "statements": []
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 50045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "246:2:90"
            },
            "returnParameters": {
              "id": 50046,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "266:0:90"
            },
            "scope": 53439,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50051,
            "nodeType": "VariableDeclaration",
            "src": "272:13:90",
            "constant": false,
            "mutability": "mutable",
            "name": "tkr",
            "nameLocation": "282:3:90",
            "scope": 53439,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestTaker_$73996",
              "typeString": "contract TestTaker"
            },
            "typeName": {
              "id": 50050,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 50049,
                "name": "TestTaker",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 73996,
                "src": "272:9:90"
              },
              "referencedDeclaration": 73996,
              "src": "272:9:90",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestTaker_$73996",
                "typeString": "contract TestTaker"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 50054,
            "nodeType": "VariableDeclaration",
            "src": "289:13:90",
            "constant": false,
            "mutability": "mutable",
            "name": "mkr",
            "nameLocation": "299:3:90",
            "scope": 53439,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestMaker_$73404",
              "typeString": "contract TestMaker"
            },
            "typeName": {
              "id": 50053,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 50052,
                "name": "TestMaker",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 73404,
                "src": "289:9:90"
              },
              "referencedDeclaration": 73404,
              "src": "289:9:90",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestMaker_$73404",
                "typeString": "contract TestMaker"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 50057,
            "nodeType": "VariableDeclaration",
            "src": "306:18:90",
            "constant": false,
            "mutability": "mutable",
            "name": "dual_mkr",
            "nameLocation": "316:8:90",
            "scope": 53439,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestMaker_$73404",
              "typeString": "contract TestMaker"
            },
            "typeName": {
              "id": 50056,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 50055,
                "name": "TestMaker",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 73404,
                "src": "306:9:90"
              },
              "referencedDeclaration": 73404,
              "src": "306:9:90",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestMaker_$73404",
                "typeString": "contract TestMaker"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 50059,
            "nodeType": "VariableDeclaration",
            "src": "328:16:90",
            "constant": false,
            "mutability": "mutable",
            "name": "notAdmin",
            "nameLocation": "336:8:90",
            "scope": 53439,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 50058,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "328:7:90",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 50172,
            "nodeType": "FunctionDefinition",
            "src": "349:555:90",
            "body": {
              "id": 50171,
              "nodeType": "Block",
              "src": "382:522:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 50063,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "388:5:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_GatekeepingTest_$53439_$",
                          "typeString": "type(contract super GatekeepingTest)"
                        }
                      },
                      "id": 50065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setUp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 69507,
                      "src": "388:11:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 50066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "388:13:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50067,
                  "nodeType": "ExpressionStatement",
                  "src": "388:13:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50070,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "414:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 50069,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "412:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 50071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "412:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 50073,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "423:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$53439",
                              "typeString": "contract GatekeepingTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$53439",
                              "typeString": "contract GatekeepingTest"
                            }
                          ],
                          "id": 50072,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70497,
                          "src": "421:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 50074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "421:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 50075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "430:8:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "id": 50068,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [2399, 2416, 2519],
                      "referencedDeclaration": 2416,
                      "src": "407:4:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 50076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "407:32:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50077,
                  "nodeType": "ExpressionStatement",
                  "src": "407:32:90"
                },
                {
                  "expression": {
                    "id": 50088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50078,
                      "name": "tkr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50051,
                      "src": "446:3:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestTaker_$73996",
                        "typeString": "contract TestTaker"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 50081,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69382,
                              "src": "465:4:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 50080,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "463:1:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 50082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "463:7:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 50084,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69385,
                              "src": "474:5:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 50083,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "472:1:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 50085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "472:8:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "74616b65725b242841292c242842295d",
                          "id": 50086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "482:18:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_7fa55fab003bc7cb63668996a72c9398f9e60f82d3931fb4e5180b6c61d06bff",
                            "typeString": "literal_string \"taker[$(A),$(B)]\""
                          },
                          "value": "taker[$(A),$(B)]"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_7fa55fab003bc7cb63668996a72c9398f9e60f82d3931fb4e5180b6c61d06bff",
                            "typeString": "literal_string \"taker[$(A),$(B)]\""
                          }
                        ],
                        "id": 50079,
                        "name": "setupTaker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70378,
                        "src": "452:10:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$_t_contract$_TestTaker_$73996_$",
                          "typeString": "function (address,address,string memory) returns (contract TestTaker)"
                        }
                      },
                      "id": 50087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "452:49:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestTaker_$73996",
                        "typeString": "contract TestTaker"
                      }
                    },
                    "src": "446:55:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestTaker_$73996",
                      "typeString": "contract TestTaker"
                    }
                  },
                  "id": 50089,
                  "nodeType": "ExpressionStatement",
                  "src": "446:55:90"
                },
                {
                  "expression": {
                    "id": 50100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50090,
                      "name": "mkr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50054,
                      "src": "507:3:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestMaker_$73404",
                        "typeString": "contract TestMaker"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 50093,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69382,
                              "src": "526:4:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 50092,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "524:1:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 50094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "524:7:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 50096,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69385,
                              "src": "535:5:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 50095,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "533:1:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 50097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "533:8:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "6d616b65725b242841292c242842295d",
                          "id": 50098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "543:18:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_8beef7e1343f5e05ab06915a19bc81e998065c32b6aaf5db8bb02daf33027927",
                            "typeString": "literal_string \"maker[$(A),$(B)]\""
                          },
                          "value": "maker[$(A),$(B)]"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_8beef7e1343f5e05ab06915a19bc81e998065c32b6aaf5db8bb02daf33027927",
                            "typeString": "literal_string \"maker[$(A),$(B)]\""
                          }
                        ],
                        "id": 50091,
                        "name": "setupMaker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70302,
                        "src": "513:10:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$_t_contract$_TestMaker_$73404_$",
                          "typeString": "function (address,address,string memory) returns (contract TestMaker)"
                        }
                      },
                      "id": 50099,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "513:49:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestMaker_$73404",
                        "typeString": "contract TestMaker"
                      }
                    },
                    "src": "507:55:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestMaker_$73404",
                      "typeString": "contract TestMaker"
                    }
                  },
                  "id": 50101,
                  "nodeType": "ExpressionStatement",
                  "src": "507:55:90"
                },
                {
                  "expression": {
                    "id": 50112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50102,
                      "name": "dual_mkr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50057,
                      "src": "568:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestMaker_$73404",
                        "typeString": "contract TestMaker"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 50105,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69385,
                              "src": "592:5:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 50104,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "590:1:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 50106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "590:8:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 50108,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69382,
                              "src": "602:4:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 50107,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "600:1:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 50109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "600:7:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "6d616b65725b242842292c242841295d",
                          "id": 50110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "609:18:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_19b520a2fae695a4ff52dd06d8d38f0b9262fa04f8f989e6eb50ec2cc1ccc027",
                            "typeString": "literal_string \"maker[$(B),$(A)]\""
                          },
                          "value": "maker[$(B),$(A)]"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_19b520a2fae695a4ff52dd06d8d38f0b9262fa04f8f989e6eb50ec2cc1ccc027",
                            "typeString": "literal_string \"maker[$(B),$(A)]\""
                          }
                        ],
                        "id": 50103,
                        "name": "setupMaker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70302,
                        "src": "579:10:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$_t_contract$_TestMaker_$73404_$",
                          "typeString": "function (address,address,string memory) returns (contract TestMaker)"
                        }
                      },
                      "id": 50111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "579:49:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestMaker_$73404",
                        "typeString": "contract TestMaker"
                      }
                    },
                    "src": "568:60:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestMaker_$73404",
                      "typeString": "contract TestMaker"
                    }
                  },
                  "id": 50113,
                  "nodeType": "ExpressionStatement",
                  "src": "568:60:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "35",
                        "id": 50117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "652:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 50114,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50054,
                        "src": "635:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$73404",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 50116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "provisionMgv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73320,
                      "src": "635:16:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 50118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "635:25:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50119,
                  "nodeType": "ExpressionStatement",
                  "src": "635:25:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "35",
                        "id": 50123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "688:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 50120,
                        "name": "dual_mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50057,
                        "src": "666:8:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$73404",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 50122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "provisionMgv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73320,
                      "src": "666:21:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 50124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "666:30:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50125,
                  "nodeType": "ExpressionStatement",
                  "src": "666:30:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50128,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "710:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 50127,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "708:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 50129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "708:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 50132,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50051,
                            "src": "726:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          ],
                          "id": 50131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "718:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50130,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "718:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "718:12:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 50134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "732:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 50126,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [2399, 2416, 2519],
                      "referencedDeclaration": 2416,
                      "src": "703:4:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 50135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "703:37:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50136,
                  "nodeType": "ExpressionStatement",
                  "src": "703:37:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50139,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "753:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 50138,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "751:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 50140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "751:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 50143,
                            "name": "mkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50054,
                            "src": "769:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$73404",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$73404",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 50142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "761:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50141,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "761:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "761:12:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 50145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "775:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 50137,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [2399, 2416, 2519],
                      "referencedDeclaration": 2416,
                      "src": "746:4:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 50146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "746:37:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50147,
                  "nodeType": "ExpressionStatement",
                  "src": "746:37:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50150,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "796:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 50149,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "794:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 50151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "794:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 50154,
                            "name": "dual_mkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50057,
                            "src": "811:8:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$73404",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$73404",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 50153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "803:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50152,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "803:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "803:17:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 50156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "822:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 50148,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [2399, 2416, 2519],
                      "referencedDeclaration": 2416,
                      "src": "789:4:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 50157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "789:41:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50158,
                  "nodeType": "ExpressionStatement",
                  "src": "789:41:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50162,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69385,
                        "src": "852:5:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 50163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "859:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 50159,
                        "name": "tkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50051,
                        "src": "837:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$73996",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 50161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approveMgv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73728,
                      "src": "837:14:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,uint256) external"
                      }
                    },
                    "id": 50164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "837:30:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50165,
                  "nodeType": "ExpressionStatement",
                  "src": "837:30:90"
                },
                {
                  "expression": {
                    "id": 50169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50166,
                      "name": "notAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50059,
                      "src": "874:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 50167,
                        "name": "freshAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [70789, 70801],
                        "referencedDeclaration": 70801,
                        "src": "885:12:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_payable_$",
                          "typeString": "function () returns (address payable)"
                        }
                      },
                      "id": 50168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "885:14:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "874:25:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 50170,
                  "nodeType": "ExpressionStatement",
                  "src": "874:25:90"
                }
              ]
            },
            "baseFunctions": [69507],
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "358:5:90",
            "overrides": {
              "id": 50061,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "373:8:90"
            },
            "parameters": {
              "id": 50060,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "363:2:90"
            },
            "returnParameters": {
              "id": 50062,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "382:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50194,
            "nodeType": "FunctionDefinition",
            "src": "931:199:90",
            "body": {
              "id": 50193,
              "nodeType": "Block",
              "src": "972:158:90",
              "statements": [
                {
                  "expression": {
                    "id": 50183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50175,
                      "name": "mgv",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69379,
                      "src": "978:3:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                        "typeString": "contract AbstractMangrove"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 50179,
                          "name": "notAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50059,
                          "src": "1010:8:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 50180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1030:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "30",
                          "id": 50181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1041:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 50178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "984:12:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$_t_contract$_Mangrove_$23707_$",
                          "typeString": "function (address,uint256,uint256) returns (contract Mangrove)"
                        },
                        "typeName": {
                          "id": 50177,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 50176,
                            "name": "Mangrove",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 23707,
                            "src": "988:8:90"
                          },
                          "referencedDeclaration": 23707,
                          "src": "988:8:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Mangrove_$23707",
                            "typeString": "contract Mangrove"
                          }
                        }
                      },
                      "id": 50182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": ["governance", "gasprice", "gasmax"],
                      "nodeType": "FunctionCall",
                      "src": "984:60:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Mangrove_$23707",
                        "typeString": "contract Mangrove"
                      }
                    },
                    "src": "978:66:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                      "typeString": "contract AbstractMangrove"
                    }
                  },
                  "id": 50184,
                  "nodeType": "ExpressionStatement",
                  "src": "978:66:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 50186,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "1059:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          },
                          "id": 50187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "governance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23719,
                          "src": "1059:14:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 50188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1059:16:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 50189,
                        "name": "notAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50059,
                        "src": "1077:8:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "676f7665726e616e63652073686f756c64206e6f74206265206d73672e73656e646572",
                        "id": 50190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1087:37:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebe35af5a6cb0acd1773cf4f7d7ff2f99641c545c18ab61bfa179ad0ba940def",
                          "typeString": "literal_string \"governance should not be msg.sender\""
                        },
                        "value": "governance should not be msg.sender"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ebe35af5a6cb0acd1773cf4f7d7ff2f99641c545c18ab61bfa179ad0ba940def",
                          "typeString": "literal_string \"governance should not be msg.sender\""
                        }
                      ],
                      "id": 50185,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 345,
                      "src": "1050:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory)"
                      }
                    },
                    "id": 50191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1050:75:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50192,
                  "nodeType": "ExpressionStatement",
                  "src": "1050:75:90"
                }
              ]
            },
            "functionSelector": "a64e8122",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_gov_is_not_sender",
            "nameLocation": "940:22:90",
            "parameters": {
              "id": 50173,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "962:2:90"
            },
            "returnParameters": {
              "id": 50174,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "972:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50213,
            "nodeType": "FunctionDefinition",
            "src": "1134:124:90",
            "body": {
              "id": 50212,
              "nodeType": "Block",
              "src": "1174:84:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f636f6e6669672f676f762f6e6f7430",
                        "id": 50200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1196:21:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6b8c4de101199d594564ccd2a2fe79f80e41ad601ed34dda1765f9137501ced2",
                          "typeString": "literal_string \"mgv/config/gov/not0\""
                        },
                        "value": "mgv/config/gov/not0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6b8c4de101199d594564ccd2a2fe79f80e41ad601ed34dda1765f9137501ced2",
                          "typeString": "literal_string \"mgv/config/gov/not0\""
                        }
                      ],
                      "expression": {
                        "id": 50197,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1180:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 50199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "1180:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 50201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1180:38:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50202,
                  "nodeType": "ExpressionStatement",
                  "src": "1180:38:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 50208,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1250:1:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 50207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1242:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50206,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1242:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1242:10:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 50203,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "1224:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 50205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setGovernance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24102,
                      "src": "1224:17:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 50210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1224:29:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50211,
                  "nodeType": "ExpressionStatement",
                  "src": "1224:29:90"
                }
              ]
            },
            "functionSelector": "81925b61",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_gov_cant_be_zero",
            "nameLocation": "1143:21:90",
            "parameters": {
              "id": 50195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1164:2:90"
            },
            "returnParameters": {
              "id": 50196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1174:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50285,
            "nodeType": "FunctionDefinition",
            "src": "1262:349:90",
            "body": {
              "id": 50284,
              "nodeType": "Block",
              "src": "1309:302:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50218,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "1328:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 50217,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70446,
                          "src": "1326:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 50219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1326:6:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 50216,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70817,
                      "src": "1315:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 50220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1315:18:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50221,
                  "nodeType": "ExpressionStatement",
                  "src": "1315:18:90"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 50223,
                        "name": "notAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50059,
                        "src": "1358:8:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 50222,
                      "name": "SetGovernance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24582,
                      "src": "1344:13:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 50224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1344:23:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50225,
                  "nodeType": "EmitStatement",
                  "src": "1339:28:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50229,
                        "name": "notAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50059,
                        "src": "1391:8:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 50226,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "1373:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 50228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setGovernance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24102,
                      "src": "1373:17:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 50230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1373:27:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50231,
                  "nodeType": "ExpressionStatement",
                  "src": "1373:27:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f756e617574686f72697a6564",
                        "id": 50235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1423:18:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e3ecda21d4079924d072e4bff1752688192b25e7e110b5fee740bff436f39f62",
                          "typeString": "literal_string \"mgv/unauthorized\""
                        },
                        "value": "mgv/unauthorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e3ecda21d4079924d072e4bff1752688192b25e7e110b5fee740bff436f39f62",
                          "typeString": "literal_string \"mgv/unauthorized\""
                        }
                      ],
                      "expression": {
                        "id": 50232,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1407:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 50234,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "1407:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 50236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1407:35:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50237,
                  "nodeType": "ExpressionStatement",
                  "src": "1407:35:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50242,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "1461:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 50241,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "1459:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 50243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1459:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 50245,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "1470:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 50244,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "1468:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 50246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1468:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 50247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1478:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 50238,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "1448:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 50240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23910,
                      "src": "1448:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 50248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1448:32:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50249,
                  "nodeType": "ExpressionStatement",
                  "src": "1448:32:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50252,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "1500:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 50251,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70446,
                          "src": "1498:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 50253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1498:6:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 50250,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70817,
                      "src": "1487:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 50254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1487:18:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50255,
                  "nodeType": "ExpressionStatement",
                  "src": "1487:18:90"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50258,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "1525:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 50257,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "1523:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 50259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1523:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 50261,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "1534:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 50260,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "1532:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 50262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1532:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 50263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1542:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 50256,
                      "name": "SetFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24570,
                      "src": "1516:6:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 50264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1516:28:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50265,
                  "nodeType": "EmitStatement",
                  "src": "1511:33:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50269,
                        "name": "notAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50059,
                        "src": "1559:8:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 50266,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1550:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 50268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5016,
                      "src": "1550:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 50270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1550:18:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50271,
                  "nodeType": "ExpressionStatement",
                  "src": "1550:18:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50276,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "1587:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 50275,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "1585:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 50277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1585:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 50279,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "1596:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 50278,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "1594:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 50280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1594:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 50281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1604:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 50272,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "1574:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 50274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23910,
                      "src": "1574:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 50282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1574:32:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50283,
                  "nodeType": "ExpressionStatement",
                  "src": "1574:32:90"
                }
              ]
            },
            "functionSelector": "5b61f512",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_gov_can_transfer_rights",
            "nameLocation": "1271:28:90",
            "parameters": {
              "id": 50214,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1299:2:90"
            },
            "returnParameters": {
              "id": 50215,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1309:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50313,
            "nodeType": "FunctionDefinition",
            "src": "1615:152:90",
            "body": {
              "id": 50312,
              "nodeType": "Block",
              "src": "1659:108:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f756e617574686f72697a6564",
                        "id": 50291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1681:18:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e3ecda21d4079924d072e4bff1752688192b25e7e110b5fee740bff436f39f62",
                          "typeString": "literal_string \"mgv/unauthorized\""
                        },
                        "value": "mgv/unauthorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e3ecda21d4079924d072e4bff1752688192b25e7e110b5fee740bff436f39f62",
                          "typeString": "literal_string \"mgv/unauthorized\""
                        }
                      ],
                      "expression": {
                        "id": 50288,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1665:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 50290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "1665:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 50292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1665:35:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50293,
                  "nodeType": "ExpressionStatement",
                  "src": "1665:35:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50297,
                        "name": "notAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50059,
                        "src": "1715:8:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 50294,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1706:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 50296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5016,
                      "src": "1706:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 50298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1706:18:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50299,
                  "nodeType": "ExpressionStatement",
                  "src": "1706:18:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50304,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "1743:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 50303,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "1741:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 50305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1741:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 50307,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "1752:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 50306,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "1750:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 50308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1750:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 50309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1760:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 50300,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "1730:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 50302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23910,
                      "src": "1730:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 50310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1730:32:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50311,
                  "nodeType": "ExpressionStatement",
                  "src": "1730:32:90"
                }
              ]
            },
            "functionSelector": "0266522c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_only_gov_can_set_fee",
            "nameLocation": "1624:25:90",
            "parameters": {
              "id": 50286,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1649:2:90"
            },
            "returnParameters": {
              "id": 50287,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1659:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50341,
            "nodeType": "FunctionDefinition",
            "src": "1771:160:90",
            "body": {
              "id": 50340,
              "nodeType": "Block",
              "src": "1819:112:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f756e617574686f72697a6564",
                        "id": 50319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1841:18:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e3ecda21d4079924d072e4bff1752688192b25e7e110b5fee740bff436f39f62",
                          "typeString": "literal_string \"mgv/unauthorized\""
                        },
                        "value": "mgv/unauthorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e3ecda21d4079924d072e4bff1752688192b25e7e110b5fee740bff436f39f62",
                          "typeString": "literal_string \"mgv/unauthorized\""
                        }
                      ],
                      "expression": {
                        "id": 50316,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1825:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 50318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "1825:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 50320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1825:35:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50321,
                  "nodeType": "ExpressionStatement",
                  "src": "1825:35:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50325,
                        "name": "notAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50059,
                        "src": "1875:8:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 50322,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1866:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 50324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5016,
                      "src": "1866:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 50326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1866:18:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50327,
                  "nodeType": "ExpressionStatement",
                  "src": "1866:18:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50332,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "1907:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 50331,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "1905:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 50333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1905:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 50335,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "1916:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 50334,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "1914:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 50336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1914:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 50337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1924:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 50328,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "1890:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 50330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setDensity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23952,
                      "src": "1890:14:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 50338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1890:36:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50339,
                  "nodeType": "ExpressionStatement",
                  "src": "1890:36:90"
                }
              ]
            },
            "functionSelector": "e451aa57",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_only_gov_can_set_density",
            "nameLocation": "1780:29:90",
            "parameters": {
              "id": 50314,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1809:2:90"
            },
            "returnParameters": {
              "id": 50315,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1819:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50373,
            "nodeType": "FunctionDefinition",
            "src": "1935:154:90",
            "body": {
              "id": 50372,
              "nodeType": "Block",
              "src": "1975:114:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50346,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "1994:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 50345,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70446,
                          "src": "1992:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 50347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1992:6:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 50344,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70817,
                      "src": "1981:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 50348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1981:18:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50349,
                  "nodeType": "ExpressionStatement",
                  "src": "1981:18:90"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50352,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "2023:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 50351,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "2021:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 50353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2021:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 50355,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "2032:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 50354,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "2030:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 50356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2030:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 50357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2040:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 50350,
                      "name": "SetDensity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24610,
                      "src": "2010:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 50358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2010:32:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50359,
                  "nodeType": "EmitStatement",
                  "src": "2005:37:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50364,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "2065:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 50363,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "2063:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 50365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2063:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 50367,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "2074:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 50366,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "2072:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 50368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2072:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 50369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2082:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 50360,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "2048:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 50362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setDensity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23952,
                      "src": "2048:14:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 50370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2048:36:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50371,
                  "nodeType": "ExpressionStatement",
                  "src": "2048:36:90"
                }
              ]
            },
            "functionSelector": "7f241084",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_set_zero_density",
            "nameLocation": "1944:21:90",
            "parameters": {
              "id": 50342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1965:2:90"
            },
            "returnParameters": {
              "id": 50343,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1975:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50394,
            "nodeType": "FunctionDefinition",
            "src": "2093:127:90",
            "body": {
              "id": 50393,
              "nodeType": "Block",
              "src": "2134:86:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f756e617574686f72697a6564",
                        "id": 50379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2156:18:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e3ecda21d4079924d072e4bff1752688192b25e7e110b5fee740bff436f39f62",
                          "typeString": "literal_string \"mgv/unauthorized\""
                        },
                        "value": "mgv/unauthorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e3ecda21d4079924d072e4bff1752688192b25e7e110b5fee740bff436f39f62",
                          "typeString": "literal_string \"mgv/unauthorized\""
                        }
                      ],
                      "expression": {
                        "id": 50376,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "2140:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 50378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "2140:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 50380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2140:35:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50381,
                  "nodeType": "ExpressionStatement",
                  "src": "2140:35:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50385,
                        "name": "notAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50059,
                        "src": "2190:8:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 50382,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "2181:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 50384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5016,
                      "src": "2181:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 50386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2181:18:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50387,
                  "nodeType": "ExpressionStatement",
                  "src": "2181:18:90"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 50388,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "2205:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 50390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "kill",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24015,
                      "src": "2205:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 50391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2205:10:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50392,
                  "nodeType": "ExpressionStatement",
                  "src": "2205:10:90"
                }
              ]
            },
            "functionSelector": "8425e355",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_only_gov_can_kill",
            "nameLocation": "2102:22:90",
            "parameters": {
              "id": 50374,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2124:2:90"
            },
            "returnParameters": {
              "id": 50375,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2134:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50460,
            "nodeType": "FunctionDefinition",
            "src": "2224:338:90",
            "body": {
              "id": 50459,
              "nodeType": "Block",
              "src": "2270:292:90",
              "statements": [
                {
                  "assignments": [50402, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50402,
                      "mutability": "mutable",
                      "name": "global",
                      "nameLocation": "2288:6:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 50459,
                      "src": "2277:17:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_t_$30356",
                        "typeString": "t"
                      },
                      "typeName": {
                        "id": 50401,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 50400,
                          "name": "P.Global.t",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 30356,
                          "src": "2277:10:90"
                        },
                        "referencedDeclaration": 30356,
                        "src": "2277:10:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_t_$30356",
                          "typeString": "t"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 50414,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 50407,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2319:1:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 50406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2311:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50405,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2311:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2311:10:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 50411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2331:1:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 50410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2323:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50409,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2323:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2323:10:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 50403,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "2300:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 50404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "config",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28600,
                      "src": "2300:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_userDefinedValueType$_t_$30356_$_t_userDefinedValueType$_t_$31225_$",
                        "typeString": "function (address,address) view external returns (t,t)"
                      }
                    },
                    "id": 50413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2300:34:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_userDefinedValueType$_t_$30356_$_t_userDefinedValueType$_t_$31225_$",
                      "typeString": "tuple(t,t)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2276:58:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2351:14:90",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 50416,
                              "name": "global",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50402,
                              "src": "2352:6:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_t_$30356",
                                "typeString": "t"
                              }
                            },
                            "id": 50417,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "dead",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31047,
                            "src": "2352:11:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$30356_$returns$_t_bool_$bound_to$_t_userDefinedValueType$_t_$30356_$",
                              "typeString": "function (t) pure returns (bool)"
                            }
                          },
                          "id": 50418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2352:13:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d67762073686f756c64206e6f74206265206465616420",
                        "id": 50420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2367:25:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dbd9311bb8727cea6a182d85f3831cc90fe5221a7c577aeb974d050d562086e4",
                          "typeString": "literal_string \"mgv should not be dead \""
                        },
                        "value": "mgv should not be dead "
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dbd9311bb8727cea6a182d85f3831cc90fe5221a7c577aeb974d050d562086e4",
                          "typeString": "literal_string \"mgv should not be dead \""
                        }
                      ],
                      "id": 50415,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "2340:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 50421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2340:53:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50422,
                  "nodeType": "ExpressionStatement",
                  "src": "2340:53:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50425,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "2412:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 50424,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70446,
                          "src": "2410:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 50426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2410:6:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 50423,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70817,
                      "src": "2399:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 50427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2399:18:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50428,
                  "nodeType": "ExpressionStatement",
                  "src": "2399:18:90"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 50429,
                      "name": "Kill",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24686,
                      "src": "2428:4:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 50430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2428:6:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50431,
                  "nodeType": "EmitStatement",
                  "src": "2423:11:90"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 50432,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "2440:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 50434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "kill",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24015,
                      "src": "2440:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 50435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2440:10:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50436,
                  "nodeType": "ExpressionStatement",
                  "src": "2440:10:90"
                },
                {
                  "expression": {
                    "id": 50450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 50437,
                          "name": "global",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50402,
                          "src": "2457:6:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_t_$30356",
                            "typeString": "t"
                          }
                        },
                        null
                      ],
                      "id": 50438,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2456:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_userDefinedValueType$_t_$30356_$__$",
                        "typeString": "tuple(t,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 50443,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2488:1:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 50442,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2480:7:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 50441,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2480:7:90",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 50444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2480:10:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 50447,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2500:1:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 50446,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2492:7:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 50445,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2492:7:90",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 50448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2492:10:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 50439,
                          "name": "mgv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69379,
                          "src": "2469:3:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                            "typeString": "contract AbstractMangrove"
                          }
                        },
                        "id": 50440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "config",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28600,
                        "src": "2469:10:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_userDefinedValueType$_t_$30356_$_t_userDefinedValueType$_t_$31225_$",
                          "typeString": "function (address,address) view external returns (t,t)"
                        }
                      },
                      "id": 50449,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2469:34:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_userDefinedValueType$_t_$30356_$_t_userDefinedValueType$_t_$31225_$",
                        "typeString": "tuple(t,t)"
                      }
                    },
                    "src": "2456:47:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50451,
                  "nodeType": "ExpressionStatement",
                  "src": "2456:47:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 50453,
                            "name": "global",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50402,
                            "src": "2520:6:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_t_$30356",
                              "typeString": "t"
                            }
                          },
                          "id": 50454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "dead",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31047,
                          "src": "2520:11:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$30356_$returns$_t_bool_$bound_to$_t_userDefinedValueType$_t_$30356_$",
                            "typeString": "function (t) pure returns (bool)"
                          }
                        },
                        "id": 50455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2520:13:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d67762073686f756c64206265206465616420",
                        "id": 50456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2535:21:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96fa4215c5ad03eb527bee72eb46409988328a29c0e38ac15b4ab3714b6a934e",
                          "typeString": "literal_string \"mgv should be dead \""
                        },
                        "value": "mgv should be dead "
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_96fa4215c5ad03eb527bee72eb46409988328a29c0e38ac15b4ab3714b6a934e",
                          "typeString": "literal_string \"mgv should be dead \""
                        }
                      ],
                      "id": 50452,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "2509:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 50457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2509:48:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50458,
                  "nodeType": "ExpressionStatement",
                  "src": "2509:48:90"
                }
              ]
            },
            "functionSelector": "8cdfa8c3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_killing_updates_config",
            "nameLocation": "2233:27:90",
            "parameters": {
              "id": 50395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2260:2:90"
            },
            "returnParameters": {
              "id": 50396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2270:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50562,
            "nodeType": "FunctionDefinition",
            "src": "2566:502:90",
            "body": {
              "id": 50561,
              "nodeType": "Block",
              "src": "2608:460:90",
              "statements": [
                {
                  "assignments": [50468, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50468,
                      "mutability": "mutable",
                      "name": "global",
                      "nameLocation": "2626:6:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 50561,
                      "src": "2615:17:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_t_$30356",
                        "typeString": "t"
                      },
                      "typeName": {
                        "id": 50467,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 50466,
                          "name": "P.Global.t",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 30356,
                          "src": "2615:10:90"
                        },
                        "referencedDeclaration": 30356,
                        "src": "2615:10:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_t_$30356",
                          "typeString": "t"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 50480,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 50473,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2657:1:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 50472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2649:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50471,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2649:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2649:10:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 50477,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2669:1:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 50476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2661:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50475,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2661:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2661:10:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 50469,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "2638:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 50470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "config",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28600,
                      "src": "2638:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_userDefinedValueType$_t_$30356_$_t_userDefinedValueType$_t_$31225_$",
                        "typeString": "function (address,address) view external returns (t,t)"
                      }
                    },
                    "id": 50479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2638:34:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_userDefinedValueType$_t_$30356_$_t_userDefinedValueType$_t_$31225_$",
                      "typeString": "tuple(t,t)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2614:58:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2689:14:90",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 50482,
                              "name": "global",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50468,
                              "src": "2690:6:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_t_$30356",
                                "typeString": "t"
                              }
                            },
                            "id": 50483,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "dead",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31047,
                            "src": "2690:11:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$30356_$returns$_t_bool_$bound_to$_t_userDefinedValueType$_t_$30356_$",
                              "typeString": "function (t) pure returns (bool)"
                            }
                          },
                          "id": 50484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2690:13:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d67762073686f756c64206e6f74206265206465616420",
                        "id": 50486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2705:25:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dbd9311bb8727cea6a182d85f3831cc90fe5221a7c577aeb974d050d562086e4",
                          "typeString": "literal_string \"mgv should not be dead \""
                        },
                        "value": "mgv should not be dead "
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dbd9311bb8727cea6a182d85f3831cc90fe5221a7c577aeb974d050d562086e4",
                          "typeString": "literal_string \"mgv should not be dead \""
                        }
                      ],
                      "id": 50481,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "2678:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 50487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2678:53:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50488,
                  "nodeType": "ExpressionStatement",
                  "src": "2678:53:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50491,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "2750:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 50490,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70446,
                          "src": "2748:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 50492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2748:6:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 50489,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70817,
                      "src": "2737:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 50493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2737:18:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50494,
                  "nodeType": "ExpressionStatement",
                  "src": "2737:18:90"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 50495,
                      "name": "Kill",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24686,
                      "src": "2766:4:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 50496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2766:6:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50497,
                  "nodeType": "EmitStatement",
                  "src": "2761:11:90"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 50498,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "2778:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 50500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "kill",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24015,
                      "src": "2778:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 50501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2778:10:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50502,
                  "nodeType": "ExpressionStatement",
                  "src": "2778:10:90"
                },
                {
                  "expression": {
                    "id": 50516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 50503,
                          "name": "global",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50468,
                          "src": "2795:6:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_t_$30356",
                            "typeString": "t"
                          }
                        },
                        null
                      ],
                      "id": 50504,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2794:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_userDefinedValueType$_t_$30356_$__$",
                        "typeString": "tuple(t,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 50509,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2826:1:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 50508,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2818:7:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 50507,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2818:7:90",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 50510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2818:10:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 50513,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2838:1:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 50512,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2830:7:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 50511,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2830:7:90",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 50514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2830:10:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 50505,
                          "name": "mgv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69379,
                          "src": "2807:3:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                            "typeString": "contract AbstractMangrove"
                          }
                        },
                        "id": 50506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "config",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28600,
                        "src": "2807:10:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_userDefinedValueType$_t_$30356_$_t_userDefinedValueType$_t_$31225_$",
                          "typeString": "function (address,address) view external returns (t,t)"
                        }
                      },
                      "id": 50515,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2807:34:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_userDefinedValueType$_t_$30356_$_t_userDefinedValueType$_t_$31225_$",
                        "typeString": "tuple(t,t)"
                      }
                    },
                    "src": "2794:47:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50517,
                  "nodeType": "ExpressionStatement",
                  "src": "2794:47:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 50519,
                            "name": "global",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50468,
                            "src": "2858:6:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_t_$30356",
                              "typeString": "t"
                            }
                          },
                          "id": 50520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "dead",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31047,
                          "src": "2858:11:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$30356_$returns$_t_bool_$bound_to$_t_userDefinedValueType$_t_$30356_$",
                            "typeString": "function (t) pure returns (bool)"
                          }
                        },
                        "id": 50521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2858:13:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d67762073686f756c642062652064656164",
                        "id": 50522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2873:20:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0a8f1dbec43bb2243b109c60a418fb0ac1121c30570b42278b6aed686196cd32",
                          "typeString": "literal_string \"mgv should be dead\""
                        },
                        "value": "mgv should be dead"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0a8f1dbec43bb2243b109c60a418fb0ac1121c30570b42278b6aed686196cd32",
                          "typeString": "literal_string \"mgv should be dead\""
                        }
                      ],
                      "id": 50518,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "2847:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 50523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2847:47:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50524,
                  "nodeType": "ExpressionStatement",
                  "src": "2847:47:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50527,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "2913:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 50526,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70446,
                          "src": "2911:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 50528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2911:6:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 50525,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70817,
                      "src": "2900:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 50529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2900:18:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50530,
                  "nodeType": "ExpressionStatement",
                  "src": "2900:18:90"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 50531,
                      "name": "Kill",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24686,
                      "src": "2929:4:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 50532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2929:6:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50533,
                  "nodeType": "EmitStatement",
                  "src": "2924:11:90"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 50534,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "2941:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 50536,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "kill",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24015,
                      "src": "2941:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 50537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2941:10:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50538,
                  "nodeType": "ExpressionStatement",
                  "src": "2941:10:90"
                },
                {
                  "expression": {
                    "id": 50552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 50539,
                          "name": "global",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50468,
                          "src": "2958:6:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_t_$30356",
                            "typeString": "t"
                          }
                        },
                        null
                      ],
                      "id": 50540,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2957:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_userDefinedValueType$_t_$30356_$__$",
                        "typeString": "tuple(t,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 50545,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2989:1:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 50544,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2981:7:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 50543,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2981:7:90",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 50546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2981:10:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 50549,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3001:1:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 50548,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2993:7:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 50547,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2993:7:90",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 50550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2993:10:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 50541,
                          "name": "mgv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69379,
                          "src": "2970:3:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                            "typeString": "contract AbstractMangrove"
                          }
                        },
                        "id": 50542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "config",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28600,
                        "src": "2970:10:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_userDefinedValueType$_t_$30356_$_t_userDefinedValueType$_t_$31225_$",
                          "typeString": "function (address,address) view external returns (t,t)"
                        }
                      },
                      "id": 50551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2970:34:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_userDefinedValueType$_t_$30356_$_t_userDefinedValueType$_t_$31225_$",
                        "typeString": "tuple(t,t)"
                      }
                    },
                    "src": "2957:47:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50553,
                  "nodeType": "ExpressionStatement",
                  "src": "2957:47:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 50555,
                            "name": "global",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50468,
                            "src": "3021:6:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_t_$30356",
                              "typeString": "t"
                            }
                          },
                          "id": 50556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "dead",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31047,
                          "src": "3021:11:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$30356_$returns$_t_bool_$bound_to$_t_userDefinedValueType$_t_$30356_$",
                            "typeString": "function (t) pure returns (bool)"
                          }
                        },
                        "id": 50557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3021:13:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d67762073686f756c64207374696c6c2062652064656164",
                        "id": 50558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3036:26:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_75c02ed02195b6e43c1f4a61f3bf26e542ca4f425c1365e1ed4f23e0057d1c19",
                          "typeString": "literal_string \"mgv should still be dead\""
                        },
                        "value": "mgv should still be dead"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_75c02ed02195b6e43c1f4a61f3bf26e542ca4f425c1365e1ed4f23e0057d1c19",
                          "typeString": "literal_string \"mgv should still be dead\""
                        }
                      ],
                      "id": 50554,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "3010:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 50559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3010:53:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50560,
                  "nodeType": "ExpressionStatement",
                  "src": "3010:53:90"
                }
              ]
            },
            "functionSelector": "d7f557ed",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_kill_is_idempotent",
            "nameLocation": "2575:23:90",
            "parameters": {
              "id": 50461,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2598:2:90"
            },
            "returnParameters": {
              "id": 50462,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2608:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50586,
            "nodeType": "FunctionDefinition",
            "src": "3072:143:90",
            "body": {
              "id": 50585,
              "nodeType": "Block",
              "src": "3118:97:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f756e617574686f72697a6564",
                        "id": 50568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3140:18:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e3ecda21d4079924d072e4bff1752688192b25e7e110b5fee740bff436f39f62",
                          "typeString": "literal_string \"mgv/unauthorized\""
                        },
                        "value": "mgv/unauthorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e3ecda21d4079924d072e4bff1752688192b25e7e110b5fee740bff436f39f62",
                          "typeString": "literal_string \"mgv/unauthorized\""
                        }
                      ],
                      "expression": {
                        "id": 50565,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "3124:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 50567,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "3124:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 50569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3124:35:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50570,
                  "nodeType": "ExpressionStatement",
                  "src": "3124:35:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50574,
                        "name": "notAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50059,
                        "src": "3174:8:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 50571,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "3165:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 50573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5016,
                      "src": "3165:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 50575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3165:18:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50576,
                  "nodeType": "ExpressionStatement",
                  "src": "3165:18:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50581,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3204:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$53439",
                              "typeString": "contract GatekeepingTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$53439",
                              "typeString": "contract GatekeepingTest"
                            }
                          ],
                          "id": 50580,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70497,
                          "src": "3202:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 50582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3202:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 50577,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "3189:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 50579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setVault",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24120,
                      "src": "3189:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 50583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3189:21:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50584,
                  "nodeType": "ExpressionStatement",
                  "src": "3189:21:90"
                }
              ]
            },
            "functionSelector": "6eb5cac1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_only_gov_can_set_vault",
            "nameLocation": "3081:27:90",
            "parameters": {
              "id": 50563,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3108:2:90"
            },
            "returnParameters": {
              "id": 50564,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3118:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50610,
            "nodeType": "FunctionDefinition",
            "src": "3219:147:90",
            "body": {
              "id": 50609,
              "nodeType": "Block",
              "src": "3267:99:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f756e617574686f72697a6564",
                        "id": 50592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3289:18:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e3ecda21d4079924d072e4bff1752688192b25e7e110b5fee740bff436f39f62",
                          "typeString": "literal_string \"mgv/unauthorized\""
                        },
                        "value": "mgv/unauthorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e3ecda21d4079924d072e4bff1752688192b25e7e110b5fee740bff436f39f62",
                          "typeString": "literal_string \"mgv/unauthorized\""
                        }
                      ],
                      "expression": {
                        "id": 50589,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "3273:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 50591,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "3273:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 50593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3273:35:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50594,
                  "nodeType": "ExpressionStatement",
                  "src": "3273:35:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50598,
                        "name": "notAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50059,
                        "src": "3323:8:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 50595,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "3314:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 50597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5016,
                      "src": "3314:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 50599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3314:18:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50600,
                  "nodeType": "ExpressionStatement",
                  "src": "3314:18:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50605,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3355:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$53439",
                              "typeString": "contract GatekeepingTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$53439",
                              "typeString": "contract GatekeepingTest"
                            }
                          ],
                          "id": 50604,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70497,
                          "src": "3353:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 50606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3353:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 50601,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "3338:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 50603,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setMonitor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24141,
                      "src": "3338:14:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 50607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3338:23:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50608,
                  "nodeType": "ExpressionStatement",
                  "src": "3338:23:90"
                }
              ]
            },
            "functionSelector": "0e93c2ed",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_only_gov_can_set_monitor",
            "nameLocation": "3228:29:90",
            "parameters": {
              "id": 50587,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3257:2:90"
            },
            "returnParameters": {
              "id": 50588,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3267:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50640,
            "nodeType": "FunctionDefinition",
            "src": "3370:165:90",
            "body": {
              "id": 50639,
              "nodeType": "Block",
              "src": "3417:118:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f756e617574686f72697a6564",
                        "id": 50616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3439:18:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e3ecda21d4079924d072e4bff1752688192b25e7e110b5fee740bff436f39f62",
                          "typeString": "literal_string \"mgv/unauthorized\""
                        },
                        "value": "mgv/unauthorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e3ecda21d4079924d072e4bff1752688192b25e7e110b5fee740bff436f39f62",
                          "typeString": "literal_string \"mgv/unauthorized\""
                        }
                      ],
                      "expression": {
                        "id": 50613,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "3423:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 50615,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "3423:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 50617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3423:35:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50618,
                  "nodeType": "ExpressionStatement",
                  "src": "3423:35:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50622,
                        "name": "notAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50059,
                        "src": "3473:8:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 50619,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "3464:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 50621,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5016,
                      "src": "3464:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 50623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3464:18:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50624,
                  "nodeType": "ExpressionStatement",
                  "src": "3464:18:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50629,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "3503:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 50628,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "3501:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 50630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3501:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 50632,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "3513:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 50631,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "3511:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 50633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3511:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 50634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3520:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "313030",
                        "id": 50635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3523:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      {
                        "hexValue": "30",
                        "id": 50636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3528:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 50625,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "3488:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 50627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "activate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23836,
                      "src": "3488:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint256) external"
                      }
                    },
                    "id": 50637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3488:42:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50638,
                  "nodeType": "ExpressionStatement",
                  "src": "3488:42:90"
                }
              ]
            },
            "functionSelector": "ced79729",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_only_gov_can_set_active",
            "nameLocation": "3379:28:90",
            "parameters": {
              "id": 50611,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3407:2:90"
            },
            "returnParameters": {
              "id": 50612,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3417:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50662,
            "nodeType": "FunctionDefinition",
            "src": "3539:143:90",
            "body": {
              "id": 50661,
              "nodeType": "Block",
              "src": "3588:94:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f756e617574686f72697a6564",
                        "id": 50646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3610:18:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e3ecda21d4079924d072e4bff1752688192b25e7e110b5fee740bff436f39f62",
                          "typeString": "literal_string \"mgv/unauthorized\""
                        },
                        "value": "mgv/unauthorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e3ecda21d4079924d072e4bff1752688192b25e7e110b5fee740bff436f39f62",
                          "typeString": "literal_string \"mgv/unauthorized\""
                        }
                      ],
                      "expression": {
                        "id": 50643,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "3594:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 50645,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "3594:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 50647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3594:35:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50648,
                  "nodeType": "ExpressionStatement",
                  "src": "3594:35:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50652,
                        "name": "notAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50059,
                        "src": "3644:8:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 50649,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "3635:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 50651,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5016,
                      "src": "3635:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 50653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3635:18:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50654,
                  "nodeType": "ExpressionStatement",
                  "src": "3635:18:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 50658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3675:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 50655,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "3659:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 50657,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setGasprice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24043,
                      "src": "3659:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 50659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3659:18:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50660,
                  "nodeType": "ExpressionStatement",
                  "src": "3659:18:90"
                }
              ]
            },
            "functionSelector": "13adfa31",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_only_gov_can_set_gasprice",
            "nameLocation": "3548:30:90",
            "parameters": {
              "id": 50641,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3578:2:90"
            },
            "returnParameters": {
              "id": 50642,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3588:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50684,
            "nodeType": "FunctionDefinition",
            "src": "3686:139:90",
            "body": {
              "id": 50683,
              "nodeType": "Block",
              "src": "3733:92:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f756e617574686f72697a6564",
                        "id": 50668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3755:18:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e3ecda21d4079924d072e4bff1752688192b25e7e110b5fee740bff436f39f62",
                          "typeString": "literal_string \"mgv/unauthorized\""
                        },
                        "value": "mgv/unauthorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e3ecda21d4079924d072e4bff1752688192b25e7e110b5fee740bff436f39f62",
                          "typeString": "literal_string \"mgv/unauthorized\""
                        }
                      ],
                      "expression": {
                        "id": 50665,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "3739:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 50667,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "3739:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 50669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3739:35:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50670,
                  "nodeType": "ExpressionStatement",
                  "src": "3739:35:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50674,
                        "name": "notAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50059,
                        "src": "3789:8:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 50671,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "3780:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 50673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5016,
                      "src": "3780:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 50675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3780:18:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50676,
                  "nodeType": "ExpressionStatement",
                  "src": "3780:18:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 50680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3818:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 50677,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "3804:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 50679,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setGasmax",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24074,
                      "src": "3804:13:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 50681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3804:16:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50682,
                  "nodeType": "ExpressionStatement",
                  "src": "3804:16:90"
                }
              ]
            },
            "functionSelector": "126b6ea5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_only_gov_can_set_gasmax",
            "nameLocation": "3695:28:90",
            "parameters": {
              "id": 50663,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3723:2:90"
            },
            "returnParameters": {
              "id": 50664,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3733:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50712,
            "nodeType": "FunctionDefinition",
            "src": "3829:160:90",
            "body": {
              "id": 50711,
              "nodeType": "Block",
              "src": "3877:112:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f756e617574686f72697a6564",
                        "id": 50690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3899:18:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e3ecda21d4079924d072e4bff1752688192b25e7e110b5fee740bff436f39f62",
                          "typeString": "literal_string \"mgv/unauthorized\""
                        },
                        "value": "mgv/unauthorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e3ecda21d4079924d072e4bff1752688192b25e7e110b5fee740bff436f39f62",
                          "typeString": "literal_string \"mgv/unauthorized\""
                        }
                      ],
                      "expression": {
                        "id": 50687,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "3883:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 50689,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "3883:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 50691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3883:35:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50692,
                  "nodeType": "ExpressionStatement",
                  "src": "3883:35:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50696,
                        "name": "notAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50059,
                        "src": "3933:8:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 50693,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "3924:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 50695,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5016,
                      "src": "3924:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 50697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3924:18:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50698,
                  "nodeType": "ExpressionStatement",
                  "src": "3924:18:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50703,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "3965:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 50702,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "3963:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 50704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3963:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 50706,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "3974:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 50705,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "3972:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 50707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3972:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 50708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3982:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 50699,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "3948:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 50701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setGasbase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23997,
                      "src": "3948:14:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 50709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3948:36:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50710,
                  "nodeType": "ExpressionStatement",
                  "src": "3948:36:90"
                }
              ]
            },
            "functionSelector": "b2abce47",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_only_gov_can_set_gasbase",
            "nameLocation": "3838:29:90",
            "parameters": {
              "id": 50685,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3867:2:90"
            },
            "returnParameters": {
              "id": 50686,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3877:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50723,
            "nodeType": "FunctionDefinition",
            "src": "3993:68:90",
            "body": {
              "id": 50722,
              "nodeType": "Block",
              "src": "4029:32:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 50718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4051:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 50719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4054:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 50715,
                        "name": "tkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50051,
                        "src": "4035:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$73996",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 50717,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73938,
                      "src": "4035:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) external returns (uint256,uint256)"
                      }
                    },
                    "id": 50720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4035:21:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "id": 50721,
                  "nodeType": "ExpressionStatement",
                  "src": "4035:21:90"
                }
              ]
            },
            "functionSelector": "aa951045",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_empty_mgv_ok",
            "nameLocation": "4002:17:90",
            "parameters": {
              "id": 50713,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4019:2:90"
            },
            "returnParameters": {
              "id": 50714,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4029:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50745,
            "nodeType": "FunctionDefinition",
            "src": "4065:129:90",
            "body": {
              "id": 50744,
              "nodeType": "Block",
              "src": "4104:90:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f636f6e6669672f6665652f3c3d353030",
                        "id": 50729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4126:22:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef105a960d513a8757bc5e83a6d6020cf2d3d5f72db45d221587c39259556e13",
                          "typeString": "literal_string \"mgv/config/fee/<=500\""
                        },
                        "value": "mgv/config/fee/<=500"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_ef105a960d513a8757bc5e83a6d6020cf2d3d5f72db45d221587c39259556e13",
                          "typeString": "literal_string \"mgv/config/fee/<=500\""
                        }
                      ],
                      "expression": {
                        "id": 50726,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "4110:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 50728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "4110:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 50730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4110:39:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50731,
                  "nodeType": "ExpressionStatement",
                  "src": "4110:39:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50736,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "4168:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 50735,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "4166:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 50737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4166:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 50739,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "4177:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 50738,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "4175:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 50740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4175:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "353031",
                        "id": 50741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4185:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_501_by_1",
                          "typeString": "int_const 501"
                        },
                        "value": "501"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_501_by_1",
                          "typeString": "int_const 501"
                        }
                      ],
                      "expression": {
                        "id": 50732,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "4155:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 50734,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23910,
                      "src": "4155:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 50742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4155:34:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50743,
                  "nodeType": "ExpressionStatement",
                  "src": "4155:34:90"
                }
              ]
            },
            "functionSelector": "81e85c24",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_set_fee_ceiling",
            "nameLocation": "4074:20:90",
            "parameters": {
              "id": 50724,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4094:2:90"
            },
            "returnParameters": {
              "id": 50725,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4104:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50776,
            "nodeType": "FunctionDefinition",
            "src": "4198:167:90",
            "body": {
              "id": 50775,
              "nodeType": "Block",
              "src": "4241:124:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f636f6e6669672f64656e736974792f31313262697473",
                        "id": 50751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4263:28:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7cb5121d9c683367cbad592a82c5e509f80676d12d27f0da06eed93632467c09",
                          "typeString": "literal_string \"mgv/config/density/112bits\""
                        },
                        "value": "mgv/config/density/112bits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_7cb5121d9c683367cbad592a82c5e509f80676d12d27f0da06eed93632467c09",
                          "typeString": "literal_string \"mgv/config/density/112bits\""
                        }
                      ],
                      "expression": {
                        "id": 50748,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "4247:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 50750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "4247:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 50752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4247:45:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50753,
                  "nodeType": "ExpressionStatement",
                  "src": "4247:45:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50758,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "4315:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 50757,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "4313:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 50759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4313:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 50761,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "4324:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 50760,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "4322:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 50762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4322:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 50772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 50767,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4342:7:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint112_$",
                                      "typeString": "type(uint112)"
                                    },
                                    "typeName": {
                                      "id": 50766,
                                      "name": "uint112",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4342:7:90",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_uint112_$",
                                      "typeString": "type(uint112)"
                                    }
                                  ],
                                  "id": 50765,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "4337:4:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 50768,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4337:13:90",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_uint112",
                                  "typeString": "type(uint112)"
                                }
                              },
                              "id": 50769,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "src": "4337:17:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            ],
                            "id": 50764,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4332:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 50763,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "4332:4:90",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 50770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4332:23:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 50771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4358:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4332:27:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 50754,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "4298:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 50756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setDensity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23952,
                      "src": "4298:14:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 50773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4298:62:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50774,
                  "nodeType": "ExpressionStatement",
                  "src": "4298:62:90"
                }
              ]
            },
            "functionSelector": "2241e68f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_set_density_ceiling",
            "nameLocation": "4207:24:90",
            "parameters": {
              "id": 50746,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4231:2:90"
            },
            "returnParameters": {
              "id": 50747,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4241:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50801,
            "nodeType": "FunctionDefinition",
            "src": "4369:149:90",
            "body": {
              "id": 50800,
              "nodeType": "Block",
              "src": "4413:105:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f636f6e6669672f67617370726963652f313662697473",
                        "id": 50782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4435:28:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e3f1d75d587454425bfc2c409e457497d27771211bb1611c32bdfca24ba411d",
                          "typeString": "literal_string \"mgv/config/gasprice/16bits\""
                        },
                        "value": "mgv/config/gasprice/16bits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9e3f1d75d587454425bfc2c409e457497d27771211bb1611c32bdfca24ba411d",
                          "typeString": "literal_string \"mgv/config/gasprice/16bits\""
                        }
                      ],
                      "expression": {
                        "id": 50779,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "4419:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 50781,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "4419:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 50783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4419:45:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50784,
                  "nodeType": "ExpressionStatement",
                  "src": "4419:45:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 50797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 50792,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4496:6:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint16_$",
                                      "typeString": "type(uint16)"
                                    },
                                    "typeName": {
                                      "id": 50791,
                                      "name": "uint16",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4496:6:90",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_uint16_$",
                                      "typeString": "type(uint16)"
                                    }
                                  ],
                                  "id": 50790,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "4491:4:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 50793,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4491:12:90",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_uint16",
                                  "typeString": "type(uint16)"
                                }
                              },
                              "id": 50794,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "src": "4491:16:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            ],
                            "id": 50789,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4486:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 50788,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "4486:4:90",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 50795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4486:22:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 50796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4511:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4486:26:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 50785,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "4470:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 50787,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setGasprice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24043,
                      "src": "4470:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 50798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4470:43:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50799,
                  "nodeType": "ExpressionStatement",
                  "src": "4470:43:90"
                }
              ]
            },
            "functionSelector": "ba081c69",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_set_gasprice_ceiling",
            "nameLocation": "4378:25:90",
            "parameters": {
              "id": 50777,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4403:2:90"
            },
            "returnParameters": {
              "id": 50778,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4413:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50817,
            "nodeType": "FunctionDefinition",
            "src": "4522:87:90",
            "body": {
              "id": 50816,
              "nodeType": "Block",
              "src": "4562:47:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50808,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "4585:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 50807,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "4583:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 50809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4583:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 50811,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "4594:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 50810,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "4592:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 50812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4592:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 50813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4602:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 50804,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "4568:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 50806,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setGasbase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23997,
                      "src": "4568:14:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 50814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4568:36:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50815,
                  "nodeType": "ExpressionStatement",
                  "src": "4568:36:90"
                }
              ]
            },
            "functionSelector": "a1e7a826",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_set_zero_gasbase",
            "nameLocation": "4531:21:90",
            "parameters": {
              "id": 50802,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4552:2:90"
            },
            "returnParameters": {
              "id": 50803,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4562:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50848,
            "nodeType": "FunctionDefinition",
            "src": "4613:171:90",
            "body": {
              "id": 50847,
              "nodeType": "Block",
              "src": "4656:128:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f636f6e6669672f6f666665725f676173626173652f323462697473",
                        "id": 50823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4678:33:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6f2d3eb7f3b7b1816ed781572731aaa35d3b258fa7071c0c97d1e49e15afa4a",
                          "typeString": "literal_string \"mgv/config/offer_gasbase/24bits\""
                        },
                        "value": "mgv/config/offer_gasbase/24bits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c6f2d3eb7f3b7b1816ed781572731aaa35d3b258fa7071c0c97d1e49e15afa4a",
                          "typeString": "literal_string \"mgv/config/offer_gasbase/24bits\""
                        }
                      ],
                      "expression": {
                        "id": 50820,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "4662:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 50822,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "4662:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 50824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4662:50:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50825,
                  "nodeType": "ExpressionStatement",
                  "src": "4662:50:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50830,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "4735:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 50829,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "4733:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 50831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4733:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 50833,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "4744:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 50832,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "4742:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 50834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4742:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 50844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 50839,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4762:6:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint24_$",
                                      "typeString": "type(uint24)"
                                    },
                                    "typeName": {
                                      "id": 50838,
                                      "name": "uint24",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4762:6:90",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_uint24_$",
                                      "typeString": "type(uint24)"
                                    }
                                  ],
                                  "id": 50837,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "4757:4:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 50840,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4757:12:90",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_uint24",
                                  "typeString": "type(uint24)"
                                }
                              },
                              "id": 50841,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "src": "4757:16:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            ],
                            "id": 50836,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4752:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 50835,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "4752:4:90",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 50842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4752:22:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 50843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4777:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4752:26:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 50826,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "4718:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 50828,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setGasbase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23997,
                      "src": "4718:14:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 50845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4718:61:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50846,
                  "nodeType": "ExpressionStatement",
                  "src": "4718:61:90"
                }
              ]
            },
            "functionSelector": "7037e22b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_set_gasbase_ceiling",
            "nameLocation": "4622:24:90",
            "parameters": {
              "id": 50818,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4646:2:90"
            },
            "returnParameters": {
              "id": 50819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4656:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50873,
            "nodeType": "FunctionDefinition",
            "src": "4788:143:90",
            "body": {
              "id": 50872,
              "nodeType": "Block",
              "src": "4830:101:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f636f6e6669672f6761736d61782f323462697473",
                        "id": 50854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4852:26:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bcb5b46f572108fe14959b4f9768b08e55bae33c20dad3631d23311619fedc4f",
                          "typeString": "literal_string \"mgv/config/gasmax/24bits\""
                        },
                        "value": "mgv/config/gasmax/24bits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_bcb5b46f572108fe14959b4f9768b08e55bae33c20dad3631d23311619fedc4f",
                          "typeString": "literal_string \"mgv/config/gasmax/24bits\""
                        }
                      ],
                      "expression": {
                        "id": 50851,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "4836:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 50853,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "4836:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 50855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4836:43:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50856,
                  "nodeType": "ExpressionStatement",
                  "src": "4836:43:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 50869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 50864,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4909:6:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint24_$",
                                      "typeString": "type(uint24)"
                                    },
                                    "typeName": {
                                      "id": 50863,
                                      "name": "uint24",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4909:6:90",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_uint24_$",
                                      "typeString": "type(uint24)"
                                    }
                                  ],
                                  "id": 50862,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "4904:4:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 50865,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4904:12:90",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_uint24",
                                  "typeString": "type(uint24)"
                                }
                              },
                              "id": 50866,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "src": "4904:16:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            ],
                            "id": 50861,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4899:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 50860,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "4899:4:90",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 50867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4899:22:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 50868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4924:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4899:26:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 50857,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "4885:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 50859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setGasmax",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24074,
                      "src": "4885:13:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 50870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4885:41:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50871,
                  "nodeType": "ExpressionStatement",
                  "src": "4885:41:90"
                }
              ]
            },
            "functionSelector": "c0e3d6d8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_set_gasmax_ceiling",
            "nameLocation": "4797:23:90",
            "parameters": {
              "id": 50849,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4820:2:90"
            },
            "returnParameters": {
              "id": 50850,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4830:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50894,
            "nodeType": "FunctionDefinition",
            "src": "4935:170:90",
            "body": {
              "id": 50893,
              "nodeType": "Block",
              "src": "5003:102:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f77726974654f666665722f77616e74732f393662697473",
                        "id": 50879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5025:29:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b874d82b841c5cda2316b6b8ecd34073b266def7a3b6339e793683b65c2c0e5f",
                          "typeString": "literal_string \"mgv/writeOffer/wants/96bits\""
                        },
                        "value": "mgv/writeOffer/wants/96bits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_b874d82b841c5cda2316b6b8ecd34073b266def7a3b6339e793683b65c2c0e5f",
                          "typeString": "literal_string \"mgv/writeOffer/wants/96bits\""
                        }
                      ],
                      "expression": {
                        "id": 50876,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "5009:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 50878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "5009:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 50880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5009:46:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50881,
                  "nodeType": "ExpressionStatement",
                  "src": "5009:46:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
                          "typeString": "int_const 79228162514264337593543950336"
                        },
                        "id": 50887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "32",
                          "id": 50885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5074:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "3936",
                          "id": 50886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5077:2:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_96_by_1",
                            "typeString": "int_const 96"
                          },
                          "value": "96"
                        },
                        "src": "5074:5:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
                          "typeString": "int_const 79228162514264337593543950336"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 50888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5081:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31305f303030",
                        "id": 50889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5090:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "10_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 50890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5098:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
                          "typeString": "int_const 79228162514264337593543950336"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 50882,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50054,
                        "src": "5061:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$73404",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 50884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73059,
                      "src": "5061:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 50891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5061:39:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 50892,
                  "nodeType": "ExpressionStatement",
                  "src": "5061:39:90"
                }
              ]
            },
            "functionSelector": "ea837eef",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_makerWants_wider_than_96_bits_fails_newOffer",
            "nameLocation": "4944:49:90",
            "parameters": {
              "id": 50874,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4993:2:90"
            },
            "returnParameters": {
              "id": 50875,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5003:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50927,
            "nodeType": "FunctionDefinition",
            "src": "5109:224:90",
            "body": {
              "id": 50926,
              "nodeType": "Block",
              "src": "5163:170:90",
              "statements": [
                {
                  "assignments": [50898],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50898,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "5174:3:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 50926,
                      "src": "5169:8:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 50897,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5169:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50906,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 50901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5193:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 50902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5202:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31305f303030",
                        "id": 50903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5211:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "10_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 50904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5219:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 50899,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50054,
                        "src": "5180:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$73404",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 50900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73059,
                      "src": "5180:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 50905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5180:41:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5169:52:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f726574726163744f666665722f756e617574686f72697a6564",
                        "id": 50910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5243:31:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_badf63fb3d62649867a104fa0a7ebed1f51c00fc24ced1325180fc80b4ec5fe8",
                          "typeString": "literal_string \"mgv/retractOffer/unauthorized\""
                        },
                        "value": "mgv/retractOffer/unauthorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_badf63fb3d62649867a104fa0a7ebed1f51c00fc24ced1325180fc80b4ec5fe8",
                          "typeString": "literal_string \"mgv/retractOffer/unauthorized\""
                        }
                      ],
                      "expression": {
                        "id": 50907,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "5227:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 50909,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "5227:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 50911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5227:48:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50912,
                  "nodeType": "ExpressionStatement",
                  "src": "5227:48:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50917,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "5300:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 50916,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "5298:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 50918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5298:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 50920,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "5309:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 50919,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "5307:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 50921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5307:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 50922,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50898,
                        "src": "5317:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 50923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5322:5:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 50913,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "5281:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 50915,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "retractOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25353,
                      "src": "5281:16:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,bool) external returns (uint256)"
                      }
                    },
                    "id": 50924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5281:47:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 50925,
                  "nodeType": "ExpressionStatement",
                  "src": "5281:47:90"
                }
              ]
            },
            "functionSelector": "39a1e43b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_retractOffer_wrong_owner_fails",
            "nameLocation": "5118:35:90",
            "parameters": {
              "id": 50895,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5153:2:90"
            },
            "returnParameters": {
              "id": 50896,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5163:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50948,
            "nodeType": "FunctionDefinition",
            "src": "5337:164:90",
            "body": {
              "id": 50947,
              "nodeType": "Block",
              "src": "5405:96:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f77726974654f666665722f67697665732f393662697473",
                        "id": 50933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5427:29:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b6764f6d7e803637b3629aa400d7573a6d4bc1092c351c42f1e175c72b19af3a",
                          "typeString": "literal_string \"mgv/writeOffer/gives/96bits\""
                        },
                        "value": "mgv/writeOffer/gives/96bits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_b6764f6d7e803637b3629aa400d7573a6d4bc1092c351c42f1e175c72b19af3a",
                          "typeString": "literal_string \"mgv/writeOffer/gives/96bits\""
                        }
                      ],
                      "expression": {
                        "id": 50930,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "5411:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 50932,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "5411:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 50934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5411:46:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50935,
                  "nodeType": "ExpressionStatement",
                  "src": "5411:46:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 50939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5476:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
                          "typeString": "int_const 79228162514264337593543950336"
                        },
                        "id": 50942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "32",
                          "id": 50940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5479:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "3936",
                          "id": 50941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5482:2:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_96_by_1",
                            "typeString": "int_const 96"
                          },
                          "value": "96"
                        },
                        "src": "5479:5:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
                          "typeString": "int_const 79228162514264337593543950336"
                        }
                      },
                      {
                        "hexValue": "31305f303030",
                        "id": 50943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5486:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "10_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 50944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5494:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
                          "typeString": "int_const 79228162514264337593543950336"
                        },
                        {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 50936,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50054,
                        "src": "5463:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$73404",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 50938,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73059,
                      "src": "5463:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 50945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5463:33:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 50946,
                  "nodeType": "ExpressionStatement",
                  "src": "5463:33:90"
                }
              ]
            },
            "functionSelector": "9e6f7567",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_makerGives_wider_than_96_bits_fails_newOffer",
            "nameLocation": "5346:49:90",
            "parameters": {
              "id": 50928,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5395:2:90"
            },
            "returnParameters": {
              "id": 50929,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5405:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50969,
            "nodeType": "FunctionDefinition",
            "src": "5505:162:90",
            "body": {
              "id": 50968,
              "nodeType": "Block",
              "src": "5574:93:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f77726974654f666665722f6761737265712f746f6f48696768",
                        "id": 50954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5596:31:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8dfb1c89966a4b5ef6cc71ff91391e35374b702021e5dec2b670de95668b3d0b",
                          "typeString": "literal_string \"mgv/writeOffer/gasreq/tooHigh\""
                        },
                        "value": "mgv/writeOffer/gasreq/tooHigh"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8dfb1c89966a4b5ef6cc71ff91391e35374b702021e5dec2b670de95668b3d0b",
                          "typeString": "literal_string \"mgv/writeOffer/gasreq/tooHigh\""
                        }
                      ],
                      "expression": {
                        "id": 50951,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "5580:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 50953,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "5580:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 50955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5580:48:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50956,
                  "nodeType": "ExpressionStatement",
                  "src": "5580:48:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 50960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5647:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 50961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5650:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_16777216_by_1",
                          "typeString": "int_const 16777216"
                        },
                        "id": 50964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "32",
                          "id": 50962,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5653:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "3234",
                          "id": 50963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5656:2:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_24_by_1",
                            "typeString": "int_const 24"
                          },
                          "value": "24"
                        },
                        "src": "5653:5:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_16777216_by_1",
                          "typeString": "int_const 16777216"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 50965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5660:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_16777216_by_1",
                          "typeString": "int_const 16777216"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 50957,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50054,
                        "src": "5634:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$73404",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 50959,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73059,
                      "src": "5634:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 50966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5634:28:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 50967,
                  "nodeType": "ExpressionStatement",
                  "src": "5634:28:90"
                }
              ]
            },
            "functionSelector": "091d3e9b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_makerGasreq_wider_than_24_bits_fails_newOffer",
            "nameLocation": "5514:50:90",
            "parameters": {
              "id": 50949,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5564:2:90"
            },
            "returnParameters": {
              "id": 50950,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5574:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 51008,
            "nodeType": "FunctionDefinition",
            "src": "5671:229:90",
            "body": {
              "id": 51007,
              "nodeType": "Block",
              "src": "5740:160:90",
              "statements": [
                {
                  "assignments": [50977, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50977,
                      "mutability": "mutable",
                      "name": "cfg",
                      "nameLocation": "5758:3:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 51007,
                      "src": "5747:14:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_t_$30356",
                        "typeString": "t"
                      },
                      "typeName": {
                        "id": 50976,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 50975,
                          "name": "P.Global.t",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 30356,
                          "src": "5747:10:90"
                        },
                        "referencedDeclaration": 30356,
                        "src": "5747:10:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_t_$30356",
                          "typeString": "t"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 50987,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50981,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "5780:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 50980,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "5778:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 50982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5778:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 50984,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "5789:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 50983,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "5787:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 50985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5787:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 50978,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "5767:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 50979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "config",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28600,
                      "src": "5767:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_userDefinedValueType$_t_$30356_$_t_userDefinedValueType$_t_$31225_$",
                        "typeString": "function (address,address) view external returns (t,t)"
                      }
                    },
                    "id": 50986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5767:29:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_userDefinedValueType$_t_$30356_$_t_userDefinedValueType$_t_$31225_$",
                      "typeString": "tuple(t,t)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5746:50:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f77726974654f666665722f6761737265712f746f6f48696768",
                        "id": 50991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5818:31:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8dfb1c89966a4b5ef6cc71ff91391e35374b702021e5dec2b670de95668b3d0b",
                          "typeString": "literal_string \"mgv/writeOffer/gasreq/tooHigh\""
                        },
                        "value": "mgv/writeOffer/gasreq/tooHigh"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8dfb1c89966a4b5ef6cc71ff91391e35374b702021e5dec2b670de95668b3d0b",
                          "typeString": "literal_string \"mgv/writeOffer/gasreq/tooHigh\""
                        }
                      ],
                      "expression": {
                        "id": 50988,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "5802:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 50990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "5802:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 50992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5802:48:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50993,
                  "nodeType": "ExpressionStatement",
                  "src": "5802:48:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 50997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5869:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 50998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5872:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 51003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 50999,
                              "name": "cfg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50977,
                              "src": "5875:3:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_t_$30356",
                                "typeString": "t"
                              }
                            },
                            "id": 51000,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "gasmax",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30985,
                            "src": "5875:10:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$30356_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$30356_$",
                              "typeString": "function (t) pure returns (uint256)"
                            }
                          },
                          "id": 51001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5875:12:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 51002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5890:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "5875:16:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 51004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5893:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 50994,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50054,
                        "src": "5856:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$73404",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 50996,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73059,
                      "src": "5856:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 51005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5856:39:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 51006,
                  "nodeType": "ExpressionStatement",
                  "src": "5856:39:90"
                }
              ]
            },
            "functionSelector": "5f420fe5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_makerGasreq_bigger_than_gasmax_fails_newOffer",
            "nameLocation": "5680:50:90",
            "parameters": {
              "id": 50970,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5730:2:90"
            },
            "returnParameters": {
              "id": 50971,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5740:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 51111,
            "nodeType": "FunctionDefinition",
            "src": "5904:673:90",
            "body": {
              "id": 51110,
              "nodeType": "Block",
              "src": "5967:610:90",
              "statements": [
                {
                  "assignments": [51016, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51016,
                      "mutability": "mutable",
                      "name": "cfg",
                      "nameLocation": "5985:3:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 51110,
                      "src": "5974:14:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_t_$30356",
                        "typeString": "t"
                      },
                      "typeName": {
                        "id": 51015,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 51014,
                          "name": "P.Global.t",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 30356,
                          "src": "5974:10:90"
                        },
                        "referencedDeclaration": 30356,
                        "src": "5974:10:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_t_$30356",
                          "typeString": "t"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 51026,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 51020,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "6007:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 51019,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "6005:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 51021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6005:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 51023,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "6016:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 51022,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "6014:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 51024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6014:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 51017,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "5994:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 51018,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "config",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28600,
                      "src": "5994:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_userDefinedValueType$_t_$30356_$_t_userDefinedValueType$_t_$31225_$",
                        "typeString": "function (address,address) view external returns (t,t)"
                      }
                    },
                    "id": 51025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5994:29:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_userDefinedValueType$_t_$30356_$_t_userDefinedValueType$_t_$31225_$",
                      "typeString": "tuple(t,t)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5973:50:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 51029,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "6063:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 51028,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70446,
                          "src": "6061:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 51030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6061:6:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 51027,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70817,
                      "src": "6050:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 51031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6050:18:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51032,
                  "nodeType": "ExpressionStatement",
                  "src": "6050:18:90"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 51035,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "6099:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 51034,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "6097:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 51036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6097:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 51038,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "6114:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 51037,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "6112:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 51039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6112:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 51042,
                            "name": "mkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50054,
                            "src": "6136:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$73404",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$73404",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 51041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6128:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 51040,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6128:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 51043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6128:12:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 51044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6148:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 51045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6170:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 51046,
                            "name": "cfg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51016,
                            "src": "6193:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_t_$30356",
                              "typeString": "t"
                            }
                          },
                          "id": 51047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "gasprice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30927,
                          "src": "6193:12:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$30356_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$30356_$",
                            "typeString": "function (t) pure returns (uint256)"
                          }
                        },
                        "id": 51048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6193:14:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 51049,
                            "name": "cfg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51016,
                            "src": "6226:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_t_$30356",
                              "typeString": "t"
                            }
                          },
                          "id": 51050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "gasmax",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30985,
                          "src": "6226:10:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$30356_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$30356_$",
                            "typeString": "function (t) pure returns (uint256)"
                          }
                        },
                        "id": 51051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6226:12:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 51052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6255:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "30",
                        "id": 51053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6272:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 51033,
                      "name": "OfferWrite",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24706,
                      "src": "6079:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 51054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6079:208:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51055,
                  "nodeType": "EmitStatement",
                  "src": "6074:213:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 51058,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "6306:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 51057,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70446,
                          "src": "6304:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 51059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6304:6:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 51056,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70817,
                      "src": "6293:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 51060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6293:18:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51061,
                  "nodeType": "ExpressionStatement",
                  "src": "6293:18:90"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 51065,
                            "name": "mkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50054,
                            "src": "6336:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$73404",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$73404",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 51064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6328:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 51063,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6328:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 51066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6328:12:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 51069,
                                "name": "base",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69382,
                                "src": "6357:4:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 51068,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70514,
                              "src": "6355:1:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 51070,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6355:7:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 51072,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69385,
                                "src": "6366:5:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 51071,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70514,
                              "src": "6364:1:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 51073,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6364:8:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 51074,
                                "name": "cfg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51016,
                                "src": "6374:3:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_userDefinedValueType$_t_$30356",
                                  "typeString": "t"
                                }
                              },
                              "id": 51075,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "gasmax",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 30985,
                              "src": "6374:10:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$30356_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$30356_$",
                                "typeString": "function (t) pure returns (uint256)"
                              }
                            },
                            "id": 51076,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6374:12:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 51077,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6388:1:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 51067,
                          "name": "getProvision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [69975, 70042],
                          "referencedDeclaration": 70042,
                          "src": "6342:12:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,address,uint256,uint256) view returns (uint256)"
                          }
                        },
                        "id": 51078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6342:48:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 51062,
                      "name": "Debit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24554,
                      "src": "6322:5:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 51079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6322:69:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51080,
                  "nodeType": "EmitStatement",
                  "src": "6317:74:90"
                },
                {
                  "assignments": [51082],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51082,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "6402:3:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 51110,
                      "src": "6397:8:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 51081,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6397:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51092,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 51085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6421:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 51086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6430:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 51087,
                            "name": "cfg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51016,
                            "src": "6439:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_t_$30356",
                              "typeString": "t"
                            }
                          },
                          "id": 51088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "gasmax",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30985,
                          "src": "6439:10:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$30356_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$30356_$",
                            "typeString": "function (t) pure returns (uint256)"
                          }
                        },
                        "id": 51089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6439:12:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 51090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6453:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 51083,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50054,
                        "src": "6408:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$73404",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 51084,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73059,
                      "src": "6408:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 51091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6408:47:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6397:58:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 51099,
                                    "name": "base",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 69382,
                                    "src": "6503:4:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestToken_$76251",
                                      "typeString": "contract TestToken"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestToken_$76251",
                                      "typeString": "contract TestToken"
                                    }
                                  ],
                                  "id": 51098,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    70446, 70463, 70480, 70497, 70514
                                  ],
                                  "referencedDeclaration": 70514,
                                  "src": "6501:1:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                    "typeString": "function (contract IERC20) pure returns (address payable)"
                                  }
                                },
                                "id": 51100,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6501:7:90",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 51102,
                                    "name": "quote",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 69385,
                                    "src": "6512:5:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestToken_$76251",
                                      "typeString": "contract TestToken"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestToken_$76251",
                                      "typeString": "contract TestToken"
                                    }
                                  ],
                                  "id": 51101,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    70446, 70463, 70480, 70497, 70514
                                  ],
                                  "referencedDeclaration": 70514,
                                  "src": "6510:1:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                    "typeString": "function (contract IERC20) pure returns (address payable)"
                                  }
                                },
                                "id": 51103,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6510:8:90",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 51104,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51082,
                                "src": "6520:3:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 51096,
                                "name": "mgv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69379,
                                "src": "6490:3:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                                  "typeString": "contract AbstractMangrove"
                                }
                              },
                              "id": 51097,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "offers",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 24205,
                              "src": "6490:10:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_userDefinedValueType$_t_$32167_$",
                                "typeString": "function (address,address,uint256) view external returns (t)"
                              }
                            },
                            "id": 51105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6490:34:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                              "typeString": "t"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                              "typeString": "t"
                            }
                          ],
                          "expression": {
                            "id": 51094,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "6479:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          },
                          "id": 51095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isLive",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24506,
                          "src": "6479:10:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_userDefinedValueType$_t_$32167_$returns$_t_bool_$",
                            "typeString": "function (t) pure external returns (bool)"
                          }
                        },
                        "id": 51106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6479:46:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f666665722073686f756c642068617665206265656e20696e736572746564",
                        "id": 51107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6533:33:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_727b90f3a6b5a091704142f7170fa12c68f32a0e316f3c7001efb99199adc0ad",
                          "typeString": "literal_string \"Offer should have been inserted\""
                        },
                        "value": "Offer should have been inserted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_727b90f3a6b5a091704142f7170fa12c68f32a0e316f3c7001efb99199adc0ad",
                          "typeString": "literal_string \"Offer should have been inserted\""
                        }
                      ],
                      "id": 51093,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "6461:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 51108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6461:111:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51109,
                  "nodeType": "ExpressionStatement",
                  "src": "6461:111:90"
                }
              ]
            },
            "functionSelector": "7c19a966",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_makerGasreq_at_gasmax_succeeds_newOffer",
            "nameLocation": "5913:44:90",
            "parameters": {
              "id": 51009,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5957:2:90"
            },
            "returnParameters": {
              "id": 51010,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5967:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 51175,
            "nodeType": "FunctionDefinition",
            "src": "6581:336:90",
            "body": {
              "id": 51174,
              "nodeType": "Block",
              "src": "6650:267:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 51118,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "6673:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 51117,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "6671:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 51119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6671:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 51121,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "6682:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 51120,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "6680:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 51122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6680:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 51123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6690:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "id": 51114,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "6656:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 51116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setDensity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23952,
                      "src": "6656:14:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 51124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6656:38:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51125,
                  "nodeType": "ExpressionStatement",
                  "src": "6656:38:90"
                },
                {
                  "assignments": [null, 51131],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 51131,
                      "mutability": "mutable",
                      "name": "cfg",
                      "nameLocation": "6713:3:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 51174,
                      "src": "6703:13:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_t_$31225",
                        "typeString": "t"
                      },
                      "typeName": {
                        "id": 51130,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 51129,
                          "name": "P.Local.t",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 31225,
                          "src": "6703:9:90"
                        },
                        "referencedDeclaration": 31225,
                        "src": "6703:9:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_t_$31225",
                          "typeString": "t"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51141,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 51135,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "6733:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 51134,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "6731:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 51136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6731:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 51138,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "6742:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 51137,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "6740:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 51139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6740:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 51132,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "6720:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 51133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "config",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28600,
                      "src": "6720:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_userDefinedValueType$_t_$30356_$_t_userDefinedValueType$_t_$31225_$",
                        "typeString": "function (address,address) view external returns (t,t)"
                      }
                    },
                    "id": 51140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6720:29:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_userDefinedValueType$_t_$30356_$_t_userDefinedValueType$_t_$31225_$",
                      "typeString": "tuple(t,t)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6700:49:90"
                },
                {
                  "assignments": [51143],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51143,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "6760:6:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 51174,
                      "src": "6755:11:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 51142,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6755:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51154,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 51153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 51148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "31",
                            "id": 51144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6770:1:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 51145,
                                "name": "cfg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51131,
                                "src": "6774:3:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_userDefinedValueType$_t_$31225",
                                  "typeString": "t"
                                }
                              },
                              "id": 51146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "offer_gasbase",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 31803,
                              "src": "6774:17:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$31225_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$31225_$",
                                "typeString": "function (t) pure returns (uint256)"
                              }
                            },
                            "id": 51147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6774:19:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6770:23:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 51149,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6769:25:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 51150,
                          "name": "cfg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51131,
                          "src": "6797:3:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_t_$31225",
                            "typeString": "t"
                          }
                        },
                        "id": 51151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "density",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 31745,
                        "src": "6797:11:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$31225_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$31225_$",
                          "typeString": "function (t) pure returns (uint256)"
                        }
                      },
                      "id": 51152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6797:13:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6769:41:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6755:55:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f77726974654f666665722f64656e736974792f746f6f4c6f77",
                        "id": 51158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6832:31:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6195d63e991eeb868558835c64de7a8c2d07b0c6e7b564dc96db7c192e55da1f",
                          "typeString": "literal_string \"mgv/writeOffer/density/tooLow\""
                        },
                        "value": "mgv/writeOffer/density/tooLow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6195d63e991eeb868558835c64de7a8c2d07b0c6e7b564dc96db7c192e55da1f",
                          "typeString": "literal_string \"mgv/writeOffer/density/tooLow\""
                        }
                      ],
                      "expression": {
                        "id": 51155,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "6816:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 51157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "6816:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 51159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6816:48:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51160,
                  "nodeType": "ExpressionStatement",
                  "src": "6816:48:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 51166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 51164,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51143,
                          "src": "6883:6:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 51165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6892:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "6883:10:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 51169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 51167,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51143,
                          "src": "6895:6:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 51168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6904:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "6895:10:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 51170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6907:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "30",
                        "id": 51171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6910:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 51161,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50054,
                        "src": "6870:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$73404",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 51163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73059,
                      "src": "6870:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 51172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6870:42:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 51173,
                  "nodeType": "ExpressionStatement",
                  "src": "6870:42:90"
                }
              ]
            },
            "functionSelector": "af3777f4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_makerGasreq_lower_than_density_fails_newOffer",
            "nameLocation": "6590:50:90",
            "parameters": {
              "id": 51112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6640:2:90"
            },
            "returnParameters": {
              "id": 51113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6650:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 51300,
            "nodeType": "FunctionDefinition",
            "src": "6921:747:90",
            "body": {
              "id": 51299,
              "nodeType": "Block",
              "src": "6975:693:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 51182,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "6998:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 51181,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "6996:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 51183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6996:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 51185,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "7007:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 51184,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "7005:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 51186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7005:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 51187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7015:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "id": 51178,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "6981:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 51180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setDensity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23952,
                      "src": "6981:14:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 51188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6981:38:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51189,
                  "nodeType": "ExpressionStatement",
                  "src": "6981:38:90"
                },
                {
                  "assignments": [51195, 51198],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51195,
                      "mutability": "mutable",
                      "name": "glob",
                      "nameLocation": "7037:4:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 51299,
                      "src": "7026:15:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_t_$30356",
                        "typeString": "t"
                      },
                      "typeName": {
                        "id": 51194,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 51193,
                          "name": "P.Global.t",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 30356,
                          "src": "7026:10:90"
                        },
                        "referencedDeclaration": 30356,
                        "src": "7026:10:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_t_$30356",
                          "typeString": "t"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 51198,
                      "mutability": "mutable",
                      "name": "cfg",
                      "nameLocation": "7053:3:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 51299,
                      "src": "7043:13:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_t_$31225",
                        "typeString": "t"
                      },
                      "typeName": {
                        "id": 51197,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 51196,
                          "name": "P.Local.t",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 31225,
                          "src": "7043:9:90"
                        },
                        "referencedDeclaration": 31225,
                        "src": "7043:9:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_t_$31225",
                          "typeString": "t"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51208,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 51202,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "7073:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 51201,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "7071:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 51203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7071:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 51205,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "7082:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 51204,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "7080:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 51206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7080:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 51199,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "7060:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 51200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "config",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28600,
                      "src": "7060:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_userDefinedValueType$_t_$30356_$_t_userDefinedValueType$_t_$31225_$",
                        "typeString": "function (address,address) view external returns (t,t)"
                      }
                    },
                    "id": 51207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7060:29:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_userDefinedValueType$_t_$30356_$_t_userDefinedValueType$_t_$31225_$",
                      "typeString": "tuple(t,t)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7025:64:90"
                },
                {
                  "assignments": [51210],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51210,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "7100:6:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 51299,
                      "src": "7095:11:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 51209,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7095:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51221,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 51220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 51215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "31",
                            "id": 51211,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7110:1:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 51212,
                                "name": "cfg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51198,
                                "src": "7114:3:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_userDefinedValueType$_t_$31225",
                                  "typeString": "t"
                                }
                              },
                              "id": 51213,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "offer_gasbase",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 31803,
                              "src": "7114:17:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$31225_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$31225_$",
                                "typeString": "function (t) pure returns (uint256)"
                              }
                            },
                            "id": 51214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7114:19:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7110:23:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 51216,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7109:25:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 51217,
                          "name": "cfg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51198,
                          "src": "7137:3:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_t_$31225",
                            "typeString": "t"
                          }
                        },
                        "id": 51218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "density",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 31745,
                        "src": "7137:11:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$31225_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$31225_$",
                          "typeString": "function (t) pure returns (uint256)"
                        }
                      },
                      "id": 51219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7137:13:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7109:41:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7095:55:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 51224,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "7190:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 51223,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70446,
                          "src": "7188:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 51225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7188:6:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 51222,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70817,
                      "src": "7177:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 51226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7177:18:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51227,
                  "nodeType": "ExpressionStatement",
                  "src": "7177:18:90"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 51230,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "7226:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 51229,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "7224:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 51231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7224:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 51233,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "7241:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 51232,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "7239:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 51234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7239:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 51237,
                            "name": "mkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50054,
                            "src": "7263:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$73404",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$73404",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 51236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7255:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 51235,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7255:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 51238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7255:12:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 51239,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51210,
                        "src": "7275:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 51240,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51210,
                        "src": "7296:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 51241,
                            "name": "glob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51195,
                            "src": "7318:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_t_$30356",
                              "typeString": "t"
                            }
                          },
                          "id": 51242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "gasprice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30927,
                          "src": "7318:13:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$30356_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$30356_$",
                            "typeString": "function (t) pure returns (uint256)"
                          }
                        },
                        "id": 51243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7318:15:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 51244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7352:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 51245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7370:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "30",
                        "id": 51246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7387:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 51228,
                      "name": "OfferWrite",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24706,
                      "src": "7206:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 51247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7206:196:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51248,
                  "nodeType": "EmitStatement",
                  "src": "7201:201:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 51251,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "7421:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 51250,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70446,
                          "src": "7419:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 51252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7419:6:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 51249,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70817,
                      "src": "7408:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 51253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7408:18:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51254,
                  "nodeType": "ExpressionStatement",
                  "src": "7408:18:90"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 51258,
                            "name": "mkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50054,
                            "src": "7451:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$73404",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$73404",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 51257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7443:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 51256,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7443:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 51259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7443:12:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 51262,
                                "name": "base",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69382,
                                "src": "7472:4:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 51261,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70514,
                              "src": "7470:1:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 51263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7470:7:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 51265,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69385,
                                "src": "7481:5:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 51264,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70514,
                              "src": "7479:1:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 51266,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7479:8:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 51267,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7489:1:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          {
                            "hexValue": "30",
                            "id": 51268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7492:1:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 51260,
                          "name": "getProvision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [69975, 70042],
                          "referencedDeclaration": 70042,
                          "src": "7457:12:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,address,uint256,uint256) view returns (uint256)"
                          }
                        },
                        "id": 51269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7457:37:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 51255,
                      "name": "Debit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24554,
                      "src": "7437:5:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 51270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7437:58:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51271,
                  "nodeType": "EmitStatement",
                  "src": "7432:63:90"
                },
                {
                  "assignments": [51273],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51273,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "7506:3:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 51299,
                      "src": "7501:8:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 51272,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7501:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51281,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 51276,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51210,
                        "src": "7525:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 51277,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51210,
                        "src": "7533:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 51278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7541:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "30",
                        "id": 51279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7544:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 51274,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50054,
                        "src": "7512:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$73404",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 51275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73059,
                      "src": "7512:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 51280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7512:34:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7501:45:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 51288,
                                    "name": "base",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 69382,
                                    "src": "7594:4:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestToken_$76251",
                                      "typeString": "contract TestToken"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestToken_$76251",
                                      "typeString": "contract TestToken"
                                    }
                                  ],
                                  "id": 51287,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    70446, 70463, 70480, 70497, 70514
                                  ],
                                  "referencedDeclaration": 70514,
                                  "src": "7592:1:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                    "typeString": "function (contract IERC20) pure returns (address payable)"
                                  }
                                },
                                "id": 51289,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7592:7:90",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 51291,
                                    "name": "quote",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 69385,
                                    "src": "7603:5:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestToken_$76251",
                                      "typeString": "contract TestToken"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestToken_$76251",
                                      "typeString": "contract TestToken"
                                    }
                                  ],
                                  "id": 51290,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    70446, 70463, 70480, 70497, 70514
                                  ],
                                  "referencedDeclaration": 70514,
                                  "src": "7601:1:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                    "typeString": "function (contract IERC20) pure returns (address payable)"
                                  }
                                },
                                "id": 51292,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7601:8:90",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 51293,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51273,
                                "src": "7611:3:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 51285,
                                "name": "mgv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69379,
                                "src": "7581:3:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                                  "typeString": "contract AbstractMangrove"
                                }
                              },
                              "id": 51286,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "offers",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 24205,
                              "src": "7581:10:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_userDefinedValueType$_t_$32167_$",
                                "typeString": "function (address,address,uint256) view external returns (t)"
                              }
                            },
                            "id": 51294,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7581:34:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                              "typeString": "t"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                              "typeString": "t"
                            }
                          ],
                          "expression": {
                            "id": 51283,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "7570:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          },
                          "id": 51284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isLive",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24506,
                          "src": "7570:10:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_userDefinedValueType$_t_$32167_$returns$_t_bool_$",
                            "typeString": "function (t) pure external returns (bool)"
                          }
                        },
                        "id": 51295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7570:46:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f666665722073686f756c642068617665206265656e20696e736572746564",
                        "id": 51296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7624:33:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_727b90f3a6b5a091704142f7170fa12c68f32a0e316f3c7001efb99199adc0ad",
                          "typeString": "literal_string \"Offer should have been inserted\""
                        },
                        "value": "Offer should have been inserted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_727b90f3a6b5a091704142f7170fa12c68f32a0e316f3c7001efb99199adc0ad",
                          "typeString": "literal_string \"Offer should have been inserted\""
                        }
                      ],
                      "id": 51282,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "7552:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 51297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7552:111:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51298,
                  "nodeType": "ExpressionStatement",
                  "src": "7552:111:90"
                }
              ]
            },
            "functionSelector": "11c2bee1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_makerGasreq_at_density_suceeds",
            "nameLocation": "6930:35:90",
            "parameters": {
              "id": 51176,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6965:2:90"
            },
            "returnParameters": {
              "id": 51177,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6975:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 51322,
            "nodeType": "FunctionDefinition",
            "src": "7672:168:90",
            "body": {
              "id": 51321,
              "nodeType": "Block",
              "src": "7743:97:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f77726974654f666665722f67617370726963652f313662697473",
                        "id": 51306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7765:32:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26d854c0492f0a17667bcc222c9c379a9c2bfce83fa4b4d3361b8c102f441a9a",
                          "typeString": "literal_string \"mgv/writeOffer/gasprice/16bits\""
                        },
                        "value": "mgv/writeOffer/gasprice/16bits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_26d854c0492f0a17667bcc222c9c379a9c2bfce83fa4b4d3361b8c102f441a9a",
                          "typeString": "literal_string \"mgv/writeOffer/gasprice/16bits\""
                        }
                      ],
                      "expression": {
                        "id": 51303,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "7749:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 51305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "7749:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 51307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7749:49:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51308,
                  "nodeType": "ExpressionStatement",
                  "src": "7749:49:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 51312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7817:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 51313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7820:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 51314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7823:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_65536_by_1",
                          "typeString": "int_const 65536"
                        },
                        "id": 51317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "32",
                          "id": 51315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7826:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "3136",
                          "id": 51316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7829:2:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          "value": "16"
                        },
                        "src": "7826:5:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_65536_by_1",
                          "typeString": "int_const 65536"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 51318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7833:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_65536_by_1",
                          "typeString": "int_const 65536"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 51309,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50054,
                        "src": "7804:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$73404",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 51311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73181,
                      "src": "7804:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 51319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7804:31:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 51320,
                  "nodeType": "ExpressionStatement",
                  "src": "7804:31:90"
                }
              ]
            },
            "functionSelector": "c023e42f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_makerGasprice_wider_than_16_bits_fails_newOffer",
            "nameLocation": "7681:52:90",
            "parameters": {
              "id": 51301,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7733:2:90"
            },
            "returnParameters": {
              "id": 51302,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7743:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 51341,
            "nodeType": "FunctionDefinition",
            "src": "7844:163:90",
            "body": {
              "id": 51340,
              "nodeType": "Block",
              "src": "7916:91:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f6d4f726465722f74616b657257616e74732f31363062697473",
                        "id": 51328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7938:31:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2c80b6eaaa77175b421cb647262f8b13463075cec159961e3e57fea394a5688",
                          "typeString": "literal_string \"mgv/mOrder/takerWants/160bits\""
                        },
                        "value": "mgv/mOrder/takerWants/160bits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a2c80b6eaaa77175b421cb647262f8b13463075cec159961e3e57fea394a5688",
                          "typeString": "literal_string \"mgv/mOrder/takerWants/160bits\""
                        }
                      ],
                      "expression": {
                        "id": 51325,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "7922:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 51327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "7922:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 51329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7922:48:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51330,
                  "nodeType": "ExpressionStatement",
                  "src": "7922:48:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
                          "typeString": "int_const 1461...(41 digits omitted)...2976"
                        },
                        "id": 51336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "32",
                          "id": 51334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7992:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "313630",
                          "id": 51335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7995:3:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_160_by_1",
                            "typeString": "int_const 160"
                          },
                          "value": "160"
                        },
                        "src": "7992:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
                          "typeString": "int_const 1461...(41 digits omitted)...2976"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 51337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8000:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
                          "typeString": "int_const 1461...(41 digits omitted)...2976"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 51331,
                        "name": "tkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50051,
                        "src": "7976:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$73996",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 51333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73938,
                      "src": "7976:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) external returns (uint256,uint256)"
                      }
                    },
                    "id": 51338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7976:26:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "id": 51339,
                  "nodeType": "ExpressionStatement",
                  "src": "7976:26:90"
                }
              ]
            },
            "functionSelector": "a218492e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_takerWants_wider_than_160_bits_fails_marketOrder",
            "nameLocation": "7853:53:90",
            "parameters": {
              "id": 51323,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7906:2:90"
            },
            "returnParameters": {
              "id": 51324,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7916:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 51406,
            "nodeType": "FunctionDefinition",
            "src": "8011:353:90",
            "body": {
              "id": 51405,
              "nodeType": "Block",
              "src": "8071:293:90",
              "statements": [
                {
                  "assignments": [51345],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51345,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "8082:3:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 51405,
                      "src": "8077:8:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 51344,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8077:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51353,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 51348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8101:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 51349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8110:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 51350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8119:7:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 51351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8128:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 51346,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50054,
                        "src": "8088:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$73404",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 51347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73059,
                      "src": "8088:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 51352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8088:42:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8077:53:90"
                },
                {
                  "assignments": [51360],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51360,
                      "mutability": "mutable",
                      "name": "targets",
                      "nameLocation": "8153:7:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 51405,
                      "src": "8136:24:90",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                        "typeString": "uint256[4][]"
                      },
                      "typeName": {
                        "baseType": {
                          "baseType": {
                            "id": 51357,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "8136:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 51358,
                          "length": {
                            "hexValue": "34",
                            "id": 51356,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8141:1:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          "nodeType": "ArrayTypeName",
                          "src": "8136:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
                            "typeString": "uint256[4]"
                          }
                        },
                        "id": 51359,
                        "nodeType": "ArrayTypeName",
                        "src": "8136:9:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_storage_$dyn_storage_ptr",
                          "typeString": "uint256[4][]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51385,
                  "initialValue": {
                    "arguments": [
                      {
                        "components": [
                          {
                            "id": 51362,
                            "name": "ofr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51345,
                            "src": "8184:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 51372,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 51367,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "8199:6:90",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint96_$",
                                          "typeString": "type(uint96)"
                                        },
                                        "typeName": {
                                          "id": 51366,
                                          "name": "uint96",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "8199:6:90",
                                          "typeDescriptions": {}
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_type$_t_uint96_$",
                                          "typeString": "type(uint96)"
                                        }
                                      ],
                                      "id": 51365,
                                      "name": "type",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -27,
                                      "src": "8194:4:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 51368,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8194:12:90",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_meta_type_t_uint96",
                                      "typeString": "type(uint96)"
                                    }
                                  },
                                  "id": 51369,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "max",
                                  "nodeType": "MemberAccess",
                                  "src": "8194:16:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint96",
                                    "typeString": "uint96"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint96",
                                    "typeString": "uint96"
                                  }
                                ],
                                "id": 51364,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8189:4:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 51363,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8189:4:90",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 51370,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8189:22:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 51371,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8214:1:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "8189:26:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 51375,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8222:6:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint96_$",
                                    "typeString": "type(uint96)"
                                  },
                                  "typeName": {
                                    "id": 51374,
                                    "name": "uint96",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8222:6:90",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint96_$",
                                    "typeString": "type(uint96)"
                                  }
                                ],
                                "id": 51373,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "8217:4:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 51376,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8217:12:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint96",
                                "typeString": "type(uint96)"
                              }
                            },
                            "id": 51377,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "8217:16:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 51380,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8240:4:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 51379,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8240:4:90",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  }
                                ],
                                "id": 51378,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "8235:4:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 51381,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8235:10:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint256",
                                "typeString": "type(uint256)"
                              }
                            },
                            "id": 51382,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "8235:14:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 51383,
                        "isConstant": false,
                        "isInlineArray": true,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "8183:67:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                          "typeString": "uint256[4] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                          "typeString": "uint256[4] memory"
                        }
                      ],
                      "id": 51361,
                      "name": "wrap_dynamic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        71251, 71287, 71323, 71359, 71395
                      ],
                      "referencedDeclaration": 71395,
                      "src": "8163:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                      }
                    },
                    "id": 51384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8163:93:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                      "typeString": "uint256[4] memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8136:120:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f736e697065732f74616b657257616e74732f393662697473",
                        "id": 51389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8278:30:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7c78515ffc96a89ab660ccc256dc0a5d49923c4ca341cdd82329f2024f6628af",
                          "typeString": "literal_string \"mgv/snipes/takerWants/96bits\""
                        },
                        "value": "mgv/snipes/takerWants/96bits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_7c78515ffc96a89ab660ccc256dc0a5d49923c4ca341cdd82329f2024f6628af",
                          "typeString": "literal_string \"mgv/snipes/takerWants/96bits\""
                        }
                      ],
                      "expression": {
                        "id": 51386,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "8262:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 51388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "8262:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 51390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8262:47:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51391,
                  "nodeType": "ExpressionStatement",
                  "src": "8262:47:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 51396,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "8328:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 51395,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "8326:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 51397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8326:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 51399,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "8337:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 51398,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "8335:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 51400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8335:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 51401,
                        "name": "targets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51360,
                        "src": "8345:7:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 51402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8354:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 51392,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "8315:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 51394,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26733,
                      "src": "8315:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 51403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8315:44:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 51404,
                  "nodeType": "ExpressionStatement",
                  "src": "8315:44:90"
                }
              ]
            },
            "functionSelector": "0ccd650d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_takerWants_above_96bits_fails_snipes",
            "nameLocation": "8020:41:90",
            "parameters": {
              "id": 51342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8061:2:90"
            },
            "returnParameters": {
              "id": 51343,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8071:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 51471,
            "nodeType": "FunctionDefinition",
            "src": "8368:353:90",
            "body": {
              "id": 51470,
              "nodeType": "Block",
              "src": "8428:293:90",
              "statements": [
                {
                  "assignments": [51410],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51410,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "8439:3:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 51470,
                      "src": "8434:8:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 51409,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8434:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51418,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 51413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8458:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 51414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8467:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 51415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8476:7:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 51416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8485:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 51411,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50054,
                        "src": "8445:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$73404",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 51412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73059,
                      "src": "8445:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 51417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8445:42:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8434:53:90"
                },
                {
                  "assignments": [51425],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51425,
                      "mutability": "mutable",
                      "name": "targets",
                      "nameLocation": "8510:7:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 51470,
                      "src": "8493:24:90",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                        "typeString": "uint256[4][]"
                      },
                      "typeName": {
                        "baseType": {
                          "baseType": {
                            "id": 51422,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "8493:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 51423,
                          "length": {
                            "hexValue": "34",
                            "id": 51421,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8498:1:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          "nodeType": "ArrayTypeName",
                          "src": "8493:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
                            "typeString": "uint256[4]"
                          }
                        },
                        "id": 51424,
                        "nodeType": "ArrayTypeName",
                        "src": "8493:9:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_storage_$dyn_storage_ptr",
                          "typeString": "uint256[4][]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51450,
                  "initialValue": {
                    "arguments": [
                      {
                        "components": [
                          {
                            "id": 51427,
                            "name": "ofr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51410,
                            "src": "8541:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 51430,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8551:6:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint96_$",
                                    "typeString": "type(uint96)"
                                  },
                                  "typeName": {
                                    "id": 51429,
                                    "name": "uint96",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8551:6:90",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint96_$",
                                    "typeString": "type(uint96)"
                                  }
                                ],
                                "id": 51428,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "8546:4:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 51431,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8546:12:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint96",
                                "typeString": "type(uint96)"
                              }
                            },
                            "id": 51432,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "8546:16:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 51442,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 51437,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "8574:6:90",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint96_$",
                                          "typeString": "type(uint96)"
                                        },
                                        "typeName": {
                                          "id": 51436,
                                          "name": "uint96",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "8574:6:90",
                                          "typeDescriptions": {}
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_type$_t_uint96_$",
                                          "typeString": "type(uint96)"
                                        }
                                      ],
                                      "id": 51435,
                                      "name": "type",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -27,
                                      "src": "8569:4:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 51438,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8569:12:90",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_meta_type_t_uint96",
                                      "typeString": "type(uint96)"
                                    }
                                  },
                                  "id": 51439,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "max",
                                  "nodeType": "MemberAccess",
                                  "src": "8569:16:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint96",
                                    "typeString": "uint96"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint96",
                                    "typeString": "uint96"
                                  }
                                ],
                                "id": 51434,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8564:4:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 51433,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8564:4:90",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 51440,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8564:22:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 51441,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8589:1:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "8564:26:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 51445,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8597:4:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 51444,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8597:4:90",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  }
                                ],
                                "id": 51443,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "8592:4:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 51446,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8592:10:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint256",
                                "typeString": "type(uint256)"
                              }
                            },
                            "id": 51447,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "8592:14:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 51448,
                        "isConstant": false,
                        "isInlineArray": true,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "8540:67:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                          "typeString": "uint256[4] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                          "typeString": "uint256[4] memory"
                        }
                      ],
                      "id": 51426,
                      "name": "wrap_dynamic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        71251, 71287, 71323, 71359, 71395
                      ],
                      "referencedDeclaration": 71395,
                      "src": "8520:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                      }
                    },
                    "id": 51449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8520:93:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                      "typeString": "uint256[4] memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8493:120:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f736e697065732f74616b657247697665732f393662697473",
                        "id": 51454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8635:30:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_43f9f7190ae2b2c6081e6fc9806a965675a9b3747d42a26a8c8d89bca5ad479a",
                          "typeString": "literal_string \"mgv/snipes/takerGives/96bits\""
                        },
                        "value": "mgv/snipes/takerGives/96bits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_43f9f7190ae2b2c6081e6fc9806a965675a9b3747d42a26a8c8d89bca5ad479a",
                          "typeString": "literal_string \"mgv/snipes/takerGives/96bits\""
                        }
                      ],
                      "expression": {
                        "id": 51451,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "8619:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 51453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "8619:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 51455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8619:47:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51456,
                  "nodeType": "ExpressionStatement",
                  "src": "8619:47:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 51461,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "8685:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 51460,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "8683:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 51462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8683:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 51464,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "8694:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 51463,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "8692:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 51465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8692:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 51466,
                        "name": "targets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51425,
                        "src": "8702:7:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 51467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8711:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 51457,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "8672:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 51459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26733,
                      "src": "8672:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 51468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8672:44:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 51469,
                  "nodeType": "ExpressionStatement",
                  "src": "8672:44:90"
                }
              ]
            },
            "functionSelector": "e90d6353",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_takerGives_above_96bits_fails_snipes",
            "nameLocation": "8377:41:90",
            "parameters": {
              "id": 51407,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8418:2:90"
            },
            "returnParameters": {
              "id": 51408,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8428:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 51496,
            "nodeType": "FunctionDefinition",
            "src": "8725:186:90",
            "body": {
              "id": 51495,
              "nodeType": "Block",
              "src": "8774:137:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 51478,
                                "name": "base",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69382,
                                "src": "8813:4:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 51477,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70514,
                              "src": "8811:1:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 51479,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8811:7:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 51481,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69385,
                                "src": "8822:5:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 51480,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70514,
                              "src": "8820:1:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 51482,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8820:8:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 51485,
                                "name": "tkr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50051,
                                "src": "8838:3:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestTaker_$73996",
                                  "typeString": "contract TestTaker"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestTaker_$73996",
                                  "typeString": "contract TestTaker"
                                }
                              ],
                              "id": 51484,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8830:7:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 51483,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8830:7:90",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 51486,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8830:12:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 51488,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "8846:4:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GatekeepingTest_$53439",
                                  "typeString": "contract GatekeepingTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GatekeepingTest_$53439",
                                  "typeString": "contract GatekeepingTest"
                                }
                              ],
                              "id": 51487,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70497,
                              "src": "8844:1:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                                "typeString": "function (contract Test) pure returns (address payable)"
                              }
                            },
                            "id": 51489,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8844:7:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 51475,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "8796:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          },
                          "id": 51476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "allowances",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28132,
                          "src": "8796:14:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address,address,address,address) view external returns (uint256)"
                          }
                        },
                        "id": 51490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8796:56:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 51491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8860:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "696e697469616c20616c6c6f77616e63652073686f756c642062652030",
                        "id": 51492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8869:31:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee5006da86d0945b620a6f9b7fe5b3a22835a10c51433071d3765c24d6796abf",
                          "typeString": "literal_string \"initial allowance should be 0\""
                        },
                        "value": "initial allowance should be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee5006da86d0945b620a6f9b7fe5b3a22835a10c51433071d3765c24d6796abf",
                          "typeString": "literal_string \"initial allowance should be 0\""
                        }
                      ],
                      "id": 51474,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "8780:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 51493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8780:126:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51494,
                  "nodeType": "ExpressionStatement",
                  "src": "8780:126:90"
                }
              ]
            },
            "functionSelector": "d1d15d69",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_initial_allowance_is_zero",
            "nameLocation": "8734:30:90",
            "parameters": {
              "id": 51472,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8764:2:90"
            },
            "returnParameters": {
              "id": 51473,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8774:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 51557,
            "nodeType": "FunctionDefinition",
            "src": "8915:387:90",
            "body": {
              "id": 51556,
              "nodeType": "Block",
              "src": "8977:325:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 51501,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "8990:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 51500,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "8988:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 51502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8988:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 51505,
                            "name": "mkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50054,
                            "src": "9005:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$73404",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$73404",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 51504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8997:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 51503,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8997:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 51506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8997:12:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 51507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9011:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 51499,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [2399, 2416, 2519],
                      "referencedDeclaration": 2416,
                      "src": "8983:4:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 51508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8983:36:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51509,
                  "nodeType": "ExpressionStatement",
                  "src": "8983:36:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51513,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69382,
                        "src": "9040:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 51514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9046:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 51510,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50054,
                        "src": "9025:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$73404",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 51512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approveMgv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72876,
                      "src": "9025:14:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,uint256) external"
                      }
                    },
                    "id": 51515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9025:29:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51516,
                  "nodeType": "ExpressionStatement",
                  "src": "9025:29:90"
                },
                {
                  "assignments": [51518],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51518,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "9065:3:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 51556,
                      "src": "9060:8:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 51517,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9060:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51526,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 51521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9084:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 51522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9093:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 51523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9102:7:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 51524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9111:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 51519,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50054,
                        "src": "9071:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$73404",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 51520,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73059,
                      "src": "9071:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 51525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9071:42:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9060:53:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f6c6f77416c6c6f77616e6365",
                        "id": 51530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9136:18:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3bd6cbe86df0fb8fea88bc5dc859693f9e9c2f7e40dc0479bb421d47084fcf7e",
                          "typeString": "literal_string \"mgv/lowAllowance\""
                        },
                        "value": "mgv/lowAllowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_3bd6cbe86df0fb8fea88bc5dc859693f9e9c2f7e40dc0479bb421d47084fcf7e",
                          "typeString": "literal_string \"mgv/lowAllowance\""
                        }
                      ],
                      "expression": {
                        "id": 51527,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "9120:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 51529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "9120:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 51531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9120:35:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51532,
                  "nodeType": "ExpressionStatement",
                  "src": "9120:35:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 51537,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "9184:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 51536,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "9182:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 51538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9182:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 51540,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "9199:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 51539,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "9197:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 51541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9197:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 51543,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51518,
                                "src": "9227:3:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 51544,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9232:7:90",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "31",
                                "id": 51545,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9241:7:90",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "3330305f303030",
                                "id": 51546,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9250:7:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_300000_by_1",
                                  "typeString": "int_const 300000"
                                },
                                "value": "300_000"
                              }
                            ],
                            "id": 51547,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "9226:32:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 51542,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            71251, 71287, 71323, 71359, 71395
                          ],
                          "referencedDeclaration": 71395,
                          "src": "9213:12:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 51548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9213:46:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 51549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9267:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "arguments": [
                          {
                            "id": 51552,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50051,
                            "src": "9287:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          ],
                          "id": 51551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9279:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 51550,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9279:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 51553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9279:12:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 51533,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "9161:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 51535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipesFor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28416,
                      "src": "9161:13:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool,address) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 51554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9161:136:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 51555,
                  "nodeType": "ExpressionStatement",
                  "src": "9161:136:90"
                }
              ]
            },
            "functionSelector": "9aa488db",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_cannot_snipesFor_for_without_allowance",
            "nameLocation": "8924:43:90",
            "parameters": {
              "id": 51497,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8967:2:90"
            },
            "returnParameters": {
              "id": 51498,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8977:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 51612,
            "nodeType": "FunctionDefinition",
            "src": "9306:319:90",
            "body": {
              "id": 51611,
              "nodeType": "Block",
              "src": "9373:252:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 51562,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "9386:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 51561,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "9384:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 51563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9384:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 51566,
                            "name": "mkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50054,
                            "src": "9401:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$73404",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$73404",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 51565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9393:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 51564,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9393:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 51567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9393:12:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 51568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9407:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 51560,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [2399, 2416, 2519],
                      "referencedDeclaration": 2416,
                      "src": "9379:4:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 51569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9379:36:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51570,
                  "nodeType": "ExpressionStatement",
                  "src": "9379:36:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51574,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69382,
                        "src": "9436:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 51575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9442:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 51571,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50054,
                        "src": "9421:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$73404",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 51573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approveMgv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72876,
                      "src": "9421:14:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,uint256) external"
                      }
                    },
                    "id": 51576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9421:29:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51577,
                  "nodeType": "ExpressionStatement",
                  "src": "9421:29:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 51581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9469:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 51582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9478:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 51583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9487:7:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 51584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9496:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 51578,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50054,
                        "src": "9456:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$73404",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 51580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73059,
                      "src": "9456:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 51585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9456:42:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 51586,
                  "nodeType": "ExpressionStatement",
                  "src": "9456:42:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f6c6f77416c6c6f77616e6365",
                        "id": 51590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9520:18:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3bd6cbe86df0fb8fea88bc5dc859693f9e9c2f7e40dc0479bb421d47084fcf7e",
                          "typeString": "literal_string \"mgv/lowAllowance\""
                        },
                        "value": "mgv/lowAllowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_3bd6cbe86df0fb8fea88bc5dc859693f9e9c2f7e40dc0479bb421d47084fcf7e",
                          "typeString": "literal_string \"mgv/lowAllowance\""
                        }
                      ],
                      "expression": {
                        "id": 51587,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "9504:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 51589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "9504:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 51591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9504:35:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51592,
                  "nodeType": "ExpressionStatement",
                  "src": "9504:35:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 51597,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "9566:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 51596,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "9564:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 51598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9564:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 51600,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "9575:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 51599,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "9573:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 51601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9573:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 51602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9583:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 51603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9592:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 51604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9601:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "arguments": [
                          {
                            "id": 51607,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50051,
                            "src": "9615:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          ],
                          "id": 51606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9607:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 51605,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9607:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 51608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9607:12:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 51593,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "9545:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 51595,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrderFor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28366,
                      "src": "9545:18:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,bool,address) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 51609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9545:75:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 51610,
                  "nodeType": "ExpressionStatement",
                  "src": "9545:75:90"
                }
              ]
            },
            "functionSelector": "fe80d6da",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_cannot_marketOrderFor_for_without_allowance",
            "nameLocation": "9315:48:90",
            "parameters": {
              "id": 51558,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9363:2:90"
            },
            "returnParameters": {
              "id": 51559,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9373:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 51696,
            "nodeType": "FunctionDefinition",
            "src": "9629:546:90",
            "body": {
              "id": 51695,
              "nodeType": "Block",
              "src": "9690:485:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 51617,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "9703:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 51616,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "9701:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 51618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9701:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 51621,
                            "name": "mkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50054,
                            "src": "9718:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$73404",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$73404",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 51620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9710:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 51619,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9710:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 51622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9710:12:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 51623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9724:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 51615,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [2399, 2416, 2519],
                      "referencedDeclaration": 2416,
                      "src": "9696:4:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 51624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9696:36:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51625,
                  "nodeType": "ExpressionStatement",
                  "src": "9696:36:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51629,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69382,
                        "src": "9753:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 51630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9759:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 51626,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50054,
                        "src": "9738:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$73404",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 51628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approveMgv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72876,
                      "src": "9738:14:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,uint256) external"
                      }
                    },
                    "id": 51631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9738:29:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51632,
                  "nodeType": "ExpressionStatement",
                  "src": "9738:29:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 51636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9786:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 51637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9795:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 51638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9804:7:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 51639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9813:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 51633,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50054,
                        "src": "9773:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$73404",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 51635,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73059,
                      "src": "9773:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 51640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9773:42:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 51641,
                  "nodeType": "ExpressionStatement",
                  "src": "9773:42:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 51646,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9842:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$53439",
                              "typeString": "contract GatekeepingTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$53439",
                              "typeString": "contract GatekeepingTest"
                            }
                          ],
                          "id": 51645,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70497,
                          "src": "9840:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 51647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9840:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "312e32",
                        "id": 51648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9849:9:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1200000000000000000_by_1",
                          "typeString": "int_const 1200000000000000000"
                        },
                        "value": "1.2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1200000000000000000_by_1",
                          "typeString": "int_const 1200000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 51642,
                        "name": "tkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50051,
                        "src": "9821:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$73996",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 51644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approveSpender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73763,
                      "src": "9821:18:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 51649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9821:38:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51650,
                  "nodeType": "ExpressionStatement",
                  "src": "9821:38:90"
                },
                {
                  "assignments": [51652],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51652,
                      "mutability": "mutable",
                      "name": "takerGot",
                      "nameLocation": "9870:8:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 51695,
                      "src": "9865:13:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 51651,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9865:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51653,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9865:13:90"
                },
                {
                  "expression": {
                    "id": 51672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 51654,
                          "name": "takerGot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51652,
                          "src": "9885:8:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        null,
                        null,
                        null
                      ],
                      "id": 51655,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "9884:16:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$__$__$__$",
                        "typeString": "tuple(uint256,,,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 51659,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69382,
                              "src": "9931:4:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 51658,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "9929:1:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 51660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9929:7:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 51662,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69385,
                              "src": "9946:5:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 51661,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "9944:1:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 51663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9944:8:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 51664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9960:7:90",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "31",
                          "id": 51665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9975:7:90",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "74727565",
                          "id": 51666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9990:4:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "arguments": [
                            {
                              "id": 51669,
                              "name": "tkr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50051,
                              "src": "10010:3:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestTaker_$73996",
                                "typeString": "contract TestTaker"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestTaker_$73996",
                                "typeString": "contract TestTaker"
                              }
                            ],
                            "id": 51668,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10002:7:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 51667,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10002:7:90",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 51670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10002:12:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 51656,
                          "name": "mgv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69379,
                          "src": "9903:3:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                            "typeString": "contract AbstractMangrove"
                          }
                        },
                        "id": 51657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "marketOrderFor",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28366,
                        "src": "9903:18:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,address,uint256,uint256,bool,address) external returns (uint256,uint256,uint256,uint256)"
                        }
                      },
                      "id": 51671,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9903:117:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256,uint256,uint256)"
                      }
                    },
                    "src": "9884:136:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51673,
                  "nodeType": "ExpressionStatement",
                  "src": "9884:136:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 51678,
                                "name": "base",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69382,
                                "src": "10059:4:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 51677,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70514,
                              "src": "10057:1:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 51679,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10057:7:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 51681,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69385,
                                "src": "10068:5:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 51680,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70514,
                              "src": "10066:1:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 51682,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10066:8:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 51685,
                                "name": "tkr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50051,
                                "src": "10084:3:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestTaker_$73996",
                                  "typeString": "contract TestTaker"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestTaker_$73996",
                                  "typeString": "contract TestTaker"
                                }
                              ],
                              "id": 51684,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10076:7:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 51683,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10076:7:90",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 51686,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10076:12:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 51688,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "10092:4:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GatekeepingTest_$53439",
                                  "typeString": "contract GatekeepingTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GatekeepingTest_$53439",
                                  "typeString": "contract GatekeepingTest"
                                }
                              ],
                              "id": 51687,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70497,
                              "src": "10090:1:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                                "typeString": "function (contract Test) pure returns (address payable)"
                              }
                            },
                            "id": 51689,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10090:7:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 51675,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "10042:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          },
                          "id": 51676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "allowances",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28132,
                          "src": "10042:14:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address,address,address,address) view external returns (uint256)"
                          }
                        },
                        "id": 51690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10042:56:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "302e32",
                        "id": 51691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10106:9:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000000000000000_by_1",
                          "typeString": "int_const 200000000000000000"
                        },
                        "value": "0.2"
                      },
                      {
                        "hexValue": "616c6c6f77616e63652073686f756c64206861766520636f72726563746c792072656475636564",
                        "id": 51692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10123:41:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b833b4753c2780e321c82244ae6773599d225256758a9026f8a5ac334eb43b34",
                          "typeString": "literal_string \"allowance should have correctly reduced\""
                        },
                        "value": "allowance should have correctly reduced"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_200000000000000000_by_1",
                          "typeString": "int_const 200000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b833b4753c2780e321c82244ae6773599d225256758a9026f8a5ac334eb43b34",
                          "typeString": "literal_string \"allowance should have correctly reduced\""
                        }
                      ],
                      "id": 51674,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "10026:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 51693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10026:144:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51694,
                  "nodeType": "ExpressionStatement",
                  "src": "10026:144:90"
                }
              ]
            },
            "functionSelector": "4757fde9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_can_marketOrderFor_for_with_allowance",
            "nameLocation": "9638:42:90",
            "parameters": {
              "id": 51613,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9680:2:90"
            },
            "returnParameters": {
              "id": 51614,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9690:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 51698,
            "nodeType": "VariableDeclaration",
            "src": "10212:14:90",
            "constant": false,
            "mutability": "mutable",
            "name": "trade_cb",
            "nameLocation": "10218:8:90",
            "scope": 53439,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 51697,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "10212:5:90",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 51700,
            "nodeType": "VariableDeclaration",
            "src": "10230:17:90",
            "constant": false,
            "mutability": "mutable",
            "name": "posthook_cb",
            "nameLocation": "10236:11:90",
            "scope": 53439,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 51699,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "10230:5:90",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 51738,
            "nodeType": "FunctionDefinition",
            "src": "10286:332:90",
            "body": {
              "id": 51737,
              "nodeType": "Block",
              "src": "10391:227:90",
              "statements": [
                {
                  "expression": {
                    "id": 51709,
                    "name": "ret",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 51707,
                    "src": "10397:3:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 51710,
                  "nodeType": "ExpressionStatement",
                  "src": "10397:3:90"
                },
                {
                  "assignments": [51712],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51712,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "10448:7:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 51737,
                      "src": "10443:12:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 51711,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "10443:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51713,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10443:12:90"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 51717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 51714,
                        "name": "trade_cb",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51698,
                        "src": "10465:8:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      "id": 51715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10465:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 51716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10483:1:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10465:19:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51734,
                  "nodeType": "IfStatement",
                  "src": "10461:138:90",
                  "trueBody": {
                    "id": 51733,
                    "nodeType": "Block",
                    "src": "10486:113:90",
                    "statements": [
                      {
                        "expression": {
                          "id": 51726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 51718,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51712,
                                "src": "10495:7:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              null
                            ],
                            "id": 51719,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "10494:11:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$__$",
                              "typeString": "tuple(bool,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 51724,
                                "name": "trade_cb",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51698,
                                "src": "10521:8:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 51721,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "10510:4:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_GatekeepingTest_$53439",
                                      "typeString": "contract GatekeepingTest"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_GatekeepingTest_$53439",
                                      "typeString": "contract GatekeepingTest"
                                    }
                                  ],
                                  "id": 51720,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    70446, 70463, 70480, 70497, 70514
                                  ],
                                  "referencedDeclaration": 70497,
                                  "src": "10508:1:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                                    "typeString": "function (contract Test) pure returns (address payable)"
                                  }
                                },
                                "id": 51722,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10508:7:90",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 51723,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "10508:12:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 51725,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10508:22:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "src": "10494:36:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 51727,
                        "nodeType": "ExpressionStatement",
                        "src": "10494:36:90"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 51729,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51712,
                              "src": "10549:7:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6d616b6572457865637574652063616c6c6261636b206d75737420776f726b",
                              "id": 51730,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10558:33:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e119e5935cf03414034b22bbcabecf402356bf6716c058befaff9d956552c26c",
                                "typeString": "literal_string \"makerExecute callback must work\""
                              },
                              "value": "makerExecute callback must work"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e119e5935cf03414034b22bbcabecf402356bf6716c058befaff9d956552c26c",
                                "typeString": "literal_string \"makerExecute callback must work\""
                              }
                            ],
                            "id": 51728,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [269, 290],
                            "referencedDeclaration": 290,
                            "src": "10538:10:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory)"
                            }
                          },
                          "id": 51731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10538:54:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 51732,
                        "nodeType": "ExpressionStatement",
                        "src": "10538:54:90"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "",
                    "id": 51735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10611:2:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "functionReturnParameters": 51708,
                  "id": 51736,
                  "nodeType": "Return",
                  "src": "10604:9:90"
                }
              ]
            },
            "baseFunctions": [24723],
            "functionSelector": "6c49c32c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "makerExecute",
            "nameLocation": "10295:12:90",
            "overrides": {
              "id": 51705,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10354:8:90"
            },
            "parameters": {
              "id": 51704,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51703,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 51738,
                  "src": "10308:27:90",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SingleOrder_$24534_calldata_ptr",
                    "typeString": "struct MgvLib.SingleOrder"
                  },
                  "typeName": {
                    "id": 51702,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 51701,
                      "name": "MgvLib.SingleOrder",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24534,
                      "src": "10308:18:90"
                    },
                    "referencedDeclaration": 24534,
                    "src": "10308:18:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SingleOrder_$24534_storage_ptr",
                      "typeString": "struct MgvLib.SingleOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10307:29:90"
            },
            "returnParameters": {
              "id": 51708,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51707,
                  "mutability": "mutable",
                  "name": "ret",
                  "nameLocation": "10384:3:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 51738,
                  "src": "10376:11:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 51706,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10376:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10375:13:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51785,
            "nodeType": "FunctionDefinition",
            "src": "10622:416:90",
            "body": {
              "id": 51784,
              "nodeType": "Block",
              "src": "10746:292:90",
              "statements": [
                {
                  "assignments": [51749],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51749,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "10757:7:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 51784,
                      "src": "10752:12:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 51748,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "10752:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51750,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10752:12:90"
                },
                {
                  "expression": {
                    "id": 51751,
                    "name": "order",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 51741,
                    "src": "10770:5:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SingleOrder_$24534_calldata_ptr",
                      "typeString": "struct MgvLib.SingleOrder calldata"
                    }
                  },
                  "id": 51752,
                  "nodeType": "ExpressionStatement",
                  "src": "10770:5:90"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 51756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 51753,
                        "name": "posthook_cb",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51700,
                        "src": "10813:11:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      "id": 51754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10813:18:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 51755,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10834:1:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10813:22:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51783,
                  "nodeType": "IfStatement",
                  "src": "10809:225:90",
                  "trueBody": {
                    "id": 51782,
                    "nodeType": "Block",
                    "src": "10837:197:90",
                    "statements": [
                      {
                        "expression": {
                          "id": 51765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 51757,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51749,
                                "src": "10846:7:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              null
                            ],
                            "id": 51758,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "10845:11:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$__$",
                              "typeString": "tuple(bool,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 51763,
                                "name": "posthook_cb",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51700,
                                "src": "10872:11:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 51760,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "10861:4:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_GatekeepingTest_$53439",
                                      "typeString": "contract GatekeepingTest"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_GatekeepingTest_$53439",
                                      "typeString": "contract GatekeepingTest"
                                    }
                                  ],
                                  "id": 51759,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    70446, 70463, 70480, 70497, 70514
                                  ],
                                  "referencedDeclaration": 70497,
                                  "src": "10859:1:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                                    "typeString": "function (contract Test) pure returns (address payable)"
                                  }
                                },
                                "id": 51761,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10859:7:90",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 51762,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "10859:12:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 51764,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10859:25:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "src": "10845:39:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 51766,
                        "nodeType": "ExpressionStatement",
                        "src": "10845:39:90"
                      },
                      {
                        "assignments": [51768],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 51768,
                            "mutability": "mutable",
                            "name": "tradeResult",
                            "nameLocation": "10897:11:90",
                            "nodeType": "VariableDeclaration",
                            "scope": 51782,
                            "src": "10892:16:90",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 51767,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "10892:4:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 51774,
                        "initialValue": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 51772,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 51769,
                                  "name": "result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 51744,
                                  "src": "10912:6:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_OrderResult_$24539_calldata_ptr",
                                    "typeString": "struct MgvLib.OrderResult calldata"
                                  }
                                },
                                "id": 51770,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mgvData",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 24538,
                                "src": "10912:14:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "6d67762f747261646553756363657373",
                                "id": 51771,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10930:18:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                                  "typeString": "literal_string \"mgv/tradeSuccess\""
                                },
                                "value": "mgv/tradeSuccess"
                              },
                              "src": "10912:36:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 51773,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "10911:38:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10892:57:90"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 51778,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 51776,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51749,
                                "src": "10968:7:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 51777,
                                "name": "tradeResult",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51768,
                                "src": "10979:11:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "10968:22:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6d616b6572506f7374686f6f6b2063616c6c6261636b206d75737420776f726b",
                              "id": 51779,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10992:34:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fa1d51bb316e6658db71a00d5111fe76232cf2b331303a128ea0339a2c5f2b18",
                                "typeString": "literal_string \"makerPosthook callback must work\""
                              },
                              "value": "makerPosthook callback must work"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fa1d51bb316e6658db71a00d5111fe76232cf2b331303a128ea0339a2c5f2b18",
                                "typeString": "literal_string \"makerPosthook callback must work\""
                              }
                            ],
                            "id": 51775,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [269, 290],
                            "referencedDeclaration": 290,
                            "src": "10957:10:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory)"
                            }
                          },
                          "id": 51780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10957:70:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 51781,
                        "nodeType": "ExpressionStatement",
                        "src": "10957:70:90"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [24732],
            "functionSelector": "3d3d130d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "makerPosthook",
            "nameLocation": "10631:13:90",
            "overrides": {
              "id": 51746,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10737:8:90"
            },
            "parameters": {
              "id": 51745,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51741,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "10678:5:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 51785,
                  "src": "10650:33:90",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SingleOrder_$24534_calldata_ptr",
                    "typeString": "struct MgvLib.SingleOrder"
                  },
                  "typeName": {
                    "id": 51740,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 51739,
                      "name": "MgvLib.SingleOrder",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24534,
                      "src": "10650:18:90"
                    },
                    "referencedDeclaration": 24534,
                    "src": "10650:18:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SingleOrder_$24534_storage_ptr",
                      "typeString": "struct MgvLib.SingleOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51744,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "10717:6:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 51785,
                  "src": "10689:34:90",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OrderResult_$24539_calldata_ptr",
                    "typeString": "struct MgvLib.OrderResult"
                  },
                  "typeName": {
                    "id": 51743,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 51742,
                      "name": "MgvLib.OrderResult",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24539,
                      "src": "10689:18:90"
                    },
                    "referencedDeclaration": 24539,
                    "src": "10689:18:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OrderResult_$24539_storage_ptr",
                      "typeString": "struct MgvLib.OrderResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10644:83:90"
            },
            "returnParameters": {
              "id": 51747,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10746:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51811,
            "nodeType": "FunctionDefinition",
            "src": "11091:150:90",
            "body": {
              "id": 51810,
              "nodeType": "Block",
              "src": "11122:119:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f7265656e7472616e63794c6f636b6564",
                        "id": 51791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11144:22:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f51ac5dce6f4410e3dc3921c53ae317c63cfe42884b73974c612571772034076",
                          "typeString": "literal_string \"mgv/reentrancyLocked\""
                        },
                        "value": "mgv/reentrancyLocked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f51ac5dce6f4410e3dc3921c53ae317c63cfe42884b73974c612571772034076",
                          "typeString": "literal_string \"mgv/reentrancyLocked\""
                        }
                      ],
                      "expression": {
                        "id": 51788,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "11128:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 51790,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "11128:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 51792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11128:39:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51793,
                  "nodeType": "ExpressionStatement",
                  "src": "11128:39:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 51798,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "11188:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 51797,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "11186:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 51799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11186:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 51801,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "11197:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 51800,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "11195:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 51802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11195:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 51803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11205:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 51804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11214:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "33305f303030",
                        "id": 51805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11223:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30000_by_1",
                          "typeString": "int_const 30000"
                        },
                        "value": "30_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 51806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11231:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 51807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11234:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_30000_by_1",
                          "typeString": "int_const 30000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 51794,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "11173:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 51796,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25045,
                      "src": "11173:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 51808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11173:63:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 51809,
                  "nodeType": "ExpressionStatement",
                  "src": "11173:63:90"
                }
              ]
            },
            "functionSelector": "b0a706b9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newOfferKO",
            "nameLocation": "11100:10:90",
            "parameters": {
              "id": 51786,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11110:2:90"
            },
            "returnParameters": {
              "id": 51787,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11122:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51850,
            "nodeType": "FunctionDefinition",
            "src": "11245:267:90",
            "body": {
              "id": 51849,
              "nodeType": "Block",
              "src": "11297:215:90",
              "statements": [
                {
                  "assignments": [51815],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51815,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "11308:3:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 51849,
                      "src": "11303:8:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 51814,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11303:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51830,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 51819,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "11329:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 51818,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "11327:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 51820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11327:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 51822,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "11338:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 51821,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "11336:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 51823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11336:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 51824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11346:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 51825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11355:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 51826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11364:7:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 51827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11373:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 51828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11376:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 51816,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "11314:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 51817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25045,
                      "src": "11314:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 51829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11314:64:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11303:75:90"
                },
                {
                  "expression": {
                    "id": 51838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51831,
                      "name": "trade_cb",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51698,
                      "src": "11384:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 51834,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "11410:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$53439",
                              "typeString": "contract GatekeepingTest"
                            }
                          },
                          "id": 51835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "newOfferKO",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51811,
                          "src": "11410:15:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                            "typeString": "function () external"
                          }
                        },
                        {
                          "components": [],
                          "id": 51836,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "11427:2:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                            "typeString": "function () external"
                          },
                          {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        ],
                        "expression": {
                          "id": 51832,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "11395:3:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 51833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodeCall",
                        "nodeType": "MemberAccess",
                        "src": "11395:14:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 51837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11395:35:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "11384:46:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 51839,
                  "nodeType": "ExpressionStatement",
                  "src": "11384:46:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 51843,
                            "name": "ofr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51815,
                            "src": "11456:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 51844,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11461:7:90",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 51841,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50051,
                            "src": "11447:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          },
                          "id": 51842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "take",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 73782,
                          "src": "11447:8:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256,uint256) external returns (bool)"
                          }
                        },
                        "id": 51845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11447:22:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74616b65206d7573742073756363656564206f72207465737420697320766f6964",
                        "id": 51846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11471:35:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        },
                        "value": "take must succeed or test is void"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        }
                      ],
                      "id": 51840,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "11436:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 51847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11436:71:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51848,
                  "nodeType": "ExpressionStatement",
                  "src": "11436:71:90"
                }
              ]
            },
            "functionSelector": "26210efb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_newOffer_on_reentrancy_fails",
            "nameLocation": "11254:33:90",
            "parameters": {
              "id": 51812,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11287:2:90"
            },
            "returnParameters": {
              "id": 51813,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11297:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 51870,
            "nodeType": "FunctionDefinition",
            "src": "11595:130:90",
            "body": {
              "id": 51869,
              "nodeType": "Block",
              "src": "11655:70:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51860,
                        "name": "_base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51852,
                        "src": "11674:5:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 51861,
                        "name": "_quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51854,
                        "src": "11681:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 51862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11689:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 51863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11698:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "33305f303030",
                        "id": 51864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11707:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30000_by_1",
                          "typeString": "int_const 30000"
                        },
                        "value": "30_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 51865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11715:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 51866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11718:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_30000_by_1",
                          "typeString": "int_const 30000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 51857,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "11661:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 51859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25045,
                      "src": "11661:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 51867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11661:59:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 51868,
                  "nodeType": "ExpressionStatement",
                  "src": "11661:59:90"
                }
              ]
            },
            "functionSelector": "e2d73418",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newOfferOK",
            "nameLocation": "11604:10:90",
            "parameters": {
              "id": 51855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51852,
                  "mutability": "mutable",
                  "name": "_base",
                  "nameLocation": "11623:5:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 51870,
                  "src": "11615:13:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51851,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11615:7:90",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51854,
                  "mutability": "mutable",
                  "name": "_quote",
                  "nameLocation": "11638:6:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 51870,
                  "src": "11630:14:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51853,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11630:7:90",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11614:31:90"
            },
            "returnParameters": {
              "id": 51856,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11655:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51930,
            "nodeType": "FunctionDefinition",
            "src": "11729:393:90",
            "body": {
              "id": 51929,
              "nodeType": "Block",
              "src": "11784:338:90",
              "statements": [
                {
                  "assignments": [51874],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51874,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "11795:3:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 51929,
                      "src": "11790:8:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 51873,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11790:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51889,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 51878,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "11816:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 51877,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "11814:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 51879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11814:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 51881,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "11825:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 51880,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "11823:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 51882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11823:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 51883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11833:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 51884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11842:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3230305f303030",
                        "id": 51885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11851:7:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000_by_1",
                          "typeString": "int_const 200000"
                        },
                        "value": "200_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 51886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11860:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 51887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11863:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_200000_by_1",
                          "typeString": "int_const 200000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 51875,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "11801:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 51876,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25045,
                      "src": "11801:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 51888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11801:64:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11790:75:90"
                },
                {
                  "expression": {
                    "id": 51903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51890,
                      "name": "trade_cb",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51698,
                      "src": "11871:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 51893,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "11897:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$53439",
                              "typeString": "contract GatekeepingTest"
                            }
                          },
                          "id": 51894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "newOfferOK",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51870,
                          "src": "11897:15:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                            "typeString": "function (address,address) external"
                          }
                        },
                        {
                          "components": [
                            {
                              "arguments": [
                                {
                                  "id": 51896,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69385,
                                  "src": "11917:5:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 51895,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  70446, 70463, 70480, 70497, 70514
                                ],
                                "referencedDeclaration": 70514,
                                "src": "11915:1:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 51897,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11915:8:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 51899,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69382,
                                  "src": "11927:4:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 51898,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  70446, 70463, 70480, 70497, 70514
                                ],
                                "referencedDeclaration": 70514,
                                "src": "11925:1:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 51900,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11925:7:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "id": 51901,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "11914:19:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$",
                            "typeString": "tuple(address payable,address payable)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                            "typeString": "function (address,address) external"
                          },
                          {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$",
                            "typeString": "tuple(address payable,address payable)"
                          }
                        ],
                        "expression": {
                          "id": 51891,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "11882:3:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 51892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodeCall",
                        "nodeType": "MemberAccess",
                        "src": "11882:14:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 51902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11882:52:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "11871:63:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 51904,
                  "nodeType": "ExpressionStatement",
                  "src": "11871:63:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 51908,
                            "name": "ofr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51874,
                            "src": "11960:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 51909,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11965:7:90",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 51906,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50051,
                            "src": "11951:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          },
                          "id": 51907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "take",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 73782,
                          "src": "11951:8:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256,uint256) external returns (bool)"
                          }
                        },
                        "id": 51910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11951:22:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74616b65206d7573742073756363656564206f72207465737420697320766f6964",
                        "id": 51911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11975:35:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        },
                        "value": "take must succeed or test is void"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        }
                      ],
                      "id": 51905,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "11940:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 51912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11940:71:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51913,
                  "nodeType": "ExpressionStatement",
                  "src": "11940:71:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 51925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 51918,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69385,
                                  "src": "12046:5:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 51917,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  70446, 70463, 70480, 70497, 70514
                                ],
                                "referencedDeclaration": 70514,
                                "src": "12044:1:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 51919,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12044:8:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 51921,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69382,
                                  "src": "12056:4:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 51920,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  70446, 70463, 70480, 70497, 70514
                                ],
                                "referencedDeclaration": 70514,
                                "src": "12054:1:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 51922,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12054:7:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 51915,
                              "name": "mgv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69379,
                              "src": "12035:3:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                                "typeString": "contract AbstractMangrove"
                              }
                            },
                            "id": 51916,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "best",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24245,
                            "src": "12035:8:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 51923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12035:27:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 51924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12066:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "12035:32:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e65774f66666572206f6e20737761707065642070616972206d75737420776f726b",
                        "id": 51926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12075:36:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_486287e9de9f1fefa3b149b3160c2efcc1f37fd3febb5c9ebcf90a35c96e07e9",
                          "typeString": "literal_string \"newOffer on swapped pair must work\""
                        },
                        "value": "newOffer on swapped pair must work"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_486287e9de9f1fefa3b149b3160c2efcc1f37fd3febb5c9ebcf90a35c96e07e9",
                          "typeString": "literal_string \"newOffer on swapped pair must work\""
                        }
                      ],
                      "id": 51914,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "12017:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 51927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12017:100:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51928,
                  "nodeType": "ExpressionStatement",
                  "src": "12017:100:90"
                }
              ]
            },
            "functionSelector": "457dd4c5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_newOffer_on_reentrancy_succeeds",
            "nameLocation": "11738:36:90",
            "parameters": {
              "id": 51871,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11774:2:90"
            },
            "returnParameters": {
              "id": 51872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11784:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 51990,
            "nodeType": "FunctionDefinition",
            "src": "12126:390:90",
            "body": {
              "id": 51989,
              "nodeType": "Block",
              "src": "12179:337:90",
              "statements": [
                {
                  "assignments": [51934],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51934,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "12190:3:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 51989,
                      "src": "12185:8:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 51933,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12185:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51949,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 51938,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "12211:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 51937,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "12209:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 51939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12209:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 51941,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "12220:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 51940,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "12218:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 51942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12218:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 51943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12228:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 51944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12237:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3230305f303030",
                        "id": 51945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12246:7:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000_by_1",
                          "typeString": "int_const 200000"
                        },
                        "value": "200_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 51946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12255:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 51947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12258:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_200000_by_1",
                          "typeString": "int_const 200000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 51935,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "12196:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 51936,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25045,
                      "src": "12196:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 51948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12196:64:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12185:75:90"
                },
                {
                  "expression": {
                    "id": 51963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51950,
                      "name": "posthook_cb",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51700,
                      "src": "12266:11:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 51953,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12295:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$53439",
                              "typeString": "contract GatekeepingTest"
                            }
                          },
                          "id": 51954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "newOfferOK",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51870,
                          "src": "12295:15:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                            "typeString": "function (address,address) external"
                          }
                        },
                        {
                          "components": [
                            {
                              "arguments": [
                                {
                                  "id": 51956,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69382,
                                  "src": "12315:4:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 51955,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  70446, 70463, 70480, 70497, 70514
                                ],
                                "referencedDeclaration": 70514,
                                "src": "12313:1:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 51957,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12313:7:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 51959,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69385,
                                  "src": "12324:5:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 51958,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  70446, 70463, 70480, 70497, 70514
                                ],
                                "referencedDeclaration": 70514,
                                "src": "12322:1:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 51960,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12322:8:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "id": 51961,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "12312:19:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$",
                            "typeString": "tuple(address payable,address payable)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                            "typeString": "function (address,address) external"
                          },
                          {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$",
                            "typeString": "tuple(address payable,address payable)"
                          }
                        ],
                        "expression": {
                          "id": 51951,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "12280:3:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 51952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodeCall",
                        "nodeType": "MemberAccess",
                        "src": "12280:14:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 51962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12280:52:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "12266:66:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 51964,
                  "nodeType": "ExpressionStatement",
                  "src": "12266:66:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 51968,
                            "name": "ofr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51934,
                            "src": "12358:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 51969,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12363:7:90",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 51966,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50051,
                            "src": "12349:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          },
                          "id": 51967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "take",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 73782,
                          "src": "12349:8:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256,uint256) external returns (bool)"
                          }
                        },
                        "id": 51970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12349:22:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74616b65206d7573742073756363656564206f72207465737420697320766f6964",
                        "id": 51971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12373:35:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        },
                        "value": "take must succeed or test is void"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        }
                      ],
                      "id": 51965,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "12338:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 51972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12338:71:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51973,
                  "nodeType": "ExpressionStatement",
                  "src": "12338:71:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 51985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 51978,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69382,
                                  "src": "12444:4:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 51977,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  70446, 70463, 70480, 70497, 70514
                                ],
                                "referencedDeclaration": 70514,
                                "src": "12442:1:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 51979,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12442:7:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 51981,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69385,
                                  "src": "12453:5:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 51980,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  70446, 70463, 70480, 70497, 70514
                                ],
                                "referencedDeclaration": 70514,
                                "src": "12451:1:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 51982,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12451:8:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 51975,
                              "name": "mgv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69379,
                              "src": "12433:3:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                                "typeString": "contract AbstractMangrove"
                              }
                            },
                            "id": 51976,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "best",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24245,
                            "src": "12433:8:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 51983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12433:27:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 51984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12464:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "12433:32:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e65774f66666572206f6e20706f7374686f6f6b206d75737420776f726b",
                        "id": 51986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12473:32:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9390d83bf219e9a5c0517af90a1e9db9175cebd36dff19496b9fd70fb2373a0d",
                          "typeString": "literal_string \"newOffer on posthook must work\""
                        },
                        "value": "newOffer on posthook must work"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9390d83bf219e9a5c0517af90a1e9db9175cebd36dff19496b9fd70fb2373a0d",
                          "typeString": "literal_string \"newOffer on posthook must work\""
                        }
                      ],
                      "id": 51974,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "12415:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 51987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12415:96:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51988,
                  "nodeType": "ExpressionStatement",
                  "src": "12415:96:90"
                }
              ]
            },
            "functionSelector": "521d68a6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_newOffer_on_posthook_succeeds",
            "nameLocation": "12135:34:90",
            "parameters": {
              "id": 51931,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12169:2:90"
            },
            "returnParameters": {
              "id": 51932,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12179:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 52019,
            "nodeType": "FunctionDefinition",
            "src": "12550:169:90",
            "body": {
              "id": 52018,
              "nodeType": "Block",
              "src": "12592:127:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f7265656e7472616e63794c6f636b6564",
                        "id": 51998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12614:22:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f51ac5dce6f4410e3dc3921c53ae317c63cfe42884b73974c612571772034076",
                          "typeString": "literal_string \"mgv/reentrancyLocked\""
                        },
                        "value": "mgv/reentrancyLocked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f51ac5dce6f4410e3dc3921c53ae317c63cfe42884b73974c612571772034076",
                          "typeString": "literal_string \"mgv/reentrancyLocked\""
                        }
                      ],
                      "expression": {
                        "id": 51995,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "12598:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 51997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "12598:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 51999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12598:39:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52000,
                  "nodeType": "ExpressionStatement",
                  "src": "12598:39:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52005,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "12661:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52004,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "12659:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12659:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 52008,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "12670:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52007,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "12668:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12668:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 52010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12678:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "32",
                        "id": 52011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12687:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "33355f303030",
                        "id": 52012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12696:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_35000_by_1",
                          "typeString": "int_const 35000"
                        },
                        "value": "35_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 52013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12704:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 52014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12707:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 52015,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51992,
                        "src": "12710:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_35000_by_1",
                          "typeString": "int_const 35000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 52001,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "12643:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 52003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25200,
                      "src": "12643:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256,uint256) payable external"
                      }
                    },
                    "id": 52016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12643:71:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52017,
                  "nodeType": "ExpressionStatement",
                  "src": "12643:71:90"
                }
              ]
            },
            "functionSelector": "330ff418",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateOfferKO",
            "nameLocation": "12559:13:90",
            "parameters": {
              "id": 51993,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51992,
                  "mutability": "mutable",
                  "name": "ofr",
                  "nameLocation": "12578:3:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 52019,
                  "src": "12573:8:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51991,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12573:4:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12572:10:90"
            },
            "returnParameters": {
              "id": 51994,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12592:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 52059,
            "nodeType": "FunctionDefinition",
            "src": "12723:276:90",
            "body": {
              "id": 52058,
              "nodeType": "Block",
              "src": "12778:221:90",
              "statements": [
                {
                  "assignments": [52023],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52023,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "12789:3:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 52058,
                      "src": "12784:8:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 52022,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12784:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 52038,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52027,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "12810:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52026,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "12808:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12808:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 52030,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "12819:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52029,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "12817:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12817:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 52032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12827:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 52033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12836:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 52034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12845:7:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 52035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12854:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 52036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12857:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 52024,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "12795:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 52025,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25045,
                      "src": "12795:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 52037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12795:64:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12784:75:90"
                },
                {
                  "expression": {
                    "id": 52047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 52039,
                      "name": "trade_cb",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51698,
                      "src": "12865:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 52042,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12891:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$53439",
                              "typeString": "contract GatekeepingTest"
                            }
                          },
                          "id": 52043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "updateOfferKO",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52019,
                          "src": "12891:18:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256) external"
                          }
                        },
                        {
                          "components": [
                            {
                              "id": 52044,
                              "name": "ofr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52023,
                              "src": "12912:3:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 52045,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "12911:5:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256) external"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 52040,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "12876:3:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 52041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodeCall",
                        "nodeType": "MemberAccess",
                        "src": "12876:14:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 52046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12876:41:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "12865:52:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 52048,
                  "nodeType": "ExpressionStatement",
                  "src": "12865:52:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52052,
                            "name": "ofr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52023,
                            "src": "12943:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 52053,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12948:7:90",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 52050,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50051,
                            "src": "12934:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          },
                          "id": 52051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "take",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 73782,
                          "src": "12934:8:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256,uint256) external returns (bool)"
                          }
                        },
                        "id": 52054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12934:22:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74616b65206d7573742073756363656564206f72207465737420697320766f6964",
                        "id": 52055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12958:35:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        },
                        "value": "take must succeed or test is void"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        }
                      ],
                      "id": 52049,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "12923:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 52056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12923:71:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52057,
                  "nodeType": "ExpressionStatement",
                  "src": "12923:71:90"
                }
              ]
            },
            "functionSelector": "d61a7b90",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_updateOffer_on_reentrancy_fails",
            "nameLocation": "12732:36:90",
            "parameters": {
              "id": 52020,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12768:2:90"
            },
            "returnParameters": {
              "id": 52021,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12778:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 52082,
            "nodeType": "FunctionDefinition",
            "src": "13085:167:90",
            "body": {
              "id": 52081,
              "nodeType": "Block",
              "src": "13174:78:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 52071,
                        "name": "_base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52061,
                        "src": "13196:5:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 52072,
                        "name": "_quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52063,
                        "src": "13203:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 52073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13211:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "32",
                        "id": 52074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13220:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "33355f303030",
                        "id": 52075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13229:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_35000_by_1",
                          "typeString": "int_const 35000"
                        },
                        "value": "35_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 52076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13237:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 52077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13240:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 52078,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52065,
                        "src": "13243:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_35000_by_1",
                          "typeString": "int_const 35000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 52068,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "13180:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 52070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25200,
                      "src": "13180:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256,uint256) payable external"
                      }
                    },
                    "id": 52079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13180:67:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52080,
                  "nodeType": "ExpressionStatement",
                  "src": "13180:67:90"
                }
              ]
            },
            "functionSelector": "c1285555",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateOfferOK",
            "nameLocation": "13094:13:90",
            "parameters": {
              "id": 52066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52061,
                  "mutability": "mutable",
                  "name": "_base",
                  "nameLocation": "13121:5:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 52082,
                  "src": "13113:13:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 52060,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13113:7:90",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52063,
                  "mutability": "mutable",
                  "name": "_quote",
                  "nameLocation": "13140:6:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 52082,
                  "src": "13132:14:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 52062,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13132:7:90",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52065,
                  "mutability": "mutable",
                  "name": "ofr",
                  "nameLocation": "13157:3:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 52082,
                  "src": "13152:8:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52064,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "13152:4:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13107:57:90"
            },
            "returnParameters": {
              "id": 52067,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13174:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 52163,
            "nodeType": "FunctionDefinition",
            "src": "13256:600:90",
            "body": {
              "id": 52162,
              "nodeType": "Block",
              "src": "13314:542:90",
              "statements": [
                {
                  "assignments": [52086],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52086,
                      "mutability": "mutable",
                      "name": "other_ofr",
                      "nameLocation": "13325:9:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 52162,
                      "src": "13320:14:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 52085,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13320:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 52101,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52090,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "13359:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52089,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "13357:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13357:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 52093,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "13375:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52092,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "13373:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13373:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 52095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13388:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 52096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13403:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 52097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13418:7:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 52098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13433:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 52099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13442:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 52087,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "13337:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 52088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25045,
                      "src": "13337:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 52100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13337:112:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13320:129:90"
                },
                {
                  "expression": {
                    "id": 52116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 52102,
                      "name": "trade_cb",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51698,
                      "src": "13456:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 52105,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "13489:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$53439",
                              "typeString": "contract GatekeepingTest"
                            }
                          },
                          "id": 52106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "updateOfferOK",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52082,
                          "src": "13489:18:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256) external"
                          }
                        },
                        {
                          "components": [
                            {
                              "arguments": [
                                {
                                  "id": 52108,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69385,
                                  "src": "13518:5:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 52107,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  70446, 70463, 70480, 70497, 70514
                                ],
                                "referencedDeclaration": 70514,
                                "src": "13516:1:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 52109,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13516:8:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 52111,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69382,
                                  "src": "13528:4:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 52110,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  70446, 70463, 70480, 70497, 70514
                                ],
                                "referencedDeclaration": 70514,
                                "src": "13526:1:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 52112,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13526:7:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 52113,
                              "name": "other_ofr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52086,
                              "src": "13535:9:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 52114,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "13515:30:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$_t_uint256_$",
                            "typeString": "tuple(address payable,address payable,uint256)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256) external"
                          },
                          {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$_t_uint256_$",
                            "typeString": "tuple(address payable,address payable,uint256)"
                          }
                        ],
                        "expression": {
                          "id": 52103,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "13467:3:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 52104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodeCall",
                        "nodeType": "MemberAccess",
                        "src": "13467:14:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 52115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13467:84:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "13456:95:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 52117,
                  "nodeType": "ExpressionStatement",
                  "src": "13456:95:90"
                },
                {
                  "assignments": [52119],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52119,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "13562:3:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 52162,
                      "src": "13557:8:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 52118,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13557:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 52134,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52123,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "13583:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52122,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "13581:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13581:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 52126,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "13592:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52125,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "13590:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13590:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 52128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13600:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 52129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13609:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3430305f303030",
                        "id": 52130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13618:7:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_400000_by_1",
                          "typeString": "int_const 400000"
                        },
                        "value": "400_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 52131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13627:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 52132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13630:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_400000_by_1",
                          "typeString": "int_const 400000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 52120,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "13568:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 52121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25045,
                      "src": "13568:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 52133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13568:64:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13557:75:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52138,
                            "name": "ofr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52119,
                            "src": "13658:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 52139,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13663:7:90",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 52136,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50051,
                            "src": "13649:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          },
                          "id": 52137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "take",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 73782,
                          "src": "13649:8:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256,uint256) external returns (bool)"
                          }
                        },
                        "id": 52140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13649:22:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74616b65206d7573742073756363656564206f72207465737420697320766f6964",
                        "id": 52141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13673:35:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        },
                        "value": "take must succeed or test is void"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        }
                      ],
                      "id": 52135,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "13638:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 52142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13638:71:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52143,
                  "nodeType": "ExpressionStatement",
                  "src": "13638:71:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 52158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 52148,
                                      "name": "quote",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 69385,
                                      "src": "13752:5:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TestToken_$76251",
                                        "typeString": "contract TestToken"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_TestToken_$76251",
                                        "typeString": "contract TestToken"
                                      }
                                    ],
                                    "id": 52147,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      70446, 70463, 70480, 70497, 70514
                                    ],
                                    "referencedDeclaration": 70514,
                                    "src": "13750:1:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                      "typeString": "function (contract IERC20) pure returns (address payable)"
                                    }
                                  },
                                  "id": 52149,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13750:8:90",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 52151,
                                      "name": "base",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 69382,
                                      "src": "13762:4:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TestToken_$76251",
                                        "typeString": "contract TestToken"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_TestToken_$76251",
                                        "typeString": "contract TestToken"
                                      }
                                    ],
                                    "id": 52150,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      70446, 70463, 70480, 70497, 70514
                                    ],
                                    "referencedDeclaration": 70514,
                                    "src": "13760:1:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                      "typeString": "function (contract IERC20) pure returns (address payable)"
                                    }
                                  },
                                  "id": 52152,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13760:7:90",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "id": 52153,
                                  "name": "other_ofr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 52086,
                                  "src": "13769:9:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 52145,
                                  "name": "mgv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69379,
                                  "src": "13733:3:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                                    "typeString": "contract AbstractMangrove"
                                  }
                                },
                                "id": 52146,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "offerDetails",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 24214,
                                "src": "13733:16:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_userDefinedValueType$_t_$32720_$",
                                  "typeString": "function (address,address,uint256) view external returns (t)"
                                }
                              },
                              "id": 52154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13733:46:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_t_$32720",
                                "typeString": "t"
                              }
                            },
                            "id": 52155,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "gasreq",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 33049,
                            "src": "13733:53:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$32720_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$32720_$",
                              "typeString": "function (t) pure returns (uint256)"
                            }
                          },
                          "id": 52156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13733:55:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "33355f303030",
                          "id": 52157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13792:6:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_35000_by_1",
                            "typeString": "int_const 35000"
                          },
                          "value": "35_000"
                        },
                        "src": "13733:65:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7570646174654f66666572206f6e20737761707065642070616972206d75737420776f726b",
                        "id": 52159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13806:39:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e9080d07fac4757dc7a5ebafe72b4a330589c1aff9331b4e2218cde50d11ba64",
                          "typeString": "literal_string \"updateOffer on swapped pair must work\""
                        },
                        "value": "updateOffer on swapped pair must work"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e9080d07fac4757dc7a5ebafe72b4a330589c1aff9331b4e2218cde50d11ba64",
                          "typeString": "literal_string \"updateOffer on swapped pair must work\""
                        }
                      ],
                      "id": 52144,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "13715:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 52160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13715:136:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52161,
                  "nodeType": "ExpressionStatement",
                  "src": "13715:136:90"
                }
              ]
            },
            "functionSelector": "39ee6a91",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_updateOffer_on_reentrancy_succeeds",
            "nameLocation": "13265:39:90",
            "parameters": {
              "id": 52083,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13304:2:90"
            },
            "returnParameters": {
              "id": 52084,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13314:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 52244,
            "nodeType": "FunctionDefinition",
            "src": "13860:596:90",
            "body": {
              "id": 52243,
              "nodeType": "Block",
              "src": "13916:540:90",
              "statements": [
                {
                  "assignments": [52167],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52167,
                      "mutability": "mutable",
                      "name": "other_ofr",
                      "nameLocation": "13927:9:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 52243,
                      "src": "13922:14:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 52166,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13922:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 52182,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52171,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "13961:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52170,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "13959:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13959:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 52174,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "13976:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52173,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "13974:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13974:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 52176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13990:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 52177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14005:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 52178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14020:7:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 52179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14035:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 52180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14044:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 52168,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "13939:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 52169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25045,
                      "src": "13939:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 52181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13939:112:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13922:129:90"
                },
                {
                  "expression": {
                    "id": 52197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 52183,
                      "name": "posthook_cb",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51700,
                      "src": "14057:11:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 52186,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "14093:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$53439",
                              "typeString": "contract GatekeepingTest"
                            }
                          },
                          "id": 52187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "updateOfferOK",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52082,
                          "src": "14093:18:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256) external"
                          }
                        },
                        {
                          "components": [
                            {
                              "arguments": [
                                {
                                  "id": 52189,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69382,
                                  "src": "14122:4:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 52188,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  70446, 70463, 70480, 70497, 70514
                                ],
                                "referencedDeclaration": 70514,
                                "src": "14120:1:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 52190,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14120:7:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 52192,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69385,
                                  "src": "14131:5:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 52191,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  70446, 70463, 70480, 70497, 70514
                                ],
                                "referencedDeclaration": 70514,
                                "src": "14129:1:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 52193,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14129:8:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 52194,
                              "name": "other_ofr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52167,
                              "src": "14139:9:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 52195,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "14119:30:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$_t_uint256_$",
                            "typeString": "tuple(address payable,address payable,uint256)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256) external"
                          },
                          {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$_t_uint256_$",
                            "typeString": "tuple(address payable,address payable,uint256)"
                          }
                        ],
                        "expression": {
                          "id": 52184,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "14071:3:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 52185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodeCall",
                        "nodeType": "MemberAccess",
                        "src": "14071:14:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 52196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14071:84:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "14057:98:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 52198,
                  "nodeType": "ExpressionStatement",
                  "src": "14057:98:90"
                },
                {
                  "assignments": [52200],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52200,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "14166:3:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 52243,
                      "src": "14161:8:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 52199,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14161:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 52215,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52204,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "14187:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52203,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "14185:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14185:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 52207,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "14196:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52206,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "14194:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14194:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 52209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14204:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 52210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14213:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3330305f303030",
                        "id": 52211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14222:7:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_300000_by_1",
                          "typeString": "int_const 300000"
                        },
                        "value": "300_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 52212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14231:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 52213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14234:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_300000_by_1",
                          "typeString": "int_const 300000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 52201,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "14172:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 52202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25045,
                      "src": "14172:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 52214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14172:64:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14161:75:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52219,
                            "name": "ofr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52200,
                            "src": "14262:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 52220,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14267:7:90",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 52217,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50051,
                            "src": "14253:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          },
                          "id": 52218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "take",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 73782,
                          "src": "14253:8:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256,uint256) external returns (bool)"
                          }
                        },
                        "id": 52221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14253:22:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74616b65206d7573742073756363656564206f72207465737420697320766f6964",
                        "id": 52222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14277:35:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        },
                        "value": "take must succeed or test is void"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        }
                      ],
                      "id": 52216,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "14242:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 52223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14242:71:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52224,
                  "nodeType": "ExpressionStatement",
                  "src": "14242:71:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 52239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 52229,
                                      "name": "base",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 69382,
                                      "src": "14356:4:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TestToken_$76251",
                                        "typeString": "contract TestToken"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_TestToken_$76251",
                                        "typeString": "contract TestToken"
                                      }
                                    ],
                                    "id": 52228,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      70446, 70463, 70480, 70497, 70514
                                    ],
                                    "referencedDeclaration": 70514,
                                    "src": "14354:1:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                      "typeString": "function (contract IERC20) pure returns (address payable)"
                                    }
                                  },
                                  "id": 52230,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14354:7:90",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 52232,
                                      "name": "quote",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 69385,
                                      "src": "14365:5:90",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TestToken_$76251",
                                        "typeString": "contract TestToken"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_TestToken_$76251",
                                        "typeString": "contract TestToken"
                                      }
                                    ],
                                    "id": 52231,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      70446, 70463, 70480, 70497, 70514
                                    ],
                                    "referencedDeclaration": 70514,
                                    "src": "14363:1:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                      "typeString": "function (contract IERC20) pure returns (address payable)"
                                    }
                                  },
                                  "id": 52233,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14363:8:90",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "id": 52234,
                                  "name": "other_ofr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 52167,
                                  "src": "14373:9:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 52226,
                                  "name": "mgv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69379,
                                  "src": "14337:3:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                                    "typeString": "contract AbstractMangrove"
                                  }
                                },
                                "id": 52227,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "offerDetails",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 24214,
                                "src": "14337:16:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_userDefinedValueType$_t_$32720_$",
                                  "typeString": "function (address,address,uint256) view external returns (t)"
                                }
                              },
                              "id": 52235,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14337:46:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_t_$32720",
                                "typeString": "t"
                              }
                            },
                            "id": 52236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "gasreq",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 33049,
                            "src": "14337:53:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$32720_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$32720_$",
                              "typeString": "function (t) pure returns (uint256)"
                            }
                          },
                          "id": 52237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14337:55:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "33355f303030",
                          "id": 52238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14396:6:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_35000_by_1",
                            "typeString": "int_const 35000"
                          },
                          "value": "35_000"
                        },
                        "src": "14337:65:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7570646174654f66666572206f6e20706f7374686f6f6b206d75737420776f726b",
                        "id": 52240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14410:35:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_edb2172f2b42bc9360f0dd3c37e7562cabb6b0f7a141798754977122686f43bf",
                          "typeString": "literal_string \"updateOffer on posthook must work\""
                        },
                        "value": "updateOffer on posthook must work"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_edb2172f2b42bc9360f0dd3c37e7562cabb6b0f7a141798754977122686f43bf",
                          "typeString": "literal_string \"updateOffer on posthook must work\""
                        }
                      ],
                      "id": 52225,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "14319:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 52241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14319:132:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52242,
                  "nodeType": "ExpressionStatement",
                  "src": "14319:132:90"
                }
              ]
            },
            "functionSelector": "4c6f09ee",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_updateOffer_on_posthook_succeeds",
            "nameLocation": "13869:37:90",
            "parameters": {
              "id": 52164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13906:2:90"
            },
            "returnParameters": {
              "id": 52165,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13916:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 52269,
            "nodeType": "FunctionDefinition",
            "src": "14490:144:90",
            "body": {
              "id": 52268,
              "nodeType": "Block",
              "src": "14532:102:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f7265656e7472616e63794c6f636b6564",
                        "id": 52252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14554:22:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f51ac5dce6f4410e3dc3921c53ae317c63cfe42884b73974c612571772034076",
                          "typeString": "literal_string \"mgv/reentrancyLocked\""
                        },
                        "value": "mgv/reentrancyLocked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f51ac5dce6f4410e3dc3921c53ae317c63cfe42884b73974c612571772034076",
                          "typeString": "literal_string \"mgv/reentrancyLocked\""
                        }
                      ],
                      "expression": {
                        "id": 52249,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "14538:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 52251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "14538:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 52253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14538:39:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52254,
                  "nodeType": "ExpressionStatement",
                  "src": "14538:39:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52259,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "14602:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52258,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "14600:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14600:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 52262,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "14611:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52261,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "14609:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14609:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 52264,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52246,
                        "src": "14619:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 52265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14623:5:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 52255,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "14583:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 52257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "retractOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25353,
                      "src": "14583:16:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,bool) external returns (uint256)"
                      }
                    },
                    "id": 52266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14583:46:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 52267,
                  "nodeType": "ExpressionStatement",
                  "src": "14583:46:90"
                }
              ]
            },
            "functionSelector": "1a58abf9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retractOfferKO",
            "nameLocation": "14499:14:90",
            "parameters": {
              "id": 52247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52246,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "14519:2:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 52269,
                  "src": "14514:7:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52245,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "14514:4:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14513:9:90"
            },
            "returnParameters": {
              "id": 52248,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14532:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 52309,
            "nodeType": "FunctionDefinition",
            "src": "14638:278:90",
            "body": {
              "id": 52308,
              "nodeType": "Block",
              "src": "14694:222:90",
              "statements": [
                {
                  "assignments": [52273],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52273,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "14705:3:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 52308,
                      "src": "14700:8:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 52272,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14700:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 52288,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52277,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "14726:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52276,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "14724:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14724:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 52280,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "14735:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52279,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "14733:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14733:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 52282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14743:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 52283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14752:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 52284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14761:7:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 52285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14770:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 52286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14773:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 52274,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "14711:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 52275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25045,
                      "src": "14711:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 52287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14711:64:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14700:75:90"
                },
                {
                  "expression": {
                    "id": 52297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 52289,
                      "name": "trade_cb",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51698,
                      "src": "14781:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 52292,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "14807:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$53439",
                              "typeString": "contract GatekeepingTest"
                            }
                          },
                          "id": 52293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "retractOfferKO",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52269,
                          "src": "14807:19:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256) external"
                          }
                        },
                        {
                          "components": [
                            {
                              "id": 52294,
                              "name": "ofr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52273,
                              "src": "14829:3:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 52295,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "14828:5:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256) external"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 52290,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "14792:3:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 52291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodeCall",
                        "nodeType": "MemberAccess",
                        "src": "14792:14:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 52296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14792:42:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "14781:53:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 52298,
                  "nodeType": "ExpressionStatement",
                  "src": "14781:53:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52302,
                            "name": "ofr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52273,
                            "src": "14860:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 52303,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14865:7:90",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 52300,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50051,
                            "src": "14851:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          },
                          "id": 52301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "take",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 73782,
                          "src": "14851:8:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256,uint256) external returns (bool)"
                          }
                        },
                        "id": 52304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14851:22:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74616b65206d7573742073756363656564206f72207465737420697320766f6964",
                        "id": 52305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14875:35:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        },
                        "value": "take must succeed or test is void"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        }
                      ],
                      "id": 52299,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "14840:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 52306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14840:71:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52307,
                  "nodeType": "ExpressionStatement",
                  "src": "14840:71:90"
                }
              ]
            },
            "functionSelector": "5b29cdf5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_retractOffer_on_reentrancy_fails",
            "nameLocation": "14647:37:90",
            "parameters": {
              "id": 52270,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14684:2:90"
            },
            "returnParameters": {
              "id": 52271,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14694:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 52335,
            "nodeType": "FunctionDefinition",
            "src": "14950:275:90",
            "body": {
              "id": 52334,
              "nodeType": "Block",
              "src": "15039:186:90",
              "statements": [
                {
                  "assignments": [52319],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52319,
                      "mutability": "mutable",
                      "name": "collected",
                      "nameLocation": "15050:9:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 52334,
                      "src": "15045:14:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 52318,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15045:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 52327,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 52322,
                        "name": "_base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52311,
                        "src": "15079:5:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 52323,
                        "name": "_quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52313,
                        "src": "15086:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 52324,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52315,
                        "src": "15094:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 52325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15098:5:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 52320,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "15062:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 52321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "retractOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25353,
                      "src": "15062:16:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,bool) external returns (uint256)"
                      }
                    },
                    "id": 52326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15062:42:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15045:59:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 52329,
                        "name": "collected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52319,
                        "src": "15126:9:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 52330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15143:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "556e657870656374656420636f6c6c65637465642070726f766973696f6e206166746572207265747261637420772f6f20646570726f766973696f6e",
                        "id": 52331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15152:62:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0ad1795c1ab2186b67fd3aa96b7764f67027122488c6b50ff81198f91db41814",
                          "typeString": "literal_string \"Unexpected collected provision after retract w/o deprovision\""
                        },
                        "value": "Unexpected collected provision after retract w/o deprovision"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0ad1795c1ab2186b67fd3aa96b7764f67027122488c6b50ff81198f91db41814",
                          "typeString": "literal_string \"Unexpected collected provision after retract w/o deprovision\""
                        }
                      ],
                      "id": 52328,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "15110:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 52332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15110:110:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52333,
                  "nodeType": "ExpressionStatement",
                  "src": "15110:110:90"
                }
              ]
            },
            "functionSelector": "5749f882",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retractOfferOK",
            "nameLocation": "14959:14:90",
            "parameters": {
              "id": 52316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52311,
                  "mutability": "mutable",
                  "name": "_base",
                  "nameLocation": "14987:5:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 52335,
                  "src": "14979:13:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 52310,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14979:7:90",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52313,
                  "mutability": "mutable",
                  "name": "_quote",
                  "nameLocation": "15006:6:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 52335,
                  "src": "14998:14:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 52312,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14998:7:90",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52315,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "15023:2:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 52335,
                  "src": "15018:7:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52314,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "15018:4:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14973:56:90"
            },
            "returnParameters": {
              "id": 52317,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15039:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 52413,
            "nodeType": "FunctionDefinition",
            "src": "15229:568:90",
            "body": {
              "id": 52412,
              "nodeType": "Block",
              "src": "15288:509:90",
              "statements": [
                {
                  "assignments": [52339],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52339,
                      "mutability": "mutable",
                      "name": "other_ofr",
                      "nameLocation": "15299:9:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 52412,
                      "src": "15294:14:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 52338,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15294:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 52354,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52343,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "15333:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52342,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "15331:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15331:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 52346,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "15349:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52345,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "15347:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15347:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 52348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15362:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 52349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15377:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "39305f303030",
                        "id": 52350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15392:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_90000_by_1",
                          "typeString": "int_const 90000"
                        },
                        "value": "90_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 52351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15406:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 52352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15415:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_90000_by_1",
                          "typeString": "int_const 90000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 52340,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "15311:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 52341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25045,
                      "src": "15311:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 52353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15311:111:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15294:128:90"
                },
                {
                  "expression": {
                    "id": 52369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 52355,
                      "name": "trade_cb",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51698,
                      "src": "15428:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 52358,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "15461:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$53439",
                              "typeString": "contract GatekeepingTest"
                            }
                          },
                          "id": 52359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "retractOfferOK",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52335,
                          "src": "15461:19:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256) external"
                          }
                        },
                        {
                          "components": [
                            {
                              "arguments": [
                                {
                                  "id": 52361,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69385,
                                  "src": "15491:5:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 52360,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  70446, 70463, 70480, 70497, 70514
                                ],
                                "referencedDeclaration": 70514,
                                "src": "15489:1:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 52362,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15489:8:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 52364,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69382,
                                  "src": "15501:4:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 52363,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  70446, 70463, 70480, 70497, 70514
                                ],
                                "referencedDeclaration": 70514,
                                "src": "15499:1:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 52365,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15499:7:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 52366,
                              "name": "other_ofr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52339,
                              "src": "15508:9:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 52367,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "15488:30:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$_t_uint256_$",
                            "typeString": "tuple(address payable,address payable,uint256)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256) external"
                          },
                          {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$_t_uint256_$",
                            "typeString": "tuple(address payable,address payable,uint256)"
                          }
                        ],
                        "expression": {
                          "id": 52356,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "15439:3:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 52357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodeCall",
                        "nodeType": "MemberAccess",
                        "src": "15439:14:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 52368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15439:85:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "15428:96:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 52370,
                  "nodeType": "ExpressionStatement",
                  "src": "15428:96:90"
                },
                {
                  "assignments": [52372],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52372,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "15536:3:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 52412,
                      "src": "15531:8:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 52371,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15531:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 52387,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52376,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "15557:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52375,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "15555:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15555:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 52379,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "15566:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52378,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "15564:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15564:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 52381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15574:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 52382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15583:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "39305f303030",
                        "id": 52383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15592:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_90000_by_1",
                          "typeString": "int_const 90000"
                        },
                        "value": "90_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 52384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15600:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 52385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15603:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_90000_by_1",
                          "typeString": "int_const 90000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 52373,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "15542:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 52374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25045,
                      "src": "15542:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 52386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15542:63:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15531:74:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52391,
                            "name": "ofr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52372,
                            "src": "15631:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 52392,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15636:7:90",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 52389,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50051,
                            "src": "15622:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          },
                          "id": 52390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "take",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 73782,
                          "src": "15622:8:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256,uint256) external returns (bool)"
                          }
                        },
                        "id": 52393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15622:22:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74616b65206d7573742073756363656564206f72207465737420697320766f6964",
                        "id": 52394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15646:35:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        },
                        "value": "take must succeed or test is void"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        }
                      ],
                      "id": 52388,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "15611:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 52395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15611:71:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52396,
                  "nodeType": "ExpressionStatement",
                  "src": "15611:71:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 52408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 52401,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69385,
                                  "src": "15717:5:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 52400,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  70446, 70463, 70480, 70497, 70514
                                ],
                                "referencedDeclaration": 70514,
                                "src": "15715:1:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 52402,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15715:8:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 52404,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69382,
                                  "src": "15727:4:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 52403,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  70446, 70463, 70480, 70497, 70514
                                ],
                                "referencedDeclaration": 70514,
                                "src": "15725:1:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 52405,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15725:7:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 52398,
                              "name": "mgv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69379,
                              "src": "15706:3:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                                "typeString": "contract AbstractMangrove"
                              }
                            },
                            "id": 52399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "best",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24245,
                            "src": "15706:8:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 52406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15706:27:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 52407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15737:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "15706:32:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "726574726163744f66666572206f6e20737761707065642070616972206d75737420776f726b",
                        "id": 52409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15746:40:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b495c1dcc28f28f389ebbe19e4efb922fb42e63ca855714378580e9e246162be",
                          "typeString": "literal_string \"retractOffer on swapped pair must work\""
                        },
                        "value": "retractOffer on swapped pair must work"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b495c1dcc28f28f389ebbe19e4efb922fb42e63ca855714378580e9e246162be",
                          "typeString": "literal_string \"retractOffer on swapped pair must work\""
                        }
                      ],
                      "id": 52397,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "15688:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 52410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15688:104:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52411,
                  "nodeType": "ExpressionStatement",
                  "src": "15688:104:90"
                }
              ]
            },
            "functionSelector": "cae50f54",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_retractOffer_on_reentrancy_succeeds",
            "nameLocation": "15238:40:90",
            "parameters": {
              "id": 52336,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15278:2:90"
            },
            "returnParameters": {
              "id": 52337,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15288:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 52491,
            "nodeType": "FunctionDefinition",
            "src": "15801:566:90",
            "body": {
              "id": 52490,
              "nodeType": "Block",
              "src": "15858:509:90",
              "statements": [
                {
                  "assignments": [52417],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52417,
                      "mutability": "mutable",
                      "name": "other_ofr",
                      "nameLocation": "15869:9:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 52490,
                      "src": "15864:14:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 52416,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15864:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 52432,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52421,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "15903:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52420,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "15901:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15901:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 52424,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "15918:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52423,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "15916:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15916:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 52426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15932:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 52427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15947:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3139305f303030",
                        "id": 52428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15962:7:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_190000_by_1",
                          "typeString": "int_const 190000"
                        },
                        "value": "190_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 52429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15977:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 52430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15986:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_190000_by_1",
                          "typeString": "int_const 190000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 52418,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "15881:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 52419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25045,
                      "src": "15881:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 52431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15881:112:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15864:129:90"
                },
                {
                  "expression": {
                    "id": 52447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 52433,
                      "name": "posthook_cb",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51700,
                      "src": "15999:11:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 52436,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "16035:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$53439",
                              "typeString": "contract GatekeepingTest"
                            }
                          },
                          "id": 52437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "retractOfferOK",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52335,
                          "src": "16035:19:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256) external"
                          }
                        },
                        {
                          "components": [
                            {
                              "arguments": [
                                {
                                  "id": 52439,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69382,
                                  "src": "16065:4:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 52438,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  70446, 70463, 70480, 70497, 70514
                                ],
                                "referencedDeclaration": 70514,
                                "src": "16063:1:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 52440,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16063:7:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 52442,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69385,
                                  "src": "16074:5:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 52441,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  70446, 70463, 70480, 70497, 70514
                                ],
                                "referencedDeclaration": 70514,
                                "src": "16072:1:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 52443,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16072:8:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 52444,
                              "name": "other_ofr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52417,
                              "src": "16082:9:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 52445,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "16062:30:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$_t_uint256_$",
                            "typeString": "tuple(address payable,address payable,uint256)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256) external"
                          },
                          {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$_t_uint256_$",
                            "typeString": "tuple(address payable,address payable,uint256)"
                          }
                        ],
                        "expression": {
                          "id": 52434,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "16013:3:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 52435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodeCall",
                        "nodeType": "MemberAccess",
                        "src": "16013:14:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 52446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16013:85:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "15999:99:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 52448,
                  "nodeType": "ExpressionStatement",
                  "src": "15999:99:90"
                },
                {
                  "assignments": [52450],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52450,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "16110:3:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 52490,
                      "src": "16105:8:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 52449,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "16105:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 52465,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52454,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "16131:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52453,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "16129:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16129:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 52457,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "16140:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52456,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "16138:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16138:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 52459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16148:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 52460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16157:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "39305f303030",
                        "id": 52461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16166:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_90000_by_1",
                          "typeString": "int_const 90000"
                        },
                        "value": "90_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 52462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16174:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 52463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16177:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_90000_by_1",
                          "typeString": "int_const 90000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 52451,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "16116:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 52452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25045,
                      "src": "16116:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 52464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16116:63:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16105:74:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52469,
                            "name": "ofr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52450,
                            "src": "16205:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 52470,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16210:7:90",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 52467,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50051,
                            "src": "16196:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          },
                          "id": 52468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "take",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 73782,
                          "src": "16196:8:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256,uint256) external returns (bool)"
                          }
                        },
                        "id": 52471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16196:22:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74616b65206d7573742073756363656564206f72207465737420697320766f6964",
                        "id": 52472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16220:35:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        },
                        "value": "take must succeed or test is void"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        }
                      ],
                      "id": 52466,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "16185:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 52473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16185:71:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52474,
                  "nodeType": "ExpressionStatement",
                  "src": "16185:71:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 52486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 52479,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69382,
                                  "src": "16291:4:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 52478,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  70446, 70463, 70480, 70497, 70514
                                ],
                                "referencedDeclaration": 70514,
                                "src": "16289:1:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 52480,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16289:7:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 52482,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69385,
                                  "src": "16300:5:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 52481,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  70446, 70463, 70480, 70497, 70514
                                ],
                                "referencedDeclaration": 70514,
                                "src": "16298:1:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 52483,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16298:8:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 52476,
                              "name": "mgv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69379,
                              "src": "16280:3:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                                "typeString": "contract AbstractMangrove"
                              }
                            },
                            "id": 52477,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "best",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24245,
                            "src": "16280:8:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 52484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16280:27:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 52485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16311:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "16280:32:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "726574726163744f66666572206f6e20706f7374686f6f6b206d75737420776f726b",
                        "id": 52487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16320:36:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_21ba870f2ed133776d0218536f34042df3e90df1f506e6c99730d2238132c1a2",
                          "typeString": "literal_string \"retractOffer on posthook must work\""
                        },
                        "value": "retractOffer on posthook must work"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_21ba870f2ed133776d0218536f34042df3e90df1f506e6c99730d2238132c1a2",
                          "typeString": "literal_string \"retractOffer on posthook must work\""
                        }
                      ],
                      "id": 52475,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "16262:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 52488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16262:100:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52489,
                  "nodeType": "ExpressionStatement",
                  "src": "16262:100:90"
                }
              ]
            },
            "functionSelector": "caf1b8db",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_retractOffer_on_posthook_succeeds",
            "nameLocation": "15810:38:90",
            "parameters": {
              "id": 52414,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15848:2:90"
            },
            "returnParameters": {
              "id": 52415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15858:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 52515,
            "nodeType": "FunctionDefinition",
            "src": "16401:152:90",
            "body": {
              "id": 52514,
              "nodeType": "Block",
              "src": "16435:118:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f7265656e7472616e63794c6f636b6564",
                        "id": 52497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16457:22:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f51ac5dce6f4410e3dc3921c53ae317c63cfe42884b73974c612571772034076",
                          "typeString": "literal_string \"mgv/reentrancyLocked\""
                        },
                        "value": "mgv/reentrancyLocked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f51ac5dce6f4410e3dc3921c53ae317c63cfe42884b73974c612571772034076",
                          "typeString": "literal_string \"mgv/reentrancyLocked\""
                        }
                      ],
                      "expression": {
                        "id": 52494,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "16441:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 52496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "16441:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 52498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16441:39:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52499,
                  "nodeType": "ExpressionStatement",
                  "src": "16441:39:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52504,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "16504:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52503,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "16502:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16502:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 52507,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "16513:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52506,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "16511:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16511:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "302e32",
                        "id": 52509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16521:9:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000000000000000_by_1",
                          "typeString": "int_const 200000000000000000"
                        },
                        "value": "0.2"
                      },
                      {
                        "hexValue": "302e32",
                        "id": 52510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16532:9:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000000000000000_by_1",
                          "typeString": "int_const 200000000000000000"
                        },
                        "value": "0.2"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 52511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16543:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_200000000000000000_by_1",
                          "typeString": "int_const 200000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_200000000000000000_by_1",
                          "typeString": "int_const 200000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 52500,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "16486:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 52502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26236,
                      "src": "16486:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 52512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16486:62:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 52513,
                  "nodeType": "ExpressionStatement",
                  "src": "16486:62:90"
                }
              ]
            },
            "functionSelector": "3566f61b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "marketOrderKO",
            "nameLocation": "16410:13:90",
            "parameters": {
              "id": 52492,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16423:2:90"
            },
            "returnParameters": {
              "id": 52493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16435:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 52554,
            "nodeType": "FunctionDefinition",
            "src": "16557:275:90",
            "body": {
              "id": 52553,
              "nodeType": "Block",
              "src": "16612:220:90",
              "statements": [
                {
                  "assignments": [52519],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52519,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "16623:3:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 52553,
                      "src": "16618:8:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 52518,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "16618:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 52534,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52523,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "16644:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52522,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "16642:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16642:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 52526,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "16653:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52525,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "16651:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16651:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 52528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16661:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 52529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16670:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 52530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16679:7:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 52531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16688:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 52532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16691:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 52520,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "16629:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 52521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25045,
                      "src": "16629:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 52533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16629:64:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16618:75:90"
                },
                {
                  "expression": {
                    "id": 52542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 52535,
                      "name": "trade_cb",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51698,
                      "src": "16699:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 52538,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "16725:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$53439",
                              "typeString": "contract GatekeepingTest"
                            }
                          },
                          "id": 52539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "marketOrderKO",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52515,
                          "src": "16725:18:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                            "typeString": "function () external"
                          }
                        },
                        {
                          "components": [],
                          "id": 52540,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "16745:2:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                            "typeString": "function () external"
                          },
                          {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        ],
                        "expression": {
                          "id": 52536,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "16710:3:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 52537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodeCall",
                        "nodeType": "MemberAccess",
                        "src": "16710:14:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 52541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16710:38:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "16699:49:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 52543,
                  "nodeType": "ExpressionStatement",
                  "src": "16699:49:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52547,
                            "name": "ofr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52519,
                            "src": "16774:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "302e31",
                            "id": 52548,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16779:9:90",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            },
                            "value": "0.1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 52545,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50051,
                            "src": "16765:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          },
                          "id": 52546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "take",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 73782,
                          "src": "16765:8:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256,uint256) external returns (bool)"
                          }
                        },
                        "id": 52549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16765:24:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74616b65206d7573742073756363656564206f72207465737420697320766f6964",
                        "id": 52550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16791:35:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        },
                        "value": "take must succeed or test is void"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        }
                      ],
                      "id": 52544,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "16754:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 52551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16754:73:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52552,
                  "nodeType": "ExpressionStatement",
                  "src": "16754:73:90"
                }
              ]
            },
            "functionSelector": "2b67606d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_marketOrder_on_reentrancy_fails",
            "nameLocation": "16566:36:90",
            "parameters": {
              "id": 52516,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16602:2:90"
            },
            "returnParameters": {
              "id": 52517,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16612:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 52572,
            "nodeType": "FunctionDefinition",
            "src": "16866:132:90",
            "body": {
              "id": 52571,
              "nodeType": "Block",
              "src": "16929:69:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 52564,
                        "name": "_base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52556,
                        "src": "16951:5:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 52565,
                        "name": "_quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52558,
                        "src": "16958:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "302e35",
                        "id": 52566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16966:9:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "value": "0.5"
                      },
                      {
                        "hexValue": "302e35",
                        "id": 52567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16977:9:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "value": "0.5"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 52568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16988:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 52561,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "16935:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 52563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26236,
                      "src": "16935:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 52569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16935:58:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 52570,
                  "nodeType": "ExpressionStatement",
                  "src": "16935:58:90"
                }
              ]
            },
            "functionSelector": "a00ecff3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "marketOrderOK",
            "nameLocation": "16875:13:90",
            "parameters": {
              "id": 52559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52556,
                  "mutability": "mutable",
                  "name": "_base",
                  "nameLocation": "16897:5:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 52572,
                  "src": "16889:13:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 52555,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16889:7:90",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52558,
                  "mutability": "mutable",
                  "name": "_quote",
                  "nameLocation": "16912:6:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 52572,
                  "src": "16904:14:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 52557,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16904:7:90",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16888:31:90"
            },
            "returnParameters": {
              "id": 52560,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16929:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 52641,
            "nodeType": "FunctionDefinition",
            "src": "17002:461:90",
            "body": {
              "id": 52640,
              "nodeType": "Block",
              "src": "17060:403:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "302e35",
                        "id": 52578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17084:9:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "value": "0.5"
                      },
                      {
                        "hexValue": "302e35",
                        "id": 52579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17095:9:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "value": "0.5"
                      },
                      {
                        "hexValue": "33305f303030",
                        "id": 52580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17106:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30000_by_1",
                          "typeString": "int_const 30000"
                        },
                        "value": "30_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 52581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17114:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_30000_by_1",
                          "typeString": "int_const 30000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 52575,
                        "name": "dual_mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50057,
                        "src": "17066:8:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$73404",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 52577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73059,
                      "src": "17066:17:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 52582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17066:50:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 52583,
                  "nodeType": "ExpressionStatement",
                  "src": "17066:50:90"
                },
                {
                  "assignments": [52585],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52585,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "17127:3:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 52640,
                      "src": "17122:8:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 52584,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "17122:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 52600,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52589,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "17148:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52588,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "17146:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17146:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 52592,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "17157:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52591,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "17155:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17155:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 52594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17165:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 52595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17174:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3339325f303030",
                        "id": 52596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17183:7:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_392000_by_1",
                          "typeString": "int_const 392000"
                        },
                        "value": "392_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 52597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17192:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 52598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17195:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_392000_by_1",
                          "typeString": "int_const 392000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 52586,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "17133:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 52587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25045,
                      "src": "17133:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 52599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17133:64:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17122:75:90"
                },
                {
                  "expression": {
                    "id": 52614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 52601,
                      "name": "trade_cb",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51698,
                      "src": "17203:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 52604,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "17229:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$53439",
                              "typeString": "contract GatekeepingTest"
                            }
                          },
                          "id": 52605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "marketOrderOK",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52572,
                          "src": "17229:18:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                            "typeString": "function (address,address) external"
                          }
                        },
                        {
                          "components": [
                            {
                              "arguments": [
                                {
                                  "id": 52607,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69385,
                                  "src": "17252:5:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 52606,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  70446, 70463, 70480, 70497, 70514
                                ],
                                "referencedDeclaration": 70514,
                                "src": "17250:1:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 52608,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17250:8:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 52610,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69382,
                                  "src": "17262:4:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 52609,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  70446, 70463, 70480, 70497, 70514
                                ],
                                "referencedDeclaration": 70514,
                                "src": "17260:1:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 52611,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17260:7:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "id": 52612,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "17249:19:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$",
                            "typeString": "tuple(address payable,address payable)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                            "typeString": "function (address,address) external"
                          },
                          {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$",
                            "typeString": "tuple(address payable,address payable)"
                          }
                        ],
                        "expression": {
                          "id": 52602,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "17214:3:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 52603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodeCall",
                        "nodeType": "MemberAccess",
                        "src": "17214:14:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 52613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17214:55:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "17203:66:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 52615,
                  "nodeType": "ExpressionStatement",
                  "src": "17203:66:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52619,
                            "name": "ofr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52585,
                            "src": "17295:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "302e31",
                            "id": 52620,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17300:9:90",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            },
                            "value": "0.1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 52617,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50051,
                            "src": "17286:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          },
                          "id": 52618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "take",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 73782,
                          "src": "17286:8:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256,uint256) external returns (bool)"
                          }
                        },
                        "id": 52621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17286:24:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74616b65206d7573742073756363656564206f72207465737420697320766f6964",
                        "id": 52622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17312:35:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        },
                        "value": "take must succeed or test is void"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        }
                      ],
                      "id": 52616,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "17275:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 52623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17275:73:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52624,
                  "nodeType": "ExpressionStatement",
                  "src": "17275:73:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 52636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 52629,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69385,
                                  "src": "17383:5:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 52628,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  70446, 70463, 70480, 70497, 70514
                                ],
                                "referencedDeclaration": 70514,
                                "src": "17381:1:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 52630,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17381:8:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 52632,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69382,
                                  "src": "17393:4:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 52631,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  70446, 70463, 70480, 70497, 70514
                                ],
                                "referencedDeclaration": 70514,
                                "src": "17391:1:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 52633,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17391:7:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 52626,
                              "name": "mgv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69379,
                              "src": "17372:3:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                                "typeString": "contract AbstractMangrove"
                              }
                            },
                            "id": 52627,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "best",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24245,
                            "src": "17372:8:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 52634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17372:27:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 52635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17403:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "17372:32:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "326e64206d61726b6574206f72646572206d757374206861766520656d7074696564206d6776",
                        "id": 52637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17412:40:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_156dbbef664de3f5a6b6e87ce6baa1da6653a3e795b155ea642549d3a8b5996c",
                          "typeString": "literal_string \"2nd market order must have emptied mgv\""
                        },
                        "value": "2nd market order must have emptied mgv"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_156dbbef664de3f5a6b6e87ce6baa1da6653a3e795b155ea642549d3a8b5996c",
                          "typeString": "literal_string \"2nd market order must have emptied mgv\""
                        }
                      ],
                      "id": 52625,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "17354:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 52638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17354:104:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52639,
                  "nodeType": "ExpressionStatement",
                  "src": "17354:104:90"
                }
              ]
            },
            "functionSelector": "0d53ca48",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_marketOrder_on_reentrancy_succeeds",
            "nameLocation": "17011:39:90",
            "parameters": {
              "id": 52573,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17050:2:90"
            },
            "returnParameters": {
              "id": 52574,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17060:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 52717,
            "nodeType": "FunctionDefinition",
            "src": "17467:532:90",
            "body": {
              "id": 52716,
              "nodeType": "Block",
              "src": "17523:476:90",
              "statements": [
                {
                  "assignments": [52645],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52645,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "17534:3:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 52716,
                      "src": "17529:8:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 52644,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "17529:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 52660,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52649,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "17562:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52648,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "17560:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17560:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 52652,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "17577:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52651,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "17575:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17575:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "302e35",
                        "id": 52654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17591:9:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "value": "0.5"
                      },
                      {
                        "hexValue": "302e35",
                        "id": 52655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17608:9:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "value": "0.5"
                      },
                      {
                        "hexValue": "3530305f303030",
                        "id": 52656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17625:7:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000_by_1",
                          "typeString": "int_const 500000"
                        },
                        "value": "500_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 52657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17640:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 52658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17649:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_500000_by_1",
                          "typeString": "int_const 500000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 52646,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "17540:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 52647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25045,
                      "src": "17540:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 52659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17540:116:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17529:127:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52665,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "17677:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52664,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "17675:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17675:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 52668,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "17686:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52667,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "17684:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17684:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "302e35",
                        "id": 52670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17694:9:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "value": "0.5"
                      },
                      {
                        "hexValue": "302e35",
                        "id": 52671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17705:9:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "value": "0.5"
                      },
                      {
                        "hexValue": "3230305f303030",
                        "id": 52672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17716:7:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000_by_1",
                          "typeString": "int_const 200000"
                        },
                        "value": "200_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 52673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17725:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 52674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17728:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_200000_by_1",
                          "typeString": "int_const 200000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 52661,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "17662:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 52663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25045,
                      "src": "17662:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 52675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17662:68:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 52676,
                  "nodeType": "ExpressionStatement",
                  "src": "17662:68:90"
                },
                {
                  "expression": {
                    "id": 52690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 52677,
                      "name": "posthook_cb",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51700,
                      "src": "17736:11:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 52680,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "17765:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$53439",
                              "typeString": "contract GatekeepingTest"
                            }
                          },
                          "id": 52681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "marketOrderOK",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52572,
                          "src": "17765:18:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                            "typeString": "function (address,address) external"
                          }
                        },
                        {
                          "components": [
                            {
                              "arguments": [
                                {
                                  "id": 52683,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69382,
                                  "src": "17788:4:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 52682,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  70446, 70463, 70480, 70497, 70514
                                ],
                                "referencedDeclaration": 70514,
                                "src": "17786:1:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 52684,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17786:7:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 52686,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69385,
                                  "src": "17797:5:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 52685,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  70446, 70463, 70480, 70497, 70514
                                ],
                                "referencedDeclaration": 70514,
                                "src": "17795:1:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 52687,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17795:8:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "id": 52688,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "17785:19:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$",
                            "typeString": "tuple(address payable,address payable)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                            "typeString": "function (address,address) external"
                          },
                          {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$",
                            "typeString": "tuple(address payable,address payable)"
                          }
                        ],
                        "expression": {
                          "id": 52678,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "17750:3:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 52679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodeCall",
                        "nodeType": "MemberAccess",
                        "src": "17750:14:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 52689,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17750:55:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "17736:69:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 52691,
                  "nodeType": "ExpressionStatement",
                  "src": "17736:69:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52695,
                            "name": "ofr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52645,
                            "src": "17831:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "302e36",
                            "id": 52696,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17836:9:90",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_600000000000000000_by_1",
                              "typeString": "int_const 600000000000000000"
                            },
                            "value": "0.6"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_600000000000000000_by_1",
                              "typeString": "int_const 600000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 52693,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50051,
                            "src": "17822:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          },
                          "id": 52694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "take",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 73782,
                          "src": "17822:8:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256,uint256) external returns (bool)"
                          }
                        },
                        "id": 52697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17822:24:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74616b65206d7573742073756363656564206f72207465737420697320766f6964",
                        "id": 52698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17848:35:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        },
                        "value": "take must succeed or test is void"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        }
                      ],
                      "id": 52692,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "17811:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 52699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17811:73:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52700,
                  "nodeType": "ExpressionStatement",
                  "src": "17811:73:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 52712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 52705,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69382,
                                  "src": "17919:4:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 52704,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  70446, 70463, 70480, 70497, 70514
                                ],
                                "referencedDeclaration": 70514,
                                "src": "17917:1:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 52706,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17917:7:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 52708,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69385,
                                  "src": "17928:5:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 52707,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  70446, 70463, 70480, 70497, 70514
                                ],
                                "referencedDeclaration": 70514,
                                "src": "17926:1:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 52709,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17926:8:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 52702,
                              "name": "mgv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69379,
                              "src": "17908:3:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                                "typeString": "contract AbstractMangrove"
                              }
                            },
                            "id": 52703,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "best",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24245,
                            "src": "17908:8:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 52710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17908:27:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 52711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17939:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "17908:32:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "326e64206d61726b6574206f72646572206d757374206861766520656d7074696564206d6776",
                        "id": 52713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17948:40:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_156dbbef664de3f5a6b6e87ce6baa1da6653a3e795b155ea642549d3a8b5996c",
                          "typeString": "literal_string \"2nd market order must have emptied mgv\""
                        },
                        "value": "2nd market order must have emptied mgv"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_156dbbef664de3f5a6b6e87ce6baa1da6653a3e795b155ea642549d3a8b5996c",
                          "typeString": "literal_string \"2nd market order must have emptied mgv\""
                        }
                      ],
                      "id": 52701,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "17890:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 52714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17890:104:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52715,
                  "nodeType": "ExpressionStatement",
                  "src": "17890:104:90"
                }
              ]
            },
            "functionSelector": "ee95ec25",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_marketOrder_on_posthook_succeeds",
            "nameLocation": "17476:37:90",
            "parameters": {
              "id": 52642,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17513:2:90"
            },
            "returnParameters": {
              "id": 52643,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17523:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 52765,
            "nodeType": "FunctionDefinition",
            "src": "18026:244:90",
            "body": {
              "id": 52764,
              "nodeType": "Block",
              "src": "18062:208:90",
              "statements": [
                {
                  "assignments": [52728],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52728,
                      "mutability": "mutable",
                      "name": "targets",
                      "nameLocation": "18085:7:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 52764,
                      "src": "18068:24:90",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                        "typeString": "uint256[4][]"
                      },
                      "typeName": {
                        "baseType": {
                          "baseType": {
                            "id": 52725,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "18068:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 52726,
                          "length": {
                            "hexValue": "34",
                            "id": 52724,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18073:1:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          "nodeType": "ArrayTypeName",
                          "src": "18068:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
                            "typeString": "uint256[4]"
                          }
                        },
                        "id": 52727,
                        "nodeType": "ArrayTypeName",
                        "src": "18068:9:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_storage_$dyn_storage_ptr",
                          "typeString": "uint256[4][]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 52744,
                  "initialValue": {
                    "arguments": [
                      {
                        "components": [
                          {
                            "id": 52730,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52719,
                            "src": "18116:2:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 52731,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18120:7:90",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 52734,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "18134:6:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint96_$",
                                    "typeString": "type(uint96)"
                                  },
                                  "typeName": {
                                    "id": 52733,
                                    "name": "uint96",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "18134:6:90",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint96_$",
                                    "typeString": "type(uint96)"
                                  }
                                ],
                                "id": 52732,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "18129:4:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 52735,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18129:12:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint96",
                                "typeString": "type(uint96)"
                              }
                            },
                            "id": 52736,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "18129:16:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 52739,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "18152:6:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint48_$",
                                    "typeString": "type(uint48)"
                                  },
                                  "typeName": {
                                    "id": 52738,
                                    "name": "uint48",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "18152:6:90",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint48_$",
                                    "typeString": "type(uint48)"
                                  }
                                ],
                                "id": 52737,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "18147:4:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 52740,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18147:12:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint48",
                                "typeString": "type(uint48)"
                              }
                            },
                            "id": 52741,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "18147:16:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          }
                        ],
                        "id": 52742,
                        "isConstant": false,
                        "isInlineArray": true,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "18115:49:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                          "typeString": "uint256[4] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                          "typeString": "uint256[4] memory"
                        }
                      ],
                      "id": 52729,
                      "name": "wrap_dynamic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        71251, 71287, 71323, 71359, 71395
                      ],
                      "referencedDeclaration": 71395,
                      "src": "18095:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                      }
                    },
                    "id": 52743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18095:75:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                      "typeString": "uint256[4] memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18068:102:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f7265656e7472616e63794c6f636b6564",
                        "id": 52748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18192:22:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f51ac5dce6f4410e3dc3921c53ae317c63cfe42884b73974c612571772034076",
                          "typeString": "literal_string \"mgv/reentrancyLocked\""
                        },
                        "value": "mgv/reentrancyLocked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f51ac5dce6f4410e3dc3921c53ae317c63cfe42884b73974c612571772034076",
                          "typeString": "literal_string \"mgv/reentrancyLocked\""
                        }
                      ],
                      "expression": {
                        "id": 52745,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "18176:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 52747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "18176:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 52749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18176:39:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52750,
                  "nodeType": "ExpressionStatement",
                  "src": "18176:39:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52755,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "18234:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52754,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "18232:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18232:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 52758,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "18243:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52757,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "18241:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18241:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 52760,
                        "name": "targets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52728,
                        "src": "18251:7:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 52761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18260:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 52751,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "18221:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 52753,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26733,
                      "src": "18221:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 52762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18221:44:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 52763,
                  "nodeType": "ExpressionStatement",
                  "src": "18221:44:90"
                }
              ]
            },
            "functionSelector": "3ab07a10",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "snipesKO",
            "nameLocation": "18035:8:90",
            "parameters": {
              "id": 52720,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52719,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "18049:2:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 52765,
                  "src": "18044:7:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52718,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "18044:4:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18043:9:90"
            },
            "returnParameters": {
              "id": 52721,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18062:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 52805,
            "nodeType": "FunctionDefinition",
            "src": "18274:266:90",
            "body": {
              "id": 52804,
              "nodeType": "Block",
              "src": "18323:217:90",
              "statements": [
                {
                  "assignments": [52769],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52769,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "18334:3:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 52804,
                      "src": "18329:8:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 52768,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "18329:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 52784,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52773,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "18355:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52772,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "18353:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18353:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 52776,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "18364:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52775,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "18362:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18362:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 52778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18372:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 52779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18381:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "36305f303030",
                        "id": 52780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18390:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_60000_by_1",
                          "typeString": "int_const 60000"
                        },
                        "value": "60_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 52781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18398:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 52782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18401:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_60000_by_1",
                          "typeString": "int_const 60000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 52770,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "18340:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 52771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25045,
                      "src": "18340:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 52783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18340:63:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18329:74:90"
                },
                {
                  "expression": {
                    "id": 52793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 52785,
                      "name": "trade_cb",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51698,
                      "src": "18409:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 52788,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "18435:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$53439",
                              "typeString": "contract GatekeepingTest"
                            }
                          },
                          "id": 52789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "snipesKO",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52765,
                          "src": "18435:13:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256) external"
                          }
                        },
                        {
                          "components": [
                            {
                              "id": 52790,
                              "name": "ofr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52769,
                              "src": "18451:3:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 52791,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "18450:5:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256) external"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 52786,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "18420:3:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 52787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodeCall",
                        "nodeType": "MemberAccess",
                        "src": "18420:14:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 52792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18420:36:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "18409:47:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 52794,
                  "nodeType": "ExpressionStatement",
                  "src": "18409:47:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52798,
                            "name": "ofr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52769,
                            "src": "18482:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "302e31",
                            "id": 52799,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18487:9:90",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            },
                            "value": "0.1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 52796,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50051,
                            "src": "18473:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          },
                          "id": 52797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "take",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 73782,
                          "src": "18473:8:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256,uint256) external returns (bool)"
                          }
                        },
                        "id": 52800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18473:24:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74616b65206d7573742073756363656564206f72207465737420697320766f6964",
                        "id": 52801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18499:35:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        },
                        "value": "take must succeed or test is void"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        }
                      ],
                      "id": 52795,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "18462:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 52802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18462:73:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52803,
                  "nodeType": "ExpressionStatement",
                  "src": "18462:73:90"
                }
              ]
            },
            "functionSelector": "31e61c37",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_snipe_on_reentrancy_fails",
            "nameLocation": "18283:30:90",
            "parameters": {
              "id": 52766,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18313:2:90"
            },
            "returnParameters": {
              "id": 52767,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18323:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 52847,
            "nodeType": "FunctionDefinition",
            "src": "18567:242:90",
            "body": {
              "id": 52846,
              "nodeType": "Block",
              "src": "18650:159:90",
              "statements": [
                {
                  "assignments": [52820],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52820,
                      "mutability": "mutable",
                      "name": "targets",
                      "nameLocation": "18673:7:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 52846,
                      "src": "18656:24:90",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                        "typeString": "uint256[4][]"
                      },
                      "typeName": {
                        "baseType": {
                          "baseType": {
                            "id": 52817,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "18656:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 52818,
                          "length": {
                            "hexValue": "34",
                            "id": 52816,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18661:1:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          "nodeType": "ArrayTypeName",
                          "src": "18656:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
                            "typeString": "uint256[4]"
                          }
                        },
                        "id": 52819,
                        "nodeType": "ArrayTypeName",
                        "src": "18656:9:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_storage_$dyn_storage_ptr",
                          "typeString": "uint256[4][]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 52836,
                  "initialValue": {
                    "arguments": [
                      {
                        "components": [
                          {
                            "id": 52822,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52811,
                            "src": "18704:2:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 52823,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18708:7:90",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 52826,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "18722:6:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint96_$",
                                    "typeString": "type(uint96)"
                                  },
                                  "typeName": {
                                    "id": 52825,
                                    "name": "uint96",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "18722:6:90",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint96_$",
                                    "typeString": "type(uint96)"
                                  }
                                ],
                                "id": 52824,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "18717:4:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 52827,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18717:12:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint96",
                                "typeString": "type(uint96)"
                              }
                            },
                            "id": 52828,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "18717:16:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 52831,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "18740:6:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint48_$",
                                    "typeString": "type(uint48)"
                                  },
                                  "typeName": {
                                    "id": 52830,
                                    "name": "uint48",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "18740:6:90",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint48_$",
                                    "typeString": "type(uint48)"
                                  }
                                ],
                                "id": 52829,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "18735:4:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 52832,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18735:12:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint48",
                                "typeString": "type(uint48)"
                              }
                            },
                            "id": 52833,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "18735:16:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          }
                        ],
                        "id": 52834,
                        "isConstant": false,
                        "isInlineArray": true,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "18703:49:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                          "typeString": "uint256[4] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                          "typeString": "uint256[4] memory"
                        }
                      ],
                      "id": 52821,
                      "name": "wrap_dynamic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        71251, 71287, 71323, 71359, 71395
                      ],
                      "referencedDeclaration": 71395,
                      "src": "18683:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                      }
                    },
                    "id": 52835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18683:75:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                      "typeString": "uint256[4] memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18656:102:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 52840,
                        "name": "_base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52807,
                        "src": "18775:5:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 52841,
                        "name": "_quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52809,
                        "src": "18782:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 52842,
                        "name": "targets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52820,
                        "src": "18790:7:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 52843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18799:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 52837,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "18764:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 52839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26733,
                      "src": "18764:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 52844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18764:40:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 52845,
                  "nodeType": "ExpressionStatement",
                  "src": "18764:40:90"
                }
              ]
            },
            "functionSelector": "d419469d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "snipesOK",
            "nameLocation": "18576:8:90",
            "parameters": {
              "id": 52812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52807,
                  "mutability": "mutable",
                  "name": "_base",
                  "nameLocation": "18598:5:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 52847,
                  "src": "18590:13:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 52806,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18590:7:90",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52809,
                  "mutability": "mutable",
                  "name": "_quote",
                  "nameLocation": "18617:6:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 52847,
                  "src": "18609:14:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 52808,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18609:7:90",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52811,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "18634:2:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 52847,
                  "src": "18629:7:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52810,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "18629:4:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18584:56:90"
            },
            "returnParameters": {
              "id": 52813,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18650:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 52918,
            "nodeType": "FunctionDefinition",
            "src": "18813:469:90",
            "body": {
              "id": 52917,
              "nodeType": "Block",
              "src": "18866:416:90",
              "statements": [
                {
                  "assignments": [52851],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52851,
                      "mutability": "mutable",
                      "name": "other_ofr",
                      "nameLocation": "18877:9:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 52917,
                      "src": "18872:14:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 52850,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "18872:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 52859,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 52854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18907:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 52855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18916:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "33305f303030",
                        "id": 52856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18925:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30000_by_1",
                          "typeString": "int_const 30000"
                        },
                        "value": "30_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 52857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18933:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_30000_by_1",
                          "typeString": "int_const 30000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 52852,
                        "name": "dual_mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50057,
                        "src": "18889:8:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$73404",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 52853,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73059,
                      "src": "18889:17:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 52858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18889:46:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18872:63:90"
                },
                {
                  "expression": {
                    "id": 52874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 52860,
                      "name": "trade_cb",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51698,
                      "src": "18941:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 52863,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "18967:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$53439",
                              "typeString": "contract GatekeepingTest"
                            }
                          },
                          "id": 52864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "snipesOK",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52847,
                          "src": "18967:13:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256) external"
                          }
                        },
                        {
                          "components": [
                            {
                              "arguments": [
                                {
                                  "id": 52866,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69385,
                                  "src": "18985:5:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 52865,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  70446, 70463, 70480, 70497, 70514
                                ],
                                "referencedDeclaration": 70514,
                                "src": "18983:1:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 52867,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18983:8:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 52869,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69382,
                                  "src": "18995:4:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 52868,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  70446, 70463, 70480, 70497, 70514
                                ],
                                "referencedDeclaration": 70514,
                                "src": "18993:1:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 52870,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18993:7:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 52871,
                              "name": "other_ofr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52851,
                              "src": "19002:9:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 52872,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "18982:30:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$_t_uint256_$",
                            "typeString": "tuple(address payable,address payable,uint256)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256) external"
                          },
                          {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$_t_uint256_$",
                            "typeString": "tuple(address payable,address payable,uint256)"
                          }
                        ],
                        "expression": {
                          "id": 52861,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "18952:3:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 52862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodeCall",
                        "nodeType": "MemberAccess",
                        "src": "18952:14:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 52873,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18952:61:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "18941:72:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 52875,
                  "nodeType": "ExpressionStatement",
                  "src": "18941:72:90"
                },
                {
                  "assignments": [52877],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52877,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "19025:3:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 52917,
                      "src": "19020:8:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 52876,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "19020:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 52892,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52881,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "19046:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52880,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "19044:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19044:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 52884,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "19055:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52883,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "19053:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19053:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 52886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19063:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 52887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19072:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3139305f303030",
                        "id": 52888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19081:7:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_190000_by_1",
                          "typeString": "int_const 190000"
                        },
                        "value": "190_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 52889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19090:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 52890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19093:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_190000_by_1",
                          "typeString": "int_const 190000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 52878,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "19031:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 52879,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25045,
                      "src": "19031:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 52891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19031:64:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19020:75:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52896,
                            "name": "ofr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52877,
                            "src": "19121:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "302e31",
                            "id": 52897,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19126:9:90",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            },
                            "value": "0.1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 52894,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50051,
                            "src": "19112:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          },
                          "id": 52895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "take",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 73782,
                          "src": "19112:8:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256,uint256) external returns (bool)"
                          }
                        },
                        "id": 52898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19112:24:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74616b65206d7573742073756363656564206f72207465737420697320766f6964",
                        "id": 52899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19138:35:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        },
                        "value": "take must succeed or test is void"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        }
                      ],
                      "id": 52893,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "19101:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 52900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19101:73:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52901,
                  "nodeType": "ExpressionStatement",
                  "src": "19101:73:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 52913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 52906,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69385,
                                  "src": "19209:5:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 52905,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  70446, 70463, 70480, 70497, 70514
                                ],
                                "referencedDeclaration": 70514,
                                "src": "19207:1:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 52907,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19207:8:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 52909,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69382,
                                  "src": "19219:4:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 52908,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  70446, 70463, 70480, 70497, 70514
                                ],
                                "referencedDeclaration": 70514,
                                "src": "19217:1:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 52910,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19217:7:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 52903,
                              "name": "mgv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69379,
                              "src": "19198:3:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                                "typeString": "contract AbstractMangrove"
                              }
                            },
                            "id": 52904,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "best",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24245,
                            "src": "19198:8:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 52911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19198:27:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 52912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19229:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "19198:32:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "736e69706520696e20737761707065642070616972206d75737420776f726b",
                        "id": 52914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19238:33:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25c81ae1389f9d8ae109170126926edd2525c6ae8fad34a6c498b4bb43051e06",
                          "typeString": "literal_string \"snipe in swapped pair must work\""
                        },
                        "value": "snipe in swapped pair must work"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25c81ae1389f9d8ae109170126926edd2525c6ae8fad34a6c498b4bb43051e06",
                          "typeString": "literal_string \"snipe in swapped pair must work\""
                        }
                      ],
                      "id": 52902,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "19180:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 52915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19180:97:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52916,
                  "nodeType": "ExpressionStatement",
                  "src": "19180:97:90"
                }
              ]
            },
            "functionSelector": "aab4a415",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_snipes_on_reentrancy_succeeds",
            "nameLocation": "18822:34:90",
            "parameters": {
              "id": 52848,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18856:2:90"
            },
            "returnParameters": {
              "id": 52849,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18866:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 52989,
            "nodeType": "FunctionDefinition",
            "src": "19286:441:90",
            "body": {
              "id": 52988,
              "nodeType": "Block",
              "src": "19337:390:90",
              "statements": [
                {
                  "assignments": [52922],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52922,
                      "mutability": "mutable",
                      "name": "other_ofr",
                      "nameLocation": "19348:9:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 52988,
                      "src": "19343:14:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 52921,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "19343:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 52930,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 52925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19373:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 52926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19382:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "33305f303030",
                        "id": 52927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19391:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30000_by_1",
                          "typeString": "int_const 30000"
                        },
                        "value": "30_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 52928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19399:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_30000_by_1",
                          "typeString": "int_const 30000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 52923,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50054,
                        "src": "19360:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$73404",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 52924,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73059,
                      "src": "19360:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 52929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19360:41:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19343:58:90"
                },
                {
                  "expression": {
                    "id": 52945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 52931,
                      "name": "posthook_cb",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51700,
                      "src": "19407:11:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 52934,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "19436:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$53439",
                              "typeString": "contract GatekeepingTest"
                            }
                          },
                          "id": 52935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "snipesOK",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52847,
                          "src": "19436:13:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256) external"
                          }
                        },
                        {
                          "components": [
                            {
                              "arguments": [
                                {
                                  "id": 52937,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69382,
                                  "src": "19454:4:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 52936,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  70446, 70463, 70480, 70497, 70514
                                ],
                                "referencedDeclaration": 70514,
                                "src": "19452:1:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 52938,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19452:7:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 52940,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69385,
                                  "src": "19463:5:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 52939,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  70446, 70463, 70480, 70497, 70514
                                ],
                                "referencedDeclaration": 70514,
                                "src": "19461:1:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 52941,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19461:8:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 52942,
                              "name": "other_ofr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52922,
                              "src": "19471:9:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 52943,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "19451:30:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$_t_uint256_$",
                            "typeString": "tuple(address payable,address payable,uint256)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256) external"
                          },
                          {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$_t_uint256_$",
                            "typeString": "tuple(address payable,address payable,uint256)"
                          }
                        ],
                        "expression": {
                          "id": 52932,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "19421:3:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 52933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodeCall",
                        "nodeType": "MemberAccess",
                        "src": "19421:14:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 52944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19421:61:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "19407:75:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 52946,
                  "nodeType": "ExpressionStatement",
                  "src": "19407:75:90"
                },
                {
                  "assignments": [52948],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52948,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "19494:3:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 52988,
                      "src": "19489:8:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 52947,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "19489:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 52963,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52952,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "19515:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52951,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "19513:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19513:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 52955,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "19524:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52954,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "19522:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19522:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 52957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19532:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 52958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19541:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3139305f303030",
                        "id": 52959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19550:7:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_190000_by_1",
                          "typeString": "int_const 190000"
                        },
                        "value": "190_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 52960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19559:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 52961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19562:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_190000_by_1",
                          "typeString": "int_const 190000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 52949,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "19500:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 52950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25045,
                      "src": "19500:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 52962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19500:64:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19489:75:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52967,
                            "name": "ofr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52948,
                            "src": "19590:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 52968,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19595:7:90",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 52965,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50051,
                            "src": "19581:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          },
                          "id": 52966,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "take",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 73782,
                          "src": "19581:8:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256,uint256) external returns (bool)"
                          }
                        },
                        "id": 52969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19581:22:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74616b65206d7573742073756363656564206f72207465737420697320766f6964",
                        "id": 52970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19605:35:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        },
                        "value": "take must succeed or test is void"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        }
                      ],
                      "id": 52964,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "19570:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 52971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19570:71:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52972,
                  "nodeType": "ExpressionStatement",
                  "src": "19570:71:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 52984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 52977,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69382,
                                  "src": "19669:4:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 52976,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  70446, 70463, 70480, 70497, 70514
                                ],
                                "referencedDeclaration": 70514,
                                "src": "19667:1:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 52978,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19667:7:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 52980,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69385,
                                  "src": "19678:5:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$76251",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 52979,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  70446, 70463, 70480, 70497, 70514
                                ],
                                "referencedDeclaration": 70514,
                                "src": "19676:1:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 52981,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19676:8:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 52974,
                              "name": "mgv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69379,
                              "src": "19658:3:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                                "typeString": "contract AbstractMangrove"
                              }
                            },
                            "id": 52975,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "best",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24245,
                            "src": "19658:8:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 52982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19658:27:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 52983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19689:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "19658:32:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "736e69706520696e20706f7374686f6f6b206d75737420776f726b",
                        "id": 52985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19692:29:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_62616704a24da817f2b0eb8004da39b00cc8c9d54b6aa443eb82584ca986ba88",
                          "typeString": "literal_string \"snipe in posthook must work\""
                        },
                        "value": "snipe in posthook must work"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_62616704a24da817f2b0eb8004da39b00cc8c9d54b6aa443eb82584ca986ba88",
                          "typeString": "literal_string \"snipe in posthook must work\""
                        }
                      ],
                      "id": 52973,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "19647:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 52986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19647:75:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52987,
                  "nodeType": "ExpressionStatement",
                  "src": "19647:75:90"
                }
              ]
            },
            "functionSelector": "370219f5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_snipes_on_posthook_succeeds",
            "nameLocation": "19295:32:90",
            "parameters": {
              "id": 52919,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19327:2:90"
            },
            "returnParameters": {
              "id": 52920,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19337:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 53020,
            "nodeType": "FunctionDefinition",
            "src": "19731:166:90",
            "body": {
              "id": 53019,
              "nodeType": "Block",
              "src": "19779:118:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 52992,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "19785:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 52994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "kill",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24015,
                      "src": "19785:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 52995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19785:10:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52996,
                  "nodeType": "ExpressionStatement",
                  "src": "19785:10:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f64656164",
                        "id": 53000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19817:10:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f664972d47bf4660e8f7938011fdf1a13b3304d98c44c5767f66242d50a78a20",
                          "typeString": "literal_string \"mgv/dead\""
                        },
                        "value": "mgv/dead"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f664972d47bf4660e8f7938011fdf1a13b3304d98c44c5767f66242d50a78a20",
                          "typeString": "literal_string \"mgv/dead\""
                        }
                      ],
                      "expression": {
                        "id": 52997,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "19801:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 52999,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "19801:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 53001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19801:27:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53002,
                  "nodeType": "ExpressionStatement",
                  "src": "19801:27:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53007,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "19849:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 53006,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "19847:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 53008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19847:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 53010,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "19858:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 53009,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "19856:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 53011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19856:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 53012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19866:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 53013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19875:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "30",
                        "id": 53014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19884:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 53015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19887:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 53016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19890:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 53003,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "19834:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 53005,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25045,
                      "src": "19834:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 53017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19834:58:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 53018,
                  "nodeType": "ExpressionStatement",
                  "src": "19834:58:90"
                }
              ]
            },
            "functionSelector": "fef6c457",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_newOffer_on_closed_fails",
            "nameLocation": "19740:29:90",
            "parameters": {
              "id": 52990,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19769:2:90"
            },
            "returnParameters": {
              "id": 52991,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19779:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 53059,
            "nodeType": "FunctionDefinition",
            "src": "19937:202:90",
            "body": {
              "id": 53058,
              "nodeType": "Block",
              "src": "19981:158:90",
              "statements": [
                {
                  "assignments": [53024],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53024,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "19992:3:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 53058,
                      "src": "19987:8:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53023,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "19987:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53039,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53028,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "20013:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 53027,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "20011:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 53029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20011:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 53031,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "20022:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 53030,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "20020:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 53032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20020:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 53033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20030:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 53034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20039:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "30",
                        "id": 53035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20048:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 53036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20051:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 53037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20054:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 53025,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "19998:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 53026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25045,
                      "src": "19998:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 53038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19998:58:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19987:69:90"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 53040,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "20063:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 53042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "kill",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24015,
                      "src": "20063:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 53043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20063:10:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53044,
                  "nodeType": "ExpressionStatement",
                  "src": "20063:10:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f64656164",
                        "id": 53048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20095:10:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f664972d47bf4660e8f7938011fdf1a13b3304d98c44c5767f66242d50a78a20",
                          "typeString": "literal_string \"mgv/dead\""
                        },
                        "value": "mgv/dead"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f664972d47bf4660e8f7938011fdf1a13b3304d98c44c5767f66242d50a78a20",
                          "typeString": "literal_string \"mgv/dead\""
                        }
                      ],
                      "expression": {
                        "id": 53045,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "20079:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 53047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "20079:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 53049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20079:27:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53050,
                  "nodeType": "ExpressionStatement",
                  "src": "20079:27:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53054,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53024,
                        "src": "20121:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 53055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20126:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 53051,
                        "name": "tkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50051,
                        "src": "20112:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$73996",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 53053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "take",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73782,
                      "src": "20112:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256,uint256) external returns (bool)"
                      }
                    },
                    "id": 53056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20112:22:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 53057,
                  "nodeType": "ExpressionStatement",
                  "src": "20112:22:90"
                }
              ]
            },
            "functionSelector": "a7a05296",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_take_on_closed_fails",
            "nameLocation": "19946:25:90",
            "parameters": {
              "id": 53021,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19971:2:90"
            },
            "returnParameters": {
              "id": 53022,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19981:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 53096,
            "nodeType": "FunctionDefinition",
            "src": "20143:195:90",
            "body": {
              "id": 53095,
              "nodeType": "Block",
              "src": "20193:145:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53066,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "20216:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 53065,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "20214:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 53067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20214:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 53069,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "20225:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 53068,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "20223:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 53070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20223:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 53062,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "20199:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 53064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deactivate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23868,
                      "src": "20199:14:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 53071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20199:33:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53072,
                  "nodeType": "ExpressionStatement",
                  "src": "20199:33:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f696e616374697665",
                        "id": 53076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20254:14:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8e75efbf6c06a8c9dc4f72bce98028cfcfc8f73165350bb0806b98842327af5",
                          "typeString": "literal_string \"mgv/inactive\""
                        },
                        "value": "mgv/inactive"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f8e75efbf6c06a8c9dc4f72bce98028cfcfc8f73165350bb0806b98842327af5",
                          "typeString": "literal_string \"mgv/inactive\""
                        }
                      ],
                      "expression": {
                        "id": 53073,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "20238:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 53075,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "20238:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 53077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20238:31:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53078,
                  "nodeType": "ExpressionStatement",
                  "src": "20238:31:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53083,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "20290:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 53082,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "20288:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 53084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20288:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 53086,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "20299:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 53085,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "20297:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 53087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20297:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 53088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20307:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 53089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20316:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "30",
                        "id": 53090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20325:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 53091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20328:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 53092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20331:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 53079,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "20275:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 53081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25045,
                      "src": "20275:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 53093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20275:58:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 53094,
                  "nodeType": "ExpressionStatement",
                  "src": "20275:58:90"
                }
              ]
            },
            "functionSelector": "4ba9b07f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_newOffer_on_inactive_fails",
            "nameLocation": "20152:31:90",
            "parameters": {
              "id": 53060,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20183:2:90"
            },
            "returnParameters": {
              "id": 53061,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20193:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 53138,
            "nodeType": "FunctionDefinition",
            "src": "20342:336:90",
            "body": {
              "id": 53137,
              "nodeType": "Block",
              "src": "20389:289:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 53099,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "20395:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 53101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "kill",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24015,
                      "src": "20395:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 53102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20395:10:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53103,
                  "nodeType": "ExpressionStatement",
                  "src": "20395:10:90"
                },
                {
                  "assignments": [53105, 53107],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53105,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "20418:7:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 53137,
                      "src": "20413:12:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 53104,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "20413:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 53107,
                      "mutability": "mutable",
                      "name": "retdata",
                      "nameLocation": "20440:7:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 53137,
                      "src": "20427:20:90",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 53106,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "20427:5:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53116,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 53114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20480:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 53109,
                              "name": "mgv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69379,
                              "src": "20453:3:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                                "typeString": "contract AbstractMangrove"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                                "typeString": "contract AbstractMangrove"
                              }
                            ],
                            "id": 53108,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70446,
                            "src": "20451:1:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                              "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                            }
                          },
                          "id": 53110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20451:6:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 53111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "20451:11:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 53113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["value"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "3130",
                          "id": 53112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20470:8:90",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        }
                      ],
                      "src": "20451:28:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 53115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20451:32:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20412:71:90"
                },
                {
                  "condition": {
                    "id": 53117,
                    "name": "success",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53105,
                    "src": "20493:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 53135,
                    "nodeType": "Block",
                    "src": "20569:105:90",
                    "statements": [
                      {
                        "assignments": [53124],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 53124,
                            "mutability": "mutable",
                            "name": "r",
                            "nameLocation": "20591:1:90",
                            "nodeType": "VariableDeclaration",
                            "scope": 53135,
                            "src": "20577:15:90",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string"
                            },
                            "typeName": {
                              "id": 53123,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "20577:6:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 53128,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 53126,
                              "name": "retdata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53107,
                              "src": "20605:7:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 53125,
                            "name": "getReason",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 71223,
                            "src": "20595:9:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
                              "typeString": "function (bytes memory) pure returns (string memory)"
                            }
                          },
                          "id": 53127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20595:18:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20577:36:90"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 53130,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53124,
                              "src": "20630:1:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "6d67762f64656164",
                              "id": 53131,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20633:10:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f664972d47bf4660e8f7938011fdf1a13b3304d98c44c5767f66242d50a78a20",
                                "typeString": "literal_string \"mgv/dead\""
                              },
                              "value": "mgv/dead"
                            },
                            {
                              "hexValue": "77726f6e672072657665727420726561736f6e",
                              "id": 53132,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20645:21:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6d09d0f04b01bf05a60f8742ea23adc246e7a34478bb64820a4f0643ad399bd3",
                                "typeString": "literal_string \"wrong revert reason\""
                              },
                              "value": "wrong revert reason"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f664972d47bf4660e8f7938011fdf1a13b3304d98c44c5767f66242d50a78a20",
                                "typeString": "literal_string \"mgv/dead\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6d09d0f04b01bf05a60f8742ea23adc246e7a34478bb64820a4f0643ad399bd3",
                                "typeString": "literal_string \"wrong revert reason\""
                              }
                            ],
                            "id": 53129,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996,
                              3033, 3070, 320, 345, 375, 400, 459, 484, 514,
                              539, 1639, 1674
                            ],
                            "referencedDeclaration": 1674,
                            "src": "20621:8:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory,string memory,string memory)"
                            }
                          },
                          "id": 53133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20621:46:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 53134,
                        "nodeType": "ExpressionStatement",
                        "src": "20621:46:90"
                      }
                    ]
                  },
                  "id": 53136,
                  "nodeType": "IfStatement",
                  "src": "20489:185:90",
                  "trueBody": {
                    "id": 53122,
                    "nodeType": "Block",
                    "src": "20502:61:90",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "7265636569766528292073686f756c64206661696c206f6e20636c6f736564206d61726b6574",
                              "id": 53119,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20515:40:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_54ac8aa66e254aad25382afbad7c1a35eb483d650cd8634986eceeca7ea40688",
                                "typeString": "literal_string \"receive() should fail on closed market\""
                              },
                              "value": "receive() should fail on closed market"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_54ac8aa66e254aad25382afbad7c1a35eb483d650cd8634986eceeca7ea40688",
                                "typeString": "literal_string \"receive() should fail on closed market\""
                              }
                            ],
                            "id": 53118,
                            "name": "fail",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [2718, 216],
                            "referencedDeclaration": 2718,
                            "src": "20510:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 53120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20510:46:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 53121,
                        "nodeType": "ExpressionStatement",
                        "src": "20510:46:90"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "b15c9128",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_receive_on_closed_fails",
            "nameLocation": "20351:28:90",
            "parameters": {
              "id": 53097,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20379:2:90"
            },
            "returnParameters": {
              "id": 53098,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20389:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 53160,
            "nodeType": "FunctionDefinition",
            "src": "20682:144:90",
            "body": {
              "id": 53159,
              "nodeType": "Block",
              "src": "20733:93:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 53141,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "20739:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 53143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "kill",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24015,
                      "src": "20739:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 53144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20739:10:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53145,
                  "nodeType": "ExpressionStatement",
                  "src": "20739:10:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f64656164",
                        "id": 53149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20771:10:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f664972d47bf4660e8f7938011fdf1a13b3304d98c44c5767f66242d50a78a20",
                          "typeString": "literal_string \"mgv/dead\""
                        },
                        "value": "mgv/dead"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f664972d47bf4660e8f7938011fdf1a13b3304d98c44c5767f66242d50a78a20",
                          "typeString": "literal_string \"mgv/dead\""
                        }
                      ],
                      "expression": {
                        "id": 53146,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "20755:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 53148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "20755:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 53150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20755:27:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53151,
                  "nodeType": "ExpressionStatement",
                  "src": "20755:27:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 53155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20804:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 53156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20813:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 53152,
                        "name": "tkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50051,
                        "src": "20788:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$73996",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 53154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73938,
                      "src": "20788:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) external returns (uint256,uint256)"
                      }
                    },
                    "id": 53157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20788:33:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "id": 53158,
                  "nodeType": "ExpressionStatement",
                  "src": "20788:33:90"
                }
              ]
            },
            "functionSelector": "d7657ec4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_marketOrder_on_closed_fails",
            "nameLocation": "20691:32:90",
            "parameters": {
              "id": 53139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20723:2:90"
            },
            "returnParameters": {
              "id": 53140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20733:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 53182,
            "nodeType": "FunctionDefinition",
            "src": "20830:125:90",
            "body": {
              "id": 53181,
              "nodeType": "Block",
              "src": "20875:80:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 53163,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "20881:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 53165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "kill",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24015,
                      "src": "20881:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 53166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20881:10:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53167,
                  "nodeType": "ExpressionStatement",
                  "src": "20881:10:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f64656164",
                        "id": 53171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20913:10:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f664972d47bf4660e8f7938011fdf1a13b3304d98c44c5767f66242d50a78a20",
                          "typeString": "literal_string \"mgv/dead\""
                        },
                        "value": "mgv/dead"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f664972d47bf4660e8f7938011fdf1a13b3304d98c44c5767f66242d50a78a20",
                          "typeString": "literal_string \"mgv/dead\""
                        }
                      ],
                      "expression": {
                        "id": 53168,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "20897:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 53170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "20897:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 53172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20897:27:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53173,
                  "nodeType": "ExpressionStatement",
                  "src": "20897:27:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 53177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20939:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "31",
                        "id": 53178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20942:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 53174,
                        "name": "tkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50051,
                        "src": "20930:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$73996",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 53176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "take",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73782,
                      "src": "20930:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256,uint256) external returns (bool)"
                      }
                    },
                    "id": 53179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20930:20:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 53180,
                  "nodeType": "ExpressionStatement",
                  "src": "20930:20:90"
                }
              ]
            },
            "functionSelector": "78db63bb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_snipe_on_closed_fails",
            "nameLocation": "20839:26:90",
            "parameters": {
              "id": 53161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20865:2:90"
            },
            "returnParameters": {
              "id": 53162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20875:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 53197,
            "nodeType": "FunctionDefinition",
            "src": "20959:95:90",
            "body": {
              "id": 53196,
              "nodeType": "Block",
              "src": "21004:50:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 53185,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "21010:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 53187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "kill",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24015,
                      "src": "21010:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 53188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21010:10:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53189,
                  "nodeType": "ExpressionStatement",
                  "src": "21010:10:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "302e31",
                        "id": 53193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21039:9:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "0.1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 53190,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "21026:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 53192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25433,
                      "src": "21026:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) external returns (bool)"
                      }
                    },
                    "id": 53194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21026:23:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 53195,
                  "nodeType": "ExpressionStatement",
                  "src": "21026:23:90"
                }
              ]
            },
            "functionSelector": "1a711c7a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_withdraw_on_closed_ok",
            "nameLocation": "20968:26:90",
            "parameters": {
              "id": 53183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20994:2:90"
            },
            "returnParameters": {
              "id": 53184,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21004:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 53236,
            "nodeType": "FunctionDefinition",
            "src": "21058:198:90",
            "body": {
              "id": 53235,
              "nodeType": "Block",
              "src": "21107:149:90",
              "statements": [
                {
                  "assignments": [53201],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53201,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "21118:3:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 53235,
                      "src": "21113:8:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53200,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "21113:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53216,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53205,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "21139:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 53204,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "21137:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 53206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21137:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 53208,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "21148:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 53207,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "21146:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 53209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21146:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 53210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21156:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 53211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21165:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "30",
                        "id": 53212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21174:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 53213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21177:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 53214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21180:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 53202,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "21124:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 53203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25045,
                      "src": "21124:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 53215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21124:58:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21113:69:90"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 53217,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "21188:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 53219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "kill",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24015,
                      "src": "21188:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 53220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21188:10:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53221,
                  "nodeType": "ExpressionStatement",
                  "src": "21188:10:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53226,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "21223:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 53225,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "21221:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 53227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21221:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 53229,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "21232:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 53228,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "21230:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 53230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21230:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 53231,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53201,
                        "src": "21240:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 53232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21245:5:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 53222,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "21204:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 53224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "retractOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25353,
                      "src": "21204:16:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,bool) external returns (uint256)"
                      }
                    },
                    "id": 53233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21204:47:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 53234,
                  "nodeType": "ExpressionStatement",
                  "src": "21204:47:90"
                }
              ]
            },
            "functionSelector": "bcdb17b6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_retractOffer_on_closed_ok",
            "nameLocation": "21067:30:90",
            "parameters": {
              "id": 53198,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21097:2:90"
            },
            "returnParameters": {
              "id": 53199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21107:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 53285,
            "nodeType": "FunctionDefinition",
            "src": "21260:252:90",
            "body": {
              "id": 53284,
              "nodeType": "Block",
              "src": "21311:201:90",
              "statements": [
                {
                  "assignments": [53240],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53240,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "21322:3:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 53284,
                      "src": "21317:8:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53239,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "21317:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53255,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53244,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "21343:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 53243,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "21341:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 53245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21341:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 53247,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "21352:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 53246,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "21350:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 53248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21350:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 53249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21360:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 53250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21369:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "30",
                        "id": 53251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21378:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 53252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21381:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 53253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21384:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 53241,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "21328:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 53242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25045,
                      "src": "21328:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 53254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21328:58:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21317:69:90"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 53256,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "21392:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 53258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "kill",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24015,
                      "src": "21392:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 53259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21392:10:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53260,
                  "nodeType": "ExpressionStatement",
                  "src": "21392:10:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f64656164",
                        "id": 53264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21424:10:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f664972d47bf4660e8f7938011fdf1a13b3304d98c44c5767f66242d50a78a20",
                          "typeString": "literal_string \"mgv/dead\""
                        },
                        "value": "mgv/dead"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f664972d47bf4660e8f7938011fdf1a13b3304d98c44c5767f66242d50a78a20",
                          "typeString": "literal_string \"mgv/dead\""
                        }
                      ],
                      "expression": {
                        "id": 53261,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "21408:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 53263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "21408:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 53265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21408:27:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53266,
                  "nodeType": "ExpressionStatement",
                  "src": "21408:27:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53271,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "21459:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 53270,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "21457:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 53272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21457:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 53274,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "21468:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 53273,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "21466:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 53275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21466:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 53276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21476:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 53277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21485:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "30",
                        "id": 53278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21494:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 53279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21497:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 53280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21500:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 53281,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53240,
                        "src": "21503:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 53267,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "21441:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 53269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25200,
                      "src": "21441:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256,uint256) payable external"
                      }
                    },
                    "id": 53282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21441:66:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53283,
                  "nodeType": "ExpressionStatement",
                  "src": "21441:66:90"
                }
              ]
            },
            "functionSelector": "ec278bef",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_updateOffer_on_closed_fails",
            "nameLocation": "21269:32:90",
            "parameters": {
              "id": 53237,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21301:2:90"
            },
            "returnParameters": {
              "id": 53238,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21311:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 53367,
            "nodeType": "FunctionDefinition",
            "src": "21516:373:90",
            "body": {
              "id": 53366,
              "nodeType": "Block",
              "src": "21572:317:90",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53290,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "21591:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 53289,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70446,
                          "src": "21589:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 53291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21589:6:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 53288,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70817,
                      "src": "21578:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 53292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21578:18:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53293,
                  "nodeType": "ExpressionStatement",
                  "src": "21578:18:90"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53296,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "21619:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 53295,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "21617:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 53297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21617:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 53299,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "21629:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 53298,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "21627:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 53300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21627:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 53301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21636:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 53294,
                      "name": "SetActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24562,
                      "src": "21607:9:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 53302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21607:34:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53303,
                  "nodeType": "EmitStatement",
                  "src": "21602:39:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53306,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "21660:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 53305,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70446,
                          "src": "21658:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 53307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21658:6:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 53304,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70817,
                      "src": "21647:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 53308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21647:18:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53309,
                  "nodeType": "ExpressionStatement",
                  "src": "21647:18:90"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53312,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "21685:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 53311,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "21683:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 53313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21683:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 53315,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "21695:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 53314,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "21693:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 53316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21693:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "37",
                        "id": 53317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21702:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_7_by_1",
                          "typeString": "int_const 7"
                        },
                        "value": "7"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_7_by_1",
                          "typeString": "int_const 7"
                        }
                      ],
                      "id": 53310,
                      "name": "SetFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24570,
                      "src": "21676:6:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 53318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21676:28:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53319,
                  "nodeType": "EmitStatement",
                  "src": "21671:33:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53322,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "21723:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 53321,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70446,
                          "src": "21721:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 53323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21721:6:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 53320,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70817,
                      "src": "21710:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 53324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21710:18:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53325,
                  "nodeType": "ExpressionStatement",
                  "src": "21710:18:90"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53328,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "21752:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 53327,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "21750:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 53329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21750:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 53331,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "21762:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 53330,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "21760:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 53332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21760:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 53333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21769:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 53326,
                      "name": "SetDensity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24610,
                      "src": "21739:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 53334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21739:32:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53335,
                  "nodeType": "EmitStatement",
                  "src": "21734:37:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53338,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "21790:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 53337,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70446,
                          "src": "21788:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 53339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21788:6:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 53336,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70817,
                      "src": "21777:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 53340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21777:18:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53341,
                  "nodeType": "ExpressionStatement",
                  "src": "21777:18:90"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53344,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "21819:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 53343,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "21817:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 53345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21817:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 53347,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "21829:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 53346,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "21827:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 53348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21827:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "33",
                        "id": 53349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21836:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 53342,
                      "name": "SetGasbase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24578,
                      "src": "21806:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 53350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21806:32:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53351,
                  "nodeType": "EmitStatement",
                  "src": "21801:37:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53356,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "21859:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 53355,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "21857:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 53357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21857:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 53359,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "21869:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 53358,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "21867:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 53360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21867:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "37",
                        "id": 53361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21876:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_7_by_1",
                          "typeString": "int_const 7"
                        },
                        "value": "7"
                      },
                      {
                        "hexValue": "30",
                        "id": 53362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21879:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "33",
                        "id": 53363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21882:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_7_by_1",
                          "typeString": "int_const 7"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "id": 53352,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "21844:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 53354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "activate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23836,
                      "src": "21844:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint256) external"
                      }
                    },
                    "id": 53364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21844:40:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53365,
                  "nodeType": "ExpressionStatement",
                  "src": "21844:40:90"
                }
              ]
            },
            "functionSelector": "3818b730",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_activation_emits_events_in_order",
            "nameLocation": "21525:37:90",
            "parameters": {
              "id": 53286,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21562:2:90"
            },
            "returnParameters": {
              "id": 53287,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21572:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 53438,
            "nodeType": "FunctionDefinition",
            "src": "21893:351:90",
            "body": {
              "id": 53437,
              "nodeType": "Block",
              "src": "21946:298:90",
              "statements": [
                {
                  "assignments": [53371],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53371,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "21957:3:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 53437,
                      "src": "21952:8:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53370,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "21952:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53386,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53375,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "21978:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 53374,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "21976:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 53376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21976:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 53378,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "21987:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 53377,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "21985:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 53379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21985:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 53380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21995:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 53381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22004:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "30",
                        "id": 53382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22013:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 53383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22016:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 53384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22019:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 53372,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "21963:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 53373,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25045,
                      "src": "21963:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 53385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21963:58:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21952:69:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53389,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "22040:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 53388,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70446,
                          "src": "22038:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 53390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22038:6:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 53387,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70817,
                      "src": "22027:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 53391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22027:18:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53392,
                  "nodeType": "ExpressionStatement",
                  "src": "22027:18:90"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53395,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "22068:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 53394,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "22066:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 53396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22066:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 53398,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "22077:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 53397,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "22075:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 53399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22075:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 53400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22085:5:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 53393,
                      "name": "SetActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24562,
                      "src": "22056:9:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 53401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22056:35:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53402,
                  "nodeType": "EmitStatement",
                  "src": "22051:40:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53407,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "22114:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 53406,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "22112:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 53408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22112:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 53410,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "22123:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 53409,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "22121:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 53411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22121:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 53403,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "22097:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 53405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deactivate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23868,
                      "src": "22097:14:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 53412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22097:33:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53413,
                  "nodeType": "ExpressionStatement",
                  "src": "22097:33:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f696e616374697665",
                        "id": 53417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22152:14:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8e75efbf6c06a8c9dc4f72bce98028cfcfc8f73165350bb0806b98842327af5",
                          "typeString": "literal_string \"mgv/inactive\""
                        },
                        "value": "mgv/inactive"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f8e75efbf6c06a8c9dc4f72bce98028cfcfc8f73165350bb0806b98842327af5",
                          "typeString": "literal_string \"mgv/inactive\""
                        }
                      ],
                      "expression": {
                        "id": 53414,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "22136:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 53416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "22136:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 53418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22136:31:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53419,
                  "nodeType": "ExpressionStatement",
                  "src": "22136:31:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53424,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "22191:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 53423,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "22189:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 53425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22189:7:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 53427,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "22200:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 53426,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "22198:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 53428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22198:8:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 53429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22208:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 53430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22217:7:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "30",
                        "id": 53431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22226:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 53432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22229:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 53433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22232:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 53434,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53371,
                        "src": "22235:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 53420,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "22173:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 53422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25200,
                      "src": "22173:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256,uint256) payable external"
                      }
                    },
                    "id": 53435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22173:66:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53436,
                  "nodeType": "ExpressionStatement",
                  "src": "22173:66:90"
                }
              ]
            },
            "functionSelector": "89ef9147",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_updateOffer_on_inactive_fails",
            "nameLocation": "21902:34:90",
            "parameters": {
              "id": 53368,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21936:2:90"
            },
            "returnParameters": {
              "id": 53369,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21946:0:90"
            },
            "scope": 53439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 50041,
              "name": "IMaker",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24733,
              "src": "214:6:90"
            },
            "id": 50042,
            "nodeType": "InheritanceSpecifier",
            "src": "214:6:90"
          },
          {
            "baseName": {
              "id": 50043,
              "name": "MangroveTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 70515,
              "src": "222:12:90"
            },
            "id": 50044,
            "nodeType": "InheritanceSpecifier",
            "src": "222:12:90"
          }
        ],
        "canonicalName": "GatekeepingTest",
        "contractDependencies": [23581, 23707, 72689, 73404, 73996, 76251],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          53439, 70515, 24715, 70890, 72490, 3455, 2022, 1786, 24733
        ],
        "name": "GatekeepingTest",
        "nameLocation": "195:15:90",
        "scope": 53440,
        "usedErrors": []
      }
    ],
    "license": "AGPL-3.0"
  },
  "id": 90
}
