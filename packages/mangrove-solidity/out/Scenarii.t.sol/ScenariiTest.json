{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Credit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Debit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "callname",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "GasCost",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Kill",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "NewMgv",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "base",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "quote",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "offerIds",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "wants",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "gives",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "makerAddr",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "gasreqs",
          "type": "uint256[]"
        }
      ],
      "name": "OBState",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerWants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGives",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "mgvData",
          "type": "bytes32"
        }
      ],
      "name": "OfferFail",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "OfferRetract",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerWants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGives",
          "type": "uint256"
        }
      ],
      "name": "OfferSuccess",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gives",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasprice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasreq",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "prev",
          "type": "uint256"
        }
      ],
      "name": "OfferWrite",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGot",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGave",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "penalty",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feePaid",
          "type": "uint256"
        }
      ],
      "name": "OrderComplete",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "OrderStart",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "posthookData",
          "type": "bytes32"
        }
      ],
      "name": "PosthookFail",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "SetActive",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetDensity",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "offer_gasbase",
          "type": "uint256"
        }
      ],
      "name": "SetGasbase",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetGasmax",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetGasprice",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "SetGovernance",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "SetMonitor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "SetNotify",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "SetUseOracle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "SetVault",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "outbound",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "inbound",
          "type": "address"
        }
      ],
      "name": "offers_head",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gives",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasreq",
          "type": "uint256"
        }
      ],
      "name": "offers_line",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "t",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "power",
          "type": "uint256"
        }
      ],
      "name": "cash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "t",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "cash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "echoSender",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "insert",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256[]",
          "name": "ints",
          "type": "int256[]"
        }
      ],
      "name": "logary",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "uints",
          "type": "uint256[]"
        }
      ],
      "name": "logary",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "$out",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "$in",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "label",
          "type": "string"
        }
      ],
      "name": "setupMaker",
      "outputs": [
        {
          "internalType": "contract TestMaker",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "$out",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "$in",
          "type": "address"
        }
      ],
      "name": "setupMakerDeployer",
      "outputs": [
        {
          "internalType": "contract MakerDeployer",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "inverted",
          "type": "bool"
        }
      ],
      "name": "setupMangrove",
      "outputs": [
        {
          "internalType": "contract AbstractMangrove",
          "name": "_mgv",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "inverted",
          "type": "bool"
        }
      ],
      "name": "setupMangrove",
      "outputs": [
        {
          "internalType": "contract AbstractMangrove",
          "name": "_mgv",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setupMangrove",
      "outputs": [
        {
          "internalType": "contract AbstractMangrove",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "inbound_tkn",
          "type": "address"
        }
      ],
      "name": "setupMangrove",
      "outputs": [
        {
          "internalType": "contract AbstractMangrove",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "$out",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "$in",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "label",
          "type": "string"
        }
      ],
      "name": "setupTaker",
      "outputs": [
        {
          "internalType": "contract TestTaker",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_snipe_insert_and_fail",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6000805462ff00ff1916620100011781556001600a818155600b9182556080838152610160828152692130b9b2902a37b5b2b760b11b61018090815261010091825260046101a0818152632428412960e01b6101c05261012052601261014081905260a08490526102409687526a28bab7ba32902a37b5b2b760a91b610260526101e09687526102c0604052610280918252632428422960e01b6102a052610200919091526102205260c09490945260e0949094526010805460ff19168155909390929091601191620000d5918391906200029b565b506020828101518051620000f092600185019201906200029b565b50604091820151600291909101805460ff191660ff9092169190911790558201518051805160048401916200012b918391602001906200029b565b5060208281015180516200014692600185019201906200029b565b50604091909101516002909101805460ff191660ff909216919091179055606091909101516007909101553480156200017e57600080fd5b50604080516318caf8e360e31b8152326004820152602481019190915260096044820152683a3c1737b934b3b4b760b91b6064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c71890608401600060405180830381600087803b158015620001ee57600080fd5b505af115801562000203573d6000803e3d6000fd5b5050604080516318caf8e360e31b815230600482015260248101829052600b60448201526a2a32b9ba10393ab73732b960a91b60648201529051737109709ecfa91a80626ff3989d68f67f5b1dd12d935063c657c7189250608480830192600092919082900301818387803b1580156200027c57600080fd5b505af115801562000291573d6000803e3d6000fd5b505050506200037d565b828054620002a99062000341565b90600052602060002090601f016020900481019282620002cd576000855562000318565b82601f10620002e857805160ff191683800117855562000318565b8280016001018555821562000318579182015b8281111562000318578251825591602001919060010190620002fb565b50620003269291506200032a565b5090565b5b808211156200032657600081556001016200032b565b600181811c908216806200035657607f821691505b6020821081036200037757634e487b7160e01b600052602260045260246000fd5b50919050565b62018b90806200038e6000396000f3fe60806040523480156200001157600080fd5b5060043610620001395760003560e01c80636cc12a2411620000bb578063bfdc3588116200007a578063bfdc3588146200027d578063d56a22f01462000294578063ea14b5c314620002ab578063f8ccbf4714620002c2578063fa7626d414620002d657600080fd5b80636cc12a2414620002045780638c004832146200022a578063b84e3eda1462000234578063ba414fa6146200024b578063bbab0fac146200026657600080fd5b806325f7b1de116200010857806325f7b1de146200019c5780633336a63f14620001b55780633a76846314620001cc5780633d8713cc14620001e3578063521606d214620001ed57600080fd5b80630645f2be146200013e5780630a9254e414620001725780630b3d8c42146200017e5780631e91f8cb1462000195575b600080fd5b620001556200014f36600462006ce0565b620002e4565b6040516001600160a01b0390911681526020015b60405180910390f35b6200017c6200040e565b005b620001556200018f36600462006d16565b62000c0d565b3362000155565b620001a662000c30565b60405162000169919062006d68565b62000155620001c636600462006e4c565b620017af565b6200015560008051602062018a7583398151915281565b6200017c620018ff565b6200017c620001fe36600462006f22565b62001bea565b6200021b6200021536600462006fbb565b62001d2a565b60405190815260200162000169565b6200015562001d59565b6200017c6200024536600462006f22565b62001d6c565b6200025562001e9c565b604051901515815260200162000169565b620001556200027736600462006ff3565b62001fcd565b620001556200028e36600462006e4c565b62002050565b6200021b620002a536600462007031565b62002079565b62000155620002bc36600462006ff3565b62002114565b600054620002559062010000900460ff1681565b600054620002559060ff1681565b600081156200033657306028621e8480604051620003029062006bfb565b620003109392919062007060565b604051809103906000f0801580156200032d573d6000803e3d6000fd5b5090506200037a565b306028621e84806040516200034b9062006c09565b620003599392919062007060565b604051809103906000f08015801562000376573d6000803e3d6000fd5b5090505b60008051602062018a7583398151915263c657c71882604080516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260086044820152674d616e67726f766560c01b6064820152608401600060405180830381600087803b158015620003f057600080fd5b505af115801562000405573d6000803e3d6000fd5b50505050919050565b6200041862002124565b600d54600e54600f5460405163dc7e98df60e01b81526001600160a01b039384169363dc7e98df9362000459939082169291169061012c9060040162007081565b600060405180830381600087803b1580156200047457600080fd5b505af115801562000489573d6000803e3d6000fd5b5050600e54620004b192506001600160a01b03169050600f546001600160a01b031662001fcd565b601980546001600160a01b0319166001600160a01b0392909216918217905560405163a5e3875160e01b815260048082015263a5e3875190602401600060405180830381600087803b1580156200050757600080fd5b505af11580156200051c573d6000803e3d6000fd5b506001925050505b601960009054906101000a90046001600160a01b03166001600160a01b0316631f7b6d326040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000578573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200059e9190620070a5565b8110156200072d57601954604051632b430a9960e11b81526004810183905260008051602062018a758339815191529163c657c718916001600160a01b0390911690635686153290602401602060405180830381865afa15801562000607573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200062d9190620070bf565b60405163348051d760e11b81526004810185905260008051602062018a7583398151915290636900a3ae90602401600060405180830381865afa15801562000679573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620006a391908101906200710e565b604051602001620006b5919062007184565b6040516020818303038152906040526040518363ffffffff1660e01b8152600401620006e3929190620071e2565b600060405180830381600087803b158015620006fe57600080fd5b505af115801562000713573d6000803e3d6000fd5b50505050808062000724906200721e565b91505062000524565b50601954604051632b430a9960e11b81526000600482015260008051602062018a758339815191529163c657c718916001600160a01b0390911690635686153290602401602060405180830381865afa1580156200078f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007b59190620070bf565b604080516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260066044820152653330b4b632b960d11b6064820152608401600060405180830381600087803b1580156200081357600080fd5b505af115801562000828573d6000803e3d6000fd5b5050600e546200086e92506001600160a01b03169050600f546001600160a01b0316604051806040016040528060058152602001643a30b5b2b960d91b815250620017af565b601880546001600160a01b0319166001600160a01b03928316179055601954620008a391166804563918244f40000062002390565b601960009054906101000a90046001600160a01b03166001600160a01b031663e9c4a3ac6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620008f457600080fd5b505af115801562000909573d6000803e3d6000fd5b5050505060005b601960009054906101000a90046001600160a01b03166001600160a01b0316631f7b6d326040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000964573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200098a9190620070a5565b81101562000aa157601954604051632b430a9960e11b8152600481018390526000916001600160a01b031690635686153290602401602060405180830381865afa158015620009dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a039190620070bf565b6040516369c22ff560e11b8152678ac7230489e8000060048201529091506001600160a01b0382169063d3845fea90602401600060405180830381600087803b15801562000a5057600080fd5b505af115801562000a65573d6000803e3d6000fd5b5050600e5462000a8b92506001600160a01b0316905082674563918244f40000620023fe565b508062000a98816200721e565b91505062000910565b50600f546018546040516340c10f1960e01b81526001600160a01b03928316926340c10f199262000ae292911690674563918244f40000906004016200723a565b600060405180830381600087803b15801562000afd57600080fd5b505af115801562000b12573d6000803e3d6000fd5b5050601854600f5460405163a3cfe14d60e01b81526001600160a01b03928316945063a3cfe14d935062000b579290911690674563918244f40000906004016200723a565b600060405180830381600087803b15801562000b7257600080fd5b505af115801562000b87573d6000803e3d6000fd5b5050601854600e5460405163a3cfe14d60e01b81526001600160a01b03928316945063a3cfe14d935062000bcd92909116906802b5e3af16b1880000906004016200723a565b600060405180830381600087803b15801562000be857600080fd5b505af115801562000bfd573d6000803e3d6000fd5b5050505062000c0b62002412565b565b600062000c1a82620002e4565b905062000c2984848362002cfa565b9392505050565b60606000601960009054906101000a90046001600160a01b03166001600160a01b0316631f7b6d326040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000c88573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000cae9190620070a5565b6001600160401b0381111562000cc85762000cc862006dae565b60405190808252806020026020018201604052801562000cf2578160200160208202803683370190505b50601954604051632b430a9960e11b8152600160048201529192506001600160a01b031690635686153290602401602060405180830381865afa15801562000d3e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d649190620070bf565b60405163cda30c3b60e01b8152670de0b6b3a764000060048201526706f05b59d3b20000602482015261c3506044820152600060648201526001600160a01b03919091169063cda30c3b906084016020604051808303816000875af115801562000dd2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000df89190620070a5565b8160018151811062000e0e5762000e0e62007253565b6020908102919091010152601954604051632b430a9960e11b8152600260048201526001600160a01b0390911690635686153290602401602060405180830381865afa15801562000e63573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e899190620070bf565b60405163cda30c3b60e01b8152670de0b6b3a76400006004820152670b1a2bc2ec5000006024820152620138806044820152600160648201526001600160a01b03919091169063cda30c3b906084016020604051808303816000875af115801562000ef8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000f1e9190620070a5565b8160028151811062000f345762000f3462007253565b6020908102919091010152601954604051632b430a9960e11b8152600360048201526001600160a01b0390911690635686153290602401602060405180830381865afa15801562000f89573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000faf9190620070bf565b60405163cda30c3b60e01b81526706f05b59d3b200006004820152670de0b6b3a7640000602482015262015f906044820152604860648201526001600160a01b03919091169063cda30c3b906084016020604051808303816000875af11580156200101e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010449190620070a5565b816003815181106200105a576200105a62007253565b6020908102919091010152600d54600e54600f546040516365fbae4d60e11b81526000936001600160a01b039081169363cbf75c9a93620010a49391831692169060040162007269565b6040805180830381865afa158015620010c1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010e7919062007283565b50601954604051632b430a9960e11b8152600060048201529192506001600160a01b031690635686153290602401602060405180830381865afa15801562001133573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620011599190620070bf565b6001600160a01b031663cda30c3b6801158e460913d00000678ac7230489e80000602885901c62ffffff166040516001600160e01b031960e086901b168152600481019390935260248301919091526044820152600060648201526084016020604051808303816000875af1158015620011d7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620011fd9190620070a5565b8260008151811062001213576200121362007253565b60200260200101818152505060005b601960009054906101000a90046001600160a01b03166001600160a01b0316631f7b6d326040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001276573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200129c9190620070a5565b8110156200155b57600d54600e546000916200135d916001600160a01b0391821691635722647b9116600f546001600160a01b0316888781518110620012e657620012e662007253565b60200260200101516040518463ffffffff1660e01b81526004016200130e9392919062007081565b602060405180830381865afa1580156200132c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620013529190620070a5565b60481c62ffffff1690565b600e5490915060009062001387906001600160a01b0316600f546001600160a01b03168462002fdf565b600d54601954604051632b430a9960e11b81526004810187905292935062001543926001600160a01b03928316926370a08231921690635686153290602401602060405180830381865afa158015620013e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200140a9190620070bf565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156200144f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620014759190620070a5565b82601a60070186815481106200148f576200148f62007253565b9060005260206000200154620014a69190620072a8565b60405163348051d760e11b81526004810187905260008051602062018a7583398151915290636900a3ae90602401600060405180830381865afa158015620014f2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200151c91908101906200710e565b6040516020016200152e9190620072c2565b604051602081830303815290604052620030a4565b5050808062001552906200721e565b91505062001222565b50600d54600e54600f54604051636f7aeed560e11b81526000936001600160a01b039081169363def5ddaa936200159b9391831692169060040162007269565b602060405180830381865afa158015620015b9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620015df9190620070a5565b905060035b8115620017a657600d54600e5460009182916001600160a01b0391821691638c66715c9116600f546001600160a01b0316876040518463ffffffff1660e01b8152600401620016369392919062007081565b61010060405180830381865afa15801562001655573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200167b919062007309565b8051601954604051632b430a9960e11b815260048101889052939550919350620017959290916001600160a01b031690635686153290602401602060405180830381865afa158015620016d2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620016f89190620070bf565b60405163348051d760e11b81526004810188905260008051602062018a7583398151915290636900a3ae90602401600060405180830381865afa15801562001744573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200176e91908101906200710e565b604051602001620017809190620073b4565b604051602081830303815290604052620030e0565b5060200151915060001901620015e4565b50919392505050565b600080600d60009054906101000a90046001600160a01b03168585604051620017d89062006c17565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f08015801562001815573d6000803e3d6000fd5b5060405163c88a5e6d60e01b815290915060008051602062018a758339815191529063c88a5e6d906200185890849068056bc75e2d63100000906004016200723a565b600060405180830381600087803b1580156200187357600080fd5b505af115801562001888573d6000803e3d6000fd5b50506040516318caf8e360e31b815260008051602062018a75833981519152925063c657c7189150620018c29084908790600401620071e2565b600060405180830381600087803b158015620018dd57600080fd5b505af1158015620018f2573d6000803e3d6000fd5b5092979650505050505050565b6200190962000c30565b80516200191f9160229160209091019062006c25565b506200192a62002412565b620019346200312e565b600d546200194b906001600160a01b031662003296565b6040517fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b990600090a1600d546200198b906001600160a01b031662003296565b601854600f54600e5460408051670409d6f54da38000815267053444835ec580006020820152600081830152661ff973cafa8000606082015290516001600160a01b03948516949384169392909216917ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec479181900360800190a462001a0f6200331f565b5050600e5462001a3891506001600160a01b03165b600f546001600160a01b0316600462003b69565b601954604051632b430a9960e11b8152600260048201526001600160a01b0390911690635686153290602401602060405180830381865afa15801562001a82573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001aa89190620070bf565b604051630991301760e21b81526708ac7230489e800060048201526706f05b59d3b20000602482015262013880604482015260006064820152600260848201526001600160a01b039190911690632644c05c9060a401600060405180830381600087803b15801562001b1957600080fd5b505af115801562001b2e573d6000803e3d6000fd5b5050600e5462001b4a92506001600160a01b0316905062001a24565b62001b5462002412565b62001b5e6200312e565b62001b6862004011565b600e5462001b7f906001600160a01b031662001a24565b62001b8962002412565b62001b936200312e565b62001bbf602260008154811062001bae5762001bae62007253565b906000526020600020015462004b7d565b600e5462001bd6906001600160a01b031662001a24565b62001be062002412565b62000c0b6200312e565b604080516020810190915260008082525b825181101562001d1a578251829060008051602062018a7583398151915290636900a3ae9086908590811062001c355762001c3562007253565b60200260200101516040518263ffffffff1660e01b815260040162001c5c91815260200190565b600060405180830381865afa15801562001c7a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001ca491908101906200710e565b60405160200162001cb792919062007405565b60405160208183030381529060405291506001835162001cd89190620072a8565b81101562001d05578160405160200162001cf3919062007438565b60405160208183030381529060405291505b8062001d11816200721e565b91505062001bfb565b5062001d268162004f9c565b5050565b600062001d3982600a6200755d565b62001d45858562002079565b62001d5191906200756b565b949350505050565b600062001d676000620002e4565b905090565b604080516020810190915260008082525b825181101562001d1a578251829060008051602062018a7583398151915290636900a3ae9086908590811062001db75762001db762007253565b60200260200101516040518263ffffffff1660e01b815260040162001dde91815260200190565b600060405180830381865afa15801562001dfc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001e2691908101906200710e565b60405160200162001e3992919062007405565b60405160208183030381529060405291506001835162001e5a9190620072a8565b81101562001e87578160405160200162001e75919062007438565b60405160208183030381529060405291505b8062001e93816200721e565b91505062001d7d565b60008054610100900460ff161562001ebd5750600054610100900460ff1690565b600060008051602062018a758339815191523b1562001fc85760405160009060008051602062018a75833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49062001f2a9083906519985a5b195960d21b906020016200723a565b60408051601f198184030181529082905262001f4a92916020016200758e565b60408051601f198184030181529082905262001f6691620075c1565b6000604051808303816000865af19150503d806000811462001fa5576040519150601f19603f3d011682016040523d82523d6000602084013e62001faa565b606091505b509150508080602001905181019062001fc49190620075df565b9150505b919050565b600d5460009062001fe7906001600160a01b031662004fe3565b50600d546040516001600160a01b039091169084908490620020099062006c75565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f08015801562002046573d6000803e3d6000fd5b5090505b92915050565b600080600d60009054906101000a90046001600160a01b03168585604051620017d89062006c83565b600062002085620050bc565b6000836001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015620020c6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620020ec9190620075ff565b60ff169050620020fb620050c8565b6200210881600a6200755d565b62001d51908462007624565b600062000c298383600062000c0d565b601354604051309160119160129160ff1690620021419062006c91565b620021509493929190620076ed565b604051809103906000f0801580156200216d573d6000803e3d6000fd5b50600e80546001600160a01b0319166001600160a01b03929092169190911790553060165460405160149160159160ff90911690620021ac9062006c91565b620021bb9493929190620076ed565b604051809103906000f080158015620021d8573d6000803e3d6000fd5b50600f80546001600160a01b0319166001600160a01b03928316908117909155600e54601054620022129391909116919060ff1662000c0d565b600d80546001600160a01b0319166001600160a01b03929092169182179055604080516316c1a85160e31b8152905163b60d428891678ac7230489e8000091600480830192600092919082900301818588803b1580156200227257600080fd5b505af115801562002287573d6000803e3d6000fd5b5050600e54600d5460405163095ea7b360e01b81526001600160a01b03928316955063095ea7b39450620022c69350911690600019906004016200723a565b6020604051808303816000875af1158015620022e6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200230c9190620075df565b50600f54600d5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926200234792911690600019906004016200723a565b6020604051808303816000875af115801562002367573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200238d9190620075df565b50565b60405163c88a5e6d60e01b815260008051602062018a758339815191529063c88a5e6d90620023c690859085906004016200723a565b600060405180830381600087803b158015620023e157600080fd5b505af1158015620023f6573d6000803e3d6000fd5b505050505050565b6200240d83838360006200518f565b505050565b60195460408051630fbdb69960e11b815290516000926001600160a01b031691631f7b6d329160048083019260209291908290030181865afa1580156200245d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620024839190620070a5565b6001600160401b038111156200249d576200249d62006dae565b604051908082528060200260200182016040528015620024c7578160200160208202803683370190505b5090506000601960009054906101000a90046001600160a01b03166001600160a01b0316631f7b6d326040518163ffffffff1660e01b8152600401602060405180830381865afa15801562002520573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620025469190620070a5565b6001600160401b0381111562002560576200256062006dae565b6040519080825280602002602001820160405280156200258a578160200160208202803683370190505b5090506000601960009054906101000a90046001600160a01b03166001600160a01b0316631f7b6d326040518163ffffffff1660e01b8152600401602060405180830381865afa158015620025e3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620026099190620070a5565b6001600160401b0381111562002623576200262362006dae565b6040519080825280602002602001820160405280156200264d578160200160208202803683370190505b50905060005b601960009054906101000a90046001600160a01b03166001600160a01b0316631f7b6d326040518163ffffffff1660e01b8152600401602060405180830381865afa158015620026a7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620026cd9190620070a5565b811015620029fc57600e54601954604051632b430a9960e11b8152600481018490526001600160a01b03928316926370a08231921690635686153290602401602060405180830381865afa1580156200272a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620027509190620070bf565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562002795573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620027bb9190620070a5565b848281518110620027d057620027d062007253565b6020908102919091010152600f54601954604051632b430a9960e11b8152600481018490526001600160a01b03928316926370a08231921690635686153290602401602060405180830381865afa15801562002830573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620028569190620070bf565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156200289b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620028c19190620070a5565b838281518110620028d657620028d662007253565b6020908102919091010152600d54601954604051632b430a9960e11b8152600481018490526001600160a01b03928316926370a08231921690635686153290602401602060405180830381865afa15801562002936573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200295c9190620070bf565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015620029a1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620029c79190620070a5565b828281518110620029dc57620029dc62007253565b602090810291909101015280620029f3816200721e565b91505062002653565b506040805161010081018252600d546001600160a01b0390811680318352600e548451635aa6e67560e01b81529451939460208087019592909416936370a082319392635aa6e6759260048082019392918290030181865afa15801562002a67573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002a8d9190620070bf565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562002ad2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002af89190620070a5565b8152600e546018546040516370a0823160e01b81526001600160a01b0391821660048201526020909301929116906370a0823190602401602060405180830381865afa15801562002b4d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002b739190620070a5565b8152600f546018546040516370a0823160e01b81526001600160a01b0391821660048201526020909301929116906370a0823190602401602060405180830381865afa15801562002bc8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002bee9190620070a5565b8152600d546018546040516370a0823160e01b81526001600160a01b0391821660048201526020909301929116906370a0823190602401602060405180830381865afa15801562002c43573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002c699190620070a5565b81526020808201869052604080830186905260609283018590528351601a90815584830151601b5590840151601c5591830151601d556080830151601e5560a0830151805162002cbe92601f92019062006c25565b5060c0820151805162002cdc91600684019160209091019062006c25565b5060e08201518051620023f691600784019160209091019062006c25565b62002d058362004fe3565b5062002d118262004fe3565b50601754604051630b73a18f60e01b81526001600160a01b0385811660048301528481166024830152604482019290925260006064820152614e20608482015290821690630b73a18f9060a401600060405180830381600087803b15801562002d7957600080fd5b505af115801562002d8e573d6000803e3d6000fd5b5050601754604051630b73a18f60e01b81526001600160a01b0386811660048301528781166024830152604482019290925260006064820152614e2060848201529084169250630b73a18f915060a401600060405180830381600087803b15801562002df957600080fd5b505af115801562002e0e573d6000803e3d6000fd5b5050505060008051602062018b0c83398151915260001c60601b60601c6001600160a01b031663c657c71884856001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801562002e79573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262002ea391908101906200710e565b6040518363ffffffff1660e01b815260040162002ec2929190620071e2565b600060405180830381600087803b15801562002edd57600080fd5b505af115801562002ef2573d6000803e3d6000fd5b5050505060008051602062018b0c83398151915260001c60601b60601c6001600160a01b031663c657c71883846001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801562002f5d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262002f8791908101906200710e565b6040518363ffffffff1660e01b815260040162002fa6929190620071e2565b600060405180830381600087803b15801562002fc157600080fd5b505af115801562002fd6573d6000803e3d6000fd5b50505050505050565b600d546040516365fbae4d60e11b8152600091829182916001600160a01b03169063cbf75c9a9062003018908990899060040162007269565b6040805180830381865afa15801562003035573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200305b919062007283565b909250905061ffff604083901c166200307e62ffffff606084901c16866200773c565b6200308a919062007624565b6200309a90633b9aca0062007624565b9695505050505050565b8183146200240d5760008051602062018a9583398151915281604051620030cc919062007757565b60405180910390a16200240d8383620053c6565b816001600160a01b0316836001600160a01b0316146200240d5760008051602062018a95833981519152816040516200311a919062007757565b60405180910390a16200240d8383620054ac565b600d54600e54600f54604051636f7aeed560e11b81526000936001600160a01b039081169363def5ddaa936200316d9391831692169060040162007269565b602060405180830381865afa1580156200318b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620031b19190620070a5565b90505b80156200238d57600d54600e5460009182916001600160a01b0391821691638c66715c9116600f546001600160a01b0316866040518463ffffffff1660e01b8152600401620032069392919062007081565b61010060405180830381865afa15801562003225573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200324b919062007309565b60408281015160009687526023602090815282882088805281528288209190915560608401516001885282882055918201516005875295209490945592909201519150620031b49050565b6040516381bad6f360e01b8152600160048201819052602482018190526044820181905260648201526001600160a01b038216608482015260008051602062018a75833981519152906381bad6f39060a401600060405180830381600087803b1580156200330357600080fd5b505af115801562003318573d6000803e3d6000fd5b5050505050565b60008060006200334960405180606001604052806000815260200160008152602001600081525090565b670429d069189e0000815260026020820152600e5462003380906001600160a01b0316600f546001600160a01b0316835162005595565b6019546020830151604051632b430a9960e11b81529294506000926001600160a01b0390921691635686153291620033be9160040190815260200190565b602060405180830381865afa158015620033dc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620034029190620070bf565b6018546020840151845160405163268e95b360e11b8152600481019290925260248201529192506000916001600160a01b0390911690634d1d2b669060440160a0604051808303816000875af115801562003461573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003487919062007788565b505060408051808201909152601981527f736e6970652073686f756c64206265206120737563636573730000000000000060208201529198509650909150620034d290829062005643565b50600e54600d5460408051635aa6e67560e01b815290516200360c936001600160a01b03908116936370a0823193911691635aa6e675916004808201926020929091908290030181865afa1580156200352f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620035559190620070bf565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156200359a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620035c09190620070a5565b601b54620035d09086906200773c565b6040518060400160405280601c81526020017f696e636f7272656374204d616e67726f766520412062616c616e636500000000815250620030a4565b600e546018546040516370a0823160e01b81526001600160a01b039182166004820152620036e09291909116906370a0823190602401602060405180830381865afa15801562003660573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620036869190620070a5565b8351601c54869162003698916200773c565b620036a49190620072a8565b6040518060400160405280601981526020017f696e636f72726563742074616b657220412062616c616e636500000000000000815250620030a4565b6200372885848460000151620036f79190620072a8565b60405180604001604052806012815260200171125b98dbdc9c9958dd081d185ad95c91dbdd60721b815250620030a4565b6020828101805160009081526023808452604080832060018452855280832054935183529084528082208280529093529182205484516200376a919062007624565b6200377691906200756b565b600f546018546040516370a0823160e01b81526001600160a01b0391821660048201529293506200383e929116906370a08231906024015b602060405180830381865afa158015620037cc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620037f29190620070a5565b601d5462003802908490620072a8565b6040518060400160405280601981526020017f696e636f72726563742074616b657220422062616c616e636500000000000000815250620030a4565b62003876858260405180604001604052806013815260200172496e636f72726563742074616b65724761766560681b815250620030a4565b50600e546040516370a0823160e01b81526001600160a01b0383811660048301526200395d9216906370a0823190602401602060405180830381865afa158015620038c5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620038eb9190620070a5565b83516020850151601f805490919081106200390a576200390a62007253565b9060005260206000200154620039219190620072a8565b6040518060400160405280601981526020017f696e636f7272656374206d616b657220412062616c616e636500000000000000815250620030a4565b600f546040516370a0823160e01b81526001600160a01b03838116600483015262003a8c9216906370a0823190602401602060405180830381865afa158015620039ab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620039d19190620070a5565b6020848101805160009081526023808452604080832060018452855280832054935183529084528082208280529093529190912054855162003a14919062007624565b62003a2091906200756b565b6020858101518154811062003a395762003a3962007253565b906000526020600020015462003a5091906200773c565b6040518060400160405280601981526020017f696e636f7272656374206d616b657220422062616c616e636500000000000000815250620030a4565b600d54600e54600f5460208501516040516323199c5760e21b81526000946001600160a01b0390811694638c66715c9462003ad1949183169392169160040162007081565b61010060405180830381865afa15801562003af0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003b16919062007309565b50905062003b6181606001516000146040518060400160405280602081526020017f4f666665722073686f756c64206e6f742068617665206120726573696475616c81525062005643565b505050909192565b600d54604051636f7aeed560e11b81526000916001600160a01b03169063def5ddaa9062003b9e908790879060040162007269565b602060405180830381865afa15801562003bbc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003be29190620070a5565b90506000826001600160401b0381111562003c015762003c0162006dae565b60405190808252806020026020018201604052801562003c2b578160200160208202803683370190505b5090506000836001600160401b0381111562003c4b5762003c4b62006dae565b60405190808252806020026020018201604052801562003c75578160200160208202803683370190505b5090506000846001600160401b0381111562003c955762003c9562006dae565b60405190808252806020026020018201604052801562003cbf578160200160208202803683370190505b50905060005b841580159062003cd457508581105b1562003e77578484828151811062003cf05762003cf062007253565b6020908102919091010152600d546040516368c13d6b60e01b81526001600160a01b03909116906368c13d6b9062003d31908b908b908a9060040162007081565b602060405180830381865afa15801562003d4f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003d759190620070a5565b83828151811062003d8a5762003d8a62007253565b6020908102919091010152600d54604051635722647b60e01b81526001600160a01b0390911690635722647b9062003dcb908b908b908a9060040162007081565b602060405180830381865afa15801562003de9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003e0f9190620070a5565b82828151811062003e245762003e2462007253565b60200260200101818152505062003e6083828151811062003e495762003e4962007253565b602002602001015163ffffffff60c09190911c1690565b94508062003e6e816200721e565b91505062003cc5565b600090507f9fb850b909525c7c6dd54244cc1493f0e9aa8d82c5d8695da28051d9f3fdea00888860405162003eae92919062007269565b60405180910390a15b8581101562004007577fef285cd4a863f25f5335214e494f11128817d9f1e014e1909a8445c7feb84d8984828151811062003ef65762003ef662007253565b602002602001015162003f3685848151811062003f175762003f1762007253565b60200260200101516bffffffffffffffffffffffff60609190911c1690565b62003f6886858151811062003f4f5762003f4f62007253565b60200260200101516bffffffffffffffffffffffff1690565b62003f8f86868151811062003f815762003f8162007253565b602002602001015160601c90565b62003fbe87878151811062003fa85762003fa862007253565b602002602001015162ffffff60489190911c1690565b604080519586526020860194909452928401919091526001600160a01b03166060830152608082015260a00160405180910390a18062003ffe816200721e565b91505062003eb7565b5050505050505050565b60185460405163b04220dd60e01b81526716345785d8a0000060048201819052671bc16d674ec80000602483018190529092909160009182916001600160a01b039091169063b04220dd9060440160408051808303816000875af11580156200407e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620040a4919062007283565b909250905060025b60048110156200444557600e54601954604051632b430a9960e11b81526004810184905262004273926001600160a01b03908116926370a0823192911690635686153290602401602060405180830381865afa15801562004111573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620041379190620070bf565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156200417c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620041a29190620070a5565b600083815260236020908152604080832060018452909152902054601f805485908110620041d457620041d462007253565b9060005260206000200154620041eb9190620072a8565b60405163348051d760e11b81526004810185905260008051602062018a7583398151915290636900a3ae90602401600060405180830381865afa15801562004237573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200426191908101906200710e565b6040516020016200152e9190620077d4565b600f54601954604051632b430a9960e11b81526004810184905262004430926001600160a01b03908116926370a0823192911690635686153290602401602060405180830381865afa158015620042ce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620042f49190620070bf565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562004339573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200435f9190620070a5565b600083815260236020908152604080832083805282529091205481549091908590811062004391576200439162007253565b9060005260206000200154620043a891906200773c565b60405163348051d760e11b81526004810185905260008051602062018a7583398151915290636900a3ae90602401600060405180830381865afa158015620043f4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200441e91908101906200710e565b6040516020016200152e91906200781b565b806200443c816200721e565b915050620040ac565b507fe4d04ada8c0c30b998d364c83db6df67bc6cb7f11ab5e7e95380e1b5fc5217d554600160009081527f1bcb44d21c67d5659cdd5f45cd32c6d6c6d33d5044115600c6652ecd87939c096020527f5ab0085a4ad2083c41e3abab9aa2f21a10a4588053f2eda561aea9a235916eb95490918291620044c591906200773c565b620044d19087620072a8565b7fa92b7ba6726d035d99414951ce3624ee123cea4fdafadf272b7c73bb026af25a54600080527fb361aea33a0348d043deace4a562cb920ac10508397ad80f12dfe9a2a063e0476020527f92ded818c3a1c83ed62dea98930b305b063a28ee70d1214dfe2b2eea8c847bb154919250906200454e90839062007624565b6200455a91906200756b565b600e54601954604051632b430a9960e11b815260016004820152929450620046b6926001600160a01b03928316926370a08231921690635686153290602401602060405180830381865afa158015620045b7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620045dd9190620070bf565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562004622573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620046489190620070a5565b82601a60050160018154811062004663576200466362007253565b90600052602060002001546200467a9190620072a8565b6040518060400160405280601f81526020017f496e636f727265637420412062616c616e636520666f72206d616b6572203100815250620030a4565b50600f54601954604051632b430a9960e11b81526001600482015262004811926001600160a01b03908116926370a0823192911690635686153290602401602060405180830381865afa15801562004712573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620047389190620070bf565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156200477d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620047a39190620070a5565b82601a600601600181548110620047be57620047be62007253565b9060005260206000200154620047d591906200773c565b6040518060400160405280601f81526020017f496e636f727265637420422062616c616e636520666f72206d616b6572203100815250620030a4565b600e546018546040516370a0823160e01b81526001600160a01b039182166004820152620048bf9291909116906370a0823190602401602060405180830381865afa15801562004865573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200488b9190620070a5565b600e54620048b0906001600160a01b03165b600f546001600160a01b0316896200567c565b601c54620036a491906200773c565b600e5462004919908490620048dd906001600160a01b03166200489d565b6040518060400160405280601b81526020017f496e636f7272656374206465636c617265642074616b6572476f740000000000815250620030a4565b7fab6d64a0ae8aa7e992431b692678f169470a865054be4492eee547d340019b125460008080527fca0574cb82515dd8d8feabc9bfece9b4778855cddef4d6e8f68e64178480ff7e6020527fa5fbbaf0a14b46038699d07035930bfc9da02767b0bf2ddfb660f999677e727854909183916200499691906200773c565b620049a291906200773c565b600f546018546040516370a0823160e01b81526001600160a01b039182166004820152929350620049df929116906370a0823190602401620037ae565b62004a2183826040518060400160405280601c81526020017f496e636f7272656374206465636c617265642074616b65724761766500000000815250620030a4565b600e54600d5460408051635aa6e67560e01b81529051620023f6936001600160a01b03908116936370a0823193911691635aa6e675916004808201926020929091908290030181865afa15801562004a7d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004aa39190620070bf565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562004ae8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004b0e9190620070a5565b600e5462004b32906001600160a01b0316600f546001600160a01b03168a62005595565b601b5462004b4191906200773c565b6040518060400160405280601b81526020017f696e636f7272656374204d616e67726f76652062616c616e6365730000000000815250620030a4565b60185460405163268e95b360e11b8152600481018390526706f05b59d3b2000060248201526001600160a01b0390911690634d1d2b669060440160a0604051808303816000875af192505050801562004bf5575060408051601f3d908101601f1916820190925262004bf29181019062007788565b60015b62004c51573d80801562004c26576040519150601f19603f3d011682016040523d82523d6000602084013e62004c2b565b606091505b5060008180602001905181019062004c4491906200710e565b90506200240d8162005713565b62004c8885156040518060400160405280601281526020017111985a5b195c881cda1bdd5b190819985a5b60721b81525062005643565b62004caf84600060405180606001604052806026815260200162018ae660269139620030a4565b62004cd683600060405180606001604052806027815260200162018a2e60279139620030a4565b600d54600e54600f546040516368c13d6b60e01b815262004de8936001600160a01b039081169363275074589385936368c13d6b9362004d209381169216908e9060040162007081565b602060405180830381865afa15801562004d3e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004d649190620070a5565b6040518263ffffffff1660e01b815260040162004d8391815260200190565b602060405180830381865afa15801562004da1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004dc79190620075df565b156040518060600160405280602f815260200162018b2c602f913962005643565b600e5460009062004e2e906001600160a01b0316600f546001600160a01b031660008a815260236020526040812090600581526020019081526020016000205462002fdf565b90506000601a60070160008154811062004e4c5762004e4c62007253565b6000918252602082200154600d54601954604051632b430a9960e11b8152600481019490945291926001600160a01b03918216926370a08231921690635686153290602401602060405180830381865afa15801562004eaf573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004ed59190620070bf565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562004f1a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004f409190620070a5565b62004f4c9190620072a8565b600d5490915062004007906001600160a01b03163162004f6d8385620072a8565b601a5462004f7c9190620072a8565b60405180606001604052806031815260200162018ab560319139620030a4565b6200238d8160405160240162004fb3919062007855565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b17905262005745565b60006001600160a01b038216620050ad5760008051602062018a5583398151915260405162005043906020808252601e908201527f4572726f723a20616464726573732073686f756c64206e6f7420626520300000604082015260600190565b60405180910390a160408051818152600781830152664164647265737360c81b60608201526001600160a01b038416602082015290517f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f9181900360800190a1620050ad62005766565b506001600160a01b0316151590565b62000c0b60006200586a565b600854600103620051445760095460405163ca669fa760e01b81526001600160a01b03909116600482015260008051602062018a758339815191529063ca669fa7906024015b600060405180830381600087803b1580156200512957600080fd5b505af11580156200513e573d6000803e3d6000fd5b50505050565b60085460020362000c0b576009546040516303223eab60e11b81526001600160a01b03909116600482015260008051602062018a75833981519152906306447d56906024016200510e565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b1790529151600092871691620051e591620075c1565b6000604051808303816000865af19150503d806000811462005224576040519150601f19603f3d011682016040523d82523d6000602084013e62005229565b606091505b50915050600081806020019051810190620052459190620070a5565b9050620052b784620052b087620052876370a0823160e01b6200526a60018d620059cf565b9060038201805463ffffffff191660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b90620059f4565b8215620023f65760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b03891691620053029190620075c1565b6000604051808303816000865af19150503d806000811462005341576040519150601f19603f3d011682016040523d82523d6000602084013e62005346565b606091505b50915050600081806020019051810190620053629190620070a5565b9050828610156200538d57620053798684620072a8565b620053859082620072a8565b9050620053a8565b620053998387620072a8565b620053a590826200773c565b90505b6200400781620052b06318160ddd60e01b6200526a60018d620059cf565b80821462001d265760008051602062018a55833981519152604051620054289060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8816040516200546191906200786a565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8826040516200549a9190620078a3565b60405180910390a162001d2662005766565b806001600160a01b0316826001600160a01b03161462001d265760008051602062018a55833981519152604051620055239060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f816040516200555c9190620078ce565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f826040516200549a919062007913565b600d546040516365fbae4d60e11b815260009182916001600160a01b039091169063cbf75c9a90620055ce908890889060040162007269565b6040805180830381865afa158015620055eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005611919062007283565b9150612710905060e882901c61ffff165b6200562e908562007624565b6200563a91906200756b565b95945050505050565b8162001d265760008051602062018a958339815191528160405162005669919062007757565b60405180910390a162001d268262005a00565b600d546040516365fbae4d60e11b815260009182916001600160a01b039091169063cbf75c9a90620056b5908890889060040162007269565b6040805180830381865afa158015620056d2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620056f8919062007283565b915061271090506200562261ffff60e884901c1682620072a8565b60008051602062018a958339815191528160405162005733919062007757565b60405180910390a16200238d62005766565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60008051602062018a758339815191523b15620058595760405160009060008051602062018a75833981519152907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490620057d49083906519985a5b195960d21b9060019060200162007060565b60408051601f1981840301815290829052620057f492916020016200758e565b60408051601f19818403018152908290526200581091620075c1565b6000604051808303816000865af19150503d80600081146200584f576040519150601f19603f3d011682016040523d82523d6000602084013e62005854565b606091505b505050505b6000805461ff001916610100179055565b600060085560408051631e91f8cb60e01b815290513091631e91f8cb9160048083019260209291908290030181865afa158015620058ac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620058d29190620070bf565b600980546001600160a01b0319166001600160a01b0392909216918217905530146200238d57306001600160a01b0316631e91f8cb6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562005937573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200595d9190620070bf565b6009546001600160a01b039081169116146200597b57600160085550565b80156200238d576002600855604080516390c5013b60e01b8152905160008051602062018a75833981519152916390c5013b91600480830192600092919082900301818387803b1580156200330357600080fd5b6005820180546001600160a01b0319166001600160a01b039290921691909117905590565b62001d26828262005a55565b806200238d5760008051602062018a55833981519152604051620057339060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b946000939092909183018282801562005ac857602002820191906000526020600020905b81548152602001906001019080831162005ab3575b5050505050905060008362005add8362005dc7565b60405160200162005af09291906200758e565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a16835281529281209194509092909162005b449186918891016200793e565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff1662005b7f5762005b7d8762005e7a565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b031988168452825280832090519091839162005bc09187918991016200793e565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b03168460405162005c079190620075c1565b600060405180830381855afa9150503d806000811462005c44576040519150601f19603f3d011682016040523d82523d6000602084013e62005c49565b606091505b50915062005c6690508162005c6088602062007624565b62006b71565b604051630667f9d760e41b81529092506000915060008051602062018a758339815191529063667f9d709062005ca3908b9087906004016200723a565b6020604051808303816000875af115801562005cc3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005ce99190620070a5565b905080821462005d165760405162461bcd60e51b815260040162005d0d906200797a565b60405180910390fd5b6040516370ca10bb60e01b815260008051602062018a75833981519152906370ca10bb9062005d4e908b9087908e9060040162007060565b600060405180830381600087803b15801562005d6957600080fd5b505af115801562005d7e573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff1916905562005db360028b01600062006c9f565b896004016000905550505050505050505050565b606060008251602062005ddb919062007624565b6001600160401b0381111562005df55762005df562006dae565b6040519080825280601f01601f19166020018201604052801562005e20576020820181803683370190505b50905060005b835181101562005e7357600084828151811062005e475762005e4762007253565b60200260200101519050808260200260200184015250808062005e6a906200721e565b91505062005e26565b5092915050565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b94938793919290919083018282801562005eec57602002820191906000526020600020905b81548152602001906001019080831162005ed7575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a168452825280832090519596509491935062005f38925085918791016200793e565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff161562005fd7576001600160a01b0384166000908152602087815260408083206001600160e01b0319871684528252808320905190929162005fa79185918791016200793e565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b60008362005fe58362005dc7565b60405160200162005ff89291906200758e565b604051602081830303815290604052905060008051602062018b0c83398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200605757600080fd5b505af11580156200606c573d6000803e3d6000fd5b50505050600080866001600160a01b0316836040516200608d9190620075c1565b600060405180830381855afa9150503d8060008114620060ca576040519150601f19603f3d011682016040523d82523d6000602084013e620060cf565b606091505b509150620060e690508162005c6087602062007624565b6040516365bc948160e01b81526001600160a01b03891660048201529092506000915060008051602062018a75833981519152906365bc9481906024016000604051808303816000875af115801562006143573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200616d919081019062007a82565b50905080516001036200643657600060008051602062018b0c83398151915260001c6001600160a01b031663667f9d708984600081518110620061b457620061b462007253565b60200260200101516040518363ffffffff1660e01b8152600401620061db9291906200723a565b6020604051808303816000875af1158015620061fb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620062219190620070a5565b90508062006285577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5888360008151811062006261576200626162007253565b602002602001015160001c6040516200627c9291906200723a565b60405180910390a15b808314620062a75760405162461bcd60e51b815260040162005d0d906200797a565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed88888789604051602001620062df9291906200793e565b60405160208183030381529060405280519060200120856000815181106200630b576200630b62007253565b602002602001015160001c60405162006328949392919062007aec565b60405180910390a18160008151811062006346576200634662007253565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c168352845280822090519293909262006391918a918c91016200793e565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c16855282528284209251909391620063fb918a918c91016200793e565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff191691151591909117905550620069f4565b600181511115620069835760005b81518110156200697c57600060008051602062018b0c83398151915260001c6001600160a01b031663667f9d708a85858151811062006487576200648762007253565b60200260200101516040518363ffffffff1660e01b8152600401620064ae9291906200723a565b6020604051808303816000875af1158015620064ce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620064f49190620070a5565b90508062006557577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a58984848151811062006533576200653362007253565b602002602001015160001c6040516200654e9291906200723a565b60405180910390a15b60008051602062018b0c83398151915260001c6001600160a01b03166370ca10bb8a8585815181106200658e576200658e62007253565b602002602001015161133760f01b6040518463ffffffff1660e01b8152600401620065bc9392919062007060565b600060405180830381600087803b158015620065d757600080fd5b505af1158015620065ec573d6000803e3d6000fd5b50505050600060608a6001600160a01b0316876040516200660e9190620075c1565b600060405180830381855afa9150503d80600081146200664b576040519150601f19603f3d011682016040523d82523d6000602084013e62006650565b606091505b509092509050620066688162005c608b602062007624565b95508180156200667c575061133760f01b86145b15620068cf577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c604051602001620066ba9291906200793e565b60405160208183030381529060405280519060200120888881518110620066e557620066e562007253565b602002602001015160001c60405162006702949392919062007aec565b60405180910390a18484815181106200671f576200671f62007253565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f16835284528082209051929390926200676a918d918f91016200793e565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c604051602001620067f79291906200793e565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff02191690831515021790555060008051602062018b0c83398151915260001c6001600160a01b03166370ca10bb8c87878151811062006869576200686962007253565b6020026020010151866040518463ffffffff1660e01b8152600401620068929392919062007060565b600060405180830381600087803b158015620068ad57600080fd5b505af1158015620068c2573d6000803e3d6000fd5b505050505050506200697c565b60008051602062018b0c83398151915260001c6001600160a01b03166370ca10bb8c87878151811062006906576200690662007253565b6020026020010151866040518463ffffffff1660e01b81526004016200692f9392919062007060565b600060405180830381600087803b1580156200694a57600080fd5b505af11580156200695f573d6000803e3d6000fd5b50505050505050808062006973906200721e565b91505062006444565b50620069f4565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e606482015260840162005d0d565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a1684528252808320905190929162006a389188918a91016200793e565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff1662006ac75760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201526e3a143994903737ba103337bab7321760891b606482015260840162005d0d565b6005890180546001600160a01b031916905560038901805463ffffffff1916905562006af860028a01600062006c9f565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a1684528252808320905190929162006b3e9188918a91016200793e565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b6000806000602085511162006b8857845162006b8b565b60205b905060005b8181101562006bf15762006ba681600862007624565b8662006bb383886200773c565b8151811062006bc65762006bc662007253565b01602001516001600160f81b031916901c92909217918062006be8816200721e565b91505062006b90565b5090949350505050565b61567e8062007b1d83390190565b6155e4806200d19b83390190565b610c49806201277f83390190565b82805482825590600052602060002090810192821562006c63579160200282015b8281111562006c6357825182559160200191906001019062006c46565b5062006c7192915062006cba565b5090565b61206d80620133c883390190565b611a41806201543583390190565b611bb88062016e7683390190565b50805460008255906000526020600020908101906200238d91905b5b8082111562006c71576000815560010162006cbb565b80151581146200238d57600080fd5b60006020828403121562006cf357600080fd5b813562000c298162006cd1565b6001600160a01b03811681146200238d57600080fd5b60008060006060848603121562006d2c57600080fd5b833562006d398162006d00565b9250602084013562006d4b8162006d00565b9150604084013562006d5d8162006cd1565b809150509250925092565b6020808252825182820181905260009190848201906040850190845b8181101562006da25783518352928401929184019160010162006d84565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b038111828210171562006de95762006de962006dae565b60405290565b604051601f8201601f191681016001600160401b038111828210171562006e1a5762006e1a62006dae565b604052919050565b60006001600160401b0382111562006e3e5762006e3e62006dae565b50601f01601f191660200190565b60008060006060848603121562006e6257600080fd5b833562006e6f8162006d00565b9250602084013562006e818162006d00565b915060408401356001600160401b0381111562006e9d57600080fd5b8401601f8101861362006eaf57600080fd5b803562006ec662006ec08262006e22565b62006def565b81815287602083850101111562006edc57600080fd5b816020840160208301376000602083830101528093505050509250925092565b60006001600160401b0382111562006f185762006f1862006dae565b5060051b60200190565b6000602080838503121562006f3657600080fd5b82356001600160401b0381111562006f4d57600080fd5b8301601f8101851362006f5f57600080fd5b803562006f7062006ec08262006efc565b81815260059190911b8201830190838101908783111562006f9057600080fd5b928401925b8284101562006fb05783358252928401929084019062006f95565b979650505050505050565b60008060006060848603121562006fd157600080fd5b833562006fde8162006d00565b95602085013595506040909401359392505050565b600080604083850312156200700757600080fd5b8235620070148162006d00565b91506020830135620070268162006d00565b809150509250929050565b600080604083850312156200704557600080fd5b8235620070528162006d00565b946020939093013593505050565b6001600160a01b039390931683526020830191909152604082015260600190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060208284031215620070b857600080fd5b5051919050565b600060208284031215620070d257600080fd5b815162000c298162006d00565b60005b83811015620070fc578181015183820152602001620070e2565b838111156200513e5750506000910152565b6000602082840312156200712157600080fd5b81516001600160401b038111156200713857600080fd5b8201601f810184136200714a57600080fd5b80516200715b62006ec08262006e22565b8181528560208385010111156200717157600080fd5b6200563a826020830160208601620070df565b656d616b65722d60d01b815260008251620071a7816006850160208701620070df565b9190910160060192915050565b60008151808452620071ce816020860160208601620070df565b601f01601f19169290920160200192915050565b6001600160a01b038316815260406020820181905260009062001d5190830184620071b4565b634e487b7160e01b600052601160045260246000fd5b60006001820162007233576200723362007208565b5060010190565b6001600160a01b03929092168252602082015260400190565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b0392831681529116602082015260400190565b600080604083850312156200729757600080fd5b505080516020909101519092909150565b600082821015620072bd57620072bd62007208565b500390565b7f496e636f7272656374207765692062616c616e636520666f72206d616b657220815260008251620072fc816020850160208701620070df565b9190910160200192915050565b6000808284036101008112156200731f57600080fd5b60808112156200732e57600080fd5b6200733862006dc4565b84518152602085015160208201526040850151604082015260608501516060820152809350506080607f19820112156200737157600080fd5b506200737c62006dc4565b60808401516200738c8162006d00565b815260a0840151602082015260c0840151604082015260e09093015160608401525092909150565b7f496e636f7272656374206d616b65722061646472657373206174206f666665728152600160fd1b602082015260008251620073f8816021850160208701620070df565b9190910160210192915050565b6000835162007419818460208801620070df565b8351908301906200742f818360208801620070df565b01949350505050565b600082516200744c818460208701620070df565b61016160f51b920191825250600201919050565b600181815b80851115620074a157816000190482111562007485576200748562007208565b808516156200749357918102915b93841c939080029062007465565b509250929050565b600082620074ba575060016200204a565b81620074c9575060006200204a565b8160018114620074e25760028114620074ed576200750d565b60019150506200204a565b60ff84111562007501576200750162007208565b50506001821b6200204a565b5060208310610133831016604e8410600b841016171562007532575081810a6200204a565b6200753e838362007460565b806000190482111562007555576200755562007208565b029392505050565b600062000c298383620074a9565b6000826200758957634e487b7160e01b600052601260045260246000fd5b500490565b6001600160e01b0319831681528151600090620075b3816004850160208701620070df565b919091016004019392505050565b60008251620075d5818460208701620070df565b9190910192915050565b600060208284031215620075f257600080fd5b815162000c298162006cd1565b6000602082840312156200761257600080fd5b815160ff8116811462000c2957600080fd5b600081600019048311821515161562007641576200764162007208565b500290565b8054600090600181811c90808316806200766157607f831692505b602080841082036200768357634e487b7160e01b600052602260045260246000fd5b83885260208801828015620076a15760018114620076b357620076e0565b60ff19871682528282019750620076e0565b60008981526020902060005b87811015620076da57815484820152908601908401620076bf565b83019850505b5050505050505092915050565b6001600160a01b0385168152608060208201819052600090620077139083018662007646565b828103604084015262007727818662007646565b91505060ff8316606083015295945050505050565b6000821982111562007752576200775262007208565b500190565b60408152600560408201526422b93937b960d91b606082015260806020820152600062000c296080830184620071b4565b600080600080600060a08688031215620077a157600080fd5b8551620077ae8162006cd1565b602087015160408801516060890151608090990151929a91995097965090945092505050565b7f496e636f727265637420412062616c616e636520666f72206d616b65722000008152600082516200780e81601e850160208701620070df565b91909101601e0192915050565b7f496e636f727265637420422062616c616e636520666f72206d616b65722000008152600082516200780e81601e850160208701620070df565b60208152600062000c296020830184620071b4565b6040815260006200789560408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b6040815260006200789560408301600a815269080808081058dd1d585b60b21b602082015260400190565b604081526000620078f960408301600a8152690808115e1c1958dd195960b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b604081526000620078f960408301600a815269080808081058dd1d585b60b21b602082015260400190565b825160009082906020808701845b838110156200796a578151855293820193908201906001016200794c565b5050948252509092019392505050565b6020808252606f908201527f73746453746f726167652066696e642853746453746f72616765293a2050616360408201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560608201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960808201526e39b713ba1039bab83837b93a32b21760891b60a082015260c00190565b600082601f83011262007a2757600080fd5b8151602062007a3a62006ec08362006efc565b82815260059290921b8401810191818101908684111562007a5a57600080fd5b8286015b8481101562007a77578051835291830191830162007a5e565b509695505050505050565b6000806040838503121562007a9657600080fd5b82516001600160401b038082111562007aae57600080fd5b62007abc8683870162007a15565b9350602085015191508082111562007ad357600080fd5b5062007ae28582860162007a15565b9150509250929050565b6001600160a01b039490941684526001600160e01b0319929092166020840152604083015260608201526080019056fe60a06040523480156200001157600080fd5b506040516200567e3803806200567e83398101604081905262000034916200048c565b8282826040518060400160405280601081526020016f496e7665727465644d616e67726f766560801b815250808484847f72201d073f249840099a96530e189c4291c1852040b1e96ff1f606db656be4ff60405160405180910390a16200009b836200016d565b620000a682620001cc565b620000b1816200027f565b620000bc836200032f565b5050815160208084019190912060408051808201825260018152603160f81b9084015280517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f938101939093528201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c001905060408051601f19818403018152919052805160209091012060805250620004d19650505050505050565b62000177620003e0565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f30906020015b60405180910390a150565b620001d6620003e0565b61ffff811681146200022f5760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f31366269747300000000000060448201526064015b60405180910390fd5b6200024b816001546200045160201b62001d4e1790919060201c565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001620001c1565b62000289620003e0565b808162ffffff1614620002df5760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f3234626974730000000000000000604482015260640162000226565b620002fb816001546200046f60201b62001d711790919060201c565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001620001c1565b62000339620003e0565b6001600160a01b038116620003915760405162461bcd60e51b815260206004820152601360248201527f6d67762f636f6e6669672f676f762f6e6f743000000000000000000000000000604482015260640162000226565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001620001c1565b6003546001600160a01b0316331480620003f957503330145b806200040e57506003546001600160a01b0316155b6200044f5760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b604482015260640162000226565b565b60401b69ffff00000000000000001661ffff60401b19919091161790565b60281b67ffffff00000000001662ffffff60281b19919091161790565b600080600060608486031215620004a257600080fd5b83516001600160a01b0381168114620004ba57600080fd5b602085015160409095015190969495509392505050565b60805161518a620004f46000396000818161036401526116aa015261518a6000f3fe60806040526004361061024a5760003560e01c80636d27de6711610139578063b60d4288116100b6578063dc7e98df1161007a578063dc7e98df146108a8578063def5ddaa146108c8578063fbb66910146108e8578063fbfa77cf14610908578063fbffe5fd14610928578063fcaa7e2e1461094857600080fd5b8063b60d4288146107e4578063c7bb25d0146107ec578063cbf75c9a14610833578063d0ee509914610868578063db20266f1461088857600080fd5b8063aa4dd282116100fd578063aa4dd28214610744578063ab033ea914610764578063ad97db1b14610784578063b09d2a16146107a4578063b2b12057146107c457600080fd5b80636d27de671461061457806370a08231146106545780637ecebe00146106815780638c66715c146106ae57806395999ee31461072457600080fd5b80635722647b116101c7578063644e67031161018b578063644e6703146104cc5780636804f613146105835780636817031b146105a357806368c13d6b146105c35780636a4f76911461060157600080fd5b80635722647b146103f657806359eba454146104345780635a611f4e146104545780635aa6e675146104745780635cd82390146104ac57600080fd5b806330adf81f1161020e57806330adf81f146103105780633644e5151461035257806341c0e1b51461038657806346e142fa1461039b57806349f6d2dc146103e357600080fd5b80630b73a18f1461025f578063230244081461027f578063275074581461029257806327d097c6146102d05780632e1a7d4d146102f057600080fd5b3661025a5761025833610968565b005b600080fd5b34801561026b57600080fd5b5061025861027a3660046149b8565b61098f565b61025861028d366004614a05565b610968565b34801561029e57600080fd5b506102bb6102ad366004614a20565b6001600160601b0316151590565b60405190151581526020015b60405180910390f35b3480156102dc57600080fd5b506102586102eb366004614a39565b610a2d565b3480156102fc57600080fd5b506102bb61030b366004614a20565b610b08565b34801561031c57600080fd5b506103447fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a281565b6040519081526020016102c7565b34801561035e57600080fd5b506103447f000000000000000000000000000000000000000000000000000000000000000081565b34801561039257600080fd5b50610258610b62565b3480156103a757600080fd5b506103bb6103b6366004614ac8565b610baa565b604080519586526020860194909452928401919091526060830152608082015260a0016102c7565b6103446103f1366004614b41565b610bd6565b34801561040257600080fd5b50610344610411366004614a39565b600560209081526000938452604080852082529284528284209052825290205481565b34801561044057600080fd5b506102bb61044f366004614b9f565b610d41565b34801561046057600080fd5b5061025861046f366004614bea565b610dca565b34801561048057600080fd5b50600354610494906001600160a01b031681565b6040516001600160a01b0390911681526020016102c7565b3480156104b857600080fd5b506102586104c7366004614a05565b610e24565b3480156104d857600080fd5b506104ec6104e7366004614c07565b610e84565b6040805183516001600160a01b0316815260208085015115158183015284830151151582840152606080860151818401526080808701518185015260a0968701511515878501528551151560c0808601919091529286015160e0850152938501516101008401528401516101208301529183015115156101408201529282015161016084015201516101808201526101a0016102c7565b34801561058f57600080fd5b5061025861059e366004614bea565b610f87565b3480156105af57600080fd5b506102586105be366004614a05565b610fd1565b3480156105cf57600080fd5b506103446105de366004614a39565b600460209081526000938452604080852082529284528284209052825290205481565b61025861060f366004614c3a565b611027565b34801561062057600080fd5b5061063461062f366004614ca1565b61113a565b6040805194855260208501939093529183015260608201526080016102c7565b34801561066057600080fd5b5061034461066f366004614a05565b60066020526000908152604090205481565b34801561068d57600080fd5b5061034461069c366004614a05565b60086020526000908152604090205481565b3480156106ba57600080fd5b506106ce6106c9366004614a39565b611171565b60408051835181526020808501518183015284830151828401526060948501518583015283516001600160a01b0316608083015283015160a08201529082015160c082015291015160e0820152610100016102c7565b34801561073057600080fd5b5061025861073f366004614a20565b61124d565b34801561075057600080fd5b5061034461075f366004614d09565b6112e9565b34801561077057600080fd5b5061025861077f366004614a05565b61134a565b34801561079057600080fd5b5061034461079f366004614d3c565b6113ec565b3480156107b057600080fd5b506102586107bf366004614d8b565b6115be565b3480156107d057600080fd5b506103bb6107df366004614e21565b6118b7565b6102586118f3565b3480156107f857600080fd5b50610344610807366004614e9b565b600760209081526000948552604080862082529385528385208152918452828420909152825290205481565b34801561083f57600080fd5b5061085361084e366004614c07565b6118fe565b604080519283526020830191909152016102c7565b34801561087457600080fd5b50610258610883366004614c07565b6119fb565b34801561089457600080fd5b506102bb6108a3366004614c07565b611a6c565b3480156108b457600080fd5b506102586108c3366004614a39565b611aa7565b3480156108d457600080fd5b506103446108e3366004614c07565b611b67565b3480156108f457600080fd5b50610258610903366004614a39565b611b9f565b34801561091457600080fd5b50600054610494906001600160a01b031681565b34801561093457600080fd5b50610634610943366004614eef565b611c8c565b34801561095457600080fd5b50610258610963366004614a20565b611cb3565b60006109756000806118fe565b50905061098181611d90565b61098b8234611dd3565b5050565b610997611e2f565b6001600160a01b0385811660008181526002602090815260408083209489168084529482529182902080546001600160f81b0316600160f81b17905581516001815291517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a3610a10858585611aa7565b610a1b858584611b9f565b610a26858583610a2d565b5050505050565b610a35611e2f565b808162ffffff1614610a8e5760405162461bcd60e51b815260206004820152601f60248201527f6d67762f636f6e6669672f6f666665725f676173626173652f3234626974730060448201526064015b60405180910390fd5b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805462ffffff60601b191662ffffff60601b606088901b1617905590518481527fc5859916e5f3fc1ed4d2cfb8c7a6cf709580f228fa0c9d9e0fa468744c7e4a9191015b60405180910390a3505050565b6000610b143383611e9a565b60405133908390600081818185875af1925050503d8060008114610b54576040519150601f19603f3d011682016040523d82523d6000602084013e610b59565b606091505b50909392505050565b610b6a611e2f565b60015464ff000000001916640100000000176001556040517fbe26733c2bf6ff3ea5ba8cfe744422bd49052ff9ed5685c9e81e6f9321dbaddd90600090a1565b6000806000806000610bc08a8a8a8a8a33611f5f565b939e929d50909b50995090975095505050505050565b6000610be0614864565b610bea89896118fe565b6101208301819052610100830191909152610c04906120ac565b610c188161010001518261012001516120f8565b3415610c2857610c283334611dd3565b61012081015160181c63ffffffff166001016080820181905263ffffffff811614610c8b5760405162461bcd60e51b81526020600482015260136024820152726d67762f6f6666657249644f766572666c6f7760681b6044820152606401610a85565b6080810151610120820151610cb79160181b66ffffffff0000001666ffffffff00000019919091161790565b6101208201526001600160a01b03808a16825288166020820152604081018790526060810186905260a0810185905260c0810184905260e08101839052610cff816000612148565b61012081015181516001600160a01b03908116600090815260026020908152604080832082870151909416835292905220556080015198975050505050505050565b6001600160a01b038085166000818152600760209081526040808320888616808552908352818420338086529084528285209689168552959092528083208690555191939092917f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d91610db79188908890614f3c565b60405180910390a3506001949350505050565b610dd2611e2f565b60015460ff60501b191660ff60501b605083901b161760015560405181151581527f9b84fe4d9ffc14a6f7ec50c18884ee0d4bb8165aa718a28558df12ab4bd32b14906020015b60405180910390a150565b610e2c611e2f565b6001546001600160601b03166001600160601b0319606083901b16176001556040516001600160a01b03821681527ff592e42c32883b35bebfbf9d9b801570a25d5ccbba452310746ad2cfd20d548f90602001610e19565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152610efa6040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b600080610f0786866118fe565b91509150610f71826040805160c081018252606083811c8252605884901c60ff9081161515602080850191909152605086901c82161515848601529385901c61ffff1691830191909152602884901c62ffffff1660808301529290911c909116151560a082015290565b9350610f7c816128c5565b925050509250929050565b610f8f611e2f565b600154610f9c9082612973565b60015560405181151581527fbf39fbfab835c119637f4dbc4fb0f428c559c210200405d1ec25ddb50a93f9d490602001610e19565b610fd9611e2f565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f3090602001610e19565b61102f614864565b61103989896118fe565b6101208301819052610100830191909152611053906120ac565b6110678161010001518261012001516120f8565b3415611077576110773334611dd3565b6001600160a01b03808a16808352908916602080840182905260408085018b9052606085018a90526080850186905260a0850189905260c0850188905260e0850187905260009384526004825280842092845291815281832085845290529020546101408201526101208101516110ef826001612148565b610120820151811461112e5761012082015182516001600160a01b03908116600090815260026020908152604080832082880151909416835292905220555b50505050505050505050565b60008060008061114e8a8a8a8a8a8a61298a565b929650909450925090506111648a8a8786612c72565b9650965096509692505050565b61119c6040518060800160405280600081526020016000815260200160008152602001600081525090565b6111d0604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b6001600160a01b03808616600090815260046020908152604080832093881683529281528282208683529052205461120781612d72565b6001600160a01b038088166000908152600560209081526040808320938a1683529281528282208883529052205490935061124181612dd4565b92505050935093915050565b611255611e2f565b808162ffffff16146112a95760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f32346269747300000000000000006044820152606401610a85565b6001546112b69082611d71565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001610e19565b600033301461133a5760405162461bcd60e51b815260206004820152601f60248201527f6d67762f696e766572746564466c6173686c6f616e2f70726f746563746564006044820152606401610a85565b61134383612e43565b9392505050565b611352611e2f565b6001600160a01b03811661139e5760405162461bcd60e51b815260206004820152601360248201527206d67762f636f6e6669672f676f762f6e6f743606c1b6044820152606401610a85565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001610e19565b6000806113f986866118fe565b915050611405816120ac565b6001600160a01b038087166000818152600460209081526040808320948a16808452948252808320898452825280832054938352600582528083209483529381528382208883529052919091205461145d8160601c90565b6001600160a01b0316336001600160a01b0316146114bd5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f726574726163744f666665722f756e617574686f72697a65640000006044820152606401610a85565b6001600160601b0382161561152157826114ed89896114dc8660e01c90565b60c087901c63ffffffff1688612fc4565b935080841461151f576001600160a01b03808a166000908152600260209081526040808320938c168352929052208490555b505b61152f88888885858a6130a4565b841561156657603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca00020293506115663385611dd3565b866001600160a01b0316886001600160a01b03167fe2ce51fba856682424155a2d89b2ad1d2adde6ea0a9e3115b4b474cd6cb1798b886040516115ab91815260200190565b60405180910390a3505050949350505050565b428410156116035760405162461bcd60e51b81526020600482015260126024820152711b59dd8bdc195c9b5a5d0bd95e1c1a5c995960721b6044820152606401610a85565b6001600160a01b03878116600081815260086020908152604080832080546001810190915581517fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a2818501528f8716818401528e871660608201526080810195909552948b1660a085015260c084018a905260e084018590526101008085018a9052815180860390910181526101208501909152805191012061190160f01b6101408401527f0000000000000000000000000000000000000000000000000000000000000000610142840152610162830152906101820160408051601f198184030181528282528051602091820120600080855291840180845281905260ff89169284019290925260608301879052608083018690529092509060019060a0016020604051602081039080840390855afa158015611745573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381161580159061177b5750896001600160a01b0316816001600160a01b0316145b6117c75760405162461bcd60e51b815260206004820152601b60248201527f6d67762f7065726d69742f696e76616c69645369676e617475726500000000006044820152606401610a85565b87600760008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008b6001600160a01b03166001600160a01b03168152602001908152602001600020819055508a6001600160a01b03168c6001600160a01b03167f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d8c8c8c6040516118a193929190614f3c565b60405180910390a3505050505050505050505050565b60008060008060006118cd8b8b8b8b8b8b611f5f565b9398509196509450925090506118e58b8b8886612c72565b965096509650965096915050565b6118fc33610968565b565b6001546001600160a01b03838116600090815260026020908152604080832093861683529290522054605882901c60ff16156119f4576000806119418460601c90565b604051636968abd360e01b81526001600160a01b03888116600483015287811660248301529190911690636968abd3906044016040805180830381865afa158015611990573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119b49190614f60565b915091506119c58261ffff81161490565b156119d7576119d48483611d4e565b93505b6001600160701b03811681036119f157610f7c8382613119565b50505b9250929050565b611a03611e2f565b6001600160a01b03828116600081815260026020908152604080832094861680845294825280832080546001600160f81b031690558051928352517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a35050565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054605881901c60ff1615155b949350505050565b611aaf611e2f565b6101f4811115611af85760405162461bcd60e51b815260206004820152601460248201527306d67762f636f6e6669672f6665652f3c3d3530360641b6044820152606401610a85565b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805461ffff60e81b191661ffff60e81b60e888901b1617905590518481527f44a6d70a601a6f8a85c075467e9d7245897140cbf6dd505c9d9d764459f5fb649101610afb565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054603881901c63ffffffff16611a9f565b611ba7611e2f565b6001600160701b0381168114611bff5760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f64656e736974792f313132626974730000000000006044820152606401610a85565b6001600160a01b03808416600090815260026020908152604080832093861683529290522054611c2f9082613119565b6001600160a01b038481166000818152600260209081526040808320948816808452948252918290209490945551848152919290917f95f1a495c6d9d1a215995408f6ad898c2b33798d6eb3cf3220b4c6cc8b61b0649101610afb565b600080600080611ca089898989893361298a565b929c919b50995090975095505050505050565b611cbb611e2f565b61ffff81168114611d0e5760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f3136626974730000000000006044820152606401610a85565b600154611d1b9082611d4e565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001610e19565b60401b69ffff00000000000000001669ffff000000000000000019919091161790565b60281b67ffffff00000000001667ffffff000000000019919091161790565b602081901c60ff1615611dd05760405162461bcd60e51b81526020600482015260086024820152671b59dd8bd919585960c21b6044820152606401610a85565b50565b6001600160a01b03821660008181526006602052604090819020805484019055517f1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa09490611e239084815260200190565b60405180910390a25050565b6003546001600160a01b0316331480611e4757503330145b80611e5b57506003546001600160a01b0316155b6118fc5760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b6044820152606401610a85565b6001600160a01b03821660009081526006602052604090205481811015611f035760405162461bcd60e51b815260206004820152601960248201527f6d67762f696e73756666696369656e7450726f766973696f6e000000000000006044820152606401610a85565b6001600160a01b038316600081815260066020526040908190208484039055517f59c79d79be0fadf59fe689b6952b7ebe90201a3a1f00d4a31982377890bc604690611f529085815260200190565b60405180910390a2505050565b6000806000806000611f6f6148d0565b6001600160a01b03808d1682528b166020820152611f8d8c8c6118fe565b61010083015260e0820152611fa061492e565b6001600160a01b03881660a082015288151560c082015260e0820151610100830151611fcc91906120f8565b611fda8261010001516120ac565b6040517fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b990600090a161200f81838d8d61314a565b60808401519299509097509550612025906135d9565b602080830151835160808085015160e0860151604080518d81529687018c905286019190915260608501526001600160a01b03808d1694938116939216917ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec47910160405180910390a4806080015193508060e0015192505050965096509650965096915050565b605881901c60ff1615611dd05760405162461bcd60e51b81526020600482015260146024820152731b59dd8bdc99595b9d1c985b98de531bd8dad95960621b6044820152606401610a85565b61210182611d90565b61210d8160f81c151590565b61098b5760405162461bcd60e51b815260206004820152600c60248201526b6d67762f696e61637469766560a01b6044820152606401610a85565b60c082015161ffff81161461219f5760405162461bcd60e51b815260206004820152601e60248201527f6d67762f77726974654f666665722f67617370726963652f31366269747300006044820152606401610a85565b61010082015160401c61ffff168260c0015110156121ca5761010082015160401c61ffff1660c08301525b61010082015160281c62ffffff168260a00151111561222b5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f6761737265712f746f6f486967680000006044820152606401610a85565b600082606001511161227f5760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f746f6f4c6f7700000000006044820152606401610a85565b61012082015160781c6001600160701b031661012083015160601c62ffffff168360a001510102826060015110156122f95760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f64656e736974792f746f6f4c6f770000006044820152606401610a85565b60608201516001600160601b038116146123555760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f39366269747300000000006044820152606401610a85565b60408201516001600160601b038116146123b15760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f77616e74732f39366269747300000000006044820152606401610a85565b6000806123bd84613677565b9150915083602001516001600160a01b031684600001516001600160a01b03167f2b101f9ef8ca2761d91bea55ab50a4d051e9248088ff7314ddb8826839544c2a33876040015188606001518960c001518a60a001518b608001518a60405161246297969594939291906001600160a01b03979097168752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b60405180910390a383516001600160a01b03908116600090815260056020908152604080832082890151909416835292815282822060808801518352905290812054841561253c576124b48160601c90565b6001600160a01b0316336001600160a01b0316146125145760405162461bcd60e51b815260206004820152601c60248201527f6d67762f7570646174654f666665722f756e617574686f72697a6564000000006044820152606401610a85565b603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca00020291505b841580612556575060a0860151604882901c62ffffff1614155b8061256d575060c0860151602082901c61ffff1614155b8061258e575061012086015160601c62ffffff16603082901c62ffffff1614155b156126385761012086015160009060601c62ffffff1690506125fe338860a00151838a60c0015160201b65ffff000000001660309190911b68ffffff0000000000001660489290921b6bffffff0000000000000000001660609390931b6001600160601b03191692909217171790565b87516001600160a01b039081166000908152600560209081526040808320828d0151909416835292815282822060808c0151835290522055505b5060c08501516101208601516000919060601c62ffffff168760a001510102633b9aca00029050818111156126785761267333838303611e9a565b61268c565b8181101561268c5761268c33828403611dd3565b506101408501516001600160601b031615806126b0575061014085015160e01c8314155b1561283c57821561273657608085015185516001600160a01b039081166000908152600460209081526040808320828b01519094168352928152828220878352905220546126fd916138a3565b85516001600160a01b039081166000908152600460209081526040808320828b0151909416835292815282822087835290522055612769565b60808501516101208601516127629160381b63ffffffff60381b1663ffffffff60381b19919091161790565b6101208601525b81156127e057608085015185516001600160a01b039081166000908152600460208181526040808420828c018051871686529083528185208986528352818520548c518716865293835281852090519095168452938152838320878452905291902060e09290921b6001600160e01b039091161790555b8380156127fa57506101408501516001600160601b031615155b1561283c576128358560000151866020015161281b88610140015160e01c90565b61014089015160c01c63ffffffff16896101200151612fc4565b6101208601525b60408501516060808701516000926001600160601b03909116911b6bffffffffffffffffffffffff60601b1660c085901b63ffffffff60c01b1660e087901b17171786516001600160a01b039081166000908152600460209081526040808320828c015190941683529281528282206080909a0151825298909852909620959095555050505050565b6129096040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b60f882901c1515815260e882901c61ffff166020820152607882901c6001600160701b03166040820152606082811c62ffffff1690820152605882901c60ff1615156080820152603882901c63ffffffff90811660a083015260189290921c90911660c082015290565b60581b60ff60581b1660ff60581b19919091161790565b60008060008087886001600160a01b0316146129e85760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657257616e74732f313630626974730000006044820152606401610a85565b86876001600160a01b031614612a405760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657247697665732f313630626974730000006044820152606401610a85565b612a486148d0565b6001600160a01b03808c1682528a166020820152612a668b8b6118fe565b610100830181905260e083019190915260381c63ffffffff1660408083019182526001600160a01b03808e16600090815260046020908152838220928f1682529182528281209351815292905290205460608201526080810189905260a08101889052612ad161492e565b898152602081018990526001600160a01b03871660a082015287151560c082015260e0820151610100830151612b0791906120f8565b612b158261010001516120ac565b610100820151612b26906001612973565b82610100018181525050816101000151600260008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020819055507fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b960405160405180910390a1612bba818360016138c0565b612bc781608001516135d9565b866001600160a01b03168b6001600160a01b03168d6001600160a01b03167ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec478460400151856060015186608001518760e00151604051612c40949392919093845260208401929092526040830152606082015260800190565b60405180910390a460408101516060820151608083015160e090930151919e909d50919b509950975050505050505050565b6001600160a01b0380851660009081526007602090815260408083208785168452825280832093861683529281528282203383529052205481811015612ced5760405162461bcd60e51b815260206004820152601060248201526f6d67762f6c6f77416c6c6f77616e636560801b6044820152606401610a85565b6001600160a01b0380861660008181526007602090815260408083208986168085529083528184209589168452948252808320338085529252918290208686039081905591517f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d92612d63928992909190614f3c565b60405180910390a35050505050565b612d9d6040518060800160405280600081526020016000815260200160008152602001600081525090565b60e082901c815263ffffffff60c083901c1660208201526001600160601b03606083811c8216604084015292169181019190915290565b612e08604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b606082811c8252604883901c62ffffff908116602080850191909152603085901c90911660408401529290921c61ffff169181019190915290565b600080636c49c32c60e01b83604051602401612e5f9190614f84565b60408051808303601f190181529190526020810180516001600160e01b0319939093166001600160e01b0390931692909217909152905060c0830135604881901c62ffffff169060601c60005a9050826040820482031015612f0157604080516060810182527f6d67762f6e6f74456e6f756768476173466f724d616b65725472616465000000815260006020820181905291810191909152612f0190606081fd5b600080612f0f848688613b32565b915091505a8303965081612f5557612f5560405180606001604052806e1b59dd8bdb585ad95c94995d995c9d608a1b81526020018960001b815260200183815250606081fd5b6000612f73612f6760208b018b614a05565b86308c60800135613b60565b905080612fb857612fb86040518060600160405280741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b81526020018a60001b815260200184815250606081fd5b50505050505050919050565b60008315613037576001600160a01b03808716600090815260046020908152604080832093891683529281528282208783529052205461300490846138a3565b6001600160a01b038088166000908152600460209081526040808320938a16835292815282822088835290522055613054565b63ffffffff60381b19821663ffffffff60381b603885901b161791505b821561309b576001600160a01b038681166000908152600460209081526040808320938916835292815282822086835290522080546001600160e01b031660e086901b1790555b50949350505050565b6001600160601b03198316925080156130c45765ffff0000000019821691505b506001600160a01b039485166000818152600460209081526040808320979098168083529681528782208683528152878220949094559081526005835285812094815293825284842092845291905291902055565b60781b6dffffffffffffffffffffffffffff60781b166dffffffffffffffffffffffffffff60781b19919091161790565b60008080805b848110156135ce57600060408901819052606089015285858281811061317857613178615016565b90506080020160006004811061319057613190615016565b60209081029190910135604089810191825289516001600160a01b039081166000908152600485528281208c86018051841683529086528382208551835286528382205460608e019081528d518416835260058752848320915190931682528552828120935181529290935290205460c0890152516001600160601b0316158061325c575085858281811061322757613227615016565b90506080020160036004811061323f5761323f615016565b602002013561325a8860c0015162ffffff60489190911c1690565b115b6135c65785858281811061327257613272615016565b90506080020160016004811061328a5761328a615016565b60200201358686838181106132a1576132a1615016565b9050608002016001600481106132b9576132b9615016565b60200201356001600160601b0316146133145760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657257616e74732f393662697473000000006044820152606401610a85565b85858281811061332657613326615016565b90506080020160026004811061333e5761333e615016565b602002013586868381811061335557613355615016565b90506080020160026004811061336d5761336d615016565b60200201356001600160601b0316146133c85760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657247697665732f393662697473000000006044820152606401610a85565b8585828181106133da576133da615016565b9050608002016001600481106133f2576133f2615016565b6020020135608088015285858281811061340e5761340e615016565b90506080020160026004811061342657613426615016565b602002013560a0880152610100870151613441906001612973565b610100880181905287516001600160a01b039081166000908152600260209081526040808320828d015190941683529290529081209190915580806134868b8b613c48565b925092509250806f6d67762f74726164655375636365737360801b036134ad576001870196505b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b14613501576134fa8a600001518b602001516134e18d6060015160e01c90565b60608e015160c01c63ffffffff168e6101000151612fc4565b6101008b01525b6101008a0151613512906000612973565b8a610100018181525050896101000151600260008c600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008c602001516001600160a01b03166001600160a01b03168152602001908152602001600020819055506135808b8b614248565b61358a8b8b61434a565b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b146135b0576135b08b8b858585614436565b8a60400151860195508a60600151850194505050505b600101613150565b509450945094915050565b8015611dd057604051600090339083908381818185875af1925050503d8060008114613621576040519150601f19603f3d011682016040523d82523d6000602084013e613626565b606091505b505090508061098b5760405162461bcd60e51b815260206004820152601760248201527f6d67762f73656e6450656e616c747952657665727465640000000000000000006044820152606401610a85565b60008060008060008560e0015190506000866080015182146136cc5786516001600160a01b039081166000908152600460209081526040808320828c01519094168352928152828220858352905220546136d3565b8661014001515b90506001600160601b03811661372c5761012087015160381c63ffffffff1687516001600160a01b039081166000908152600460209081526040808320828d015190941683529281528282208483529052205490925090505b6137378782846144bc565b156137d15760005b60c082901c63ffffffff16156137b9575086516001600160a01b039081166000908152600460209081526040808320828c0151909416835292815282822063ffffffff60c086901c168084529152919020549061379d8983836144bc565b156137ad578093508192506137b3565b506137b9565b5061373f565b8260c083901c63ffffffff16909550935061385a9050565b60005b6137de8260e01c90565b156138475760006137ef8360e01c90565b89516001600160a01b039081166000908152600460209081526040808320828f0151909416835292815282822084835290522054925090506138328983836144bc565b1561383d5750613847565b92509050806137d4565b6138518260e01c90565b94509192508291505b8660800151841461386b5783613875565b61014087015160e01c5b876080015184146138865783613896565b61014088015160c01c63ffffffff165b9550955050505050915091565b60c01b63ffffffff60c01b1663ffffffff60c01b19919091161790565b8080156138e757508260c001516138de5760008260a00151116138e7565b60008260800151115b80156138f7575060008260400151115b15613ab35781516001600160a01b03908116600090815260056020908152604080832082870151909416835292815282822083860151835290529081205460c084015280806139468686613c48565b608088015160a089015160408a015160608b015160c08c015196995094975092955090939092906e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613a3d5760408b01518b51116139995760006139a2565b60408b01518b51035b60808b015260608b81015160208d01510360a08c01528a015160c01c63ffffffff168a6040018181525050600460008b600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b602001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b604001518152602001908152602001600020548a60600181815250505b613a5d8b8b886e1b59dd8bdb9bdd115e1958dd5d1959608a1b14156138c0565b60408a0183905260808a0185905260a08a0184905260608a0182905260c08a018190526e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613aa657613aa68b8b8a8a8a614436565b5050505050505050505050565b613ad28260000151836020015160008560400151866101000151612fc4565b6101008301819052613ae5906000612973565b610100830181905282516001600160a01b0390811660009081526002602090815260408083208288015190941683529290522055613b238383614248565b613b2d838361434a565b505050565b600080613b3d61497e565b60648185516020870160008a8af192508060448415020151915050935093915050565b6000806323b872dd60e01b858585604051602401613b8093929190614f3c565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509050600080876001600160a01b031683604051613bd0919061502c565b6000604051808303816000865af19150503d8060008114613c0d576040519150601f19603f3d011682016040523d82523d6000602084013e613c12565b606091505b5091509150818015613c3c575080511580613c3c575080806020019051810190613c3c9190615067565b98975050505050505050565b600080600080613c6885606001516001600160601b0360609190911c1690565b90506000613c8086606001516001600160601b031690565b608087015160a0880151919250908083028483021115613cc05750600095508594506e1b59dd8bdb9bdd115e1958dd5d1959608a1b935061424192505050565b8860c001518015613cd057508183105b80613ce757508860c00151158015613ce757508084105b15613cff576080880183905260a08801849052613d76565b8860c0015115613d4a57838202838181613d1b57613d1b615000565b0615613d28576001613d2b565b60005b60ff16848281613d3d57613d3d615000565b040160a08a015250613d76565b83600003613d5e5760808801839052613d76565b8381840281613d6f57613d6f615000565b0460808901525b50505050600080306001600160a01b031663aa4dd28260e01b878960a00151604051602401613da69291906150ea565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051613de4919061502c565b6000604051808303816000865af19150503d8060008114613e21576040519150601f19603f3d011682016040523d82523d6000602084013e613e26565b606091505b50915091508115613f805780806020019051810190613e459190615112565b94506f6d67762f74726164655375636365737360801b925085602001516001600160a01b031686600001516001600160a01b03167f1d81940ff2c3ac549c8acefd7c1b2ffb24aacc8b3cfa309c22abc3de79727f9d88604001518a60a001518a608001518b60a00151604051613edd94939291909384526001600160a01b039290921660208401526040830152606082015260800190565b60405180910390a360e086015160501c60ff1615613f5b5760e086015160a088015160405163cac1827160e01b815260609290921c9163cac1827191613f28918a91906004016150ea565b600060405180830381600087803b158015613f4257600080fd5b505af1158015613f56573d6000803e3d6000fd5b505050505b6080860151604088018051909101905260a08601516060880180519091019052614206565b602081015160408201516060830151909650945092506e1b59dd8bdb585ad95c94995d995c9d608a1b831480613fcd575082741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b145b80613fee575082731b59dd8bdb585ad95c949958d95a5d9951985a5b60621b145b156141005785602001516001600160a01b031686600001516001600160a01b03167f1d59c048edb5397821854bd12cbe02242b82101c677f949d076d14eb7bd8343688604001518a60a001518a608001518b60a001518960405161407d9594939291909485526001600160a01b0393909316602085015260408401919091526060830152608082015260a00190565b60405180910390a360e086015160501c60ff16156140fb5760e086015160a0880151604051631159507360e01b815260609290921c916311595073916140c8918a91906004016150ea565b600060405180830381600087803b1580156140e257600080fd5b505af11580156140f6573d6000803e3d6000fd5b505050505b614206565b827f6d67762f6e6f74456e6f756768476173466f724d616b657254726164650000000361416f5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6e6f74456e6f756768476173466f724d616b657254726164650000006044820152606401610a85565b82741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b036141ce5760405162461bcd60e51b81526020600482015260156024820152741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b6044820152606401610a85565b60405162461bcd60e51b815260206004820152600d60248201526c36b3bb17b9bbb0b822b93937b960991b6044820152606401610a85565b61423e86600001518760200151886040015189606001518a60c00151886f6d67762f74726164655375636365737360801b14156130a4565b50505b9250925092565b6101008101516000906127109060e81c61ffff168460400151028161426f5761426f615000565b04905080156142e557604083018051829003905260e0830181905281516000546142a391906001600160a01b031683614562565b6142e55760405162461bcd60e51b81526020600482015260136024820152721b59dd8bd99959551c985b9cd9995c91985a5b606a1b6044820152606401610a85565b604083015115613b2d5761430682600001518460a001518560400151614562565b613b2d5760405162461bcd60e51b815260206004820152601560248201527436b3bb17a6b3bb2330b4b62a37a830bcaa30b5b2b960591b6044820152606401610a85565b60a08201518151602083015160408086015160608701519151631154020b60e01b81526001600160a01b039485166004820152928416602484015260448301526064820152911690631154020b90608401600060405180830381600087803b1580156143b557600080fd5b505af11580156143c9573d6000803e3d6000fd5b5050505060006143e782602001518460a00151308660600151613b60565b905080613b2d5760405162461bcd60e51b815260206004820152601760248201527f6d67762f74616b65724661696c546f506179546f74616c0000000000000000006044820152606401610a85565b806f6d67762f74726164655375636365737360801b036144595761445984614637565b60c084015160481c62ffffff1680841115614472578093505b61448085858303858561467c565b84019350816f6d67762f74726164655375636365737360801b146144b4576144a885856147d2565b60808701805190910190525b505050505050565b6000816000036144ce57506001611343565b60408401516060858101516001600160601b039186901c82169291861691908084028284028082036145555789516001600160a01b039081166000908152600560209081526040808320828f015190941683529281528282208b835290529081205460481c62ffffff1660a08c015194029590930294909410159550611343945050505050565b1194506113439350505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839182918816906145c090859061502c565b6000604051808303816000865af19150503d80600081146145fd576040519150601f19603f3d011682016040523d82523d6000602084013e614602565b606091505b509150915081801561462c57508051158061462c57508080602001905181019061462c9190615067565b979650505050505050565b614657816020015161464d8360c0015160601c90565b8360a00151614562565b611dd057602081015160005460a083015161098b92916001600160a01b031690614562565b600080633d3d130d60e01b866040518060400160405280878152602001868152506040516024016146ae92919061512b565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319939093169290921790915260c087015190915060601c60005a90508660408204820310156147465760405162461bcd60e51b815260206004820181905260248201527f6d67762f6e6f74456e6f756768476173466f724d616b6572506f7374686f6f6b6044820152606401610a85565b600080614754848a87613b32565b915091505a83039550816147c55789602001516001600160a01b03168a600001516001600160a01b03167f51d5a3ecf332626d83c8207fe9bd22f38801f578c7eb222e2d811cd1b4c629a58c60400151846040516147bc929190918252602082015260400190565b60405180910390a35b5050505050949350505050565b60c082015160009062ffffff604882901c81169161ffff602082901c1660309190911c909116820102633b9aca00028184111561480d578193505b61010085015160009060601c62ffffff1660e08701519086019060401c61ffff16633b9aca0002029050818111156148425750805b61485b6148538760c0015160601c90565b828403611dd3565b95945050505050565b60405180610160016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60405180610120016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806101000160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001600015158152602001600081525090565b60405180608001604052806004906020820280368337509192915050565b80356001600160a01b03811681146149b357600080fd5b919050565b600080600080600060a086880312156149d057600080fd5b6149d98661499c565b94506149e76020870161499c565b94979496505050506040830135926060810135926080909101359150565b600060208284031215614a1757600080fd5b6113438261499c565b600060208284031215614a3257600080fd5b5035919050565b600080600060608486031215614a4e57600080fd5b614a578461499c565b9250614a656020850161499c565b9150604084013590509250925092565b60008083601f840112614a8757600080fd5b50813567ffffffffffffffff811115614a9f57600080fd5b6020830191508360208260071b85010111156119f457600080fd5b8015158114611dd057600080fd5b600080600080600060808688031215614ae057600080fd5b614ae98661499c565b9450614af76020870161499c565b9350604086013567ffffffffffffffff811115614b1357600080fd5b614b1f88828901614a75565b9094509250506060860135614b3381614aba565b809150509295509295909350565b600080600080600080600060e0888a031215614b5c57600080fd5b614b658861499c565b9650614b736020890161499c565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b60008060008060808587031215614bb557600080fd5b614bbe8561499c565b9350614bcc6020860161499c565b9250614bda6040860161499c565b9396929550929360600135925050565b600060208284031215614bfc57600080fd5b813561134381614aba565b60008060408385031215614c1a57600080fd5b614c238361499c565b9150614c316020840161499c565b90509250929050565b600080600080600080600080610100898b031215614c5757600080fd5b614c608961499c565b9750614c6e60208a0161499c565b979a9799505050506040860135956060810135956080820135955060a0820135945060c0820135935060e0909101359150565b60008060008060008060c08789031215614cba57600080fd5b614cc38761499c565b9550614cd16020880161499c565b945060408701359350606087013592506080870135614cef81614aba565b9150614cfd60a0880161499c565b90509295509295509295565b600080828403610140811215614d1e57600080fd5b61012080821215614d2e57600080fd5b849350610f7c81860161499c565b60008060008060808587031215614d5257600080fd5b614d5b8561499c565b9350614d696020860161499c565b9250604085013591506060850135614d8081614aba565b939692955090935050565b60008060008060008060008060006101208a8c031215614daa57600080fd5b614db38a61499c565b9850614dc160208b0161499c565b9750614dcf60408b0161499c565b9650614ddd60608b0161499c565b955060808a0135945060a08a0135935060c08a013560ff81168114614e0157600080fd5b8093505060e08a013591506101008a013590509295985092959850929598565b60008060008060008060a08789031215614e3a57600080fd5b614e438761499c565b9550614e516020880161499c565b9450604087013567ffffffffffffffff811115614e6d57600080fd5b614e7989828a01614a75565b9095509350506060870135614e8d81614aba565b9150614cfd6080880161499c565b60008060008060808587031215614eb157600080fd5b614eba8561499c565b9350614ec86020860161499c565b9250614ed66040860161499c565b9150614ee46060860161499c565b905092959194509250565b600080600080600060a08688031215614f0757600080fd5b614f108661499c565b9450614f1e6020870161499c565b935060408601359250606086013591506080860135614b3381614aba565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60008060408385031215614f7357600080fd5b505080516020909101519092909150565b61012081016001600160a01b0380614f9b8561499c565b16835280614fab6020860161499c565b1660208401525060408301356040830152606083013560608301526080830135608083015260a083013560a083015260c083013560c083015260e083013560e083015261010080840135818401525092915050565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000825160005b8181101561504d5760208186018101518583015201615033565b8181111561505c576000828501525b509190910192915050565b60006020828403121561507957600080fd5b815161134381614aba565b60018060a01b038082511683528060208301511660208401525060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152505050565b61014081016150f98285615084565b6001600160a01b03929092166101209190910152919050565b60006020828403121561512457600080fd5b5051919050565b610160810161513a8285615084565b82516101208301526020830151610140830152939250505056fea26469706673582212206f7a3c82f195bccff7131c6fed2cb383b9aa2b14228ede7529798084a7c9f14064736f6c634300080e003360a06040523480156200001157600080fd5b50604051620055e4380380620055e4833981016040819052620000349162000484565b828282604051806040016040528060088152602001674d616e67726f766560c01b815250808484847f72201d073f249840099a96530e189c4291c1852040b1e96ff1f606db656be4ff60405160405180910390a1620000938362000165565b6200009e82620001c4565b620000a98162000277565b620000b48362000327565b5050815160208084019190912060408051808201825260018152603160f81b9084015280517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f938101939093528201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c001905060408051601f19818403018152919052805160209091012060805250620004c99650505050505050565b6200016f620003d8565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f30906020015b60405180910390a150565b620001ce620003d8565b61ffff81168114620002275760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f31366269747300000000000060448201526064015b60405180910390fd5b62000243816001546200044960201b62001e221790919060201c565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001620001b9565b62000281620003d8565b808162ffffff1614620002d75760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f323462697473000000000000000060448201526064016200021e565b620002f3816001546200046760201b62001e451790919060201c565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001620001b9565b62000331620003d8565b6001600160a01b038116620003895760405162461bcd60e51b815260206004820152601360248201527f6d67762f636f6e6669672f676f762f6e6f74300000000000000000000000000060448201526064016200021e565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001620001b9565b6003546001600160a01b0316331480620003f157503330145b806200040657506003546001600160a01b0316155b620004475760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b60448201526064016200021e565b565b60401b69ffff00000000000000001661ffff60401b19919091161790565b60281b67ffffff00000000001662ffffff60281b19919091161790565b6000806000606084860312156200049a57600080fd5b83516001600160a01b0381168114620004b257600080fd5b602085015160409095015190969495509392505050565b6080516150f8620004ec60003960008181610364015261177e01526150f86000f3fe60806040526004361061024a5760003560e01c80636d27de6711610139578063b60d4288116100b6578063dc7e98df1161007a578063dc7e98df146108a8578063def5ddaa146108c8578063fbb66910146108e8578063fbfa77cf14610908578063fbffe5fd14610928578063fcaa7e2e1461094857600080fd5b8063b60d4288146107e4578063c7bb25d0146107ec578063cbf75c9a14610833578063d0ee509914610868578063db20266f1461088857600080fd5b8063aa4dd282116100fd578063aa4dd28214610744578063ab033ea914610764578063ad97db1b14610784578063b09d2a16146107a4578063b2b12057146107c457600080fd5b80636d27de671461061457806370a08231146106545780637ecebe00146106815780638c66715c146106ae57806395999ee31461072457600080fd5b80635722647b116101c7578063644e67031161018b578063644e6703146104cc5780636804f613146105835780636817031b146105a357806368c13d6b146105c35780636a4f76911461060157600080fd5b80635722647b146103f657806359eba454146104345780635a611f4e146104545780635aa6e675146104745780635cd82390146104ac57600080fd5b806330adf81f1161020e57806330adf81f146103105780633644e5151461035257806341c0e1b51461038657806346e142fa1461039b57806349f6d2dc146103e357600080fd5b80630b73a18f1461025f578063230244081461027f578063275074581461029257806327d097c6146102d05780632e1a7d4d146102f057600080fd5b3661025a5761025833610968565b005b600080fd5b34801561026b57600080fd5b5061025861027a366004614926565b61098f565b61025861028d366004614973565b610968565b34801561029e57600080fd5b506102bb6102ad36600461498e565b6001600160601b0316151590565b60405190151581526020015b60405180910390f35b3480156102dc57600080fd5b506102586102eb3660046149a7565b610a2d565b3480156102fc57600080fd5b506102bb61030b36600461498e565b610b08565b34801561031c57600080fd5b506103447fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a281565b6040519081526020016102c7565b34801561035e57600080fd5b506103447f000000000000000000000000000000000000000000000000000000000000000081565b34801561039257600080fd5b50610258610b62565b3480156103a757600080fd5b506103bb6103b6366004614a36565b610baa565b604080519586526020860194909452928401919091526060830152608082015260a0016102c7565b6103446103f1366004614aaf565b610bd6565b34801561040257600080fd5b506103446104113660046149a7565b600560209081526000938452604080852082529284528284209052825290205481565b34801561044057600080fd5b506102bb61044f366004614b0d565b610d41565b34801561046057600080fd5b5061025861046f366004614b58565b610dca565b34801561048057600080fd5b50600354610494906001600160a01b031681565b6040516001600160a01b0390911681526020016102c7565b3480156104b857600080fd5b506102586104c7366004614973565b610e24565b3480156104d857600080fd5b506104ec6104e7366004614b75565b610e84565b6040805183516001600160a01b0316815260208085015115158183015284830151151582840152606080860151818401526080808701518185015260a0968701511515878501528551151560c0808601919091529286015160e0850152938501516101008401528401516101208301529183015115156101408201529282015161016084015201516101808201526101a0016102c7565b34801561058f57600080fd5b5061025861059e366004614b58565b610f87565b3480156105af57600080fd5b506102586105be366004614973565b610fd1565b3480156105cf57600080fd5b506103446105de3660046149a7565b600460209081526000938452604080852082529284528284209052825290205481565b61025861060f366004614ba8565b611027565b34801561062057600080fd5b5061063461062f366004614c0f565b61113a565b6040805194855260208501939093529183015260608201526080016102c7565b34801561066057600080fd5b5061034461066f366004614973565b60066020526000908152604090205481565b34801561068d57600080fd5b5061034461069c366004614973565b60086020526000908152604090205481565b3480156106ba57600080fd5b506106ce6106c93660046149a7565b611171565b60408051835181526020808501518183015284830151828401526060948501518583015283516001600160a01b0316608083015283015160a08201529082015160c082015291015160e0820152610100016102c7565b34801561073057600080fd5b5061025861073f36600461498e565b61124d565b34801561075057600080fd5b5061034461075f366004614c77565b6112e9565b34801561077057600080fd5b5061025861077f366004614973565b61141e565b34801561079057600080fd5b5061034461079f366004614caa565b6114c0565b3480156107b057600080fd5b506102586107bf366004614cf9565b611692565b3480156107d057600080fd5b506103bb6107df366004614d8f565b61198b565b6102586119c7565b3480156107f857600080fd5b50610344610807366004614e09565b600760209081526000948552604080862082529385528385208152918452828420909152825290205481565b34801561083f57600080fd5b5061085361084e366004614b75565b6119d2565b604080519283526020830191909152016102c7565b34801561087457600080fd5b50610258610883366004614b75565b611acf565b34801561089457600080fd5b506102bb6108a3366004614b75565b611b40565b3480156108b457600080fd5b506102586108c33660046149a7565b611b7b565b3480156108d457600080fd5b506103446108e3366004614b75565b611c3b565b3480156108f457600080fd5b506102586109033660046149a7565b611c73565b34801561091457600080fd5b50600054610494906001600160a01b031681565b34801561093457600080fd5b50610634610943366004614e5d565b611d60565b34801561095457600080fd5b5061025861096336600461498e565b611d87565b60006109756000806119d2565b50905061098181611e64565b61098b8234611ea7565b5050565b610997611f03565b6001600160a01b0385811660008181526002602090815260408083209489168084529482529182902080546001600160f81b0316600160f81b17905581516001815291517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a3610a10858585611b7b565b610a1b858584611c73565b610a26858583610a2d565b5050505050565b610a35611f03565b808162ffffff1614610a8e5760405162461bcd60e51b815260206004820152601f60248201527f6d67762f636f6e6669672f6f666665725f676173626173652f3234626974730060448201526064015b60405180910390fd5b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805462ffffff60601b191662ffffff60601b606088901b1617905590518481527fc5859916e5f3fc1ed4d2cfb8c7a6cf709580f228fa0c9d9e0fa468744c7e4a9191015b60405180910390a3505050565b6000610b143383611f6e565b60405133908390600081818185875af1925050503d8060008114610b54576040519150601f19603f3d011682016040523d82523d6000602084013e610b59565b606091505b50909392505050565b610b6a611f03565b60015464ff000000001916640100000000176001556040517fbe26733c2bf6ff3ea5ba8cfe744422bd49052ff9ed5685c9e81e6f9321dbaddd90600090a1565b6000806000806000610bc08a8a8a8a8a33612033565b939e929d50909b50995090975095505050505050565b6000610be06147d2565b610bea89896119d2565b6101208301819052610100830191909152610c0490612180565b610c188161010001518261012001516121cc565b3415610c2857610c283334611ea7565b61012081015160181c63ffffffff166001016080820181905263ffffffff811614610c8b5760405162461bcd60e51b81526020600482015260136024820152726d67762f6f6666657249644f766572666c6f7760681b6044820152606401610a85565b6080810151610120820151610cb79160181b66ffffffff0000001666ffffffff00000019919091161790565b6101208201526001600160a01b03808a16825288166020820152604081018790526060810186905260a0810185905260c0810184905260e08101839052610cff81600061221c565b61012081015181516001600160a01b03908116600090815260026020908152604080832082870151909416835292905220556080015198975050505050505050565b6001600160a01b038085166000818152600760209081526040808320888616808552908352818420338086529084528285209689168552959092528083208690555191939092917f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d91610db79188908890614eaa565b60405180910390a3506001949350505050565b610dd2611f03565b60015460ff60501b191660ff60501b605083901b161760015560405181151581527f9b84fe4d9ffc14a6f7ec50c18884ee0d4bb8165aa718a28558df12ab4bd32b14906020015b60405180910390a150565b610e2c611f03565b6001546001600160601b03166001600160601b0319606083901b16176001556040516001600160a01b03821681527ff592e42c32883b35bebfbf9d9b801570a25d5ccbba452310746ad2cfd20d548f90602001610e19565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152610efa6040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b600080610f0786866119d2565b91509150610f71826040805160c081018252606083811c8252605884901c60ff9081161515602080850191909152605086901c82161515848601529385901c61ffff1691830191909152602884901c62ffffff1660808301529290911c909116151560a082015290565b9350610f7c81612999565b925050509250929050565b610f8f611f03565b600154610f9c9082612a47565b60015560405181151581527fbf39fbfab835c119637f4dbc4fb0f428c559c210200405d1ec25ddb50a93f9d490602001610e19565b610fd9611f03565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f3090602001610e19565b61102f6147d2565b61103989896119d2565b610120830181905261010083019190915261105390612180565b6110678161010001518261012001516121cc565b3415611077576110773334611ea7565b6001600160a01b03808a16808352908916602080840182905260408085018b9052606085018a90526080850186905260a0850189905260c0850188905260e0850187905260009384526004825280842092845291815281832085845290529020546101408201526101208101516110ef82600161221c565b610120820151811461112e5761012082015182516001600160a01b03908116600090815260026020908152604080832082880151909416835292905220555b50505050505050505050565b60008060008061114e8a8a8a8a8a8a612a5e565b929650909450925090506111648a8a8786612d46565b9650965096509692505050565b61119c6040518060800160405280600081526020016000815260200160008152602001600081525090565b6111d0604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b6001600160a01b03808616600090815260046020908152604080832093881683529281528282208683529052205461120781612e46565b6001600160a01b038088166000908152600560209081526040808320938a1683529281528282208883529052205490935061124181612ea8565b92505050935093915050565b611255611f03565b808162ffffff16146112a95760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f32346269747300000000000000006044820152606401610a85565b6001546112b69082611e45565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001610e19565b600033301461133a5760405162461bcd60e51b815260206004820152601760248201527f6d67762f666c6173686c6f616e2f70726f7465637465640000000000000000006044820152606401610a85565b61135961134d6040850160208601614973565b83308660a00135612f17565b156113da576113836113716040850160208601614973565b60c085013560601c8560a00135612fff565b1561139857611391836130d6565b9050611418565b60408051606081018252731b59dd8bdb585ad95c949958d95a5d9951985a5b60621b8152600060208201819052918101919091526113d590606081fd5b611418565b60408051606081018252741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b81526000602082018190529181019190915261141890606081fd5b92915050565b611426611f03565b6001600160a01b0381166114725760405162461bcd60e51b815260206004820152601360248201527206d67762f636f6e6669672f676f762f6e6f743606c1b6044820152606401610a85565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001610e19565b6000806114cd86866119d2565b9150506114d981612180565b6001600160a01b038087166000818152600460209081526040808320948a1680845294825280832089845282528083205493835260058252808320948352938152838220888352905291909120546115318160601c90565b6001600160a01b0316336001600160a01b0316146115915760405162461bcd60e51b815260206004820152601d60248201527f6d67762f726574726163744f666665722f756e617574686f72697a65640000006044820152606401610a85565b6001600160601b038216156115f557826115c189896115b08660e01c90565b60c087901c63ffffffff1688613257565b93508084146115f3576001600160a01b03808a166000908152600260209081526040808320938c168352929052208490555b505b61160388888885858a613337565b841561163a57603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca000202935061163a3385611ea7565b866001600160a01b0316886001600160a01b03167fe2ce51fba856682424155a2d89b2ad1d2adde6ea0a9e3115b4b474cd6cb1798b8860405161167f91815260200190565b60405180910390a3505050949350505050565b428410156116d75760405162461bcd60e51b81526020600482015260126024820152711b59dd8bdc195c9b5a5d0bd95e1c1a5c995960721b6044820152606401610a85565b6001600160a01b03878116600081815260086020908152604080832080546001810190915581517fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a2818501528f8716818401528e871660608201526080810195909552948b1660a085015260c084018a905260e084018590526101008085018a9052815180860390910181526101208501909152805191012061190160f01b6101408401527f0000000000000000000000000000000000000000000000000000000000000000610142840152610162830152906101820160408051601f198184030181528282528051602091820120600080855291840180845281905260ff89169284019290925260608301879052608083018690529092509060019060a0016020604051602081039080840390855afa158015611819573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381161580159061184f5750896001600160a01b0316816001600160a01b0316145b61189b5760405162461bcd60e51b815260206004820152601b60248201527f6d67762f7065726d69742f696e76616c69645369676e617475726500000000006044820152606401610a85565b87600760008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008b6001600160a01b03166001600160a01b03168152602001908152602001600020819055508a6001600160a01b03168c6001600160a01b03167f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d8c8c8c60405161197593929190614eaa565b60405180910390a3505050505050505050505050565b60008060008060006119a18b8b8b8b8b8b612033565b9398509196509450925090506119b98b8b8886612d46565b965096509650965096915050565b6119d033610968565b565b6001546001600160a01b03838116600090815260026020908152604080832093861683529290522054605882901c60ff1615611ac857600080611a158460601c90565b604051636968abd360e01b81526001600160a01b03888116600483015287811660248301529190911690636968abd3906044016040805180830381865afa158015611a64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a889190614ece565b91509150611a998261ffff81161490565b15611aab57611aa88483611e22565b93505b6001600160701b0381168103611ac557610f7c83826133ac565b50505b9250929050565b611ad7611f03565b6001600160a01b03828116600081815260026020908152604080832094861680845294825280832080546001600160f81b031690558051928352517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a35050565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054605881901c60ff1615155b949350505050565b611b83611f03565b6101f4811115611bcc5760405162461bcd60e51b815260206004820152601460248201527306d67762f636f6e6669672f6665652f3c3d3530360641b6044820152606401610a85565b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805461ffff60e81b191661ffff60e81b60e888901b1617905590518481527f44a6d70a601a6f8a85c075467e9d7245897140cbf6dd505c9d9d764459f5fb649101610afb565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054603881901c63ffffffff16611b73565b611c7b611f03565b6001600160701b0381168114611cd35760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f64656e736974792f313132626974730000000000006044820152606401610a85565b6001600160a01b03808416600090815260026020908152604080832093861683529290522054611d0390826133ac565b6001600160a01b038481166000818152600260209081526040808320948816808452948252918290209490945551848152919290917f95f1a495c6d9d1a215995408f6ad898c2b33798d6eb3cf3220b4c6cc8b61b0649101610afb565b600080600080611d74898989898933612a5e565b929c919b50995090975095505050505050565b611d8f611f03565b61ffff81168114611de25760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f3136626974730000000000006044820152606401610a85565b600154611def9082611e22565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001610e19565b60401b69ffff00000000000000001669ffff000000000000000019919091161790565b60281b67ffffff00000000001667ffffff000000000019919091161790565b602081901c60ff1615611ea45760405162461bcd60e51b81526020600482015260086024820152671b59dd8bd919585960c21b6044820152606401610a85565b50565b6001600160a01b03821660008181526006602052604090819020805484019055517f1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa09490611ef79084815260200190565b60405180910390a25050565b6003546001600160a01b0316331480611f1b57503330145b80611f2f57506003546001600160a01b0316155b6119d05760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b6044820152606401610a85565b6001600160a01b03821660009081526006602052604090205481811015611fd75760405162461bcd60e51b815260206004820152601960248201527f6d67762f696e73756666696369656e7450726f766973696f6e000000000000006044820152606401610a85565b6001600160a01b038316600081815260066020526040908190208484039055517f59c79d79be0fadf59fe689b6952b7ebe90201a3a1f00d4a31982377890bc6046906120269085815260200190565b60405180910390a2505050565b600080600080600061204361483e565b6001600160a01b03808d1682528b1660208201526120618c8c6119d2565b61010083015260e082015261207461489c565b6001600160a01b03881660a082015288151560c082015260e08201516101008301516120a091906121cc565b6120ae826101000151612180565b6040517fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b990600090a16120e381838d8d6133dd565b608084015192995090975095506120f990613862565b602080830151835160808085015160e0860151604080518d81529687018c905286019190915260608501526001600160a01b03808d1694938116939216917ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec47910160405180910390a4806080015193508060e0015192505050965096509650965096915050565b605881901c60ff1615611ea45760405162461bcd60e51b81526020600482015260146024820152731b59dd8bdc99595b9d1c985b98de531bd8dad95960621b6044820152606401610a85565b6121d582611e64565b6121e18160f81c151590565b61098b5760405162461bcd60e51b815260206004820152600c60248201526b6d67762f696e61637469766560a01b6044820152606401610a85565b60c082015161ffff8116146122735760405162461bcd60e51b815260206004820152601e60248201527f6d67762f77726974654f666665722f67617370726963652f31366269747300006044820152606401610a85565b61010082015160401c61ffff168260c00151101561229e5761010082015160401c61ffff1660c08301525b61010082015160281c62ffffff168260a0015111156122ff5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f6761737265712f746f6f486967680000006044820152606401610a85565b60008260600151116123535760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f746f6f4c6f7700000000006044820152606401610a85565b61012082015160781c6001600160701b031661012083015160601c62ffffff168360a001510102826060015110156123cd5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f64656e736974792f746f6f4c6f770000006044820152606401610a85565b60608201516001600160601b038116146124295760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f39366269747300000000006044820152606401610a85565b60408201516001600160601b038116146124855760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f77616e74732f39366269747300000000006044820152606401610a85565b60008061249184613900565b9150915083602001516001600160a01b031684600001516001600160a01b03167f2b101f9ef8ca2761d91bea55ab50a4d051e9248088ff7314ddb8826839544c2a33876040015188606001518960c001518a60a001518b608001518a60405161253697969594939291906001600160a01b03979097168752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b60405180910390a383516001600160a01b039081166000908152600560209081526040808320828901519094168352928152828220608088015183529052908120548415612610576125888160601c90565b6001600160a01b0316336001600160a01b0316146125e85760405162461bcd60e51b815260206004820152601c60248201527f6d67762f7570646174654f666665722f756e617574686f72697a6564000000006044820152606401610a85565b603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca00020291505b84158061262a575060a0860151604882901c62ffffff1614155b80612641575060c0860151602082901c61ffff1614155b80612662575061012086015160601c62ffffff16603082901c62ffffff1614155b1561270c5761012086015160009060601c62ffffff1690506126d2338860a00151838a60c0015160201b65ffff000000001660309190911b68ffffff0000000000001660489290921b6bffffff0000000000000000001660609390931b6001600160601b03191692909217171790565b87516001600160a01b039081166000908152600560209081526040808320828d0151909416835292815282822060808c0151835290522055505b5060c08501516101208601516000919060601c62ffffff168760a001510102633b9aca000290508181111561274c5761274733838303611f6e565b612760565b818110156127605761276033828403611ea7565b506101408501516001600160601b03161580612784575061014085015160e01c8314155b1561291057821561280a57608085015185516001600160a01b039081166000908152600460209081526040808320828b01519094168352928152828220878352905220546127d191613b2c565b85516001600160a01b039081166000908152600460209081526040808320828b015190941683529281528282208783529052205561283d565b60808501516101208601516128369160381b63ffffffff60381b1663ffffffff60381b19919091161790565b6101208601525b81156128b457608085015185516001600160a01b039081166000908152600460208181526040808420828c018051871686529083528185208986528352818520548c518716865293835281852090519095168452938152838320878452905291902060e09290921b6001600160e01b039091161790555b8380156128ce57506101408501516001600160601b031615155b1561291057612909856000015186602001516128ef88610140015160e01c90565b61014089015160c01c63ffffffff16896101200151613257565b6101208601525b60408501516060808701516000926001600160601b03909116911b6bffffffffffffffffffffffff60601b1660c085901b63ffffffff60c01b1660e087901b17171786516001600160a01b039081166000908152600460209081526040808320828c015190941683529281528282206080909a0151825298909852909620959095555050505050565b6129dd6040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b60f882901c1515815260e882901c61ffff166020820152607882901c6001600160701b03166040820152606082811c62ffffff1690820152605882901c60ff1615156080820152603882901c63ffffffff90811660a083015260189290921c90911660c082015290565b60581b60ff60581b1660ff60581b19919091161790565b60008060008087886001600160a01b031614612abc5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657257616e74732f313630626974730000006044820152606401610a85565b86876001600160a01b031614612b145760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657247697665732f313630626974730000006044820152606401610a85565b612b1c61483e565b6001600160a01b03808c1682528a166020820152612b3a8b8b6119d2565b610100830181905260e083019190915260381c63ffffffff1660408083019182526001600160a01b03808e16600090815260046020908152838220928f1682529182528281209351815292905290205460608201526080810189905260a08101889052612ba561489c565b898152602081018990526001600160a01b03871660a082015287151560c082015260e0820151610100830151612bdb91906121cc565b612be9826101000151612180565b610100820151612bfa906001612a47565b82610100018181525050816101000151600260008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020819055507fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b960405160405180910390a1612c8e81836001613b49565b612c9b8160800151613862565b866001600160a01b03168b6001600160a01b03168d6001600160a01b03167ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec478460400151856060015186608001518760e00151604051612d14949392919093845260208401929092526040830152606082015260800190565b60405180910390a460408101516060820151608083015160e090930151919e909d50919b509950975050505050505050565b6001600160a01b0380851660009081526007602090815260408083208785168452825280832093861683529281528282203383529052205481811015612dc15760405162461bcd60e51b815260206004820152601060248201526f6d67762f6c6f77416c6c6f77616e636560801b6044820152606401610a85565b6001600160a01b0380861660008181526007602090815260408083208986168085529083528184209589168452948252808320338085529252918290208686039081905591517f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d92612e37928992909190614eaa565b60405180910390a35050505050565b612e716040518060800160405280600081526020016000815260200160008152602001600081525090565b60e082901c815263ffffffff60c083901c1660208201526001600160601b03606083811c8216604084015292169181019190915290565b612edc604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b606082811c8252604883901c62ffffff908116602080850191909152603085901c90911660408401529290921c61ffff169181019190915290565b6000806323b872dd60e01b858585604051602401612f3793929190614eaa565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509050600080876001600160a01b031683604051612f879190614ef2565b6000604051808303816000865af19150503d8060008114612fc4576040519150601f19603f3d011682016040523d82523d6000602084013e612fc9565b606091505b5091509150818015612ff3575080511580612ff3575080806020019051810190612ff39190614f2d565b98975050505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928391829188169061305d908590614ef2565b6000604051808303816000865af19150503d806000811461309a576040519150601f19603f3d011682016040523d82523d6000602084013e61309f565b606091505b50915091508180156130c95750805115806130c95750808060200190518101906130c99190614f2d565b93505050505b9392505050565b600080636c49c32c60e01b836040516024016130f29190614f4a565b60408051808303601f190181529190526020810180516001600160e01b0319939093166001600160e01b0390931692909217909152905060c0830135604881901c62ffffff169060601c60005a905082604082048203101561319457604080516060810182527f6d67762f6e6f74456e6f756768476173466f724d616b6572547261646500000081526000602082018190529181019190915261319490606081fd5b6000806131a2848688613db1565b915091505a83039650816131e8576131e860405180606001604052806e1b59dd8bdb585ad95c94995d995c9d608a1b81526020018960001b815260200183815250606081fd5b60006132066131fa60208b018b614973565b86308c60800135612f17565b90508061324b5761324b6040518060600160405280741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b81526020018a60001b815260200184815250606081fd5b50505050505050919050565b600083156132ca576001600160a01b0380871660009081526004602090815260408083209389168352928152828220878352905220546132979084613b2c565b6001600160a01b038088166000908152600460209081526040808320938a168352928152828220888352905220556132e7565b63ffffffff60381b19821663ffffffff60381b603885901b161791505b821561332e576001600160a01b038681166000908152600460209081526040808320938916835292815282822086835290522080546001600160e01b031660e086901b1790555b50949350505050565b6001600160601b03198316925080156133575765ffff0000000019821691505b506001600160a01b039485166000818152600460209081526040808320979098168083529681528782208683528152878220949094559081526005835285812094815293825284842092845291905291902055565b60781b6dffffffffffffffffffffffffffff60781b166dffffffffffffffffffffffffffff60781b19919091161790565b60008080805b8481101561385757600060408901819052606089015285858281811061340b5761340b614fdc565b90506080020160006004811061342357613423614fdc565b60209081029190910135604089810191825289516001600160a01b039081166000908152600485528281208c86018051841683529086528382208551835286528382205460608e019081528d518416835260058752848320915190931682528552828120935181529290935290205460c0890152516001600160601b031615806134ef57508585828181106134ba576134ba614fdc565b9050608002016003600481106134d2576134d2614fdc565b60200201356134ed8860c0015162ffffff60489190911c1690565b115b61384f5785858281811061350557613505614fdc565b90506080020160016004811061351d5761351d614fdc565b602002013586868381811061353457613534614fdc565b90506080020160016004811061354c5761354c614fdc565b60200201356001600160601b0316146135a75760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657257616e74732f393662697473000000006044820152606401610a85565b8585828181106135b9576135b9614fdc565b9050608002016002600481106135d1576135d1614fdc565b60200201358686838181106135e8576135e8614fdc565b90506080020160026004811061360057613600614fdc565b60200201356001600160601b03161461365b5760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657247697665732f393662697473000000006044820152606401610a85565b85858281811061366d5761366d614fdc565b90506080020160016004811061368557613685614fdc565b602002013560808801528585828181106136a1576136a1614fdc565b9050608002016002600481106136b9576136b9614fdc565b602002013560a08801526101008701516136d4906001612a47565b610100880181905287516001600160a01b039081166000908152600260209081526040808320828d015190941683529290529081209190915580806137198b8b613ddf565b925092509250806f6d67762f74726164655375636365737360801b03613740576001870196505b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b146137945761378d8a600001518b602001516137748d6060015160e01c90565b60608e015160c01c63ffffffff168e6101000151613257565b6101008b01525b6101008a01516137a5906000612a47565b8a610100018181525050896101000151600260008c600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008c602001516001600160a01b03166001600160a01b03168152602001908152602001600020819055506138138b8b6143df565b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b14613839576138398b8b8585856144e1565b8a60400151860195508a60600151850194505050505b6001016133e3565b509450945094915050565b8015611ea457604051600090339083908381818185875af1925050503d80600081146138aa576040519150601f19603f3d011682016040523d82523d6000602084013e6138af565b606091505b505090508061098b5760405162461bcd60e51b815260206004820152601760248201527f6d67762f73656e6450656e616c747952657665727465640000000000000000006044820152606401610a85565b60008060008060008560e0015190506000866080015182146139555786516001600160a01b039081166000908152600460209081526040808320828c015190941683529281528282208583529052205461395c565b8661014001515b90506001600160601b0381166139b55761012087015160381c63ffffffff1687516001600160a01b039081166000908152600460209081526040808320828d015190941683529281528282208483529052205490925090505b6139c0878284614544565b15613a5a5760005b60c082901c63ffffffff1615613a42575086516001600160a01b039081166000908152600460209081526040808320828c0151909416835292815282822063ffffffff60c086901c1680845291529190205490613a26898383614544565b15613a3657809350819250613a3c565b50613a42565b506139c8565b8260c083901c63ffffffff169095509350613ae39050565b60005b613a678260e01c90565b15613ad0576000613a788360e01c90565b89516001600160a01b039081166000908152600460209081526040808320828f015190941683529281528282208483529052205492509050613abb898383614544565b15613ac65750613ad0565b9250905080613a5d565b613ada8260e01c90565b94509192508291505b86608001518414613af45783613afe565b61014087015160e01c5b87608001518414613b0f5783613b1f565b61014088015160c01c63ffffffff165b9550955050505050915091565b60c01b63ffffffff60c01b1663ffffffff60c01b19919091161790565b808015613b7057508260c00151613b675760008260a0015111613b70565b60008260800151115b8015613b80575060008260400151115b15613d3c5781516001600160a01b03908116600090815260056020908152604080832082870151909416835292815282822083860151835290529081205460c08401528080613bcf8686613ddf565b608088015160a089015160408a015160608b015160c08c015196995094975092955090939092906e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613cc65760408b01518b5111613c22576000613c2b565b60408b01518b51035b60808b015260608b81015160208d01510360a08c01528a015160c01c63ffffffff168a6040018181525050600460008b600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b602001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b604001518152602001908152602001600020548a60600181815250505b613ce68b8b886e1b59dd8bdb9bdd115e1958dd5d1959608a1b1415613b49565b60408a0183905260808a0185905260a08a0184905260608a0182905260c08a018190526e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613d2f57613d2f8b8b8a8a8a6144e1565b5050505050505050505050565b613d5b8260000151836020015160008560400151866101000151613257565b6101008301819052613d6e906000612a47565b610100830181905282516001600160a01b0390811660009081526002602090815260408083208288015190941683529290522055613dac83836143df565b505050565b600080613dbc6148ec565b60648185516020870160008a8af192508060448415020151915050935093915050565b600080600080613dff85606001516001600160601b0360609190911c1690565b90506000613e1786606001516001600160601b031690565b608087015160a0880151919250908083028483021115613e575750600095508594506e1b59dd8bdb9bdd115e1958dd5d1959608a1b93506143d892505050565b8860c001518015613e6757508183105b80613e7e57508860c00151158015613e7e57508084105b15613e96576080880183905260a08801849052613f0d565b8860c0015115613ee157838202838181613eb257613eb2614fc6565b0615613ebf576001613ec2565b60005b60ff16848281613ed457613ed4614fc6565b040160a08a015250613f0d565b83600003613ef55760808801839052613f0d565b8381840281613f0657613f06614fc6565b0460808901525b50505050600080306001600160a01b031663aa4dd28260e01b878960a00151604051602401613f3d929190615058565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051613f7b9190614ef2565b6000604051808303816000865af19150503d8060008114613fb8576040519150601f19603f3d011682016040523d82523d6000602084013e613fbd565b606091505b509150915081156141175780806020019051810190613fdc9190615080565b94506f6d67762f74726164655375636365737360801b925085602001516001600160a01b031686600001516001600160a01b03167f1d81940ff2c3ac549c8acefd7c1b2ffb24aacc8b3cfa309c22abc3de79727f9d88604001518a60a001518a608001518b60a0015160405161407494939291909384526001600160a01b039290921660208401526040830152606082015260800190565b60405180910390a360e086015160501c60ff16156140f25760e086015160a088015160405163cac1827160e01b815260609290921c9163cac18271916140bf918a9190600401615058565b600060405180830381600087803b1580156140d957600080fd5b505af11580156140ed573d6000803e3d6000fd5b505050505b6080860151604088018051909101905260a0860151606088018051909101905261439d565b602081015160408201516060830151909650945092506e1b59dd8bdb585ad95c94995d995c9d608a1b831480614164575082741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b145b80614185575082731b59dd8bdb585ad95c949958d95a5d9951985a5b60621b145b156142975785602001516001600160a01b031686600001516001600160a01b03167f1d59c048edb5397821854bd12cbe02242b82101c677f949d076d14eb7bd8343688604001518a60a001518a608001518b60a00151896040516142149594939291909485526001600160a01b0393909316602085015260408401919091526060830152608082015260a00190565b60405180910390a360e086015160501c60ff16156142925760e086015160a0880151604051631159507360e01b815260609290921c9163115950739161425f918a9190600401615058565b600060405180830381600087803b15801561427957600080fd5b505af115801561428d573d6000803e3d6000fd5b505050505b61439d565b827f6d67762f6e6f74456e6f756768476173466f724d616b65725472616465000000036143065760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6e6f74456e6f756768476173466f724d616b657254726164650000006044820152606401610a85565b82741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b036143655760405162461bcd60e51b81526020600482015260156024820152741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b6044820152606401610a85565b60405162461bcd60e51b815260206004820152600d60248201526c36b3bb17b9bbb0b822b93937b960991b6044820152606401610a85565b6143d586600001518760200151886040015189606001518a60c00151886f6d67762f74726164655375636365737360801b1415613337565b50505b9250925092565b6101008101516000906127109060e81c61ffff168460400151028161440657614406614fc6565b049050801561447c57604083018051829003905260e08301819052815160005461443a91906001600160a01b031683612fff565b61447c5760405162461bcd60e51b81526020600482015260136024820152721b59dd8bd99959551c985b9cd9995c91985a5b606a1b6044820152606401610a85565b604083015115613dac5761449d82600001518460a001518560400151612fff565b613dac5760405162461bcd60e51b815260206004820152601560248201527436b3bb17a6b3bb2330b4b62a37a830bcaa30b5b2b960591b6044820152606401610a85565b60c084015160481c62ffffff16808411156144fa578093505b6145088585830385856145ea565b84019350816f6d67762f74726164655375636365737360801b1461453c576145308585614740565b60808701805190910190525b505050505050565b600081600003614556575060016130cf565b60408401516060858101516001600160601b039186901c82169291861691908084028284028082036145dd5789516001600160a01b039081166000908152600560209081526040808320828f015190941683529281528282208b835290529081205460481c62ffffff1660a08c0151940295909302949094101595506130cf945050505050565b1194506130cf9350505050565b600080633d3d130d60e01b8660405180604001604052808781526020018681525060405160240161461c929190615099565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319939093169290921790915260c087015190915060601c60005a90508660408204820310156146b45760405162461bcd60e51b815260206004820181905260248201527f6d67762f6e6f74456e6f756768476173466f724d616b6572506f7374686f6f6b6044820152606401610a85565b6000806146c2848a87613db1565b915091505a83039550816147335789602001516001600160a01b03168a600001516001600160a01b03167f51d5a3ecf332626d83c8207fe9bd22f38801f578c7eb222e2d811cd1b4c629a58c604001518460405161472a929190918252602082015260400190565b60405180910390a35b5050505050949350505050565b60c082015160009062ffffff604882901c81169161ffff602082901c1660309190911c909116820102633b9aca00028184111561477b578193505b61010085015160009060601c62ffffff1660e08701519086019060401c61ffff16633b9aca0002029050818111156147b05750805b6147c96147c18760c0015160601c90565b828403611ea7565b95945050505050565b60405180610160016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60405180610120016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806101000160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001600015158152602001600081525090565b60405180608001604052806004906020820280368337509192915050565b80356001600160a01b038116811461492157600080fd5b919050565b600080600080600060a0868803121561493e57600080fd5b6149478661490a565b94506149556020870161490a565b94979496505050506040830135926060810135926080909101359150565b60006020828403121561498557600080fd5b6130cf8261490a565b6000602082840312156149a057600080fd5b5035919050565b6000806000606084860312156149bc57600080fd5b6149c58461490a565b92506149d36020850161490a565b9150604084013590509250925092565b60008083601f8401126149f557600080fd5b50813567ffffffffffffffff811115614a0d57600080fd5b6020830191508360208260071b8501011115611ac857600080fd5b8015158114611ea457600080fd5b600080600080600060808688031215614a4e57600080fd5b614a578661490a565b9450614a656020870161490a565b9350604086013567ffffffffffffffff811115614a8157600080fd5b614a8d888289016149e3565b9094509250506060860135614aa181614a28565b809150509295509295909350565b600080600080600080600060e0888a031215614aca57600080fd5b614ad38861490a565b9650614ae16020890161490a565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b60008060008060808587031215614b2357600080fd5b614b2c8561490a565b9350614b3a6020860161490a565b9250614b486040860161490a565b9396929550929360600135925050565b600060208284031215614b6a57600080fd5b81356130cf81614a28565b60008060408385031215614b8857600080fd5b614b918361490a565b9150614b9f6020840161490a565b90509250929050565b600080600080600080600080610100898b031215614bc557600080fd5b614bce8961490a565b9750614bdc60208a0161490a565b979a9799505050506040860135956060810135956080820135955060a0820135945060c0820135935060e0909101359150565b60008060008060008060c08789031215614c2857600080fd5b614c318761490a565b9550614c3f6020880161490a565b945060408701359350606087013592506080870135614c5d81614a28565b9150614c6b60a0880161490a565b90509295509295509295565b600080828403610140811215614c8c57600080fd5b61012080821215614c9c57600080fd5b849350610f7c81860161490a565b60008060008060808587031215614cc057600080fd5b614cc98561490a565b9350614cd76020860161490a565b9250604085013591506060850135614cee81614a28565b939692955090935050565b60008060008060008060008060006101208a8c031215614d1857600080fd5b614d218a61490a565b9850614d2f60208b0161490a565b9750614d3d60408b0161490a565b9650614d4b60608b0161490a565b955060808a0135945060a08a0135935060c08a013560ff81168114614d6f57600080fd5b8093505060e08a013591506101008a013590509295985092959850929598565b60008060008060008060a08789031215614da857600080fd5b614db18761490a565b9550614dbf6020880161490a565b9450604087013567ffffffffffffffff811115614ddb57600080fd5b614de789828a016149e3565b9095509350506060870135614dfb81614a28565b9150614c6b6080880161490a565b60008060008060808587031215614e1f57600080fd5b614e288561490a565b9350614e366020860161490a565b9250614e446040860161490a565b9150614e526060860161490a565b905092959194509250565b600080600080600060a08688031215614e7557600080fd5b614e7e8661490a565b9450614e8c6020870161490a565b935060408601359250606086013591506080860135614aa181614a28565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60008060408385031215614ee157600080fd5b505080516020909101519092909150565b6000825160005b81811015614f135760208186018101518583015201614ef9565b81811115614f22576000828501525b509190910192915050565b600060208284031215614f3f57600080fd5b81516130cf81614a28565b61012081016001600160a01b0380614f618561490a565b16835280614f716020860161490a565b1660208401525060408301356040830152606083013560608301526080830135608083015260a083013560a083015260c083013560c083015260e083013560e083015261010080840135818401525092915050565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60018060a01b038082511683528060208301511660208401525060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152505050565b61014081016150678285614ff2565b6001600160a01b03929092166101209190910152919050565b60006020828403121561509257600080fd5b5051919050565b61016081016150a88285614ff2565b82516101208301526020830151610140830152939250505056fea264697066735822122063bc37507b0e565e2a8136c576c1357b3a90b594b4c54a87e5a42e97ece520f764736f6c634300080e003360806040526000805460ff1916600117905534801561001d57600080fd5b50604051610c49380380610c4983398101604081905261003c9161009f565b600080546001600160a01b0394851661010002610100600160a81b0319909116179055600180549284166001600160a01b0319938416179055600280549190931691161790556100ec565b6001600160a01b038116811461009c57600080fd5b50565b6000806000606084860312156100b457600080fd5b83516100bf81610087565b60208501519093506100d081610087565b60408501519092506100e181610087565b809150509250925092565b610b4e806100fb6000396000f3fe6080604052600436106100ab5760003560e01c8063a3cfe14d11610064578063a3cfe14d146101ee578063aa2cc08b1461020e578063b04220dd146100fa578063e1f21c671461022e578063f8ccbf471461024e578063ff2e2d331461026857600080fd5b8063080d7c4d146100b75780631154020b146100d95780632d24c42f146100fa5780633a768463146101345780634d1d2b6614610174578063978b7c02146101be57600080fd5b366100b257005b600080fd5b3480156100c357600080fd5b506100d76100d23660046107db565b610288565b005b3480156100e557600080fd5b506100d76100f4366004610807565b50505050565b34801561010657600080fd5b5061011a61011536600461084d565b61031f565b604080519283526020830191909152015b60405180910390f35b34801561014057600080fd5b5061015c737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b03909116815260200161012b565b34801561018057600080fd5b5061019461018f36600461084d565b6103c7565b6040805195151586526020860194909452928401919091526060830152608082015260a00161012b565b3480156101ca57600080fd5b506101de6101d936600461084d565b6104c3565b604051901515815260200161012b565b3480156101fa57600080fd5b506100d76102093660046107db565b61053b565b34801561021a57600080fd5b5061011a61022936600461086f565b610579565b34801561023a57600080fd5b506100d76102493660046108ca565b610617565b34801561025a57600080fd5b506000546101de9060ff1681565b34801561027457600080fd5b506101de61028336600461090b565b61068a565b60005460015460025460405163167ae91560e21b81526001600160a01b039283166004820152908216602482015284821660448201526064810184905261010090920416906359eba454906084015b6020604051808303816000875af11580156102f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031a919061098e565b505050565b600080546001805460025460405163fbffe5fd60e01b81526001600160a01b03928316600482015290821660248201526044810187905260648101869052608481019290925283926101009004169063fbffe5fd9060a4016080604051808303816000875af1158015610396573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ba91906109b0565b5091969095509350505050565b60008060008060008061040f60405180608001604052808a81526020018981526020016bffffffffffffffffffffffff8016815260200165ffffffffffff8016815250610748565b6000805460018054600254604051632370a17d60e11b8152959650939485948594859485946001600160a01b036101009093048316946346e142fa9461046094928316939216918c916004016109e6565b60a0604051808303816000875af115801561047f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a39190610a7b565b60019094149e50919c509a50985096505050505050509295509295909350565b60405163268e95b360e11b815260048101839052602481018290526000903090634d1d2b669060440160a0604051808303816000875af115801561050b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052f9190610abb565b50929695505050505050565b60005460405163095ea7b360e01b81526101009091046001600160a01b0390811660048301526024820183905283169063095ea7b3906044016102d7565b60405163fbffe5fd60e01b81526001600160a01b0385811660048301528481166024830152604482018490526064820183905260016084830152600091829188169063fbffe5fd9060a4016080604051808303816000875af11580156105e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060791906109b0565b5091999098509650505050505050565b60405163095ea7b360e01b81526001600160a01b0383811660048301526024820183905284169063095ea7b3906044016020604051808303816000875af1158015610666573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100f4919061098e565b6000806106b6604051806080016040528088815260200187815260200186815260200185815250610748565b90506000896001600160a01b03166346e142fa8a8a8560016040518563ffffffff1660e01b81526004016106ed94939291906109e6565b60a0604051808303816000875af115801561070c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107309190610a7b565b50506001909214945050505050979650505050505050565b60408051600180825281830190925260609160009190816020015b61076b6107a5565b815260200190600190039081610763579050509050828160008151811061079457610794610b02565b602090810291909101015292915050565b60405180608001604052806004906020820280368337509192915050565b6001600160a01b03811681146107d857600080fd5b50565b600080604083850312156107ee57600080fd5b82356107f9816107c3565b946020939093013593505050565b6000806000806080858703121561081d57600080fd5b8435610828816107c3565b93506020850135610838816107c3565b93969395505050506040820135916060013590565b6000806040838503121561086057600080fd5b50508035926020909101359150565b600080600080600060a0868803121561088757600080fd5b8535610892816107c3565b945060208601356108a2816107c3565b935060408601356108b2816107c3565b94979396509394606081013594506080013592915050565b6000806000606084860312156108df57600080fd5b83356108ea816107c3565b925060208401356108fa816107c3565b929592945050506040919091013590565b600080600080600080600060e0888a03121561092657600080fd5b8735610931816107c3565b96506020880135610941816107c3565b95506040880135610951816107c3565b969995985095966060810135965060808101359560a0820135955060c0909101359350915050565b8051801515811461098957600080fd5b919050565b6000602082840312156109a057600080fd5b6109a982610979565b9392505050565b600080600080608085870312156109c657600080fd5b505082516020840151604085015160609095015191969095509092509050565b6001600160a01b038581168252841660208083019190915260806040830181905284518382018190526000928681019160a08601919085805b82811015610a5c57855185835b6004811015610a4957825182529186019190860190600101610a2c565b5050509483019493860193600101610a1f565b5050505085151560608601529250610a72915050565b95945050505050565b600080600080600060a08688031215610a9357600080fd5b5050835160208501516040860151606087015160809097015192989197509594509092509050565b600080600080600060a08688031215610ad357600080fd5b610adc86610979565b602087015160408801516060890151608090990151929a91995097965090945092505050565b634e487b7160e01b600052603260045260246000fdfea264697066735822122037fdda2c3f9e65c58a2aa53916c2c81a6db7d75b5fede39a7f49baa6761eb0e364736f6c634300080e0033608060405234801561001057600080fd5b5060405161206d38038061206d83398101604081905261002f91610092565b600180546001600160a01b0394851661010002610100600160a81b0319909116179055600280549284166001600160a01b0319938416179055600380549190931691161790556100df565b6001600160a01b038116811461008f57600080fd5b50565b6000806000606084860312156100a757600080fd5b83516100b28161007a565b60208501519093506100c38161007a565b60408501519092506100d48161007a565b809150509250925092565b611f7f806100ee6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631f7b6d32146100515780635686153214610067578063a5e3875114610092578063e9c4a3ac146100a7575b600080fd5b6000546040519081526020015b60405180910390f35b61007a61007536600461047a565b6100af565b6040516001600160a01b03909116815260200161005e565b6100a56100a036600461047a565b6100de565b005b6100a5610320565b60008082815481106100c3576100c3610493565b6000918252602090912001546001600160a01b031692915050565b60015460ff16610311578067ffffffffffffffff811115610101576101016104a9565b60405190808252806020026020018201604052801561012a578160200160208202803683370190505b50805161013f916000916020909101906103f3565b5060005b8181101561030f576001546002546003546040516101009093046001600160a01b03908116939281169291169061017990610458565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f0801580156101b5573d6000803e3d6000fd5b50600082815481106101c9576101c9610493565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506000818154811061020a5761020a610493565b60009182526020909120015460025460405163a3cfe14d60e01b81526001600160a01b039182166004820152678ac7230489e80000602482015291169063a3cfe14d90604401600060405180830381600087803b15801561026a57600080fd5b505af115801561027e573d6000803e3d6000fd5b505050506000818154811061029557610295610493565b600091825260209091200154604051635239cafb60e11b8152821560048201526001600160a01b039091169063a47395f690602401600060405180830381600087803b1580156102e457600080fd5b505af11580156102f8573d6000803e3d6000fd5b505050508080610307906104bf565b915050610143565b505b506001805460ff191681179055565b600080549061032f82476104e6565b90506000811161037b5760405162461bcd60e51b8152602060048201526013602482015272181032ba3432b9103a37903a3930b739b332b960691b604482015260640160405180910390fd5b60005b828110156103ee57600080828154811061039a5761039a610493565b60009182526020822001546040516001600160a01b039091169250829085156108fc0290869084818181858888f193505050509050806103d957600080fd5b505080806103e6906104bf565b91505061037e565b505050565b828054828255906000526020600020908101928215610448579160200282015b8281111561044857825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610413565b50610454929150610465565b5090565b611a418061050983390190565b5b808211156104545760008155600101610466565b60006020828403121561048c57600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6000600182016104df57634e487b7160e01b600052601160045260246000fd5b5060010190565b60008261050357634e487b7160e01b600052601260045260246000fd5b50049056fe60806040526004805463ff00ff00191663010001001790553480156200002457600080fd5b5060405162001a4138038062001a418339810160408190526200004791620000a3565b600080546001600160a01b039485166001600160a01b031991821617909155600180549385169382169390931790925560028054919093169116179055620000f7565b6001600160a01b0381168114620000a057600080fd5b50565b600080600060608486031215620000b957600080fd5b8351620000c6816200008a565b6020850151909350620000d9816200008a565b6040850151909250620000ec816200008a565b809150509250925092565b61193a80620001076000396000f3fe6080604052600436106101bb5760003560e01c8063ba414fa6116100ec578063e923c6511161008a578063fa7626d411610064578063fa7626d414610550578063fc3816c81461056f578063fc8349f21461058f578063ffae399e146105af57600080fd5b8063e923c651146104ef578063f5537ede1461050f578063f8ccbf471461052f57600080fd5b8063ccfbf94d116100c6578063ccfbf94d1461046f578063cda30c3b1461048f578063d3845fea146104af578063e67ecda1146104cf57600080fd5b8063ba414fa61461040a578063c4c6c87d1461042f578063cafffca81461044f57600080fd5b80635a4924e8116101595780637ec95ff3116101335780637ec95ff31461037c5780638b0af9bb1461039c578063a3cfe14d146103b1578063a47395f6146103d157600080fd5b80635a4924e8146102f55780636c49c32c146103235780637a943a371461034357600080fd5b80633a768463116101955780633a768463146102295780633d3d130d1461026e57806353e575ac1461028e578063557f49c3146102bc57600080fd5b80630cc9d656146101c75780632644c05c146101e957806333ac5efd1461020957600080fd5b366101c257005b600080fd5b3480156101d357600080fd5b506101e76101e236600461142d565b6105e8565b005b3480156101f557600080fd5b506101e7610204366004611492565b610631565b34801561021557600080fd5b506101e76102243660046114cd565b6106af565b34801561023557600080fd5b50610251737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561027a57600080fd5b506101e7610289366004611529565b610731565b34801561029a57600080fd5b506102ae6102a9366004611492565b61078d565b604051908152602001610265565b3480156102c857600080fd5b506101e76102d736600461157a565b60028054911515600160a81b0260ff60a81b19909216919091179055565b34801561030157600080fd5b506101e761031036600461157a565b6004805460ff1916911515919091179055565b34801561032f57600080fd5b506102ae61033e36600461159e565b610821565b34801561034f57600080fd5b506101e761035e36600461157a565b60028054911515600160b81b0260ff60b81b19909216919091179055565b34801561038857600080fd5b506102ae6103973660046114cd565b610988565b3480156103a857600080fd5b506102ae610a1d565b3480156103bd57600080fd5b506101e76103cc3660046115bb565b610a8f565b3480156103dd57600080fd5b506101e76103ec36600461157a565b60028054911515600160a01b0260ff60a01b19909216919091179055565b34801561041657600080fd5b5061041f610b0b565b6040519015158152602001610265565b34801561043b57600080fd5b506102ae61044a3660046115e7565b610c3a565b34801561045b57600080fd5b506102ae61046a3660046115e7565b610ccd565b34801561047b57600080fd5b506102ae61048a366004611600565b610d1e565b34801561049b57600080fd5b506102ae6104aa366004611659565b610d9e565b3480156104bb57600080fd5b506101e76104ca3660046115e7565b610e30565b3480156104db57600080fd5b506101e76104ea3660046115e7565b600355565b3480156104fb57600080fd5b506102ae61050a366004611492565b610e92565b34801561051b57600080fd5b506101e761052a36600461168b565b610f1b565b34801561053b57600080fd5b5060045461041f906301000000900460ff1681565b34801561055c57600080fd5b5060045461041f90610100900460ff1681565b34801561057b57600080fd5b506102ae61058a3660046116cc565b610f94565b34801561059b57600080fd5b5061041f6105aa3660046115e7565b611022565b3480156105bb57600080fd5b506101e76105ca36600461157a565b60028054911515600160b01b0260ff60b01b19909216919091179055565b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c28686868686866040516106219695949392919061172e565b60405180910390a1505050505050565b60008054600154600254604051636a4f769160e01b81526001600160a01b0393841694636a4f7691946106769481169316918b918b918b91908b908b90600401611767565b600060405180830381600087803b15801561069057600080fd5b505af11580156106a4573d6000803e3d6000fd5b505050505050505050565b60008054600154600254604051636a4f769160e01b81526001600160a01b0393841694636a4f76919487946106f794908216939116918d918d918d918d908d90600401611767565b6000604051808303818588803b15801561071057600080fd5b505af1158015610724573d6000803e3d6000fd5b5050505050505050505050565b6003541561077f5761077f81602001356003546040518060400160405280601881526020017f496e636f727265637420737461747573206d6573736167650000000000000000815250611092565b61078982826110da565b5050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc9387936107d4939183169216908c908c908c908a908d906004016117ab565b60206040518083038185885af11580156107f2573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061081791906117e9565b9695505050505050565b600254600090600160b01b900460ff161561085c576040805160208082019092526f1d195cdd13585ad95c8bdc995d995c9d60821b81529081fd5b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c23361088b6020850185611802565b61089b6040860160208701611802565b856040013586608001358760a001356040516108bc9695949392919061172e565b60405180910390a1600254600160a01b900460ff161561095f576108e36020830183611802565b6000805460405163095ea7b360e01b81526001600160a01b0391821660048201526024810192909252919091169063095ea7b3906044016020604051808303816000875af1158015610939573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095d919061181f565b505b600254600160a81b900460ff161561098057506418589bdc9d60da1b919050565b506000919050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc9387936109cf939183169216908d908d908d908d908d906004016117ab565b60206040518083038185885af11580156109ed573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610a1291906117e9565b979650505050505050565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610a66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8a91906117e9565b905090565b60005460405163095ea7b360e01b81526001600160a01b039182166004820152602481018390529083169063095ea7b3906044016020604051808303816000875af1158015610ae2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b06919061181f565b505050565b60045460009062010000900460ff1615610b2f575060045462010000900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610c355760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610bbd917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611868565b60408051601f1981840301815290829052610bd791611899565b6000604051808303816000865af19150503d8060008114610c14576040519150601f19603f3d011682016040523d82523d6000602084013e610c19565b606091505b5091505080806020019051810190610c31919061181f565b9150505b919050565b6000805460015460025460405163ad97db1b60e01b81526001600160a01b0392831660048201529082166024820152604481018590526064810184905291169063ad97db1b906084015b6020604051808303816000875af1158015610ca3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc791906117e9565b92915050565b600080546001805460025460405163ad97db1b60e01b81526001600160a01b03928316600482015290821660248201526044810186905260648101929092529091169063ad97db1b90608401610c84565b6000805460405163127db4b760e21b81526001600160a01b03909116906349f6d2dc90610d5b908a908a908a908a908a9089908b906004016117ab565b6020604051808303816000875af1158015610d7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1291906117e9565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc93610de493908216929116908a908a908a9089908b906004016117ab565b6020604051808303816000875af1158015610e03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2791906117e9565b95945050505050565b600054604051630460488160e31b81523060048201526001600160a01b039091169063230244089083906024016000604051808303818588803b158015610e7657600080fd5b505af1158015610e8a573d6000803e3d6000fd5b505050505050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc93610ed893908216929116908b908b908b908b908b906004016117ab565b6020604051808303816000875af1158015610ef7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081791906117e9565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af1158015610f6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8e919061181f565b50505050565b6000805460405163127db4b760e21b81526001600160a01b03909116906349f6d2dc908490610fd3908c908c908c908c908c908a908d906004016117ab565b60206040518083038185885af1158015610ff1573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061101691906117e9565b98975050505050505050565b60008054604051632e1a7d4d60e01b8152600481018490526001600160a01b0390911690632e1a7d4d906024016020604051808303816000875af115801561106e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc7919061181f565b818314610b06577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583816040516110c891906118b5565b60405180910390a1610b0683836111e2565b60045460ff16156111205760405162461bcd60e51b815260206004820152600c60248201526b1c1bdcdd1a1bdbdad1985a5b60a21b604482015260640160405180910390fd5b600254600160b81b900460ff1615610789576000546001600160a01b0316636a4f76916111506020850185611802565b6111606040860160208701611802565b606080870135901c6bffffffffffffffffffffffff166bffffffffffffffffffffffff60608801351660c088013560481c62ffffff16600060608a013560e01c8a604001356040518963ffffffff1660e01b81526004016111c8989796959493929190611767565b600060405180830381600087803b158015610e7657600080fd5b808214610789577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516112569060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974604082015264657333325d60d81b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a1610789737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156114025760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526113a19291602001611868565b60408051601f19818403018152908290526113bb91611899565b6000604051808303816000865af19150503d80600081146113f8576040519150601f19603f3d011682016040523d82523d6000602084013e6113fd565b606091505b505050505b6004805462ff0000191662010000179055565b6001600160a01b038116811461142a57600080fd5b50565b60008060008060008060c0878903121561144657600080fd5b863561145181611415565b9550602087013561146181611415565b9450604087013561147181611415565b959894975094956060810135955060808101359460a0909101359350915050565b600080600080600060a086880312156114aa57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b60008060008060008060c087890312156114e657600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b6000610120828403121561152357600080fd5b50919050565b60008082840361016081121561153e57600080fd5b6115488585611510565b9250604061011f198201121561155d57600080fd5b50610120830190509250929050565b801515811461142a57600080fd5b60006020828403121561158c57600080fd5b81356115978161156c565b9392505050565b600061012082840312156115b157600080fd5b6115978383611510565b600080604083850312156115ce57600080fd5b82356115d981611415565b946020939093013593505050565b6000602082840312156115f957600080fd5b5035919050565b60008060008060008060c0878903121561161957600080fd5b863561162481611415565b9550602087013561163481611415565b95989597505050506040840135936060810135936080820135935060a0909101359150565b6000806000806080858703121561166f57600080fd5b5050823594602084013594506040840135936060013592509050565b6000806000606084860312156116a057600080fd5b83356116ab81611415565b925060208401356116bb81611415565b929592945050506040919091013590565b600080600080600080600060e0888a0312156116e757600080fd5b87356116f281611415565b9650602088013561170281611415565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b6001600160a01b03968716815294861660208601529290941660408401526060830152608082019290925260a081019190915260c00190565b6001600160a01b03988916815296909716602087015260408601949094526060850192909252608084015260a083015260c082015260e08101919091526101000190565b6001600160a01b03978816815295909616602086015260408501939093526060840191909152608083015260a082015260c081019190915260e00190565b6000602082840312156117fb57600080fd5b5051919050565b60006020828403121561181457600080fd5b813561159781611415565b60006020828403121561183157600080fd5b81516115978161156c565b60005b8381101561185757818101518382015260200161183f565b83811115610f8e5750506000910152565b6001600160e01b031983168152815160009061188b81600485016020870161183c565b919091016004019392505050565b600082516118ab81846020870161183c565b9190910192915050565b60408152600560408201526422b93937b960d91b606082015260806020820152600082518060808401526118f08160a085016020870161183c565b601f01601f19169190910160a0019291505056fea2646970667358221220758e228e653deeab2b14f8b888185a342a3bf92b0afc7614c92763efafc6472a64736f6c634300080e0033a264697066735822122028664c34373e72c49123f9c3469bcfa72398b0533b5bf2e6737015883ecc80b564736f6c634300080e003360806040526004805463ff00ff00191663010001001790553480156200002457600080fd5b5060405162001a4138038062001a418339810160408190526200004791620000a3565b600080546001600160a01b039485166001600160a01b031991821617909155600180549385169382169390931790925560028054919093169116179055620000f7565b6001600160a01b0381168114620000a057600080fd5b50565b600080600060608486031215620000b957600080fd5b8351620000c6816200008a565b6020850151909350620000d9816200008a565b6040850151909250620000ec816200008a565b809150509250925092565b61193a80620001076000396000f3fe6080604052600436106101bb5760003560e01c8063ba414fa6116100ec578063e923c6511161008a578063fa7626d411610064578063fa7626d414610550578063fc3816c81461056f578063fc8349f21461058f578063ffae399e146105af57600080fd5b8063e923c651146104ef578063f5537ede1461050f578063f8ccbf471461052f57600080fd5b8063ccfbf94d116100c6578063ccfbf94d1461046f578063cda30c3b1461048f578063d3845fea146104af578063e67ecda1146104cf57600080fd5b8063ba414fa61461040a578063c4c6c87d1461042f578063cafffca81461044f57600080fd5b80635a4924e8116101595780637ec95ff3116101335780637ec95ff31461037c5780638b0af9bb1461039c578063a3cfe14d146103b1578063a47395f6146103d157600080fd5b80635a4924e8146102f55780636c49c32c146103235780637a943a371461034357600080fd5b80633a768463116101955780633a768463146102295780633d3d130d1461026e57806353e575ac1461028e578063557f49c3146102bc57600080fd5b80630cc9d656146101c75780632644c05c146101e957806333ac5efd1461020957600080fd5b366101c257005b600080fd5b3480156101d357600080fd5b506101e76101e236600461142d565b6105e8565b005b3480156101f557600080fd5b506101e7610204366004611492565b610631565b34801561021557600080fd5b506101e76102243660046114cd565b6106af565b34801561023557600080fd5b50610251737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561027a57600080fd5b506101e7610289366004611529565b610731565b34801561029a57600080fd5b506102ae6102a9366004611492565b61078d565b604051908152602001610265565b3480156102c857600080fd5b506101e76102d736600461157a565b60028054911515600160a81b0260ff60a81b19909216919091179055565b34801561030157600080fd5b506101e761031036600461157a565b6004805460ff1916911515919091179055565b34801561032f57600080fd5b506102ae61033e36600461159e565b610821565b34801561034f57600080fd5b506101e761035e36600461157a565b60028054911515600160b81b0260ff60b81b19909216919091179055565b34801561038857600080fd5b506102ae6103973660046114cd565b610988565b3480156103a857600080fd5b506102ae610a1d565b3480156103bd57600080fd5b506101e76103cc3660046115bb565b610a8f565b3480156103dd57600080fd5b506101e76103ec36600461157a565b60028054911515600160a01b0260ff60a01b19909216919091179055565b34801561041657600080fd5b5061041f610b0b565b6040519015158152602001610265565b34801561043b57600080fd5b506102ae61044a3660046115e7565b610c3a565b34801561045b57600080fd5b506102ae61046a3660046115e7565b610ccd565b34801561047b57600080fd5b506102ae61048a366004611600565b610d1e565b34801561049b57600080fd5b506102ae6104aa366004611659565b610d9e565b3480156104bb57600080fd5b506101e76104ca3660046115e7565b610e30565b3480156104db57600080fd5b506101e76104ea3660046115e7565b600355565b3480156104fb57600080fd5b506102ae61050a366004611492565b610e92565b34801561051b57600080fd5b506101e761052a36600461168b565b610f1b565b34801561053b57600080fd5b5060045461041f906301000000900460ff1681565b34801561055c57600080fd5b5060045461041f90610100900460ff1681565b34801561057b57600080fd5b506102ae61058a3660046116cc565b610f94565b34801561059b57600080fd5b5061041f6105aa3660046115e7565b611022565b3480156105bb57600080fd5b506101e76105ca36600461157a565b60028054911515600160b01b0260ff60b01b19909216919091179055565b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c28686868686866040516106219695949392919061172e565b60405180910390a1505050505050565b60008054600154600254604051636a4f769160e01b81526001600160a01b0393841694636a4f7691946106769481169316918b918b918b91908b908b90600401611767565b600060405180830381600087803b15801561069057600080fd5b505af11580156106a4573d6000803e3d6000fd5b505050505050505050565b60008054600154600254604051636a4f769160e01b81526001600160a01b0393841694636a4f76919487946106f794908216939116918d918d918d918d908d90600401611767565b6000604051808303818588803b15801561071057600080fd5b505af1158015610724573d6000803e3d6000fd5b5050505050505050505050565b6003541561077f5761077f81602001356003546040518060400160405280601881526020017f496e636f727265637420737461747573206d6573736167650000000000000000815250611092565b61078982826110da565b5050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc9387936107d4939183169216908c908c908c908a908d906004016117ab565b60206040518083038185885af11580156107f2573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061081791906117e9565b9695505050505050565b600254600090600160b01b900460ff161561085c576040805160208082019092526f1d195cdd13585ad95c8bdc995d995c9d60821b81529081fd5b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c23361088b6020850185611802565b61089b6040860160208701611802565b856040013586608001358760a001356040516108bc9695949392919061172e565b60405180910390a1600254600160a01b900460ff161561095f576108e36020830183611802565b6000805460405163095ea7b360e01b81526001600160a01b0391821660048201526024810192909252919091169063095ea7b3906044016020604051808303816000875af1158015610939573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095d919061181f565b505b600254600160a81b900460ff161561098057506418589bdc9d60da1b919050565b506000919050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc9387936109cf939183169216908d908d908d908d908d906004016117ab565b60206040518083038185885af11580156109ed573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610a1291906117e9565b979650505050505050565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610a66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8a91906117e9565b905090565b60005460405163095ea7b360e01b81526001600160a01b039182166004820152602481018390529083169063095ea7b3906044016020604051808303816000875af1158015610ae2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b06919061181f565b505050565b60045460009062010000900460ff1615610b2f575060045462010000900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610c355760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610bbd917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611868565b60408051601f1981840301815290829052610bd791611899565b6000604051808303816000865af19150503d8060008114610c14576040519150601f19603f3d011682016040523d82523d6000602084013e610c19565b606091505b5091505080806020019051810190610c31919061181f565b9150505b919050565b6000805460015460025460405163ad97db1b60e01b81526001600160a01b0392831660048201529082166024820152604481018590526064810184905291169063ad97db1b906084015b6020604051808303816000875af1158015610ca3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc791906117e9565b92915050565b600080546001805460025460405163ad97db1b60e01b81526001600160a01b03928316600482015290821660248201526044810186905260648101929092529091169063ad97db1b90608401610c84565b6000805460405163127db4b760e21b81526001600160a01b03909116906349f6d2dc90610d5b908a908a908a908a908a9089908b906004016117ab565b6020604051808303816000875af1158015610d7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1291906117e9565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc93610de493908216929116908a908a908a9089908b906004016117ab565b6020604051808303816000875af1158015610e03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2791906117e9565b95945050505050565b600054604051630460488160e31b81523060048201526001600160a01b039091169063230244089083906024016000604051808303818588803b158015610e7657600080fd5b505af1158015610e8a573d6000803e3d6000fd5b505050505050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc93610ed893908216929116908b908b908b908b908b906004016117ab565b6020604051808303816000875af1158015610ef7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081791906117e9565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af1158015610f6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8e919061181f565b50505050565b6000805460405163127db4b760e21b81526001600160a01b03909116906349f6d2dc908490610fd3908c908c908c908c908c908a908d906004016117ab565b60206040518083038185885af1158015610ff1573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061101691906117e9565b98975050505050505050565b60008054604051632e1a7d4d60e01b8152600481018490526001600160a01b0390911690632e1a7d4d906024016020604051808303816000875af115801561106e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc7919061181f565b818314610b06577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583816040516110c891906118b5565b60405180910390a1610b0683836111e2565b60045460ff16156111205760405162461bcd60e51b815260206004820152600c60248201526b1c1bdcdd1a1bdbdad1985a5b60a21b604482015260640160405180910390fd5b600254600160b81b900460ff1615610789576000546001600160a01b0316636a4f76916111506020850185611802565b6111606040860160208701611802565b606080870135901c6bffffffffffffffffffffffff166bffffffffffffffffffffffff60608801351660c088013560481c62ffffff16600060608a013560e01c8a604001356040518963ffffffff1660e01b81526004016111c8989796959493929190611767565b600060405180830381600087803b158015610e7657600080fd5b808214610789577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516112569060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974604082015264657333325d60d81b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a1610789737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156114025760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526113a19291602001611868565b60408051601f19818403018152908290526113bb91611899565b6000604051808303816000865af19150503d80600081146113f8576040519150601f19603f3d011682016040523d82523d6000602084013e6113fd565b606091505b505050505b6004805462ff0000191662010000179055565b6001600160a01b038116811461142a57600080fd5b50565b60008060008060008060c0878903121561144657600080fd5b863561145181611415565b9550602087013561146181611415565b9450604087013561147181611415565b959894975094956060810135955060808101359460a0909101359350915050565b600080600080600060a086880312156114aa57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b60008060008060008060c087890312156114e657600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b6000610120828403121561152357600080fd5b50919050565b60008082840361016081121561153e57600080fd5b6115488585611510565b9250604061011f198201121561155d57600080fd5b50610120830190509250929050565b801515811461142a57600080fd5b60006020828403121561158c57600080fd5b81356115978161156c565b9392505050565b600061012082840312156115b157600080fd5b6115978383611510565b600080604083850312156115ce57600080fd5b82356115d981611415565b946020939093013593505050565b6000602082840312156115f957600080fd5b5035919050565b60008060008060008060c0878903121561161957600080fd5b863561162481611415565b9550602087013561163481611415565b95989597505050506040840135936060810135936080820135935060a0909101359150565b6000806000806080858703121561166f57600080fd5b5050823594602084013594506040840135936060013592509050565b6000806000606084860312156116a057600080fd5b83356116ab81611415565b925060208401356116bb81611415565b929592945050506040919091013590565b600080600080600080600060e0888a0312156116e757600080fd5b87356116f281611415565b9650602088013561170281611415565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b6001600160a01b03968716815294861660208601529290941660408401526060830152608082019290925260a081019190915260c00190565b6001600160a01b03988916815296909716602087015260408601949094526060850192909252608084015260a083015260c082015260e08101919091526101000190565b6001600160a01b03978816815295909616602086015260408501939093526060840191909152608083015260a082015260c081019190915260e00190565b6000602082840312156117fb57600080fd5b5051919050565b60006020828403121561181457600080fd5b813561159781611415565b60006020828403121561183157600080fd5b81516115978161156c565b60005b8381101561185757818101518382015260200161183f565b83811115610f8e5750506000910152565b6001600160e01b031983168152815160009061188b81600485016020870161183c565b919091016004019392505050565b600082516118ab81846020870161183c565b9190910192915050565b60408152600560408201526422b93937b960d91b606082015260806020820152600082518060808401526118f08160a085016020870161183c565b601f01601f19169190910160a0019291505056fea2646970667358221220758e228e653deeab2b14f8b888185a342a3bf92b0afc7614c92763efafc6472a64736f6c634300080e00336101406040523480156200001257600080fd5b5060405162001bb838038062001bb88339810160408190526200003591620002c1565b82828180604051806040016040528060018152602001603160f81b815250848481600390805190602001906200006d9291906200014e565b508051620000839060049060208401906200014e565b5050825160208085019190912083518483012060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81880181905281830187905260608201869052608082019490945230818401528151808203909301835260c0019052805194019390932091935091906080523060c05261012052505050506001600160a01b03969096166000908152600860205260409020805460ff19166001179055505060ff1660095550620003a1915050565b8280546200015c9062000365565b90600052602060002090601f016020900481019282620001805760008555620001cb565b82601f106200019b57805160ff1916838001178555620001cb565b82800160010185558215620001cb579182015b82811115620001cb578251825591602001919060010190620001ae565b50620001d9929150620001dd565b5090565b5b80821115620001d95760008155600101620001de565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200021c57600080fd5b81516001600160401b0380821115620002395762000239620001f4565b604051601f8301601f19908116603f01168101908282118183101715620002645762000264620001f4565b816040528381526020925086838588010111156200028157600080fd5b600091505b83821015620002a5578582018301518183018401529082019062000286565b83821115620002b75760008385830101525b9695505050505050565b60008060008060808587031215620002d857600080fd5b84516001600160a01b0381168114620002f057600080fd5b60208601519094506001600160401b03808211156200030e57600080fd5b6200031c888389016200020a565b945060408701519150808211156200033357600080fd5b5062000342878288016200020a565b925050606085015160ff811681146200035a57600080fd5b939692955090935050565b600181811c908216806200037a57607f821691505b6020821081036200039b57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e05161010051610120516117c7620003f160003960006109290152600061097801526000610953015260006108ac015260006108d60152600061090001526117c76000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806340c10f19116100c357806395d89b411161007c57806395d89b41146102c45780639dc29fac146102cc578063a457c2d7146102df578063a9059cbb146102f2578063d505accf14610305578063dd62ed3e1461031857600080fd5b806340c10f1914610236578063704802751461024957806370a082311461025c5780637a6d69b4146102855780637ecebe00146102a85780638ea2da7d146102bb57600080fd5b80631e7be210116101155780631e7be210146101cd57806323b872dd146101e057806325db769e146101f3578063313ce567146102065780633644e5151461021b578063395093511461022357600080fd5b806306fdde0314610152578063095ea7b31461017057806316c02129146101935780631785f53c146101a857806318160ddd146101bb575b600080fd5b61015a61032b565b604051610167919061140b565b60405180910390f35b61018361017e36600461147c565b6103bd565b6040519015158152602001610167565b6101a66101a13660046114a6565b610444565b005b6101a66101b63660046114a6565b610477565b6002545b604051908152602001610167565b6101a66101db3660046114a6565b6104a0565b6101836101ee3660046114c8565b6104cd565b6101bf610201366004611504565b610589565b60095460405160ff9091168152602001610167565b6101bf6105af565b61018361023136600461147c565b6105be565b6101a661024436600461147c565b6105ea565b6101a66102573660046114a6565b610600565b6101bf61026a3660046114a6565b6001600160a01b031660009081526020819052604090205490565b6101836102933660046114a6565b60076020526000908152604090205460ff1681565b6101bf6102b63660046114a6565b61062c565b6101bf60095481565b61015a61064a565b6101a66102da36600461147c565b610659565b6101836102ed36600461147c565b61066b565b61018361030036600461147c565b6106f1565b6101a661031336600461151d565b610766565b6101bf610326366004611590565b6107f6565b60606003805461033a906115c3565b80601f0160208091040260200160405190810160405280929190818152602001828054610366906115c3565b80156103b35780601f10610388576101008083540402835291602001916103b3565b820191906000526020600020905b81548152906001019060200180831161039657829003601f168201915b5050505050905090565b6001600160a01b038216600090815260076020526040812054839060ff16156104015760405162461bcd60e51b81526004016103f8906115f7565b60405180910390fd5b3360008181526007602052604090205460ff16156104315760405162461bcd60e51b81526004016103f8906115f7565b61043b8585610821565b95945050505050565b61044c61082f565b610474816001600160a01b03166000908152600760205260409020805460ff19166001179055565b50565b61047f61082f565b6001600160a01b03166000908152600860205260409020805460ff19169055565b6104a861082f565b610474816001600160a01b03166000908152600760205260409020805460ff19169055565b6001600160a01b038316600090815260076020526040812054849060ff16156105085760405162461bcd60e51b81526004016103f8906115f7565b6001600160a01b038416600090815260076020526040902054849060ff16156105435760405162461bcd60e51b81526004016103f8906115f7565b3360008181526007602052604090205460ff16156105735760405162461bcd60e51b81526004016103f8906115f7565b61057e878787610886565b979650505050505050565b600061059460095490565b61059f90600a61171e565b6105a9908361172d565b92915050565b60006105b961089f565b905090565b6000336105e08185856105d183836107f6565b6105db919061174c565b6109c6565b5060019392505050565b6105f261082f565b6105fc8282610aeb565b5050565b61060861082f565b6001600160a01b03166000908152600860205260409020805460ff19166001179055565b6001600160a01b0381166000908152600560205260408120546105a9565b60606004805461033a906115c3565b61066161082f565b6105fc8282610bca565b6000338161067982866107f6565b9050838110156106d95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103f8565b6106e682868684036109c6565b506001949350505050565b6001600160a01b038216600090815260076020526040812054839060ff161561072c5760405162461bcd60e51b81526004016103f8906115f7565b3360008181526007602052604090205460ff161561075c5760405162461bcd60e51b81526004016103f8906115f7565b61043b8585610d10565b6001600160a01b038716600090815260076020526040902054879060ff16156107a15760405162461bcd60e51b81526004016103f8906115f7565b6001600160a01b038716600090815260076020526040902054879060ff16156107dc5760405162461bcd60e51b81526004016103f8906115f7565b6107eb89898989898989610d1e565b505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6000336105e08185856109c6565b3360009081526008602052604090205460ff166108845760405162461bcd60e51b815260206004820152601360248201527254657374546f6b656e2f61646d696e4f6e6c7960681b60448201526064016103f8565b565b600033610894858285610e82565b6106e6858585610efc565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156108f857507f000000000000000000000000000000000000000000000000000000000000000046145b1561092257507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6001600160a01b038316610a285760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103f8565b6001600160a01b038216610a895760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103f8565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038216610b415760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103f8565b8060026000828254610b53919061174c565b90915550506001600160a01b03821660009081526020819052604081208054839290610b8090849061174c565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610c2a5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103f8565b6001600160a01b03821660009081526020819052604090205481811015610c9e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103f8565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610ccd908490611764565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610ade565b6000336105e0818585610efc565b83421115610d6e5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016103f8565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610d9d8c6110ca565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610df8826110f2565b90506000610e0882878787611140565b9050896001600160a01b0316816001600160a01b031614610e6b5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016103f8565b610e768a8a8a6109c6565b50505050505050505050565b6000610e8e84846107f6565b90506000198114610ef65781811015610ee95760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103f8565b610ef684848484036109c6565b50505050565b6001600160a01b038316610f605760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103f8565b6001600160a01b038216610fc25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103f8565b6001600160a01b0383166000908152602081905260409020548181101561103a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103f8565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061107190849061174c565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110bd91815260200190565b60405180910390a3610ef6565b6001600160a01b03811660009081526005602052604090208054600181018255905b50919050565b60006105a96110ff61089f565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061115187878787611168565b9150915061115e81611255565b5095945050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561119f575060009050600361124c565b8460ff16601b141580156111b757508460ff16601c14155b156111c8575060009050600461124c565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561121c573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166112455760006001925092505061124c565b9150600090505b94509492505050565b60008160048111156112695761126961177b565b036112715750565b60018160048111156112855761128561177b565b036112d25760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016103f8565b60028160048111156112e6576112e661177b565b036113335760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016103f8565b60038160048111156113475761134761177b565b0361139f5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016103f8565b60048160048111156113b3576113b361177b565b036104745760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016103f8565b600060208083528351808285015260005b818110156114385785810183015185820160400152820161141c565b8181111561144a576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461147757600080fd5b919050565b6000806040838503121561148f57600080fd5b61149883611460565b946020939093013593505050565b6000602082840312156114b857600080fd5b6114c182611460565b9392505050565b6000806000606084860312156114dd57600080fd5b6114e684611460565b92506114f460208501611460565b9150604084013590509250925092565b60006020828403121561151657600080fd5b5035919050565b600080600080600080600060e0888a03121561153857600080fd5b61154188611460565b965061154f60208901611460565b95506040880135945060608801359350608088013560ff8116811461157357600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156115a357600080fd5b6115ac83611460565b91506115ba60208401611460565b90509250929050565b600181811c908216806115d757607f821691505b6020821081036110ec57634e487b7160e01b600052602260045260246000fd5b602080825260139082015272115490cc8c10930bd09b1858dadb1a5cdd1959606a1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561167557816000190482111561165b5761165b611624565b8085161561166857918102915b93841c939080029061163f565b509250929050565b60008261168c575060016105a9565b81611699575060006105a9565b81600181146116af57600281146116b9576116d5565b60019150506105a9565b60ff8411156116ca576116ca611624565b50506001821b6105a9565b5060208310610133831016604e8410600b84101617156116f8575081810a6105a9565b611702838361163a565b806000190482111561171657611716611624565b029392505050565b60006114c160ff84168361167d565b600081600019048311821515161561174757611747611624565b500290565b6000821982111561175f5761175f611624565b500190565b60008282101561177657611776611624565b500390565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220bd809d42139540058cd45d799cf966bb21014a2ed0f238b1bc1b09a3c80841fd64736f6c634300080e00334661696c6564206f666665722073686f756c64206465636c61726520302074616b65724761766541304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f500000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35834d616e67726f766520686173206e6f742073656e642074686520636f727265637420616d6f756e7420746f2074616b65724661696c6564206f666665722073686f756c64206465636c61726520302074616b6572476f74885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d4661696c696e67206f666665722073686f756c642068617665206265656e2072656d6f7665642066726f6d204d6776a2646970667358221220c13775b0ce1ef088e20ed3b6f1128b48f5bec29e854a034a1c4fa0338f2213b764736f6c634300080e0033",
    "sourceMap": "1368:26:0:-:0;;;-1:-1:-1;;163:28:1;;;;;-1:-1:-1;2025:20:95;;;;3560:34;;;;105:10983:91;1847:237:94;;;1912:64;;;;-1:-1:-1;;;1912:64:94;;;;1368:26:0;1912:64:94;;;;;;;;-1:-1:-1;;;1912:64:94;;;;1972:2;-1:-1:-1;1912:64:94;;;-1:-1:-1;1847:237:94;;;1991:65;;;;-1:-1:-1;;;1991:65:94;;1912:64;1991:65;;;;-1:-1:-1;1991:65:94;;;;;-1:-1:-1;;;1991:65:94;;-1:-1:-1;1991:65:94;;;;-1:-1:-1;1991:65:94;-1:-1:-1;1847:237:94;;;;-1:-1:-1;1847:237:94;;;;1813:271;;;-1:-1:-1;;1813:271:94;;;105:10983:91;;1813:271:94;;1368:26:0;;1813:271:94;;;;;;1912:64;1813:271;:::i;:::-;-1:-1:-1;1813:271:94;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1813:271:94;;;;;;;;;;;;-1:-1:-1;;1813:271:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1813:271:94;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1813:271:94;;;;;;;;;;;;-1:-1:-1;;1813:271:94;;;;;;;;;;;;;;;;;;;;;;105:10983:91;;;;;;;;;-1:-1:-1;2139:32:94;;;-1:-1:-1;;;2139:32:94;;2148:9;2139:32;;;226:51:113;293:18;;;286:30;;;;352:1;332:18;;;325:29;-1:-1:-1;;;370:18:113;;;363:39;237:61:1;;2139:8:94;;419:19:113;;2139:32:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2177:32:94;;;-1:-1:-1;;;2177:32:94;;2188:4;2177:32;;;669:51:113;736:18;;;729:30;;;795:2;775:18;;;768:30;-1:-1:-1;;;814:18:113;;;807:41;2177:32:94;;237:61:1;;-1:-1:-1;2177:8:94;;-1:-1:-1;865:19:113;;;;;-1:-1:-1;;2177:32:94;;;;;;;-1:-1:-1;237:61:1;2177:32:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;105:10983:91;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;105:10983:91;;;-1:-1:-1;105:10983:91;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;895:380:113;974:1;970:12;;;;1017;;;1038:61;;1092:4;1084:6;1080:17;1070:27;;1038:61;1145:2;1137:6;1134:14;1114:18;1111:38;1108:161;;1191:10;1186:3;1182:20;1179:1;1172:31;1226:4;1223:1;1216:15;1254:4;1251:1;1244:15;1108:161;;895:380;;;:::o;:::-;105:10983:91;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620001395760003560e01c80636cc12a2411620000bb578063bfdc3588116200007a578063bfdc3588146200027d578063d56a22f01462000294578063ea14b5c314620002ab578063f8ccbf4714620002c2578063fa7626d414620002d657600080fd5b80636cc12a2414620002045780638c004832146200022a578063b84e3eda1462000234578063ba414fa6146200024b578063bbab0fac146200026657600080fd5b806325f7b1de116200010857806325f7b1de146200019c5780633336a63f14620001b55780633a76846314620001cc5780633d8713cc14620001e3578063521606d214620001ed57600080fd5b80630645f2be146200013e5780630a9254e414620001725780630b3d8c42146200017e5780631e91f8cb1462000195575b600080fd5b620001556200014f36600462006ce0565b620002e4565b6040516001600160a01b0390911681526020015b60405180910390f35b6200017c6200040e565b005b620001556200018f36600462006d16565b62000c0d565b3362000155565b620001a662000c30565b60405162000169919062006d68565b62000155620001c636600462006e4c565b620017af565b6200015560008051602062018a7583398151915281565b6200017c620018ff565b6200017c620001fe36600462006f22565b62001bea565b6200021b6200021536600462006fbb565b62001d2a565b60405190815260200162000169565b6200015562001d59565b6200017c6200024536600462006f22565b62001d6c565b6200025562001e9c565b604051901515815260200162000169565b620001556200027736600462006ff3565b62001fcd565b620001556200028e36600462006e4c565b62002050565b6200021b620002a536600462007031565b62002079565b62000155620002bc36600462006ff3565b62002114565b600054620002559062010000900460ff1681565b600054620002559060ff1681565b600081156200033657306028621e8480604051620003029062006bfb565b620003109392919062007060565b604051809103906000f0801580156200032d573d6000803e3d6000fd5b5090506200037a565b306028621e84806040516200034b9062006c09565b620003599392919062007060565b604051809103906000f08015801562000376573d6000803e3d6000fd5b5090505b60008051602062018a7583398151915263c657c71882604080516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260086044820152674d616e67726f766560c01b6064820152608401600060405180830381600087803b158015620003f057600080fd5b505af115801562000405573d6000803e3d6000fd5b50505050919050565b6200041862002124565b600d54600e54600f5460405163dc7e98df60e01b81526001600160a01b039384169363dc7e98df9362000459939082169291169061012c9060040162007081565b600060405180830381600087803b1580156200047457600080fd5b505af115801562000489573d6000803e3d6000fd5b5050600e54620004b192506001600160a01b03169050600f546001600160a01b031662001fcd565b601980546001600160a01b0319166001600160a01b0392909216918217905560405163a5e3875160e01b815260048082015263a5e3875190602401600060405180830381600087803b1580156200050757600080fd5b505af11580156200051c573d6000803e3d6000fd5b506001925050505b601960009054906101000a90046001600160a01b03166001600160a01b0316631f7b6d326040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000578573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200059e9190620070a5565b8110156200072d57601954604051632b430a9960e11b81526004810183905260008051602062018a758339815191529163c657c718916001600160a01b0390911690635686153290602401602060405180830381865afa15801562000607573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200062d9190620070bf565b60405163348051d760e11b81526004810185905260008051602062018a7583398151915290636900a3ae90602401600060405180830381865afa15801562000679573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620006a391908101906200710e565b604051602001620006b5919062007184565b6040516020818303038152906040526040518363ffffffff1660e01b8152600401620006e3929190620071e2565b600060405180830381600087803b158015620006fe57600080fd5b505af115801562000713573d6000803e3d6000fd5b50505050808062000724906200721e565b91505062000524565b50601954604051632b430a9960e11b81526000600482015260008051602062018a758339815191529163c657c718916001600160a01b0390911690635686153290602401602060405180830381865afa1580156200078f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007b59190620070bf565b604080516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260066044820152653330b4b632b960d11b6064820152608401600060405180830381600087803b1580156200081357600080fd5b505af115801562000828573d6000803e3d6000fd5b5050600e546200086e92506001600160a01b03169050600f546001600160a01b0316604051806040016040528060058152602001643a30b5b2b960d91b815250620017af565b601880546001600160a01b0319166001600160a01b03928316179055601954620008a391166804563918244f40000062002390565b601960009054906101000a90046001600160a01b03166001600160a01b031663e9c4a3ac6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620008f457600080fd5b505af115801562000909573d6000803e3d6000fd5b5050505060005b601960009054906101000a90046001600160a01b03166001600160a01b0316631f7b6d326040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000964573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200098a9190620070a5565b81101562000aa157601954604051632b430a9960e11b8152600481018390526000916001600160a01b031690635686153290602401602060405180830381865afa158015620009dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a039190620070bf565b6040516369c22ff560e11b8152678ac7230489e8000060048201529091506001600160a01b0382169063d3845fea90602401600060405180830381600087803b15801562000a5057600080fd5b505af115801562000a65573d6000803e3d6000fd5b5050600e5462000a8b92506001600160a01b0316905082674563918244f40000620023fe565b508062000a98816200721e565b91505062000910565b50600f546018546040516340c10f1960e01b81526001600160a01b03928316926340c10f199262000ae292911690674563918244f40000906004016200723a565b600060405180830381600087803b15801562000afd57600080fd5b505af115801562000b12573d6000803e3d6000fd5b5050601854600f5460405163a3cfe14d60e01b81526001600160a01b03928316945063a3cfe14d935062000b579290911690674563918244f40000906004016200723a565b600060405180830381600087803b15801562000b7257600080fd5b505af115801562000b87573d6000803e3d6000fd5b5050601854600e5460405163a3cfe14d60e01b81526001600160a01b03928316945063a3cfe14d935062000bcd92909116906802b5e3af16b1880000906004016200723a565b600060405180830381600087803b15801562000be857600080fd5b505af115801562000bfd573d6000803e3d6000fd5b5050505062000c0b62002412565b565b600062000c1a82620002e4565b905062000c2984848362002cfa565b9392505050565b60606000601960009054906101000a90046001600160a01b03166001600160a01b0316631f7b6d326040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000c88573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000cae9190620070a5565b6001600160401b0381111562000cc85762000cc862006dae565b60405190808252806020026020018201604052801562000cf2578160200160208202803683370190505b50601954604051632b430a9960e11b8152600160048201529192506001600160a01b031690635686153290602401602060405180830381865afa15801562000d3e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d649190620070bf565b60405163cda30c3b60e01b8152670de0b6b3a764000060048201526706f05b59d3b20000602482015261c3506044820152600060648201526001600160a01b03919091169063cda30c3b906084016020604051808303816000875af115801562000dd2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000df89190620070a5565b8160018151811062000e0e5762000e0e62007253565b6020908102919091010152601954604051632b430a9960e11b8152600260048201526001600160a01b0390911690635686153290602401602060405180830381865afa15801562000e63573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e899190620070bf565b60405163cda30c3b60e01b8152670de0b6b3a76400006004820152670b1a2bc2ec5000006024820152620138806044820152600160648201526001600160a01b03919091169063cda30c3b906084016020604051808303816000875af115801562000ef8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000f1e9190620070a5565b8160028151811062000f345762000f3462007253565b6020908102919091010152601954604051632b430a9960e11b8152600360048201526001600160a01b0390911690635686153290602401602060405180830381865afa15801562000f89573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000faf9190620070bf565b60405163cda30c3b60e01b81526706f05b59d3b200006004820152670de0b6b3a7640000602482015262015f906044820152604860648201526001600160a01b03919091169063cda30c3b906084016020604051808303816000875af11580156200101e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010449190620070a5565b816003815181106200105a576200105a62007253565b6020908102919091010152600d54600e54600f546040516365fbae4d60e11b81526000936001600160a01b039081169363cbf75c9a93620010a49391831692169060040162007269565b6040805180830381865afa158015620010c1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010e7919062007283565b50601954604051632b430a9960e11b8152600060048201529192506001600160a01b031690635686153290602401602060405180830381865afa15801562001133573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620011599190620070bf565b6001600160a01b031663cda30c3b6801158e460913d00000678ac7230489e80000602885901c62ffffff166040516001600160e01b031960e086901b168152600481019390935260248301919091526044820152600060648201526084016020604051808303816000875af1158015620011d7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620011fd9190620070a5565b8260008151811062001213576200121362007253565b60200260200101818152505060005b601960009054906101000a90046001600160a01b03166001600160a01b0316631f7b6d326040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001276573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200129c9190620070a5565b8110156200155b57600d54600e546000916200135d916001600160a01b0391821691635722647b9116600f546001600160a01b0316888781518110620012e657620012e662007253565b60200260200101516040518463ffffffff1660e01b81526004016200130e9392919062007081565b602060405180830381865afa1580156200132c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620013529190620070a5565b60481c62ffffff1690565b600e5490915060009062001387906001600160a01b0316600f546001600160a01b03168462002fdf565b600d54601954604051632b430a9960e11b81526004810187905292935062001543926001600160a01b03928316926370a08231921690635686153290602401602060405180830381865afa158015620013e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200140a9190620070bf565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156200144f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620014759190620070a5565b82601a60070186815481106200148f576200148f62007253565b9060005260206000200154620014a69190620072a8565b60405163348051d760e11b81526004810187905260008051602062018a7583398151915290636900a3ae90602401600060405180830381865afa158015620014f2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200151c91908101906200710e565b6040516020016200152e9190620072c2565b604051602081830303815290604052620030a4565b5050808062001552906200721e565b91505062001222565b50600d54600e54600f54604051636f7aeed560e11b81526000936001600160a01b039081169363def5ddaa936200159b9391831692169060040162007269565b602060405180830381865afa158015620015b9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620015df9190620070a5565b905060035b8115620017a657600d54600e5460009182916001600160a01b0391821691638c66715c9116600f546001600160a01b0316876040518463ffffffff1660e01b8152600401620016369392919062007081565b61010060405180830381865afa15801562001655573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200167b919062007309565b8051601954604051632b430a9960e11b815260048101889052939550919350620017959290916001600160a01b031690635686153290602401602060405180830381865afa158015620016d2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620016f89190620070bf565b60405163348051d760e11b81526004810188905260008051602062018a7583398151915290636900a3ae90602401600060405180830381865afa15801562001744573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200176e91908101906200710e565b604051602001620017809190620073b4565b604051602081830303815290604052620030e0565b5060200151915060001901620015e4565b50919392505050565b600080600d60009054906101000a90046001600160a01b03168585604051620017d89062006c17565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f08015801562001815573d6000803e3d6000fd5b5060405163c88a5e6d60e01b815290915060008051602062018a758339815191529063c88a5e6d906200185890849068056bc75e2d63100000906004016200723a565b600060405180830381600087803b1580156200187357600080fd5b505af115801562001888573d6000803e3d6000fd5b50506040516318caf8e360e31b815260008051602062018a75833981519152925063c657c7189150620018c29084908790600401620071e2565b600060405180830381600087803b158015620018dd57600080fd5b505af1158015620018f2573d6000803e3d6000fd5b5092979650505050505050565b6200190962000c30565b80516200191f9160229160209091019062006c25565b506200192a62002412565b620019346200312e565b600d546200194b906001600160a01b031662003296565b6040517fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b990600090a1600d546200198b906001600160a01b031662003296565b601854600f54600e5460408051670409d6f54da38000815267053444835ec580006020820152600081830152661ff973cafa8000606082015290516001600160a01b03948516949384169392909216917ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec479181900360800190a462001a0f6200331f565b5050600e5462001a3891506001600160a01b03165b600f546001600160a01b0316600462003b69565b601954604051632b430a9960e11b8152600260048201526001600160a01b0390911690635686153290602401602060405180830381865afa15801562001a82573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001aa89190620070bf565b604051630991301760e21b81526708ac7230489e800060048201526706f05b59d3b20000602482015262013880604482015260006064820152600260848201526001600160a01b039190911690632644c05c9060a401600060405180830381600087803b15801562001b1957600080fd5b505af115801562001b2e573d6000803e3d6000fd5b5050600e5462001b4a92506001600160a01b0316905062001a24565b62001b5462002412565b62001b5e6200312e565b62001b6862004011565b600e5462001b7f906001600160a01b031662001a24565b62001b8962002412565b62001b936200312e565b62001bbf602260008154811062001bae5762001bae62007253565b906000526020600020015462004b7d565b600e5462001bd6906001600160a01b031662001a24565b62001be062002412565b62000c0b6200312e565b604080516020810190915260008082525b825181101562001d1a578251829060008051602062018a7583398151915290636900a3ae9086908590811062001c355762001c3562007253565b60200260200101516040518263ffffffff1660e01b815260040162001c5c91815260200190565b600060405180830381865afa15801562001c7a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001ca491908101906200710e565b60405160200162001cb792919062007405565b60405160208183030381529060405291506001835162001cd89190620072a8565b81101562001d05578160405160200162001cf3919062007438565b60405160208183030381529060405291505b8062001d11816200721e565b91505062001bfb565b5062001d268162004f9c565b5050565b600062001d3982600a6200755d565b62001d45858562002079565b62001d5191906200756b565b949350505050565b600062001d676000620002e4565b905090565b604080516020810190915260008082525b825181101562001d1a578251829060008051602062018a7583398151915290636900a3ae9086908590811062001db75762001db762007253565b60200260200101516040518263ffffffff1660e01b815260040162001dde91815260200190565b600060405180830381865afa15801562001dfc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001e2691908101906200710e565b60405160200162001e3992919062007405565b60405160208183030381529060405291506001835162001e5a9190620072a8565b81101562001e87578160405160200162001e75919062007438565b60405160208183030381529060405291505b8062001e93816200721e565b91505062001d7d565b60008054610100900460ff161562001ebd5750600054610100900460ff1690565b600060008051602062018a758339815191523b1562001fc85760405160009060008051602062018a75833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49062001f2a9083906519985a5b195960d21b906020016200723a565b60408051601f198184030181529082905262001f4a92916020016200758e565b60408051601f198184030181529082905262001f6691620075c1565b6000604051808303816000865af19150503d806000811462001fa5576040519150601f19603f3d011682016040523d82523d6000602084013e62001faa565b606091505b509150508080602001905181019062001fc49190620075df565b9150505b919050565b600d5460009062001fe7906001600160a01b031662004fe3565b50600d546040516001600160a01b039091169084908490620020099062006c75565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f08015801562002046573d6000803e3d6000fd5b5090505b92915050565b600080600d60009054906101000a90046001600160a01b03168585604051620017d89062006c83565b600062002085620050bc565b6000836001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015620020c6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620020ec9190620075ff565b60ff169050620020fb620050c8565b6200210881600a6200755d565b62001d51908462007624565b600062000c298383600062000c0d565b601354604051309160119160129160ff1690620021419062006c91565b620021509493929190620076ed565b604051809103906000f0801580156200216d573d6000803e3d6000fd5b50600e80546001600160a01b0319166001600160a01b03929092169190911790553060165460405160149160159160ff90911690620021ac9062006c91565b620021bb9493929190620076ed565b604051809103906000f080158015620021d8573d6000803e3d6000fd5b50600f80546001600160a01b0319166001600160a01b03928316908117909155600e54601054620022129391909116919060ff1662000c0d565b600d80546001600160a01b0319166001600160a01b03929092169182179055604080516316c1a85160e31b8152905163b60d428891678ac7230489e8000091600480830192600092919082900301818588803b1580156200227257600080fd5b505af115801562002287573d6000803e3d6000fd5b5050600e54600d5460405163095ea7b360e01b81526001600160a01b03928316955063095ea7b39450620022c69350911690600019906004016200723a565b6020604051808303816000875af1158015620022e6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200230c9190620075df565b50600f54600d5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926200234792911690600019906004016200723a565b6020604051808303816000875af115801562002367573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200238d9190620075df565b50565b60405163c88a5e6d60e01b815260008051602062018a758339815191529063c88a5e6d90620023c690859085906004016200723a565b600060405180830381600087803b158015620023e157600080fd5b505af1158015620023f6573d6000803e3d6000fd5b505050505050565b6200240d83838360006200518f565b505050565b60195460408051630fbdb69960e11b815290516000926001600160a01b031691631f7b6d329160048083019260209291908290030181865afa1580156200245d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620024839190620070a5565b6001600160401b038111156200249d576200249d62006dae565b604051908082528060200260200182016040528015620024c7578160200160208202803683370190505b5090506000601960009054906101000a90046001600160a01b03166001600160a01b0316631f7b6d326040518163ffffffff1660e01b8152600401602060405180830381865afa15801562002520573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620025469190620070a5565b6001600160401b0381111562002560576200256062006dae565b6040519080825280602002602001820160405280156200258a578160200160208202803683370190505b5090506000601960009054906101000a90046001600160a01b03166001600160a01b0316631f7b6d326040518163ffffffff1660e01b8152600401602060405180830381865afa158015620025e3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620026099190620070a5565b6001600160401b0381111562002623576200262362006dae565b6040519080825280602002602001820160405280156200264d578160200160208202803683370190505b50905060005b601960009054906101000a90046001600160a01b03166001600160a01b0316631f7b6d326040518163ffffffff1660e01b8152600401602060405180830381865afa158015620026a7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620026cd9190620070a5565b811015620029fc57600e54601954604051632b430a9960e11b8152600481018490526001600160a01b03928316926370a08231921690635686153290602401602060405180830381865afa1580156200272a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620027509190620070bf565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562002795573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620027bb9190620070a5565b848281518110620027d057620027d062007253565b6020908102919091010152600f54601954604051632b430a9960e11b8152600481018490526001600160a01b03928316926370a08231921690635686153290602401602060405180830381865afa15801562002830573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620028569190620070bf565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156200289b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620028c19190620070a5565b838281518110620028d657620028d662007253565b6020908102919091010152600d54601954604051632b430a9960e11b8152600481018490526001600160a01b03928316926370a08231921690635686153290602401602060405180830381865afa15801562002936573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200295c9190620070bf565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015620029a1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620029c79190620070a5565b828281518110620029dc57620029dc62007253565b602090810291909101015280620029f3816200721e565b91505062002653565b506040805161010081018252600d546001600160a01b0390811680318352600e548451635aa6e67560e01b81529451939460208087019592909416936370a082319392635aa6e6759260048082019392918290030181865afa15801562002a67573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002a8d9190620070bf565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562002ad2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002af89190620070a5565b8152600e546018546040516370a0823160e01b81526001600160a01b0391821660048201526020909301929116906370a0823190602401602060405180830381865afa15801562002b4d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002b739190620070a5565b8152600f546018546040516370a0823160e01b81526001600160a01b0391821660048201526020909301929116906370a0823190602401602060405180830381865afa15801562002bc8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002bee9190620070a5565b8152600d546018546040516370a0823160e01b81526001600160a01b0391821660048201526020909301929116906370a0823190602401602060405180830381865afa15801562002c43573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002c699190620070a5565b81526020808201869052604080830186905260609283018590528351601a90815584830151601b5590840151601c5591830151601d556080830151601e5560a0830151805162002cbe92601f92019062006c25565b5060c0820151805162002cdc91600684019160209091019062006c25565b5060e08201518051620023f691600784019160209091019062006c25565b62002d058362004fe3565b5062002d118262004fe3565b50601754604051630b73a18f60e01b81526001600160a01b0385811660048301528481166024830152604482019290925260006064820152614e20608482015290821690630b73a18f9060a401600060405180830381600087803b15801562002d7957600080fd5b505af115801562002d8e573d6000803e3d6000fd5b5050601754604051630b73a18f60e01b81526001600160a01b0386811660048301528781166024830152604482019290925260006064820152614e2060848201529084169250630b73a18f915060a401600060405180830381600087803b15801562002df957600080fd5b505af115801562002e0e573d6000803e3d6000fd5b5050505060008051602062018b0c83398151915260001c60601b60601c6001600160a01b031663c657c71884856001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801562002e79573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262002ea391908101906200710e565b6040518363ffffffff1660e01b815260040162002ec2929190620071e2565b600060405180830381600087803b15801562002edd57600080fd5b505af115801562002ef2573d6000803e3d6000fd5b5050505060008051602062018b0c83398151915260001c60601b60601c6001600160a01b031663c657c71883846001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801562002f5d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262002f8791908101906200710e565b6040518363ffffffff1660e01b815260040162002fa6929190620071e2565b600060405180830381600087803b15801562002fc157600080fd5b505af115801562002fd6573d6000803e3d6000fd5b50505050505050565b600d546040516365fbae4d60e11b8152600091829182916001600160a01b03169063cbf75c9a9062003018908990899060040162007269565b6040805180830381865afa15801562003035573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200305b919062007283565b909250905061ffff604083901c166200307e62ffffff606084901c16866200773c565b6200308a919062007624565b6200309a90633b9aca0062007624565b9695505050505050565b8183146200240d5760008051602062018a9583398151915281604051620030cc919062007757565b60405180910390a16200240d8383620053c6565b816001600160a01b0316836001600160a01b0316146200240d5760008051602062018a95833981519152816040516200311a919062007757565b60405180910390a16200240d8383620054ac565b600d54600e54600f54604051636f7aeed560e11b81526000936001600160a01b039081169363def5ddaa936200316d9391831692169060040162007269565b602060405180830381865afa1580156200318b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620031b19190620070a5565b90505b80156200238d57600d54600e5460009182916001600160a01b0391821691638c66715c9116600f546001600160a01b0316866040518463ffffffff1660e01b8152600401620032069392919062007081565b61010060405180830381865afa15801562003225573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200324b919062007309565b60408281015160009687526023602090815282882088805281528288209190915560608401516001885282882055918201516005875295209490945592909201519150620031b49050565b6040516381bad6f360e01b8152600160048201819052602482018190526044820181905260648201526001600160a01b038216608482015260008051602062018a75833981519152906381bad6f39060a401600060405180830381600087803b1580156200330357600080fd5b505af115801562003318573d6000803e3d6000fd5b5050505050565b60008060006200334960405180606001604052806000815260200160008152602001600081525090565b670429d069189e0000815260026020820152600e5462003380906001600160a01b0316600f546001600160a01b0316835162005595565b6019546020830151604051632b430a9960e11b81529294506000926001600160a01b0390921691635686153291620033be9160040190815260200190565b602060405180830381865afa158015620033dc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620034029190620070bf565b6018546020840151845160405163268e95b360e11b8152600481019290925260248201529192506000916001600160a01b0390911690634d1d2b669060440160a0604051808303816000875af115801562003461573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003487919062007788565b505060408051808201909152601981527f736e6970652073686f756c64206265206120737563636573730000000000000060208201529198509650909150620034d290829062005643565b50600e54600d5460408051635aa6e67560e01b815290516200360c936001600160a01b03908116936370a0823193911691635aa6e675916004808201926020929091908290030181865afa1580156200352f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620035559190620070bf565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156200359a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620035c09190620070a5565b601b54620035d09086906200773c565b6040518060400160405280601c81526020017f696e636f7272656374204d616e67726f766520412062616c616e636500000000815250620030a4565b600e546018546040516370a0823160e01b81526001600160a01b039182166004820152620036e09291909116906370a0823190602401602060405180830381865afa15801562003660573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620036869190620070a5565b8351601c54869162003698916200773c565b620036a49190620072a8565b6040518060400160405280601981526020017f696e636f72726563742074616b657220412062616c616e636500000000000000815250620030a4565b6200372885848460000151620036f79190620072a8565b60405180604001604052806012815260200171125b98dbdc9c9958dd081d185ad95c91dbdd60721b815250620030a4565b6020828101805160009081526023808452604080832060018452855280832054935183529084528082208280529093529182205484516200376a919062007624565b6200377691906200756b565b600f546018546040516370a0823160e01b81526001600160a01b0391821660048201529293506200383e929116906370a08231906024015b602060405180830381865afa158015620037cc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620037f29190620070a5565b601d5462003802908490620072a8565b6040518060400160405280601981526020017f696e636f72726563742074616b657220422062616c616e636500000000000000815250620030a4565b62003876858260405180604001604052806013815260200172496e636f72726563742074616b65724761766560681b815250620030a4565b50600e546040516370a0823160e01b81526001600160a01b0383811660048301526200395d9216906370a0823190602401602060405180830381865afa158015620038c5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620038eb9190620070a5565b83516020850151601f805490919081106200390a576200390a62007253565b9060005260206000200154620039219190620072a8565b6040518060400160405280601981526020017f696e636f7272656374206d616b657220412062616c616e636500000000000000815250620030a4565b600f546040516370a0823160e01b81526001600160a01b03838116600483015262003a8c9216906370a0823190602401602060405180830381865afa158015620039ab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620039d19190620070a5565b6020848101805160009081526023808452604080832060018452855280832054935183529084528082208280529093529190912054855162003a14919062007624565b62003a2091906200756b565b6020858101518154811062003a395762003a3962007253565b906000526020600020015462003a5091906200773c565b6040518060400160405280601981526020017f696e636f7272656374206d616b657220422062616c616e636500000000000000815250620030a4565b600d54600e54600f5460208501516040516323199c5760e21b81526000946001600160a01b0390811694638c66715c9462003ad1949183169392169160040162007081565b61010060405180830381865afa15801562003af0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003b16919062007309565b50905062003b6181606001516000146040518060400160405280602081526020017f4f666665722073686f756c64206e6f742068617665206120726573696475616c81525062005643565b505050909192565b600d54604051636f7aeed560e11b81526000916001600160a01b03169063def5ddaa9062003b9e908790879060040162007269565b602060405180830381865afa15801562003bbc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003be29190620070a5565b90506000826001600160401b0381111562003c015762003c0162006dae565b60405190808252806020026020018201604052801562003c2b578160200160208202803683370190505b5090506000836001600160401b0381111562003c4b5762003c4b62006dae565b60405190808252806020026020018201604052801562003c75578160200160208202803683370190505b5090506000846001600160401b0381111562003c955762003c9562006dae565b60405190808252806020026020018201604052801562003cbf578160200160208202803683370190505b50905060005b841580159062003cd457508581105b1562003e77578484828151811062003cf05762003cf062007253565b6020908102919091010152600d546040516368c13d6b60e01b81526001600160a01b03909116906368c13d6b9062003d31908b908b908a9060040162007081565b602060405180830381865afa15801562003d4f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003d759190620070a5565b83828151811062003d8a5762003d8a62007253565b6020908102919091010152600d54604051635722647b60e01b81526001600160a01b0390911690635722647b9062003dcb908b908b908a9060040162007081565b602060405180830381865afa15801562003de9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003e0f9190620070a5565b82828151811062003e245762003e2462007253565b60200260200101818152505062003e6083828151811062003e495762003e4962007253565b602002602001015163ffffffff60c09190911c1690565b94508062003e6e816200721e565b91505062003cc5565b600090507f9fb850b909525c7c6dd54244cc1493f0e9aa8d82c5d8695da28051d9f3fdea00888860405162003eae92919062007269565b60405180910390a15b8581101562004007577fef285cd4a863f25f5335214e494f11128817d9f1e014e1909a8445c7feb84d8984828151811062003ef65762003ef662007253565b602002602001015162003f3685848151811062003f175762003f1762007253565b60200260200101516bffffffffffffffffffffffff60609190911c1690565b62003f6886858151811062003f4f5762003f4f62007253565b60200260200101516bffffffffffffffffffffffff1690565b62003f8f86868151811062003f815762003f8162007253565b602002602001015160601c90565b62003fbe87878151811062003fa85762003fa862007253565b602002602001015162ffffff60489190911c1690565b604080519586526020860194909452928401919091526001600160a01b03166060830152608082015260a00160405180910390a18062003ffe816200721e565b91505062003eb7565b5050505050505050565b60185460405163b04220dd60e01b81526716345785d8a0000060048201819052671bc16d674ec80000602483018190529092909160009182916001600160a01b039091169063b04220dd9060440160408051808303816000875af11580156200407e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620040a4919062007283565b909250905060025b60048110156200444557600e54601954604051632b430a9960e11b81526004810184905262004273926001600160a01b03908116926370a0823192911690635686153290602401602060405180830381865afa15801562004111573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620041379190620070bf565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156200417c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620041a29190620070a5565b600083815260236020908152604080832060018452909152902054601f805485908110620041d457620041d462007253565b9060005260206000200154620041eb9190620072a8565b60405163348051d760e11b81526004810185905260008051602062018a7583398151915290636900a3ae90602401600060405180830381865afa15801562004237573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200426191908101906200710e565b6040516020016200152e9190620077d4565b600f54601954604051632b430a9960e11b81526004810184905262004430926001600160a01b03908116926370a0823192911690635686153290602401602060405180830381865afa158015620042ce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620042f49190620070bf565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562004339573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200435f9190620070a5565b600083815260236020908152604080832083805282529091205481549091908590811062004391576200439162007253565b9060005260206000200154620043a891906200773c565b60405163348051d760e11b81526004810185905260008051602062018a7583398151915290636900a3ae90602401600060405180830381865afa158015620043f4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200441e91908101906200710e565b6040516020016200152e91906200781b565b806200443c816200721e565b915050620040ac565b507fe4d04ada8c0c30b998d364c83db6df67bc6cb7f11ab5e7e95380e1b5fc5217d554600160009081527f1bcb44d21c67d5659cdd5f45cd32c6d6c6d33d5044115600c6652ecd87939c096020527f5ab0085a4ad2083c41e3abab9aa2f21a10a4588053f2eda561aea9a235916eb95490918291620044c591906200773c565b620044d19087620072a8565b7fa92b7ba6726d035d99414951ce3624ee123cea4fdafadf272b7c73bb026af25a54600080527fb361aea33a0348d043deace4a562cb920ac10508397ad80f12dfe9a2a063e0476020527f92ded818c3a1c83ed62dea98930b305b063a28ee70d1214dfe2b2eea8c847bb154919250906200454e90839062007624565b6200455a91906200756b565b600e54601954604051632b430a9960e11b815260016004820152929450620046b6926001600160a01b03928316926370a08231921690635686153290602401602060405180830381865afa158015620045b7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620045dd9190620070bf565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562004622573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620046489190620070a5565b82601a60050160018154811062004663576200466362007253565b90600052602060002001546200467a9190620072a8565b6040518060400160405280601f81526020017f496e636f727265637420412062616c616e636520666f72206d616b6572203100815250620030a4565b50600f54601954604051632b430a9960e11b81526001600482015262004811926001600160a01b03908116926370a0823192911690635686153290602401602060405180830381865afa15801562004712573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620047389190620070bf565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156200477d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620047a39190620070a5565b82601a600601600181548110620047be57620047be62007253565b9060005260206000200154620047d591906200773c565b6040518060400160405280601f81526020017f496e636f727265637420422062616c616e636520666f72206d616b6572203100815250620030a4565b600e546018546040516370a0823160e01b81526001600160a01b039182166004820152620048bf9291909116906370a0823190602401602060405180830381865afa15801562004865573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200488b9190620070a5565b600e54620048b0906001600160a01b03165b600f546001600160a01b0316896200567c565b601c54620036a491906200773c565b600e5462004919908490620048dd906001600160a01b03166200489d565b6040518060400160405280601b81526020017f496e636f7272656374206465636c617265642074616b6572476f740000000000815250620030a4565b7fab6d64a0ae8aa7e992431b692678f169470a865054be4492eee547d340019b125460008080527fca0574cb82515dd8d8feabc9bfece9b4778855cddef4d6e8f68e64178480ff7e6020527fa5fbbaf0a14b46038699d07035930bfc9da02767b0bf2ddfb660f999677e727854909183916200499691906200773c565b620049a291906200773c565b600f546018546040516370a0823160e01b81526001600160a01b039182166004820152929350620049df929116906370a0823190602401620037ae565b62004a2183826040518060400160405280601c81526020017f496e636f7272656374206465636c617265642074616b65724761766500000000815250620030a4565b600e54600d5460408051635aa6e67560e01b81529051620023f6936001600160a01b03908116936370a0823193911691635aa6e675916004808201926020929091908290030181865afa15801562004a7d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004aa39190620070bf565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562004ae8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004b0e9190620070a5565b600e5462004b32906001600160a01b0316600f546001600160a01b03168a62005595565b601b5462004b4191906200773c565b6040518060400160405280601b81526020017f696e636f7272656374204d616e67726f76652062616c616e6365730000000000815250620030a4565b60185460405163268e95b360e11b8152600481018390526706f05b59d3b2000060248201526001600160a01b0390911690634d1d2b669060440160a0604051808303816000875af192505050801562004bf5575060408051601f3d908101601f1916820190925262004bf29181019062007788565b60015b62004c51573d80801562004c26576040519150601f19603f3d011682016040523d82523d6000602084013e62004c2b565b606091505b5060008180602001905181019062004c4491906200710e565b90506200240d8162005713565b62004c8885156040518060400160405280601281526020017111985a5b195c881cda1bdd5b190819985a5b60721b81525062005643565b62004caf84600060405180606001604052806026815260200162018ae660269139620030a4565b62004cd683600060405180606001604052806027815260200162018a2e60279139620030a4565b600d54600e54600f546040516368c13d6b60e01b815262004de8936001600160a01b039081169363275074589385936368c13d6b9362004d209381169216908e9060040162007081565b602060405180830381865afa15801562004d3e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004d649190620070a5565b6040518263ffffffff1660e01b815260040162004d8391815260200190565b602060405180830381865afa15801562004da1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004dc79190620075df565b156040518060600160405280602f815260200162018b2c602f913962005643565b600e5460009062004e2e906001600160a01b0316600f546001600160a01b031660008a815260236020526040812090600581526020019081526020016000205462002fdf565b90506000601a60070160008154811062004e4c5762004e4c62007253565b6000918252602082200154600d54601954604051632b430a9960e11b8152600481019490945291926001600160a01b03918216926370a08231921690635686153290602401602060405180830381865afa15801562004eaf573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004ed59190620070bf565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562004f1a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004f409190620070a5565b62004f4c9190620072a8565b600d5490915062004007906001600160a01b03163162004f6d8385620072a8565b601a5462004f7c9190620072a8565b60405180606001604052806031815260200162018ab560319139620030a4565b6200238d8160405160240162004fb3919062007855565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b17905262005745565b60006001600160a01b038216620050ad5760008051602062018a5583398151915260405162005043906020808252601e908201527f4572726f723a20616464726573732073686f756c64206e6f7420626520300000604082015260600190565b60405180910390a160408051818152600781830152664164647265737360c81b60608201526001600160a01b038416602082015290517f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f9181900360800190a1620050ad62005766565b506001600160a01b0316151590565b62000c0b60006200586a565b600854600103620051445760095460405163ca669fa760e01b81526001600160a01b03909116600482015260008051602062018a758339815191529063ca669fa7906024015b600060405180830381600087803b1580156200512957600080fd5b505af11580156200513e573d6000803e3d6000fd5b50505050565b60085460020362000c0b576009546040516303223eab60e11b81526001600160a01b03909116600482015260008051602062018a75833981519152906306447d56906024016200510e565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b1790529151600092871691620051e591620075c1565b6000604051808303816000865af19150503d806000811462005224576040519150601f19603f3d011682016040523d82523d6000602084013e62005229565b606091505b50915050600081806020019051810190620052459190620070a5565b9050620052b784620052b087620052876370a0823160e01b6200526a60018d620059cf565b9060038201805463ffffffff191660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b90620059f4565b8215620023f65760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b03891691620053029190620075c1565b6000604051808303816000865af19150503d806000811462005341576040519150601f19603f3d011682016040523d82523d6000602084013e62005346565b606091505b50915050600081806020019051810190620053629190620070a5565b9050828610156200538d57620053798684620072a8565b620053859082620072a8565b9050620053a8565b620053998387620072a8565b620053a590826200773c565b90505b6200400781620052b06318160ddd60e01b6200526a60018d620059cf565b80821462001d265760008051602062018a55833981519152604051620054289060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8816040516200546191906200786a565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8826040516200549a9190620078a3565b60405180910390a162001d2662005766565b806001600160a01b0316826001600160a01b03161462001d265760008051602062018a55833981519152604051620055239060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f816040516200555c9190620078ce565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f826040516200549a919062007913565b600d546040516365fbae4d60e11b815260009182916001600160a01b039091169063cbf75c9a90620055ce908890889060040162007269565b6040805180830381865afa158015620055eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005611919062007283565b9150612710905060e882901c61ffff165b6200562e908562007624565b6200563a91906200756b565b95945050505050565b8162001d265760008051602062018a958339815191528160405162005669919062007757565b60405180910390a162001d268262005a00565b600d546040516365fbae4d60e11b815260009182916001600160a01b039091169063cbf75c9a90620056b5908890889060040162007269565b6040805180830381865afa158015620056d2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620056f8919062007283565b915061271090506200562261ffff60e884901c1682620072a8565b60008051602062018a958339815191528160405162005733919062007757565b60405180910390a16200238d62005766565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60008051602062018a758339815191523b15620058595760405160009060008051602062018a75833981519152907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490620057d49083906519985a5b195960d21b9060019060200162007060565b60408051601f1981840301815290829052620057f492916020016200758e565b60408051601f19818403018152908290526200581091620075c1565b6000604051808303816000865af19150503d80600081146200584f576040519150601f19603f3d011682016040523d82523d6000602084013e62005854565b606091505b505050505b6000805461ff001916610100179055565b600060085560408051631e91f8cb60e01b815290513091631e91f8cb9160048083019260209291908290030181865afa158015620058ac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620058d29190620070bf565b600980546001600160a01b0319166001600160a01b0392909216918217905530146200238d57306001600160a01b0316631e91f8cb6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562005937573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200595d9190620070bf565b6009546001600160a01b039081169116146200597b57600160085550565b80156200238d576002600855604080516390c5013b60e01b8152905160008051602062018a75833981519152916390c5013b91600480830192600092919082900301818387803b1580156200330357600080fd5b6005820180546001600160a01b0319166001600160a01b039290921691909117905590565b62001d26828262005a55565b806200238d5760008051602062018a55833981519152604051620057339060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b946000939092909183018282801562005ac857602002820191906000526020600020905b81548152602001906001019080831162005ab3575b5050505050905060008362005add8362005dc7565b60405160200162005af09291906200758e565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a16835281529281209194509092909162005b449186918891016200793e565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff1662005b7f5762005b7d8762005e7a565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b031988168452825280832090519091839162005bc09187918991016200793e565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b03168460405162005c079190620075c1565b600060405180830381855afa9150503d806000811462005c44576040519150601f19603f3d011682016040523d82523d6000602084013e62005c49565b606091505b50915062005c6690508162005c6088602062007624565b62006b71565b604051630667f9d760e41b81529092506000915060008051602062018a758339815191529063667f9d709062005ca3908b9087906004016200723a565b6020604051808303816000875af115801562005cc3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005ce99190620070a5565b905080821462005d165760405162461bcd60e51b815260040162005d0d906200797a565b60405180910390fd5b6040516370ca10bb60e01b815260008051602062018a75833981519152906370ca10bb9062005d4e908b9087908e9060040162007060565b600060405180830381600087803b15801562005d6957600080fd5b505af115801562005d7e573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff1916905562005db360028b01600062006c9f565b896004016000905550505050505050505050565b606060008251602062005ddb919062007624565b6001600160401b0381111562005df55762005df562006dae565b6040519080825280601f01601f19166020018201604052801562005e20576020820181803683370190505b50905060005b835181101562005e7357600084828151811062005e475762005e4762007253565b60200260200101519050808260200260200184015250808062005e6a906200721e565b91505062005e26565b5092915050565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b94938793919290919083018282801562005eec57602002820191906000526020600020905b81548152602001906001019080831162005ed7575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a168452825280832090519596509491935062005f38925085918791016200793e565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff161562005fd7576001600160a01b0384166000908152602087815260408083206001600160e01b0319871684528252808320905190929162005fa79185918791016200793e565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b60008362005fe58362005dc7565b60405160200162005ff89291906200758e565b604051602081830303815290604052905060008051602062018b0c83398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200605757600080fd5b505af11580156200606c573d6000803e3d6000fd5b50505050600080866001600160a01b0316836040516200608d9190620075c1565b600060405180830381855afa9150503d8060008114620060ca576040519150601f19603f3d011682016040523d82523d6000602084013e620060cf565b606091505b509150620060e690508162005c6087602062007624565b6040516365bc948160e01b81526001600160a01b03891660048201529092506000915060008051602062018a75833981519152906365bc9481906024016000604051808303816000875af115801562006143573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200616d919081019062007a82565b50905080516001036200643657600060008051602062018b0c83398151915260001c6001600160a01b031663667f9d708984600081518110620061b457620061b462007253565b60200260200101516040518363ffffffff1660e01b8152600401620061db9291906200723a565b6020604051808303816000875af1158015620061fb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620062219190620070a5565b90508062006285577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5888360008151811062006261576200626162007253565b602002602001015160001c6040516200627c9291906200723a565b60405180910390a15b808314620062a75760405162461bcd60e51b815260040162005d0d906200797a565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed88888789604051602001620062df9291906200793e565b60405160208183030381529060405280519060200120856000815181106200630b576200630b62007253565b602002602001015160001c60405162006328949392919062007aec565b60405180910390a18160008151811062006346576200634662007253565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c168352845280822090519293909262006391918a918c91016200793e565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c16855282528284209251909391620063fb918a918c91016200793e565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff191691151591909117905550620069f4565b600181511115620069835760005b81518110156200697c57600060008051602062018b0c83398151915260001c6001600160a01b031663667f9d708a85858151811062006487576200648762007253565b60200260200101516040518363ffffffff1660e01b8152600401620064ae9291906200723a565b6020604051808303816000875af1158015620064ce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620064f49190620070a5565b90508062006557577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a58984848151811062006533576200653362007253565b602002602001015160001c6040516200654e9291906200723a565b60405180910390a15b60008051602062018b0c83398151915260001c6001600160a01b03166370ca10bb8a8585815181106200658e576200658e62007253565b602002602001015161133760f01b6040518463ffffffff1660e01b8152600401620065bc9392919062007060565b600060405180830381600087803b158015620065d757600080fd5b505af1158015620065ec573d6000803e3d6000fd5b50505050600060608a6001600160a01b0316876040516200660e9190620075c1565b600060405180830381855afa9150503d80600081146200664b576040519150601f19603f3d011682016040523d82523d6000602084013e62006650565b606091505b509092509050620066688162005c608b602062007624565b95508180156200667c575061133760f01b86145b15620068cf577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c604051602001620066ba9291906200793e565b60405160208183030381529060405280519060200120888881518110620066e557620066e562007253565b602002602001015160001c60405162006702949392919062007aec565b60405180910390a18484815181106200671f576200671f62007253565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f16835284528082209051929390926200676a918d918f91016200793e565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c604051602001620067f79291906200793e565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff02191690831515021790555060008051602062018b0c83398151915260001c6001600160a01b03166370ca10bb8c87878151811062006869576200686962007253565b6020026020010151866040518463ffffffff1660e01b8152600401620068929392919062007060565b600060405180830381600087803b158015620068ad57600080fd5b505af1158015620068c2573d6000803e3d6000fd5b505050505050506200697c565b60008051602062018b0c83398151915260001c6001600160a01b03166370ca10bb8c87878151811062006906576200690662007253565b6020026020010151866040518463ffffffff1660e01b81526004016200692f9392919062007060565b600060405180830381600087803b1580156200694a57600080fd5b505af11580156200695f573d6000803e3d6000fd5b50505050505050808062006973906200721e565b91505062006444565b50620069f4565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e606482015260840162005d0d565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a1684528252808320905190929162006a389188918a91016200793e565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff1662006ac75760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201526e3a143994903737ba103337bab7321760891b606482015260840162005d0d565b6005890180546001600160a01b031916905560038901805463ffffffff1916905562006af860028a01600062006c9f565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a1684528252808320905190929162006b3e9188918a91016200793e565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b6000806000602085511162006b8857845162006b8b565b60205b905060005b8181101562006bf15762006ba681600862007624565b8662006bb383886200773c565b8151811062006bc65762006bc662007253565b01602001516001600160f81b031916901c92909217918062006be8816200721e565b91505062006b90565b5090949350505050565b61567e8062007b1d83390190565b6155e4806200d19b83390190565b610c49806201277f83390190565b82805482825590600052602060002090810192821562006c63579160200282015b8281111562006c6357825182559160200191906001019062006c46565b5062006c7192915062006cba565b5090565b61206d80620133c883390190565b611a41806201543583390190565b611bb88062016e7683390190565b50805460008255906000526020600020908101906200238d91905b5b8082111562006c71576000815560010162006cbb565b80151581146200238d57600080fd5b60006020828403121562006cf357600080fd5b813562000c298162006cd1565b6001600160a01b03811681146200238d57600080fd5b60008060006060848603121562006d2c57600080fd5b833562006d398162006d00565b9250602084013562006d4b8162006d00565b9150604084013562006d5d8162006cd1565b809150509250925092565b6020808252825182820181905260009190848201906040850190845b8181101562006da25783518352928401929184019160010162006d84565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b038111828210171562006de95762006de962006dae565b60405290565b604051601f8201601f191681016001600160401b038111828210171562006e1a5762006e1a62006dae565b604052919050565b60006001600160401b0382111562006e3e5762006e3e62006dae565b50601f01601f191660200190565b60008060006060848603121562006e6257600080fd5b833562006e6f8162006d00565b9250602084013562006e818162006d00565b915060408401356001600160401b0381111562006e9d57600080fd5b8401601f8101861362006eaf57600080fd5b803562006ec662006ec08262006e22565b62006def565b81815287602083850101111562006edc57600080fd5b816020840160208301376000602083830101528093505050509250925092565b60006001600160401b0382111562006f185762006f1862006dae565b5060051b60200190565b6000602080838503121562006f3657600080fd5b82356001600160401b0381111562006f4d57600080fd5b8301601f8101851362006f5f57600080fd5b803562006f7062006ec08262006efc565b81815260059190911b8201830190838101908783111562006f9057600080fd5b928401925b8284101562006fb05783358252928401929084019062006f95565b979650505050505050565b60008060006060848603121562006fd157600080fd5b833562006fde8162006d00565b95602085013595506040909401359392505050565b600080604083850312156200700757600080fd5b8235620070148162006d00565b91506020830135620070268162006d00565b809150509250929050565b600080604083850312156200704557600080fd5b8235620070528162006d00565b946020939093013593505050565b6001600160a01b039390931683526020830191909152604082015260600190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060208284031215620070b857600080fd5b5051919050565b600060208284031215620070d257600080fd5b815162000c298162006d00565b60005b83811015620070fc578181015183820152602001620070e2565b838111156200513e5750506000910152565b6000602082840312156200712157600080fd5b81516001600160401b038111156200713857600080fd5b8201601f810184136200714a57600080fd5b80516200715b62006ec08262006e22565b8181528560208385010111156200717157600080fd5b6200563a826020830160208601620070df565b656d616b65722d60d01b815260008251620071a7816006850160208701620070df565b9190910160060192915050565b60008151808452620071ce816020860160208601620070df565b601f01601f19169290920160200192915050565b6001600160a01b038316815260406020820181905260009062001d5190830184620071b4565b634e487b7160e01b600052601160045260246000fd5b60006001820162007233576200723362007208565b5060010190565b6001600160a01b03929092168252602082015260400190565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b0392831681529116602082015260400190565b600080604083850312156200729757600080fd5b505080516020909101519092909150565b600082821015620072bd57620072bd62007208565b500390565b7f496e636f7272656374207765692062616c616e636520666f72206d616b657220815260008251620072fc816020850160208701620070df565b9190910160200192915050565b6000808284036101008112156200731f57600080fd5b60808112156200732e57600080fd5b6200733862006dc4565b84518152602085015160208201526040850151604082015260608501516060820152809350506080607f19820112156200737157600080fd5b506200737c62006dc4565b60808401516200738c8162006d00565b815260a0840151602082015260c0840151604082015260e09093015160608401525092909150565b7f496e636f7272656374206d616b65722061646472657373206174206f666665728152600160fd1b602082015260008251620073f8816021850160208701620070df565b9190910160210192915050565b6000835162007419818460208801620070df565b8351908301906200742f818360208801620070df565b01949350505050565b600082516200744c818460208701620070df565b61016160f51b920191825250600201919050565b600181815b80851115620074a157816000190482111562007485576200748562007208565b808516156200749357918102915b93841c939080029062007465565b509250929050565b600082620074ba575060016200204a565b81620074c9575060006200204a565b8160018114620074e25760028114620074ed576200750d565b60019150506200204a565b60ff84111562007501576200750162007208565b50506001821b6200204a565b5060208310610133831016604e8410600b841016171562007532575081810a6200204a565b6200753e838362007460565b806000190482111562007555576200755562007208565b029392505050565b600062000c298383620074a9565b6000826200758957634e487b7160e01b600052601260045260246000fd5b500490565b6001600160e01b0319831681528151600090620075b3816004850160208701620070df565b919091016004019392505050565b60008251620075d5818460208701620070df565b9190910192915050565b600060208284031215620075f257600080fd5b815162000c298162006cd1565b6000602082840312156200761257600080fd5b815160ff8116811462000c2957600080fd5b600081600019048311821515161562007641576200764162007208565b500290565b8054600090600181811c90808316806200766157607f831692505b602080841082036200768357634e487b7160e01b600052602260045260246000fd5b83885260208801828015620076a15760018114620076b357620076e0565b60ff19871682528282019750620076e0565b60008981526020902060005b87811015620076da57815484820152908601908401620076bf565b83019850505b5050505050505092915050565b6001600160a01b0385168152608060208201819052600090620077139083018662007646565b828103604084015262007727818662007646565b91505060ff8316606083015295945050505050565b6000821982111562007752576200775262007208565b500190565b60408152600560408201526422b93937b960d91b606082015260806020820152600062000c296080830184620071b4565b600080600080600060a08688031215620077a157600080fd5b8551620077ae8162006cd1565b602087015160408801516060890151608090990151929a91995097965090945092505050565b7f496e636f727265637420412062616c616e636520666f72206d616b65722000008152600082516200780e81601e850160208701620070df565b91909101601e0192915050565b7f496e636f727265637420422062616c616e636520666f72206d616b65722000008152600082516200780e81601e850160208701620070df565b60208152600062000c296020830184620071b4565b6040815260006200789560408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b6040815260006200789560408301600a815269080808081058dd1d585b60b21b602082015260400190565b604081526000620078f960408301600a8152690808115e1c1958dd195960b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b604081526000620078f960408301600a815269080808081058dd1d585b60b21b602082015260400190565b825160009082906020808701845b838110156200796a578151855293820193908201906001016200794c565b5050948252509092019392505050565b6020808252606f908201527f73746453746f726167652066696e642853746453746f72616765293a2050616360408201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560608201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960808201526e39b713ba1039bab83837b93a32b21760891b60a082015260c00190565b600082601f83011262007a2757600080fd5b8151602062007a3a62006ec08362006efc565b82815260059290921b8401810191818101908684111562007a5a57600080fd5b8286015b8481101562007a77578051835291830191830162007a5e565b509695505050505050565b6000806040838503121562007a9657600080fd5b82516001600160401b038082111562007aae57600080fd5b62007abc8683870162007a15565b9350602085015191508082111562007ad357600080fd5b5062007ae28582860162007a15565b9150509250929050565b6001600160a01b039490941684526001600160e01b0319929092166020840152604083015260608201526080019056fe60a06040523480156200001157600080fd5b506040516200567e3803806200567e83398101604081905262000034916200048c565b8282826040518060400160405280601081526020016f496e7665727465644d616e67726f766560801b815250808484847f72201d073f249840099a96530e189c4291c1852040b1e96ff1f606db656be4ff60405160405180910390a16200009b836200016d565b620000a682620001cc565b620000b1816200027f565b620000bc836200032f565b5050815160208084019190912060408051808201825260018152603160f81b9084015280517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f938101939093528201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c001905060408051601f19818403018152919052805160209091012060805250620004d19650505050505050565b62000177620003e0565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f30906020015b60405180910390a150565b620001d6620003e0565b61ffff811681146200022f5760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f31366269747300000000000060448201526064015b60405180910390fd5b6200024b816001546200045160201b62001d4e1790919060201c565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001620001c1565b62000289620003e0565b808162ffffff1614620002df5760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f3234626974730000000000000000604482015260640162000226565b620002fb816001546200046f60201b62001d711790919060201c565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001620001c1565b62000339620003e0565b6001600160a01b038116620003915760405162461bcd60e51b815260206004820152601360248201527f6d67762f636f6e6669672f676f762f6e6f743000000000000000000000000000604482015260640162000226565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001620001c1565b6003546001600160a01b0316331480620003f957503330145b806200040e57506003546001600160a01b0316155b6200044f5760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b604482015260640162000226565b565b60401b69ffff00000000000000001661ffff60401b19919091161790565b60281b67ffffff00000000001662ffffff60281b19919091161790565b600080600060608486031215620004a257600080fd5b83516001600160a01b0381168114620004ba57600080fd5b602085015160409095015190969495509392505050565b60805161518a620004f46000396000818161036401526116aa015261518a6000f3fe60806040526004361061024a5760003560e01c80636d27de6711610139578063b60d4288116100b6578063dc7e98df1161007a578063dc7e98df146108a8578063def5ddaa146108c8578063fbb66910146108e8578063fbfa77cf14610908578063fbffe5fd14610928578063fcaa7e2e1461094857600080fd5b8063b60d4288146107e4578063c7bb25d0146107ec578063cbf75c9a14610833578063d0ee509914610868578063db20266f1461088857600080fd5b8063aa4dd282116100fd578063aa4dd28214610744578063ab033ea914610764578063ad97db1b14610784578063b09d2a16146107a4578063b2b12057146107c457600080fd5b80636d27de671461061457806370a08231146106545780637ecebe00146106815780638c66715c146106ae57806395999ee31461072457600080fd5b80635722647b116101c7578063644e67031161018b578063644e6703146104cc5780636804f613146105835780636817031b146105a357806368c13d6b146105c35780636a4f76911461060157600080fd5b80635722647b146103f657806359eba454146104345780635a611f4e146104545780635aa6e675146104745780635cd82390146104ac57600080fd5b806330adf81f1161020e57806330adf81f146103105780633644e5151461035257806341c0e1b51461038657806346e142fa1461039b57806349f6d2dc146103e357600080fd5b80630b73a18f1461025f578063230244081461027f578063275074581461029257806327d097c6146102d05780632e1a7d4d146102f057600080fd5b3661025a5761025833610968565b005b600080fd5b34801561026b57600080fd5b5061025861027a3660046149b8565b61098f565b61025861028d366004614a05565b610968565b34801561029e57600080fd5b506102bb6102ad366004614a20565b6001600160601b0316151590565b60405190151581526020015b60405180910390f35b3480156102dc57600080fd5b506102586102eb366004614a39565b610a2d565b3480156102fc57600080fd5b506102bb61030b366004614a20565b610b08565b34801561031c57600080fd5b506103447fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a281565b6040519081526020016102c7565b34801561035e57600080fd5b506103447f000000000000000000000000000000000000000000000000000000000000000081565b34801561039257600080fd5b50610258610b62565b3480156103a757600080fd5b506103bb6103b6366004614ac8565b610baa565b604080519586526020860194909452928401919091526060830152608082015260a0016102c7565b6103446103f1366004614b41565b610bd6565b34801561040257600080fd5b50610344610411366004614a39565b600560209081526000938452604080852082529284528284209052825290205481565b34801561044057600080fd5b506102bb61044f366004614b9f565b610d41565b34801561046057600080fd5b5061025861046f366004614bea565b610dca565b34801561048057600080fd5b50600354610494906001600160a01b031681565b6040516001600160a01b0390911681526020016102c7565b3480156104b857600080fd5b506102586104c7366004614a05565b610e24565b3480156104d857600080fd5b506104ec6104e7366004614c07565b610e84565b6040805183516001600160a01b0316815260208085015115158183015284830151151582840152606080860151818401526080808701518185015260a0968701511515878501528551151560c0808601919091529286015160e0850152938501516101008401528401516101208301529183015115156101408201529282015161016084015201516101808201526101a0016102c7565b34801561058f57600080fd5b5061025861059e366004614bea565b610f87565b3480156105af57600080fd5b506102586105be366004614a05565b610fd1565b3480156105cf57600080fd5b506103446105de366004614a39565b600460209081526000938452604080852082529284528284209052825290205481565b61025861060f366004614c3a565b611027565b34801561062057600080fd5b5061063461062f366004614ca1565b61113a565b6040805194855260208501939093529183015260608201526080016102c7565b34801561066057600080fd5b5061034461066f366004614a05565b60066020526000908152604090205481565b34801561068d57600080fd5b5061034461069c366004614a05565b60086020526000908152604090205481565b3480156106ba57600080fd5b506106ce6106c9366004614a39565b611171565b60408051835181526020808501518183015284830151828401526060948501518583015283516001600160a01b0316608083015283015160a08201529082015160c082015291015160e0820152610100016102c7565b34801561073057600080fd5b5061025861073f366004614a20565b61124d565b34801561075057600080fd5b5061034461075f366004614d09565b6112e9565b34801561077057600080fd5b5061025861077f366004614a05565b61134a565b34801561079057600080fd5b5061034461079f366004614d3c565b6113ec565b3480156107b057600080fd5b506102586107bf366004614d8b565b6115be565b3480156107d057600080fd5b506103bb6107df366004614e21565b6118b7565b6102586118f3565b3480156107f857600080fd5b50610344610807366004614e9b565b600760209081526000948552604080862082529385528385208152918452828420909152825290205481565b34801561083f57600080fd5b5061085361084e366004614c07565b6118fe565b604080519283526020830191909152016102c7565b34801561087457600080fd5b50610258610883366004614c07565b6119fb565b34801561089457600080fd5b506102bb6108a3366004614c07565b611a6c565b3480156108b457600080fd5b506102586108c3366004614a39565b611aa7565b3480156108d457600080fd5b506103446108e3366004614c07565b611b67565b3480156108f457600080fd5b50610258610903366004614a39565b611b9f565b34801561091457600080fd5b50600054610494906001600160a01b031681565b34801561093457600080fd5b50610634610943366004614eef565b611c8c565b34801561095457600080fd5b50610258610963366004614a20565b611cb3565b60006109756000806118fe565b50905061098181611d90565b61098b8234611dd3565b5050565b610997611e2f565b6001600160a01b0385811660008181526002602090815260408083209489168084529482529182902080546001600160f81b0316600160f81b17905581516001815291517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a3610a10858585611aa7565b610a1b858584611b9f565b610a26858583610a2d565b5050505050565b610a35611e2f565b808162ffffff1614610a8e5760405162461bcd60e51b815260206004820152601f60248201527f6d67762f636f6e6669672f6f666665725f676173626173652f3234626974730060448201526064015b60405180910390fd5b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805462ffffff60601b191662ffffff60601b606088901b1617905590518481527fc5859916e5f3fc1ed4d2cfb8c7a6cf709580f228fa0c9d9e0fa468744c7e4a9191015b60405180910390a3505050565b6000610b143383611e9a565b60405133908390600081818185875af1925050503d8060008114610b54576040519150601f19603f3d011682016040523d82523d6000602084013e610b59565b606091505b50909392505050565b610b6a611e2f565b60015464ff000000001916640100000000176001556040517fbe26733c2bf6ff3ea5ba8cfe744422bd49052ff9ed5685c9e81e6f9321dbaddd90600090a1565b6000806000806000610bc08a8a8a8a8a33611f5f565b939e929d50909b50995090975095505050505050565b6000610be0614864565b610bea89896118fe565b6101208301819052610100830191909152610c04906120ac565b610c188161010001518261012001516120f8565b3415610c2857610c283334611dd3565b61012081015160181c63ffffffff166001016080820181905263ffffffff811614610c8b5760405162461bcd60e51b81526020600482015260136024820152726d67762f6f6666657249644f766572666c6f7760681b6044820152606401610a85565b6080810151610120820151610cb79160181b66ffffffff0000001666ffffffff00000019919091161790565b6101208201526001600160a01b03808a16825288166020820152604081018790526060810186905260a0810185905260c0810184905260e08101839052610cff816000612148565b61012081015181516001600160a01b03908116600090815260026020908152604080832082870151909416835292905220556080015198975050505050505050565b6001600160a01b038085166000818152600760209081526040808320888616808552908352818420338086529084528285209689168552959092528083208690555191939092917f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d91610db79188908890614f3c565b60405180910390a3506001949350505050565b610dd2611e2f565b60015460ff60501b191660ff60501b605083901b161760015560405181151581527f9b84fe4d9ffc14a6f7ec50c18884ee0d4bb8165aa718a28558df12ab4bd32b14906020015b60405180910390a150565b610e2c611e2f565b6001546001600160601b03166001600160601b0319606083901b16176001556040516001600160a01b03821681527ff592e42c32883b35bebfbf9d9b801570a25d5ccbba452310746ad2cfd20d548f90602001610e19565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152610efa6040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b600080610f0786866118fe565b91509150610f71826040805160c081018252606083811c8252605884901c60ff9081161515602080850191909152605086901c82161515848601529385901c61ffff1691830191909152602884901c62ffffff1660808301529290911c909116151560a082015290565b9350610f7c816128c5565b925050509250929050565b610f8f611e2f565b600154610f9c9082612973565b60015560405181151581527fbf39fbfab835c119637f4dbc4fb0f428c559c210200405d1ec25ddb50a93f9d490602001610e19565b610fd9611e2f565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f3090602001610e19565b61102f614864565b61103989896118fe565b6101208301819052610100830191909152611053906120ac565b6110678161010001518261012001516120f8565b3415611077576110773334611dd3565b6001600160a01b03808a16808352908916602080840182905260408085018b9052606085018a90526080850186905260a0850189905260c0850188905260e0850187905260009384526004825280842092845291815281832085845290529020546101408201526101208101516110ef826001612148565b610120820151811461112e5761012082015182516001600160a01b03908116600090815260026020908152604080832082880151909416835292905220555b50505050505050505050565b60008060008061114e8a8a8a8a8a8a61298a565b929650909450925090506111648a8a8786612c72565b9650965096509692505050565b61119c6040518060800160405280600081526020016000815260200160008152602001600081525090565b6111d0604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b6001600160a01b03808616600090815260046020908152604080832093881683529281528282208683529052205461120781612d72565b6001600160a01b038088166000908152600560209081526040808320938a1683529281528282208883529052205490935061124181612dd4565b92505050935093915050565b611255611e2f565b808162ffffff16146112a95760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f32346269747300000000000000006044820152606401610a85565b6001546112b69082611d71565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001610e19565b600033301461133a5760405162461bcd60e51b815260206004820152601f60248201527f6d67762f696e766572746564466c6173686c6f616e2f70726f746563746564006044820152606401610a85565b61134383612e43565b9392505050565b611352611e2f565b6001600160a01b03811661139e5760405162461bcd60e51b815260206004820152601360248201527206d67762f636f6e6669672f676f762f6e6f743606c1b6044820152606401610a85565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001610e19565b6000806113f986866118fe565b915050611405816120ac565b6001600160a01b038087166000818152600460209081526040808320948a16808452948252808320898452825280832054938352600582528083209483529381528382208883529052919091205461145d8160601c90565b6001600160a01b0316336001600160a01b0316146114bd5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f726574726163744f666665722f756e617574686f72697a65640000006044820152606401610a85565b6001600160601b0382161561152157826114ed89896114dc8660e01c90565b60c087901c63ffffffff1688612fc4565b935080841461151f576001600160a01b03808a166000908152600260209081526040808320938c168352929052208490555b505b61152f88888885858a6130a4565b841561156657603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca00020293506115663385611dd3565b866001600160a01b0316886001600160a01b03167fe2ce51fba856682424155a2d89b2ad1d2adde6ea0a9e3115b4b474cd6cb1798b886040516115ab91815260200190565b60405180910390a3505050949350505050565b428410156116035760405162461bcd60e51b81526020600482015260126024820152711b59dd8bdc195c9b5a5d0bd95e1c1a5c995960721b6044820152606401610a85565b6001600160a01b03878116600081815260086020908152604080832080546001810190915581517fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a2818501528f8716818401528e871660608201526080810195909552948b1660a085015260c084018a905260e084018590526101008085018a9052815180860390910181526101208501909152805191012061190160f01b6101408401527f0000000000000000000000000000000000000000000000000000000000000000610142840152610162830152906101820160408051601f198184030181528282528051602091820120600080855291840180845281905260ff89169284019290925260608301879052608083018690529092509060019060a0016020604051602081039080840390855afa158015611745573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381161580159061177b5750896001600160a01b0316816001600160a01b0316145b6117c75760405162461bcd60e51b815260206004820152601b60248201527f6d67762f7065726d69742f696e76616c69645369676e617475726500000000006044820152606401610a85565b87600760008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008b6001600160a01b03166001600160a01b03168152602001908152602001600020819055508a6001600160a01b03168c6001600160a01b03167f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d8c8c8c6040516118a193929190614f3c565b60405180910390a3505050505050505050505050565b60008060008060006118cd8b8b8b8b8b8b611f5f565b9398509196509450925090506118e58b8b8886612c72565b965096509650965096915050565b6118fc33610968565b565b6001546001600160a01b03838116600090815260026020908152604080832093861683529290522054605882901c60ff16156119f4576000806119418460601c90565b604051636968abd360e01b81526001600160a01b03888116600483015287811660248301529190911690636968abd3906044016040805180830381865afa158015611990573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119b49190614f60565b915091506119c58261ffff81161490565b156119d7576119d48483611d4e565b93505b6001600160701b03811681036119f157610f7c8382613119565b50505b9250929050565b611a03611e2f565b6001600160a01b03828116600081815260026020908152604080832094861680845294825280832080546001600160f81b031690558051928352517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a35050565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054605881901c60ff1615155b949350505050565b611aaf611e2f565b6101f4811115611af85760405162461bcd60e51b815260206004820152601460248201527306d67762f636f6e6669672f6665652f3c3d3530360641b6044820152606401610a85565b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805461ffff60e81b191661ffff60e81b60e888901b1617905590518481527f44a6d70a601a6f8a85c075467e9d7245897140cbf6dd505c9d9d764459f5fb649101610afb565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054603881901c63ffffffff16611a9f565b611ba7611e2f565b6001600160701b0381168114611bff5760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f64656e736974792f313132626974730000000000006044820152606401610a85565b6001600160a01b03808416600090815260026020908152604080832093861683529290522054611c2f9082613119565b6001600160a01b038481166000818152600260209081526040808320948816808452948252918290209490945551848152919290917f95f1a495c6d9d1a215995408f6ad898c2b33798d6eb3cf3220b4c6cc8b61b0649101610afb565b600080600080611ca089898989893361298a565b929c919b50995090975095505050505050565b611cbb611e2f565b61ffff81168114611d0e5760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f3136626974730000000000006044820152606401610a85565b600154611d1b9082611d4e565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001610e19565b60401b69ffff00000000000000001669ffff000000000000000019919091161790565b60281b67ffffff00000000001667ffffff000000000019919091161790565b602081901c60ff1615611dd05760405162461bcd60e51b81526020600482015260086024820152671b59dd8bd919585960c21b6044820152606401610a85565b50565b6001600160a01b03821660008181526006602052604090819020805484019055517f1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa09490611e239084815260200190565b60405180910390a25050565b6003546001600160a01b0316331480611e4757503330145b80611e5b57506003546001600160a01b0316155b6118fc5760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b6044820152606401610a85565b6001600160a01b03821660009081526006602052604090205481811015611f035760405162461bcd60e51b815260206004820152601960248201527f6d67762f696e73756666696369656e7450726f766973696f6e000000000000006044820152606401610a85565b6001600160a01b038316600081815260066020526040908190208484039055517f59c79d79be0fadf59fe689b6952b7ebe90201a3a1f00d4a31982377890bc604690611f529085815260200190565b60405180910390a2505050565b6000806000806000611f6f6148d0565b6001600160a01b03808d1682528b166020820152611f8d8c8c6118fe565b61010083015260e0820152611fa061492e565b6001600160a01b03881660a082015288151560c082015260e0820151610100830151611fcc91906120f8565b611fda8261010001516120ac565b6040517fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b990600090a161200f81838d8d61314a565b60808401519299509097509550612025906135d9565b602080830151835160808085015160e0860151604080518d81529687018c905286019190915260608501526001600160a01b03808d1694938116939216917ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec47910160405180910390a4806080015193508060e0015192505050965096509650965096915050565b605881901c60ff1615611dd05760405162461bcd60e51b81526020600482015260146024820152731b59dd8bdc99595b9d1c985b98de531bd8dad95960621b6044820152606401610a85565b61210182611d90565b61210d8160f81c151590565b61098b5760405162461bcd60e51b815260206004820152600c60248201526b6d67762f696e61637469766560a01b6044820152606401610a85565b60c082015161ffff81161461219f5760405162461bcd60e51b815260206004820152601e60248201527f6d67762f77726974654f666665722f67617370726963652f31366269747300006044820152606401610a85565b61010082015160401c61ffff168260c0015110156121ca5761010082015160401c61ffff1660c08301525b61010082015160281c62ffffff168260a00151111561222b5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f6761737265712f746f6f486967680000006044820152606401610a85565b600082606001511161227f5760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f746f6f4c6f7700000000006044820152606401610a85565b61012082015160781c6001600160701b031661012083015160601c62ffffff168360a001510102826060015110156122f95760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f64656e736974792f746f6f4c6f770000006044820152606401610a85565b60608201516001600160601b038116146123555760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f39366269747300000000006044820152606401610a85565b60408201516001600160601b038116146123b15760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f77616e74732f39366269747300000000006044820152606401610a85565b6000806123bd84613677565b9150915083602001516001600160a01b031684600001516001600160a01b03167f2b101f9ef8ca2761d91bea55ab50a4d051e9248088ff7314ddb8826839544c2a33876040015188606001518960c001518a60a001518b608001518a60405161246297969594939291906001600160a01b03979097168752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b60405180910390a383516001600160a01b03908116600090815260056020908152604080832082890151909416835292815282822060808801518352905290812054841561253c576124b48160601c90565b6001600160a01b0316336001600160a01b0316146125145760405162461bcd60e51b815260206004820152601c60248201527f6d67762f7570646174654f666665722f756e617574686f72697a6564000000006044820152606401610a85565b603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca00020291505b841580612556575060a0860151604882901c62ffffff1614155b8061256d575060c0860151602082901c61ffff1614155b8061258e575061012086015160601c62ffffff16603082901c62ffffff1614155b156126385761012086015160009060601c62ffffff1690506125fe338860a00151838a60c0015160201b65ffff000000001660309190911b68ffffff0000000000001660489290921b6bffffff0000000000000000001660609390931b6001600160601b03191692909217171790565b87516001600160a01b039081166000908152600560209081526040808320828d0151909416835292815282822060808c0151835290522055505b5060c08501516101208601516000919060601c62ffffff168760a001510102633b9aca00029050818111156126785761267333838303611e9a565b61268c565b8181101561268c5761268c33828403611dd3565b506101408501516001600160601b031615806126b0575061014085015160e01c8314155b1561283c57821561273657608085015185516001600160a01b039081166000908152600460209081526040808320828b01519094168352928152828220878352905220546126fd916138a3565b85516001600160a01b039081166000908152600460209081526040808320828b0151909416835292815282822087835290522055612769565b60808501516101208601516127629160381b63ffffffff60381b1663ffffffff60381b19919091161790565b6101208601525b81156127e057608085015185516001600160a01b039081166000908152600460208181526040808420828c018051871686529083528185208986528352818520548c518716865293835281852090519095168452938152838320878452905291902060e09290921b6001600160e01b039091161790555b8380156127fa57506101408501516001600160601b031615155b1561283c576128358560000151866020015161281b88610140015160e01c90565b61014089015160c01c63ffffffff16896101200151612fc4565b6101208601525b60408501516060808701516000926001600160601b03909116911b6bffffffffffffffffffffffff60601b1660c085901b63ffffffff60c01b1660e087901b17171786516001600160a01b039081166000908152600460209081526040808320828c015190941683529281528282206080909a0151825298909852909620959095555050505050565b6129096040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b60f882901c1515815260e882901c61ffff166020820152607882901c6001600160701b03166040820152606082811c62ffffff1690820152605882901c60ff1615156080820152603882901c63ffffffff90811660a083015260189290921c90911660c082015290565b60581b60ff60581b1660ff60581b19919091161790565b60008060008087886001600160a01b0316146129e85760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657257616e74732f313630626974730000006044820152606401610a85565b86876001600160a01b031614612a405760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657247697665732f313630626974730000006044820152606401610a85565b612a486148d0565b6001600160a01b03808c1682528a166020820152612a668b8b6118fe565b610100830181905260e083019190915260381c63ffffffff1660408083019182526001600160a01b03808e16600090815260046020908152838220928f1682529182528281209351815292905290205460608201526080810189905260a08101889052612ad161492e565b898152602081018990526001600160a01b03871660a082015287151560c082015260e0820151610100830151612b0791906120f8565b612b158261010001516120ac565b610100820151612b26906001612973565b82610100018181525050816101000151600260008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020819055507fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b960405160405180910390a1612bba818360016138c0565b612bc781608001516135d9565b866001600160a01b03168b6001600160a01b03168d6001600160a01b03167ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec478460400151856060015186608001518760e00151604051612c40949392919093845260208401929092526040830152606082015260800190565b60405180910390a460408101516060820151608083015160e090930151919e909d50919b509950975050505050505050565b6001600160a01b0380851660009081526007602090815260408083208785168452825280832093861683529281528282203383529052205481811015612ced5760405162461bcd60e51b815260206004820152601060248201526f6d67762f6c6f77416c6c6f77616e636560801b6044820152606401610a85565b6001600160a01b0380861660008181526007602090815260408083208986168085529083528184209589168452948252808320338085529252918290208686039081905591517f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d92612d63928992909190614f3c565b60405180910390a35050505050565b612d9d6040518060800160405280600081526020016000815260200160008152602001600081525090565b60e082901c815263ffffffff60c083901c1660208201526001600160601b03606083811c8216604084015292169181019190915290565b612e08604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b606082811c8252604883901c62ffffff908116602080850191909152603085901c90911660408401529290921c61ffff169181019190915290565b600080636c49c32c60e01b83604051602401612e5f9190614f84565b60408051808303601f190181529190526020810180516001600160e01b0319939093166001600160e01b0390931692909217909152905060c0830135604881901c62ffffff169060601c60005a9050826040820482031015612f0157604080516060810182527f6d67762f6e6f74456e6f756768476173466f724d616b65725472616465000000815260006020820181905291810191909152612f0190606081fd5b600080612f0f848688613b32565b915091505a8303965081612f5557612f5560405180606001604052806e1b59dd8bdb585ad95c94995d995c9d608a1b81526020018960001b815260200183815250606081fd5b6000612f73612f6760208b018b614a05565b86308c60800135613b60565b905080612fb857612fb86040518060600160405280741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b81526020018a60001b815260200184815250606081fd5b50505050505050919050565b60008315613037576001600160a01b03808716600090815260046020908152604080832093891683529281528282208783529052205461300490846138a3565b6001600160a01b038088166000908152600460209081526040808320938a16835292815282822088835290522055613054565b63ffffffff60381b19821663ffffffff60381b603885901b161791505b821561309b576001600160a01b038681166000908152600460209081526040808320938916835292815282822086835290522080546001600160e01b031660e086901b1790555b50949350505050565b6001600160601b03198316925080156130c45765ffff0000000019821691505b506001600160a01b039485166000818152600460209081526040808320979098168083529681528782208683528152878220949094559081526005835285812094815293825284842092845291905291902055565b60781b6dffffffffffffffffffffffffffff60781b166dffffffffffffffffffffffffffff60781b19919091161790565b60008080805b848110156135ce57600060408901819052606089015285858281811061317857613178615016565b90506080020160006004811061319057613190615016565b60209081029190910135604089810191825289516001600160a01b039081166000908152600485528281208c86018051841683529086528382208551835286528382205460608e019081528d518416835260058752848320915190931682528552828120935181529290935290205460c0890152516001600160601b0316158061325c575085858281811061322757613227615016565b90506080020160036004811061323f5761323f615016565b602002013561325a8860c0015162ffffff60489190911c1690565b115b6135c65785858281811061327257613272615016565b90506080020160016004811061328a5761328a615016565b60200201358686838181106132a1576132a1615016565b9050608002016001600481106132b9576132b9615016565b60200201356001600160601b0316146133145760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657257616e74732f393662697473000000006044820152606401610a85565b85858281811061332657613326615016565b90506080020160026004811061333e5761333e615016565b602002013586868381811061335557613355615016565b90506080020160026004811061336d5761336d615016565b60200201356001600160601b0316146133c85760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657247697665732f393662697473000000006044820152606401610a85565b8585828181106133da576133da615016565b9050608002016001600481106133f2576133f2615016565b6020020135608088015285858281811061340e5761340e615016565b90506080020160026004811061342657613426615016565b602002013560a0880152610100870151613441906001612973565b610100880181905287516001600160a01b039081166000908152600260209081526040808320828d015190941683529290529081209190915580806134868b8b613c48565b925092509250806f6d67762f74726164655375636365737360801b036134ad576001870196505b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b14613501576134fa8a600001518b602001516134e18d6060015160e01c90565b60608e015160c01c63ffffffff168e6101000151612fc4565b6101008b01525b6101008a0151613512906000612973565b8a610100018181525050896101000151600260008c600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008c602001516001600160a01b03166001600160a01b03168152602001908152602001600020819055506135808b8b614248565b61358a8b8b61434a565b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b146135b0576135b08b8b858585614436565b8a60400151860195508a60600151850194505050505b600101613150565b509450945094915050565b8015611dd057604051600090339083908381818185875af1925050503d8060008114613621576040519150601f19603f3d011682016040523d82523d6000602084013e613626565b606091505b505090508061098b5760405162461bcd60e51b815260206004820152601760248201527f6d67762f73656e6450656e616c747952657665727465640000000000000000006044820152606401610a85565b60008060008060008560e0015190506000866080015182146136cc5786516001600160a01b039081166000908152600460209081526040808320828c01519094168352928152828220858352905220546136d3565b8661014001515b90506001600160601b03811661372c5761012087015160381c63ffffffff1687516001600160a01b039081166000908152600460209081526040808320828d015190941683529281528282208483529052205490925090505b6137378782846144bc565b156137d15760005b60c082901c63ffffffff16156137b9575086516001600160a01b039081166000908152600460209081526040808320828c0151909416835292815282822063ffffffff60c086901c168084529152919020549061379d8983836144bc565b156137ad578093508192506137b3565b506137b9565b5061373f565b8260c083901c63ffffffff16909550935061385a9050565b60005b6137de8260e01c90565b156138475760006137ef8360e01c90565b89516001600160a01b039081166000908152600460209081526040808320828f0151909416835292815282822084835290522054925090506138328983836144bc565b1561383d5750613847565b92509050806137d4565b6138518260e01c90565b94509192508291505b8660800151841461386b5783613875565b61014087015160e01c5b876080015184146138865783613896565b61014088015160c01c63ffffffff165b9550955050505050915091565b60c01b63ffffffff60c01b1663ffffffff60c01b19919091161790565b8080156138e757508260c001516138de5760008260a00151116138e7565b60008260800151115b80156138f7575060008260400151115b15613ab35781516001600160a01b03908116600090815260056020908152604080832082870151909416835292815282822083860151835290529081205460c084015280806139468686613c48565b608088015160a089015160408a015160608b015160c08c015196995094975092955090939092906e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613a3d5760408b01518b51116139995760006139a2565b60408b01518b51035b60808b015260608b81015160208d01510360a08c01528a015160c01c63ffffffff168a6040018181525050600460008b600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b602001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b604001518152602001908152602001600020548a60600181815250505b613a5d8b8b886e1b59dd8bdb9bdd115e1958dd5d1959608a1b14156138c0565b60408a0183905260808a0185905260a08a0184905260608a0182905260c08a018190526e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613aa657613aa68b8b8a8a8a614436565b5050505050505050505050565b613ad28260000151836020015160008560400151866101000151612fc4565b6101008301819052613ae5906000612973565b610100830181905282516001600160a01b0390811660009081526002602090815260408083208288015190941683529290522055613b238383614248565b613b2d838361434a565b505050565b600080613b3d61497e565b60648185516020870160008a8af192508060448415020151915050935093915050565b6000806323b872dd60e01b858585604051602401613b8093929190614f3c565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509050600080876001600160a01b031683604051613bd0919061502c565b6000604051808303816000865af19150503d8060008114613c0d576040519150601f19603f3d011682016040523d82523d6000602084013e613c12565b606091505b5091509150818015613c3c575080511580613c3c575080806020019051810190613c3c9190615067565b98975050505050505050565b600080600080613c6885606001516001600160601b0360609190911c1690565b90506000613c8086606001516001600160601b031690565b608087015160a0880151919250908083028483021115613cc05750600095508594506e1b59dd8bdb9bdd115e1958dd5d1959608a1b935061424192505050565b8860c001518015613cd057508183105b80613ce757508860c00151158015613ce757508084105b15613cff576080880183905260a08801849052613d76565b8860c0015115613d4a57838202838181613d1b57613d1b615000565b0615613d28576001613d2b565b60005b60ff16848281613d3d57613d3d615000565b040160a08a015250613d76565b83600003613d5e5760808801839052613d76565b8381840281613d6f57613d6f615000565b0460808901525b50505050600080306001600160a01b031663aa4dd28260e01b878960a00151604051602401613da69291906150ea565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051613de4919061502c565b6000604051808303816000865af19150503d8060008114613e21576040519150601f19603f3d011682016040523d82523d6000602084013e613e26565b606091505b50915091508115613f805780806020019051810190613e459190615112565b94506f6d67762f74726164655375636365737360801b925085602001516001600160a01b031686600001516001600160a01b03167f1d81940ff2c3ac549c8acefd7c1b2ffb24aacc8b3cfa309c22abc3de79727f9d88604001518a60a001518a608001518b60a00151604051613edd94939291909384526001600160a01b039290921660208401526040830152606082015260800190565b60405180910390a360e086015160501c60ff1615613f5b5760e086015160a088015160405163cac1827160e01b815260609290921c9163cac1827191613f28918a91906004016150ea565b600060405180830381600087803b158015613f4257600080fd5b505af1158015613f56573d6000803e3d6000fd5b505050505b6080860151604088018051909101905260a08601516060880180519091019052614206565b602081015160408201516060830151909650945092506e1b59dd8bdb585ad95c94995d995c9d608a1b831480613fcd575082741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b145b80613fee575082731b59dd8bdb585ad95c949958d95a5d9951985a5b60621b145b156141005785602001516001600160a01b031686600001516001600160a01b03167f1d59c048edb5397821854bd12cbe02242b82101c677f949d076d14eb7bd8343688604001518a60a001518a608001518b60a001518960405161407d9594939291909485526001600160a01b0393909316602085015260408401919091526060830152608082015260a00190565b60405180910390a360e086015160501c60ff16156140fb5760e086015160a0880151604051631159507360e01b815260609290921c916311595073916140c8918a91906004016150ea565b600060405180830381600087803b1580156140e257600080fd5b505af11580156140f6573d6000803e3d6000fd5b505050505b614206565b827f6d67762f6e6f74456e6f756768476173466f724d616b657254726164650000000361416f5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6e6f74456e6f756768476173466f724d616b657254726164650000006044820152606401610a85565b82741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b036141ce5760405162461bcd60e51b81526020600482015260156024820152741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b6044820152606401610a85565b60405162461bcd60e51b815260206004820152600d60248201526c36b3bb17b9bbb0b822b93937b960991b6044820152606401610a85565b61423e86600001518760200151886040015189606001518a60c00151886f6d67762f74726164655375636365737360801b14156130a4565b50505b9250925092565b6101008101516000906127109060e81c61ffff168460400151028161426f5761426f615000565b04905080156142e557604083018051829003905260e0830181905281516000546142a391906001600160a01b031683614562565b6142e55760405162461bcd60e51b81526020600482015260136024820152721b59dd8bd99959551c985b9cd9995c91985a5b606a1b6044820152606401610a85565b604083015115613b2d5761430682600001518460a001518560400151614562565b613b2d5760405162461bcd60e51b815260206004820152601560248201527436b3bb17a6b3bb2330b4b62a37a830bcaa30b5b2b960591b6044820152606401610a85565b60a08201518151602083015160408086015160608701519151631154020b60e01b81526001600160a01b039485166004820152928416602484015260448301526064820152911690631154020b90608401600060405180830381600087803b1580156143b557600080fd5b505af11580156143c9573d6000803e3d6000fd5b5050505060006143e782602001518460a00151308660600151613b60565b905080613b2d5760405162461bcd60e51b815260206004820152601760248201527f6d67762f74616b65724661696c546f506179546f74616c0000000000000000006044820152606401610a85565b806f6d67762f74726164655375636365737360801b036144595761445984614637565b60c084015160481c62ffffff1680841115614472578093505b61448085858303858561467c565b84019350816f6d67762f74726164655375636365737360801b146144b4576144a885856147d2565b60808701805190910190525b505050505050565b6000816000036144ce57506001611343565b60408401516060858101516001600160601b039186901c82169291861691908084028284028082036145555789516001600160a01b039081166000908152600560209081526040808320828f015190941683529281528282208b835290529081205460481c62ffffff1660a08c015194029590930294909410159550611343945050505050565b1194506113439350505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839182918816906145c090859061502c565b6000604051808303816000865af19150503d80600081146145fd576040519150601f19603f3d011682016040523d82523d6000602084013e614602565b606091505b509150915081801561462c57508051158061462c57508080602001905181019061462c9190615067565b979650505050505050565b614657816020015161464d8360c0015160601c90565b8360a00151614562565b611dd057602081015160005460a083015161098b92916001600160a01b031690614562565b600080633d3d130d60e01b866040518060400160405280878152602001868152506040516024016146ae92919061512b565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319939093169290921790915260c087015190915060601c60005a90508660408204820310156147465760405162461bcd60e51b815260206004820181905260248201527f6d67762f6e6f74456e6f756768476173466f724d616b6572506f7374686f6f6b6044820152606401610a85565b600080614754848a87613b32565b915091505a83039550816147c55789602001516001600160a01b03168a600001516001600160a01b03167f51d5a3ecf332626d83c8207fe9bd22f38801f578c7eb222e2d811cd1b4c629a58c60400151846040516147bc929190918252602082015260400190565b60405180910390a35b5050505050949350505050565b60c082015160009062ffffff604882901c81169161ffff602082901c1660309190911c909116820102633b9aca00028184111561480d578193505b61010085015160009060601c62ffffff1660e08701519086019060401c61ffff16633b9aca0002029050818111156148425750805b61485b6148538760c0015160601c90565b828403611dd3565b95945050505050565b60405180610160016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60405180610120016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806101000160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001600015158152602001600081525090565b60405180608001604052806004906020820280368337509192915050565b80356001600160a01b03811681146149b357600080fd5b919050565b600080600080600060a086880312156149d057600080fd5b6149d98661499c565b94506149e76020870161499c565b94979496505050506040830135926060810135926080909101359150565b600060208284031215614a1757600080fd5b6113438261499c565b600060208284031215614a3257600080fd5b5035919050565b600080600060608486031215614a4e57600080fd5b614a578461499c565b9250614a656020850161499c565b9150604084013590509250925092565b60008083601f840112614a8757600080fd5b50813567ffffffffffffffff811115614a9f57600080fd5b6020830191508360208260071b85010111156119f457600080fd5b8015158114611dd057600080fd5b600080600080600060808688031215614ae057600080fd5b614ae98661499c565b9450614af76020870161499c565b9350604086013567ffffffffffffffff811115614b1357600080fd5b614b1f88828901614a75565b9094509250506060860135614b3381614aba565b809150509295509295909350565b600080600080600080600060e0888a031215614b5c57600080fd5b614b658861499c565b9650614b736020890161499c565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b60008060008060808587031215614bb557600080fd5b614bbe8561499c565b9350614bcc6020860161499c565b9250614bda6040860161499c565b9396929550929360600135925050565b600060208284031215614bfc57600080fd5b813561134381614aba565b60008060408385031215614c1a57600080fd5b614c238361499c565b9150614c316020840161499c565b90509250929050565b600080600080600080600080610100898b031215614c5757600080fd5b614c608961499c565b9750614c6e60208a0161499c565b979a9799505050506040860135956060810135956080820135955060a0820135945060c0820135935060e0909101359150565b60008060008060008060c08789031215614cba57600080fd5b614cc38761499c565b9550614cd16020880161499c565b945060408701359350606087013592506080870135614cef81614aba565b9150614cfd60a0880161499c565b90509295509295509295565b600080828403610140811215614d1e57600080fd5b61012080821215614d2e57600080fd5b849350610f7c81860161499c565b60008060008060808587031215614d5257600080fd5b614d5b8561499c565b9350614d696020860161499c565b9250604085013591506060850135614d8081614aba565b939692955090935050565b60008060008060008060008060006101208a8c031215614daa57600080fd5b614db38a61499c565b9850614dc160208b0161499c565b9750614dcf60408b0161499c565b9650614ddd60608b0161499c565b955060808a0135945060a08a0135935060c08a013560ff81168114614e0157600080fd5b8093505060e08a013591506101008a013590509295985092959850929598565b60008060008060008060a08789031215614e3a57600080fd5b614e438761499c565b9550614e516020880161499c565b9450604087013567ffffffffffffffff811115614e6d57600080fd5b614e7989828a01614a75565b9095509350506060870135614e8d81614aba565b9150614cfd6080880161499c565b60008060008060808587031215614eb157600080fd5b614eba8561499c565b9350614ec86020860161499c565b9250614ed66040860161499c565b9150614ee46060860161499c565b905092959194509250565b600080600080600060a08688031215614f0757600080fd5b614f108661499c565b9450614f1e6020870161499c565b935060408601359250606086013591506080860135614b3381614aba565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60008060408385031215614f7357600080fd5b505080516020909101519092909150565b61012081016001600160a01b0380614f9b8561499c565b16835280614fab6020860161499c565b1660208401525060408301356040830152606083013560608301526080830135608083015260a083013560a083015260c083013560c083015260e083013560e083015261010080840135818401525092915050565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000825160005b8181101561504d5760208186018101518583015201615033565b8181111561505c576000828501525b509190910192915050565b60006020828403121561507957600080fd5b815161134381614aba565b60018060a01b038082511683528060208301511660208401525060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152505050565b61014081016150f98285615084565b6001600160a01b03929092166101209190910152919050565b60006020828403121561512457600080fd5b5051919050565b610160810161513a8285615084565b82516101208301526020830151610140830152939250505056fea26469706673582212206f7a3c82f195bccff7131c6fed2cb383b9aa2b14228ede7529798084a7c9f14064736f6c634300080e003360a06040523480156200001157600080fd5b50604051620055e4380380620055e4833981016040819052620000349162000484565b828282604051806040016040528060088152602001674d616e67726f766560c01b815250808484847f72201d073f249840099a96530e189c4291c1852040b1e96ff1f606db656be4ff60405160405180910390a1620000938362000165565b6200009e82620001c4565b620000a98162000277565b620000b48362000327565b5050815160208084019190912060408051808201825260018152603160f81b9084015280517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f938101939093528201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c001905060408051601f19818403018152919052805160209091012060805250620004c99650505050505050565b6200016f620003d8565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f30906020015b60405180910390a150565b620001ce620003d8565b61ffff81168114620002275760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f31366269747300000000000060448201526064015b60405180910390fd5b62000243816001546200044960201b62001e221790919060201c565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001620001b9565b62000281620003d8565b808162ffffff1614620002d75760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f323462697473000000000000000060448201526064016200021e565b620002f3816001546200046760201b62001e451790919060201c565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001620001b9565b62000331620003d8565b6001600160a01b038116620003895760405162461bcd60e51b815260206004820152601360248201527f6d67762f636f6e6669672f676f762f6e6f74300000000000000000000000000060448201526064016200021e565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001620001b9565b6003546001600160a01b0316331480620003f157503330145b806200040657506003546001600160a01b0316155b620004475760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b60448201526064016200021e565b565b60401b69ffff00000000000000001661ffff60401b19919091161790565b60281b67ffffff00000000001662ffffff60281b19919091161790565b6000806000606084860312156200049a57600080fd5b83516001600160a01b0381168114620004b257600080fd5b602085015160409095015190969495509392505050565b6080516150f8620004ec60003960008181610364015261177e01526150f86000f3fe60806040526004361061024a5760003560e01c80636d27de6711610139578063b60d4288116100b6578063dc7e98df1161007a578063dc7e98df146108a8578063def5ddaa146108c8578063fbb66910146108e8578063fbfa77cf14610908578063fbffe5fd14610928578063fcaa7e2e1461094857600080fd5b8063b60d4288146107e4578063c7bb25d0146107ec578063cbf75c9a14610833578063d0ee509914610868578063db20266f1461088857600080fd5b8063aa4dd282116100fd578063aa4dd28214610744578063ab033ea914610764578063ad97db1b14610784578063b09d2a16146107a4578063b2b12057146107c457600080fd5b80636d27de671461061457806370a08231146106545780637ecebe00146106815780638c66715c146106ae57806395999ee31461072457600080fd5b80635722647b116101c7578063644e67031161018b578063644e6703146104cc5780636804f613146105835780636817031b146105a357806368c13d6b146105c35780636a4f76911461060157600080fd5b80635722647b146103f657806359eba454146104345780635a611f4e146104545780635aa6e675146104745780635cd82390146104ac57600080fd5b806330adf81f1161020e57806330adf81f146103105780633644e5151461035257806341c0e1b51461038657806346e142fa1461039b57806349f6d2dc146103e357600080fd5b80630b73a18f1461025f578063230244081461027f578063275074581461029257806327d097c6146102d05780632e1a7d4d146102f057600080fd5b3661025a5761025833610968565b005b600080fd5b34801561026b57600080fd5b5061025861027a366004614926565b61098f565b61025861028d366004614973565b610968565b34801561029e57600080fd5b506102bb6102ad36600461498e565b6001600160601b0316151590565b60405190151581526020015b60405180910390f35b3480156102dc57600080fd5b506102586102eb3660046149a7565b610a2d565b3480156102fc57600080fd5b506102bb61030b36600461498e565b610b08565b34801561031c57600080fd5b506103447fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a281565b6040519081526020016102c7565b34801561035e57600080fd5b506103447f000000000000000000000000000000000000000000000000000000000000000081565b34801561039257600080fd5b50610258610b62565b3480156103a757600080fd5b506103bb6103b6366004614a36565b610baa565b604080519586526020860194909452928401919091526060830152608082015260a0016102c7565b6103446103f1366004614aaf565b610bd6565b34801561040257600080fd5b506103446104113660046149a7565b600560209081526000938452604080852082529284528284209052825290205481565b34801561044057600080fd5b506102bb61044f366004614b0d565b610d41565b34801561046057600080fd5b5061025861046f366004614b58565b610dca565b34801561048057600080fd5b50600354610494906001600160a01b031681565b6040516001600160a01b0390911681526020016102c7565b3480156104b857600080fd5b506102586104c7366004614973565b610e24565b3480156104d857600080fd5b506104ec6104e7366004614b75565b610e84565b6040805183516001600160a01b0316815260208085015115158183015284830151151582840152606080860151818401526080808701518185015260a0968701511515878501528551151560c0808601919091529286015160e0850152938501516101008401528401516101208301529183015115156101408201529282015161016084015201516101808201526101a0016102c7565b34801561058f57600080fd5b5061025861059e366004614b58565b610f87565b3480156105af57600080fd5b506102586105be366004614973565b610fd1565b3480156105cf57600080fd5b506103446105de3660046149a7565b600460209081526000938452604080852082529284528284209052825290205481565b61025861060f366004614ba8565b611027565b34801561062057600080fd5b5061063461062f366004614c0f565b61113a565b6040805194855260208501939093529183015260608201526080016102c7565b34801561066057600080fd5b5061034461066f366004614973565b60066020526000908152604090205481565b34801561068d57600080fd5b5061034461069c366004614973565b60086020526000908152604090205481565b3480156106ba57600080fd5b506106ce6106c93660046149a7565b611171565b60408051835181526020808501518183015284830151828401526060948501518583015283516001600160a01b0316608083015283015160a08201529082015160c082015291015160e0820152610100016102c7565b34801561073057600080fd5b5061025861073f36600461498e565b61124d565b34801561075057600080fd5b5061034461075f366004614c77565b6112e9565b34801561077057600080fd5b5061025861077f366004614973565b61141e565b34801561079057600080fd5b5061034461079f366004614caa565b6114c0565b3480156107b057600080fd5b506102586107bf366004614cf9565b611692565b3480156107d057600080fd5b506103bb6107df366004614d8f565b61198b565b6102586119c7565b3480156107f857600080fd5b50610344610807366004614e09565b600760209081526000948552604080862082529385528385208152918452828420909152825290205481565b34801561083f57600080fd5b5061085361084e366004614b75565b6119d2565b604080519283526020830191909152016102c7565b34801561087457600080fd5b50610258610883366004614b75565b611acf565b34801561089457600080fd5b506102bb6108a3366004614b75565b611b40565b3480156108b457600080fd5b506102586108c33660046149a7565b611b7b565b3480156108d457600080fd5b506103446108e3366004614b75565b611c3b565b3480156108f457600080fd5b506102586109033660046149a7565b611c73565b34801561091457600080fd5b50600054610494906001600160a01b031681565b34801561093457600080fd5b50610634610943366004614e5d565b611d60565b34801561095457600080fd5b5061025861096336600461498e565b611d87565b60006109756000806119d2565b50905061098181611e64565b61098b8234611ea7565b5050565b610997611f03565b6001600160a01b0385811660008181526002602090815260408083209489168084529482529182902080546001600160f81b0316600160f81b17905581516001815291517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a3610a10858585611b7b565b610a1b858584611c73565b610a26858583610a2d565b5050505050565b610a35611f03565b808162ffffff1614610a8e5760405162461bcd60e51b815260206004820152601f60248201527f6d67762f636f6e6669672f6f666665725f676173626173652f3234626974730060448201526064015b60405180910390fd5b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805462ffffff60601b191662ffffff60601b606088901b1617905590518481527fc5859916e5f3fc1ed4d2cfb8c7a6cf709580f228fa0c9d9e0fa468744c7e4a9191015b60405180910390a3505050565b6000610b143383611f6e565b60405133908390600081818185875af1925050503d8060008114610b54576040519150601f19603f3d011682016040523d82523d6000602084013e610b59565b606091505b50909392505050565b610b6a611f03565b60015464ff000000001916640100000000176001556040517fbe26733c2bf6ff3ea5ba8cfe744422bd49052ff9ed5685c9e81e6f9321dbaddd90600090a1565b6000806000806000610bc08a8a8a8a8a33612033565b939e929d50909b50995090975095505050505050565b6000610be06147d2565b610bea89896119d2565b6101208301819052610100830191909152610c0490612180565b610c188161010001518261012001516121cc565b3415610c2857610c283334611ea7565b61012081015160181c63ffffffff166001016080820181905263ffffffff811614610c8b5760405162461bcd60e51b81526020600482015260136024820152726d67762f6f6666657249644f766572666c6f7760681b6044820152606401610a85565b6080810151610120820151610cb79160181b66ffffffff0000001666ffffffff00000019919091161790565b6101208201526001600160a01b03808a16825288166020820152604081018790526060810186905260a0810185905260c0810184905260e08101839052610cff81600061221c565b61012081015181516001600160a01b03908116600090815260026020908152604080832082870151909416835292905220556080015198975050505050505050565b6001600160a01b038085166000818152600760209081526040808320888616808552908352818420338086529084528285209689168552959092528083208690555191939092917f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d91610db79188908890614eaa565b60405180910390a3506001949350505050565b610dd2611f03565b60015460ff60501b191660ff60501b605083901b161760015560405181151581527f9b84fe4d9ffc14a6f7ec50c18884ee0d4bb8165aa718a28558df12ab4bd32b14906020015b60405180910390a150565b610e2c611f03565b6001546001600160601b03166001600160601b0319606083901b16176001556040516001600160a01b03821681527ff592e42c32883b35bebfbf9d9b801570a25d5ccbba452310746ad2cfd20d548f90602001610e19565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152610efa6040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b600080610f0786866119d2565b91509150610f71826040805160c081018252606083811c8252605884901c60ff9081161515602080850191909152605086901c82161515848601529385901c61ffff1691830191909152602884901c62ffffff1660808301529290911c909116151560a082015290565b9350610f7c81612999565b925050509250929050565b610f8f611f03565b600154610f9c9082612a47565b60015560405181151581527fbf39fbfab835c119637f4dbc4fb0f428c559c210200405d1ec25ddb50a93f9d490602001610e19565b610fd9611f03565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f3090602001610e19565b61102f6147d2565b61103989896119d2565b610120830181905261010083019190915261105390612180565b6110678161010001518261012001516121cc565b3415611077576110773334611ea7565b6001600160a01b03808a16808352908916602080840182905260408085018b9052606085018a90526080850186905260a0850189905260c0850188905260e0850187905260009384526004825280842092845291815281832085845290529020546101408201526101208101516110ef82600161221c565b610120820151811461112e5761012082015182516001600160a01b03908116600090815260026020908152604080832082880151909416835292905220555b50505050505050505050565b60008060008061114e8a8a8a8a8a8a612a5e565b929650909450925090506111648a8a8786612d46565b9650965096509692505050565b61119c6040518060800160405280600081526020016000815260200160008152602001600081525090565b6111d0604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b6001600160a01b03808616600090815260046020908152604080832093881683529281528282208683529052205461120781612e46565b6001600160a01b038088166000908152600560209081526040808320938a1683529281528282208883529052205490935061124181612ea8565b92505050935093915050565b611255611f03565b808162ffffff16146112a95760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f32346269747300000000000000006044820152606401610a85565b6001546112b69082611e45565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001610e19565b600033301461133a5760405162461bcd60e51b815260206004820152601760248201527f6d67762f666c6173686c6f616e2f70726f7465637465640000000000000000006044820152606401610a85565b61135961134d6040850160208601614973565b83308660a00135612f17565b156113da576113836113716040850160208601614973565b60c085013560601c8560a00135612fff565b1561139857611391836130d6565b9050611418565b60408051606081018252731b59dd8bdb585ad95c949958d95a5d9951985a5b60621b8152600060208201819052918101919091526113d590606081fd5b611418565b60408051606081018252741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b81526000602082018190529181019190915261141890606081fd5b92915050565b611426611f03565b6001600160a01b0381166114725760405162461bcd60e51b815260206004820152601360248201527206d67762f636f6e6669672f676f762f6e6f743606c1b6044820152606401610a85565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001610e19565b6000806114cd86866119d2565b9150506114d981612180565b6001600160a01b038087166000818152600460209081526040808320948a1680845294825280832089845282528083205493835260058252808320948352938152838220888352905291909120546115318160601c90565b6001600160a01b0316336001600160a01b0316146115915760405162461bcd60e51b815260206004820152601d60248201527f6d67762f726574726163744f666665722f756e617574686f72697a65640000006044820152606401610a85565b6001600160601b038216156115f557826115c189896115b08660e01c90565b60c087901c63ffffffff1688613257565b93508084146115f3576001600160a01b03808a166000908152600260209081526040808320938c168352929052208490555b505b61160388888885858a613337565b841561163a57603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca000202935061163a3385611ea7565b866001600160a01b0316886001600160a01b03167fe2ce51fba856682424155a2d89b2ad1d2adde6ea0a9e3115b4b474cd6cb1798b8860405161167f91815260200190565b60405180910390a3505050949350505050565b428410156116d75760405162461bcd60e51b81526020600482015260126024820152711b59dd8bdc195c9b5a5d0bd95e1c1a5c995960721b6044820152606401610a85565b6001600160a01b03878116600081815260086020908152604080832080546001810190915581517fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a2818501528f8716818401528e871660608201526080810195909552948b1660a085015260c084018a905260e084018590526101008085018a9052815180860390910181526101208501909152805191012061190160f01b6101408401527f0000000000000000000000000000000000000000000000000000000000000000610142840152610162830152906101820160408051601f198184030181528282528051602091820120600080855291840180845281905260ff89169284019290925260608301879052608083018690529092509060019060a0016020604051602081039080840390855afa158015611819573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381161580159061184f5750896001600160a01b0316816001600160a01b0316145b61189b5760405162461bcd60e51b815260206004820152601b60248201527f6d67762f7065726d69742f696e76616c69645369676e617475726500000000006044820152606401610a85565b87600760008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008b6001600160a01b03166001600160a01b03168152602001908152602001600020819055508a6001600160a01b03168c6001600160a01b03167f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d8c8c8c60405161197593929190614eaa565b60405180910390a3505050505050505050505050565b60008060008060006119a18b8b8b8b8b8b612033565b9398509196509450925090506119b98b8b8886612d46565b965096509650965096915050565b6119d033610968565b565b6001546001600160a01b03838116600090815260026020908152604080832093861683529290522054605882901c60ff1615611ac857600080611a158460601c90565b604051636968abd360e01b81526001600160a01b03888116600483015287811660248301529190911690636968abd3906044016040805180830381865afa158015611a64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a889190614ece565b91509150611a998261ffff81161490565b15611aab57611aa88483611e22565b93505b6001600160701b0381168103611ac557610f7c83826133ac565b50505b9250929050565b611ad7611f03565b6001600160a01b03828116600081815260026020908152604080832094861680845294825280832080546001600160f81b031690558051928352517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a35050565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054605881901c60ff1615155b949350505050565b611b83611f03565b6101f4811115611bcc5760405162461bcd60e51b815260206004820152601460248201527306d67762f636f6e6669672f6665652f3c3d3530360641b6044820152606401610a85565b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805461ffff60e81b191661ffff60e81b60e888901b1617905590518481527f44a6d70a601a6f8a85c075467e9d7245897140cbf6dd505c9d9d764459f5fb649101610afb565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054603881901c63ffffffff16611b73565b611c7b611f03565b6001600160701b0381168114611cd35760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f64656e736974792f313132626974730000000000006044820152606401610a85565b6001600160a01b03808416600090815260026020908152604080832093861683529290522054611d0390826133ac565b6001600160a01b038481166000818152600260209081526040808320948816808452948252918290209490945551848152919290917f95f1a495c6d9d1a215995408f6ad898c2b33798d6eb3cf3220b4c6cc8b61b0649101610afb565b600080600080611d74898989898933612a5e565b929c919b50995090975095505050505050565b611d8f611f03565b61ffff81168114611de25760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f3136626974730000000000006044820152606401610a85565b600154611def9082611e22565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001610e19565b60401b69ffff00000000000000001669ffff000000000000000019919091161790565b60281b67ffffff00000000001667ffffff000000000019919091161790565b602081901c60ff1615611ea45760405162461bcd60e51b81526020600482015260086024820152671b59dd8bd919585960c21b6044820152606401610a85565b50565b6001600160a01b03821660008181526006602052604090819020805484019055517f1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa09490611ef79084815260200190565b60405180910390a25050565b6003546001600160a01b0316331480611f1b57503330145b80611f2f57506003546001600160a01b0316155b6119d05760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b6044820152606401610a85565b6001600160a01b03821660009081526006602052604090205481811015611fd75760405162461bcd60e51b815260206004820152601960248201527f6d67762f696e73756666696369656e7450726f766973696f6e000000000000006044820152606401610a85565b6001600160a01b038316600081815260066020526040908190208484039055517f59c79d79be0fadf59fe689b6952b7ebe90201a3a1f00d4a31982377890bc6046906120269085815260200190565b60405180910390a2505050565b600080600080600061204361483e565b6001600160a01b03808d1682528b1660208201526120618c8c6119d2565b61010083015260e082015261207461489c565b6001600160a01b03881660a082015288151560c082015260e08201516101008301516120a091906121cc565b6120ae826101000151612180565b6040517fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b990600090a16120e381838d8d6133dd565b608084015192995090975095506120f990613862565b602080830151835160808085015160e0860151604080518d81529687018c905286019190915260608501526001600160a01b03808d1694938116939216917ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec47910160405180910390a4806080015193508060e0015192505050965096509650965096915050565b605881901c60ff1615611ea45760405162461bcd60e51b81526020600482015260146024820152731b59dd8bdc99595b9d1c985b98de531bd8dad95960621b6044820152606401610a85565b6121d582611e64565b6121e18160f81c151590565b61098b5760405162461bcd60e51b815260206004820152600c60248201526b6d67762f696e61637469766560a01b6044820152606401610a85565b60c082015161ffff8116146122735760405162461bcd60e51b815260206004820152601e60248201527f6d67762f77726974654f666665722f67617370726963652f31366269747300006044820152606401610a85565b61010082015160401c61ffff168260c00151101561229e5761010082015160401c61ffff1660c08301525b61010082015160281c62ffffff168260a0015111156122ff5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f6761737265712f746f6f486967680000006044820152606401610a85565b60008260600151116123535760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f746f6f4c6f7700000000006044820152606401610a85565b61012082015160781c6001600160701b031661012083015160601c62ffffff168360a001510102826060015110156123cd5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f64656e736974792f746f6f4c6f770000006044820152606401610a85565b60608201516001600160601b038116146124295760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f39366269747300000000006044820152606401610a85565b60408201516001600160601b038116146124855760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f77616e74732f39366269747300000000006044820152606401610a85565b60008061249184613900565b9150915083602001516001600160a01b031684600001516001600160a01b03167f2b101f9ef8ca2761d91bea55ab50a4d051e9248088ff7314ddb8826839544c2a33876040015188606001518960c001518a60a001518b608001518a60405161253697969594939291906001600160a01b03979097168752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b60405180910390a383516001600160a01b039081166000908152600560209081526040808320828901519094168352928152828220608088015183529052908120548415612610576125888160601c90565b6001600160a01b0316336001600160a01b0316146125e85760405162461bcd60e51b815260206004820152601c60248201527f6d67762f7570646174654f666665722f756e617574686f72697a6564000000006044820152606401610a85565b603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca00020291505b84158061262a575060a0860151604882901c62ffffff1614155b80612641575060c0860151602082901c61ffff1614155b80612662575061012086015160601c62ffffff16603082901c62ffffff1614155b1561270c5761012086015160009060601c62ffffff1690506126d2338860a00151838a60c0015160201b65ffff000000001660309190911b68ffffff0000000000001660489290921b6bffffff0000000000000000001660609390931b6001600160601b03191692909217171790565b87516001600160a01b039081166000908152600560209081526040808320828d0151909416835292815282822060808c0151835290522055505b5060c08501516101208601516000919060601c62ffffff168760a001510102633b9aca000290508181111561274c5761274733838303611f6e565b612760565b818110156127605761276033828403611ea7565b506101408501516001600160601b03161580612784575061014085015160e01c8314155b1561291057821561280a57608085015185516001600160a01b039081166000908152600460209081526040808320828b01519094168352928152828220878352905220546127d191613b2c565b85516001600160a01b039081166000908152600460209081526040808320828b015190941683529281528282208783529052205561283d565b60808501516101208601516128369160381b63ffffffff60381b1663ffffffff60381b19919091161790565b6101208601525b81156128b457608085015185516001600160a01b039081166000908152600460208181526040808420828c018051871686529083528185208986528352818520548c518716865293835281852090519095168452938152838320878452905291902060e09290921b6001600160e01b039091161790555b8380156128ce57506101408501516001600160601b031615155b1561291057612909856000015186602001516128ef88610140015160e01c90565b61014089015160c01c63ffffffff16896101200151613257565b6101208601525b60408501516060808701516000926001600160601b03909116911b6bffffffffffffffffffffffff60601b1660c085901b63ffffffff60c01b1660e087901b17171786516001600160a01b039081166000908152600460209081526040808320828c015190941683529281528282206080909a0151825298909852909620959095555050505050565b6129dd6040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b60f882901c1515815260e882901c61ffff166020820152607882901c6001600160701b03166040820152606082811c62ffffff1690820152605882901c60ff1615156080820152603882901c63ffffffff90811660a083015260189290921c90911660c082015290565b60581b60ff60581b1660ff60581b19919091161790565b60008060008087886001600160a01b031614612abc5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657257616e74732f313630626974730000006044820152606401610a85565b86876001600160a01b031614612b145760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657247697665732f313630626974730000006044820152606401610a85565b612b1c61483e565b6001600160a01b03808c1682528a166020820152612b3a8b8b6119d2565b610100830181905260e083019190915260381c63ffffffff1660408083019182526001600160a01b03808e16600090815260046020908152838220928f1682529182528281209351815292905290205460608201526080810189905260a08101889052612ba561489c565b898152602081018990526001600160a01b03871660a082015287151560c082015260e0820151610100830151612bdb91906121cc565b612be9826101000151612180565b610100820151612bfa906001612a47565b82610100018181525050816101000151600260008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020819055507fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b960405160405180910390a1612c8e81836001613b49565b612c9b8160800151613862565b866001600160a01b03168b6001600160a01b03168d6001600160a01b03167ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec478460400151856060015186608001518760e00151604051612d14949392919093845260208401929092526040830152606082015260800190565b60405180910390a460408101516060820151608083015160e090930151919e909d50919b509950975050505050505050565b6001600160a01b0380851660009081526007602090815260408083208785168452825280832093861683529281528282203383529052205481811015612dc15760405162461bcd60e51b815260206004820152601060248201526f6d67762f6c6f77416c6c6f77616e636560801b6044820152606401610a85565b6001600160a01b0380861660008181526007602090815260408083208986168085529083528184209589168452948252808320338085529252918290208686039081905591517f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d92612e37928992909190614eaa565b60405180910390a35050505050565b612e716040518060800160405280600081526020016000815260200160008152602001600081525090565b60e082901c815263ffffffff60c083901c1660208201526001600160601b03606083811c8216604084015292169181019190915290565b612edc604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b606082811c8252604883901c62ffffff908116602080850191909152603085901c90911660408401529290921c61ffff169181019190915290565b6000806323b872dd60e01b858585604051602401612f3793929190614eaa565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509050600080876001600160a01b031683604051612f879190614ef2565b6000604051808303816000865af19150503d8060008114612fc4576040519150601f19603f3d011682016040523d82523d6000602084013e612fc9565b606091505b5091509150818015612ff3575080511580612ff3575080806020019051810190612ff39190614f2d565b98975050505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928391829188169061305d908590614ef2565b6000604051808303816000865af19150503d806000811461309a576040519150601f19603f3d011682016040523d82523d6000602084013e61309f565b606091505b50915091508180156130c95750805115806130c95750808060200190518101906130c99190614f2d565b93505050505b9392505050565b600080636c49c32c60e01b836040516024016130f29190614f4a565b60408051808303601f190181529190526020810180516001600160e01b0319939093166001600160e01b0390931692909217909152905060c0830135604881901c62ffffff169060601c60005a905082604082048203101561319457604080516060810182527f6d67762f6e6f74456e6f756768476173466f724d616b6572547261646500000081526000602082018190529181019190915261319490606081fd5b6000806131a2848688613db1565b915091505a83039650816131e8576131e860405180606001604052806e1b59dd8bdb585ad95c94995d995c9d608a1b81526020018960001b815260200183815250606081fd5b60006132066131fa60208b018b614973565b86308c60800135612f17565b90508061324b5761324b6040518060600160405280741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b81526020018a60001b815260200184815250606081fd5b50505050505050919050565b600083156132ca576001600160a01b0380871660009081526004602090815260408083209389168352928152828220878352905220546132979084613b2c565b6001600160a01b038088166000908152600460209081526040808320938a168352928152828220888352905220556132e7565b63ffffffff60381b19821663ffffffff60381b603885901b161791505b821561332e576001600160a01b038681166000908152600460209081526040808320938916835292815282822086835290522080546001600160e01b031660e086901b1790555b50949350505050565b6001600160601b03198316925080156133575765ffff0000000019821691505b506001600160a01b039485166000818152600460209081526040808320979098168083529681528782208683528152878220949094559081526005835285812094815293825284842092845291905291902055565b60781b6dffffffffffffffffffffffffffff60781b166dffffffffffffffffffffffffffff60781b19919091161790565b60008080805b8481101561385757600060408901819052606089015285858281811061340b5761340b614fdc565b90506080020160006004811061342357613423614fdc565b60209081029190910135604089810191825289516001600160a01b039081166000908152600485528281208c86018051841683529086528382208551835286528382205460608e019081528d518416835260058752848320915190931682528552828120935181529290935290205460c0890152516001600160601b031615806134ef57508585828181106134ba576134ba614fdc565b9050608002016003600481106134d2576134d2614fdc565b60200201356134ed8860c0015162ffffff60489190911c1690565b115b61384f5785858281811061350557613505614fdc565b90506080020160016004811061351d5761351d614fdc565b602002013586868381811061353457613534614fdc565b90506080020160016004811061354c5761354c614fdc565b60200201356001600160601b0316146135a75760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657257616e74732f393662697473000000006044820152606401610a85565b8585828181106135b9576135b9614fdc565b9050608002016002600481106135d1576135d1614fdc565b60200201358686838181106135e8576135e8614fdc565b90506080020160026004811061360057613600614fdc565b60200201356001600160601b03161461365b5760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657247697665732f393662697473000000006044820152606401610a85565b85858281811061366d5761366d614fdc565b90506080020160016004811061368557613685614fdc565b602002013560808801528585828181106136a1576136a1614fdc565b9050608002016002600481106136b9576136b9614fdc565b602002013560a08801526101008701516136d4906001612a47565b610100880181905287516001600160a01b039081166000908152600260209081526040808320828d015190941683529290529081209190915580806137198b8b613ddf565b925092509250806f6d67762f74726164655375636365737360801b03613740576001870196505b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b146137945761378d8a600001518b602001516137748d6060015160e01c90565b60608e015160c01c63ffffffff168e6101000151613257565b6101008b01525b6101008a01516137a5906000612a47565b8a610100018181525050896101000151600260008c600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008c602001516001600160a01b03166001600160a01b03168152602001908152602001600020819055506138138b8b6143df565b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b14613839576138398b8b8585856144e1565b8a60400151860195508a60600151850194505050505b6001016133e3565b509450945094915050565b8015611ea457604051600090339083908381818185875af1925050503d80600081146138aa576040519150601f19603f3d011682016040523d82523d6000602084013e6138af565b606091505b505090508061098b5760405162461bcd60e51b815260206004820152601760248201527f6d67762f73656e6450656e616c747952657665727465640000000000000000006044820152606401610a85565b60008060008060008560e0015190506000866080015182146139555786516001600160a01b039081166000908152600460209081526040808320828c015190941683529281528282208583529052205461395c565b8661014001515b90506001600160601b0381166139b55761012087015160381c63ffffffff1687516001600160a01b039081166000908152600460209081526040808320828d015190941683529281528282208483529052205490925090505b6139c0878284614544565b15613a5a5760005b60c082901c63ffffffff1615613a42575086516001600160a01b039081166000908152600460209081526040808320828c0151909416835292815282822063ffffffff60c086901c1680845291529190205490613a26898383614544565b15613a3657809350819250613a3c565b50613a42565b506139c8565b8260c083901c63ffffffff169095509350613ae39050565b60005b613a678260e01c90565b15613ad0576000613a788360e01c90565b89516001600160a01b039081166000908152600460209081526040808320828f015190941683529281528282208483529052205492509050613abb898383614544565b15613ac65750613ad0565b9250905080613a5d565b613ada8260e01c90565b94509192508291505b86608001518414613af45783613afe565b61014087015160e01c5b87608001518414613b0f5783613b1f565b61014088015160c01c63ffffffff165b9550955050505050915091565b60c01b63ffffffff60c01b1663ffffffff60c01b19919091161790565b808015613b7057508260c00151613b675760008260a0015111613b70565b60008260800151115b8015613b80575060008260400151115b15613d3c5781516001600160a01b03908116600090815260056020908152604080832082870151909416835292815282822083860151835290529081205460c08401528080613bcf8686613ddf565b608088015160a089015160408a015160608b015160c08c015196995094975092955090939092906e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613cc65760408b01518b5111613c22576000613c2b565b60408b01518b51035b60808b015260608b81015160208d01510360a08c01528a015160c01c63ffffffff168a6040018181525050600460008b600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b602001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b604001518152602001908152602001600020548a60600181815250505b613ce68b8b886e1b59dd8bdb9bdd115e1958dd5d1959608a1b1415613b49565b60408a0183905260808a0185905260a08a0184905260608a0182905260c08a018190526e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613d2f57613d2f8b8b8a8a8a6144e1565b5050505050505050505050565b613d5b8260000151836020015160008560400151866101000151613257565b6101008301819052613d6e906000612a47565b610100830181905282516001600160a01b0390811660009081526002602090815260408083208288015190941683529290522055613dac83836143df565b505050565b600080613dbc6148ec565b60648185516020870160008a8af192508060448415020151915050935093915050565b600080600080613dff85606001516001600160601b0360609190911c1690565b90506000613e1786606001516001600160601b031690565b608087015160a0880151919250908083028483021115613e575750600095508594506e1b59dd8bdb9bdd115e1958dd5d1959608a1b93506143d892505050565b8860c001518015613e6757508183105b80613e7e57508860c00151158015613e7e57508084105b15613e96576080880183905260a08801849052613f0d565b8860c0015115613ee157838202838181613eb257613eb2614fc6565b0615613ebf576001613ec2565b60005b60ff16848281613ed457613ed4614fc6565b040160a08a015250613f0d565b83600003613ef55760808801839052613f0d565b8381840281613f0657613f06614fc6565b0460808901525b50505050600080306001600160a01b031663aa4dd28260e01b878960a00151604051602401613f3d929190615058565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051613f7b9190614ef2565b6000604051808303816000865af19150503d8060008114613fb8576040519150601f19603f3d011682016040523d82523d6000602084013e613fbd565b606091505b509150915081156141175780806020019051810190613fdc9190615080565b94506f6d67762f74726164655375636365737360801b925085602001516001600160a01b031686600001516001600160a01b03167f1d81940ff2c3ac549c8acefd7c1b2ffb24aacc8b3cfa309c22abc3de79727f9d88604001518a60a001518a608001518b60a0015160405161407494939291909384526001600160a01b039290921660208401526040830152606082015260800190565b60405180910390a360e086015160501c60ff16156140f25760e086015160a088015160405163cac1827160e01b815260609290921c9163cac18271916140bf918a9190600401615058565b600060405180830381600087803b1580156140d957600080fd5b505af11580156140ed573d6000803e3d6000fd5b505050505b6080860151604088018051909101905260a0860151606088018051909101905261439d565b602081015160408201516060830151909650945092506e1b59dd8bdb585ad95c94995d995c9d608a1b831480614164575082741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b145b80614185575082731b59dd8bdb585ad95c949958d95a5d9951985a5b60621b145b156142975785602001516001600160a01b031686600001516001600160a01b03167f1d59c048edb5397821854bd12cbe02242b82101c677f949d076d14eb7bd8343688604001518a60a001518a608001518b60a00151896040516142149594939291909485526001600160a01b0393909316602085015260408401919091526060830152608082015260a00190565b60405180910390a360e086015160501c60ff16156142925760e086015160a0880151604051631159507360e01b815260609290921c9163115950739161425f918a9190600401615058565b600060405180830381600087803b15801561427957600080fd5b505af115801561428d573d6000803e3d6000fd5b505050505b61439d565b827f6d67762f6e6f74456e6f756768476173466f724d616b65725472616465000000036143065760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6e6f74456e6f756768476173466f724d616b657254726164650000006044820152606401610a85565b82741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b036143655760405162461bcd60e51b81526020600482015260156024820152741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b6044820152606401610a85565b60405162461bcd60e51b815260206004820152600d60248201526c36b3bb17b9bbb0b822b93937b960991b6044820152606401610a85565b6143d586600001518760200151886040015189606001518a60c00151886f6d67762f74726164655375636365737360801b1415613337565b50505b9250925092565b6101008101516000906127109060e81c61ffff168460400151028161440657614406614fc6565b049050801561447c57604083018051829003905260e08301819052815160005461443a91906001600160a01b031683612fff565b61447c5760405162461bcd60e51b81526020600482015260136024820152721b59dd8bd99959551c985b9cd9995c91985a5b606a1b6044820152606401610a85565b604083015115613dac5761449d82600001518460a001518560400151612fff565b613dac5760405162461bcd60e51b815260206004820152601560248201527436b3bb17a6b3bb2330b4b62a37a830bcaa30b5b2b960591b6044820152606401610a85565b60c084015160481c62ffffff16808411156144fa578093505b6145088585830385856145ea565b84019350816f6d67762f74726164655375636365737360801b1461453c576145308585614740565b60808701805190910190525b505050505050565b600081600003614556575060016130cf565b60408401516060858101516001600160601b039186901c82169291861691908084028284028082036145dd5789516001600160a01b039081166000908152600560209081526040808320828f015190941683529281528282208b835290529081205460481c62ffffff1660a08c0151940295909302949094101595506130cf945050505050565b1194506130cf9350505050565b600080633d3d130d60e01b8660405180604001604052808781526020018681525060405160240161461c929190615099565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319939093169290921790915260c087015190915060601c60005a90508660408204820310156146b45760405162461bcd60e51b815260206004820181905260248201527f6d67762f6e6f74456e6f756768476173466f724d616b6572506f7374686f6f6b6044820152606401610a85565b6000806146c2848a87613db1565b915091505a83039550816147335789602001516001600160a01b03168a600001516001600160a01b03167f51d5a3ecf332626d83c8207fe9bd22f38801f578c7eb222e2d811cd1b4c629a58c604001518460405161472a929190918252602082015260400190565b60405180910390a35b5050505050949350505050565b60c082015160009062ffffff604882901c81169161ffff602082901c1660309190911c909116820102633b9aca00028184111561477b578193505b61010085015160009060601c62ffffff1660e08701519086019060401c61ffff16633b9aca0002029050818111156147b05750805b6147c96147c18760c0015160601c90565b828403611ea7565b95945050505050565b60405180610160016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60405180610120016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806101000160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001600015158152602001600081525090565b60405180608001604052806004906020820280368337509192915050565b80356001600160a01b038116811461492157600080fd5b919050565b600080600080600060a0868803121561493e57600080fd5b6149478661490a565b94506149556020870161490a565b94979496505050506040830135926060810135926080909101359150565b60006020828403121561498557600080fd5b6130cf8261490a565b6000602082840312156149a057600080fd5b5035919050565b6000806000606084860312156149bc57600080fd5b6149c58461490a565b92506149d36020850161490a565b9150604084013590509250925092565b60008083601f8401126149f557600080fd5b50813567ffffffffffffffff811115614a0d57600080fd5b6020830191508360208260071b8501011115611ac857600080fd5b8015158114611ea457600080fd5b600080600080600060808688031215614a4e57600080fd5b614a578661490a565b9450614a656020870161490a565b9350604086013567ffffffffffffffff811115614a8157600080fd5b614a8d888289016149e3565b9094509250506060860135614aa181614a28565b809150509295509295909350565b600080600080600080600060e0888a031215614aca57600080fd5b614ad38861490a565b9650614ae16020890161490a565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b60008060008060808587031215614b2357600080fd5b614b2c8561490a565b9350614b3a6020860161490a565b9250614b486040860161490a565b9396929550929360600135925050565b600060208284031215614b6a57600080fd5b81356130cf81614a28565b60008060408385031215614b8857600080fd5b614b918361490a565b9150614b9f6020840161490a565b90509250929050565b600080600080600080600080610100898b031215614bc557600080fd5b614bce8961490a565b9750614bdc60208a0161490a565b979a9799505050506040860135956060810135956080820135955060a0820135945060c0820135935060e0909101359150565b60008060008060008060c08789031215614c2857600080fd5b614c318761490a565b9550614c3f6020880161490a565b945060408701359350606087013592506080870135614c5d81614a28565b9150614c6b60a0880161490a565b90509295509295509295565b600080828403610140811215614c8c57600080fd5b61012080821215614c9c57600080fd5b849350610f7c81860161490a565b60008060008060808587031215614cc057600080fd5b614cc98561490a565b9350614cd76020860161490a565b9250604085013591506060850135614cee81614a28565b939692955090935050565b60008060008060008060008060006101208a8c031215614d1857600080fd5b614d218a61490a565b9850614d2f60208b0161490a565b9750614d3d60408b0161490a565b9650614d4b60608b0161490a565b955060808a0135945060a08a0135935060c08a013560ff81168114614d6f57600080fd5b8093505060e08a013591506101008a013590509295985092959850929598565b60008060008060008060a08789031215614da857600080fd5b614db18761490a565b9550614dbf6020880161490a565b9450604087013567ffffffffffffffff811115614ddb57600080fd5b614de789828a016149e3565b9095509350506060870135614dfb81614a28565b9150614c6b6080880161490a565b60008060008060808587031215614e1f57600080fd5b614e288561490a565b9350614e366020860161490a565b9250614e446040860161490a565b9150614e526060860161490a565b905092959194509250565b600080600080600060a08688031215614e7557600080fd5b614e7e8661490a565b9450614e8c6020870161490a565b935060408601359250606086013591506080860135614aa181614a28565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60008060408385031215614ee157600080fd5b505080516020909101519092909150565b6000825160005b81811015614f135760208186018101518583015201614ef9565b81811115614f22576000828501525b509190910192915050565b600060208284031215614f3f57600080fd5b81516130cf81614a28565b61012081016001600160a01b0380614f618561490a565b16835280614f716020860161490a565b1660208401525060408301356040830152606083013560608301526080830135608083015260a083013560a083015260c083013560c083015260e083013560e083015261010080840135818401525092915050565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60018060a01b038082511683528060208301511660208401525060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152505050565b61014081016150678285614ff2565b6001600160a01b03929092166101209190910152919050565b60006020828403121561509257600080fd5b5051919050565b61016081016150a88285614ff2565b82516101208301526020830151610140830152939250505056fea264697066735822122063bc37507b0e565e2a8136c576c1357b3a90b594b4c54a87e5a42e97ece520f764736f6c634300080e003360806040526000805460ff1916600117905534801561001d57600080fd5b50604051610c49380380610c4983398101604081905261003c9161009f565b600080546001600160a01b0394851661010002610100600160a81b0319909116179055600180549284166001600160a01b0319938416179055600280549190931691161790556100ec565b6001600160a01b038116811461009c57600080fd5b50565b6000806000606084860312156100b457600080fd5b83516100bf81610087565b60208501519093506100d081610087565b60408501519092506100e181610087565b809150509250925092565b610b4e806100fb6000396000f3fe6080604052600436106100ab5760003560e01c8063a3cfe14d11610064578063a3cfe14d146101ee578063aa2cc08b1461020e578063b04220dd146100fa578063e1f21c671461022e578063f8ccbf471461024e578063ff2e2d331461026857600080fd5b8063080d7c4d146100b75780631154020b146100d95780632d24c42f146100fa5780633a768463146101345780634d1d2b6614610174578063978b7c02146101be57600080fd5b366100b257005b600080fd5b3480156100c357600080fd5b506100d76100d23660046107db565b610288565b005b3480156100e557600080fd5b506100d76100f4366004610807565b50505050565b34801561010657600080fd5b5061011a61011536600461084d565b61031f565b604080519283526020830191909152015b60405180910390f35b34801561014057600080fd5b5061015c737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b03909116815260200161012b565b34801561018057600080fd5b5061019461018f36600461084d565b6103c7565b6040805195151586526020860194909452928401919091526060830152608082015260a00161012b565b3480156101ca57600080fd5b506101de6101d936600461084d565b6104c3565b604051901515815260200161012b565b3480156101fa57600080fd5b506100d76102093660046107db565b61053b565b34801561021a57600080fd5b5061011a61022936600461086f565b610579565b34801561023a57600080fd5b506100d76102493660046108ca565b610617565b34801561025a57600080fd5b506000546101de9060ff1681565b34801561027457600080fd5b506101de61028336600461090b565b61068a565b60005460015460025460405163167ae91560e21b81526001600160a01b039283166004820152908216602482015284821660448201526064810184905261010090920416906359eba454906084015b6020604051808303816000875af11580156102f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031a919061098e565b505050565b600080546001805460025460405163fbffe5fd60e01b81526001600160a01b03928316600482015290821660248201526044810187905260648101869052608481019290925283926101009004169063fbffe5fd9060a4016080604051808303816000875af1158015610396573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ba91906109b0565b5091969095509350505050565b60008060008060008061040f60405180608001604052808a81526020018981526020016bffffffffffffffffffffffff8016815260200165ffffffffffff8016815250610748565b6000805460018054600254604051632370a17d60e11b8152959650939485948594859485946001600160a01b036101009093048316946346e142fa9461046094928316939216918c916004016109e6565b60a0604051808303816000875af115801561047f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a39190610a7b565b60019094149e50919c509a50985096505050505050509295509295909350565b60405163268e95b360e11b815260048101839052602481018290526000903090634d1d2b669060440160a0604051808303816000875af115801561050b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052f9190610abb565b50929695505050505050565b60005460405163095ea7b360e01b81526101009091046001600160a01b0390811660048301526024820183905283169063095ea7b3906044016102d7565b60405163fbffe5fd60e01b81526001600160a01b0385811660048301528481166024830152604482018490526064820183905260016084830152600091829188169063fbffe5fd9060a4016080604051808303816000875af11580156105e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060791906109b0565b5091999098509650505050505050565b60405163095ea7b360e01b81526001600160a01b0383811660048301526024820183905284169063095ea7b3906044016020604051808303816000875af1158015610666573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100f4919061098e565b6000806106b6604051806080016040528088815260200187815260200186815260200185815250610748565b90506000896001600160a01b03166346e142fa8a8a8560016040518563ffffffff1660e01b81526004016106ed94939291906109e6565b60a0604051808303816000875af115801561070c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107309190610a7b565b50506001909214945050505050979650505050505050565b60408051600180825281830190925260609160009190816020015b61076b6107a5565b815260200190600190039081610763579050509050828160008151811061079457610794610b02565b602090810291909101015292915050565b60405180608001604052806004906020820280368337509192915050565b6001600160a01b03811681146107d857600080fd5b50565b600080604083850312156107ee57600080fd5b82356107f9816107c3565b946020939093013593505050565b6000806000806080858703121561081d57600080fd5b8435610828816107c3565b93506020850135610838816107c3565b93969395505050506040820135916060013590565b6000806040838503121561086057600080fd5b50508035926020909101359150565b600080600080600060a0868803121561088757600080fd5b8535610892816107c3565b945060208601356108a2816107c3565b935060408601356108b2816107c3565b94979396509394606081013594506080013592915050565b6000806000606084860312156108df57600080fd5b83356108ea816107c3565b925060208401356108fa816107c3565b929592945050506040919091013590565b600080600080600080600060e0888a03121561092657600080fd5b8735610931816107c3565b96506020880135610941816107c3565b95506040880135610951816107c3565b969995985095966060810135965060808101359560a0820135955060c0909101359350915050565b8051801515811461098957600080fd5b919050565b6000602082840312156109a057600080fd5b6109a982610979565b9392505050565b600080600080608085870312156109c657600080fd5b505082516020840151604085015160609095015191969095509092509050565b6001600160a01b038581168252841660208083019190915260806040830181905284518382018190526000928681019160a08601919085805b82811015610a5c57855185835b6004811015610a4957825182529186019190860190600101610a2c565b5050509483019493860193600101610a1f565b5050505085151560608601529250610a72915050565b95945050505050565b600080600080600060a08688031215610a9357600080fd5b5050835160208501516040860151606087015160809097015192989197509594509092509050565b600080600080600060a08688031215610ad357600080fd5b610adc86610979565b602087015160408801516060890151608090990151929a91995097965090945092505050565b634e487b7160e01b600052603260045260246000fdfea264697066735822122037fdda2c3f9e65c58a2aa53916c2c81a6db7d75b5fede39a7f49baa6761eb0e364736f6c634300080e0033608060405234801561001057600080fd5b5060405161206d38038061206d83398101604081905261002f91610092565b600180546001600160a01b0394851661010002610100600160a81b0319909116179055600280549284166001600160a01b0319938416179055600380549190931691161790556100df565b6001600160a01b038116811461008f57600080fd5b50565b6000806000606084860312156100a757600080fd5b83516100b28161007a565b60208501519093506100c38161007a565b60408501519092506100d48161007a565b809150509250925092565b611f7f806100ee6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631f7b6d32146100515780635686153214610067578063a5e3875114610092578063e9c4a3ac146100a7575b600080fd5b6000546040519081526020015b60405180910390f35b61007a61007536600461047a565b6100af565b6040516001600160a01b03909116815260200161005e565b6100a56100a036600461047a565b6100de565b005b6100a5610320565b60008082815481106100c3576100c3610493565b6000918252602090912001546001600160a01b031692915050565b60015460ff16610311578067ffffffffffffffff811115610101576101016104a9565b60405190808252806020026020018201604052801561012a578160200160208202803683370190505b50805161013f916000916020909101906103f3565b5060005b8181101561030f576001546002546003546040516101009093046001600160a01b03908116939281169291169061017990610458565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f0801580156101b5573d6000803e3d6000fd5b50600082815481106101c9576101c9610493565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506000818154811061020a5761020a610493565b60009182526020909120015460025460405163a3cfe14d60e01b81526001600160a01b039182166004820152678ac7230489e80000602482015291169063a3cfe14d90604401600060405180830381600087803b15801561026a57600080fd5b505af115801561027e573d6000803e3d6000fd5b505050506000818154811061029557610295610493565b600091825260209091200154604051635239cafb60e11b8152821560048201526001600160a01b039091169063a47395f690602401600060405180830381600087803b1580156102e457600080fd5b505af11580156102f8573d6000803e3d6000fd5b505050508080610307906104bf565b915050610143565b505b506001805460ff191681179055565b600080549061032f82476104e6565b90506000811161037b5760405162461bcd60e51b8152602060048201526013602482015272181032ba3432b9103a37903a3930b739b332b960691b604482015260640160405180910390fd5b60005b828110156103ee57600080828154811061039a5761039a610493565b60009182526020822001546040516001600160a01b039091169250829085156108fc0290869084818181858888f193505050509050806103d957600080fd5b505080806103e6906104bf565b91505061037e565b505050565b828054828255906000526020600020908101928215610448579160200282015b8281111561044857825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610413565b50610454929150610465565b5090565b611a418061050983390190565b5b808211156104545760008155600101610466565b60006020828403121561048c57600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6000600182016104df57634e487b7160e01b600052601160045260246000fd5b5060010190565b60008261050357634e487b7160e01b600052601260045260246000fd5b50049056fe60806040526004805463ff00ff00191663010001001790553480156200002457600080fd5b5060405162001a4138038062001a418339810160408190526200004791620000a3565b600080546001600160a01b039485166001600160a01b031991821617909155600180549385169382169390931790925560028054919093169116179055620000f7565b6001600160a01b0381168114620000a057600080fd5b50565b600080600060608486031215620000b957600080fd5b8351620000c6816200008a565b6020850151909350620000d9816200008a565b6040850151909250620000ec816200008a565b809150509250925092565b61193a80620001076000396000f3fe6080604052600436106101bb5760003560e01c8063ba414fa6116100ec578063e923c6511161008a578063fa7626d411610064578063fa7626d414610550578063fc3816c81461056f578063fc8349f21461058f578063ffae399e146105af57600080fd5b8063e923c651146104ef578063f5537ede1461050f578063f8ccbf471461052f57600080fd5b8063ccfbf94d116100c6578063ccfbf94d1461046f578063cda30c3b1461048f578063d3845fea146104af578063e67ecda1146104cf57600080fd5b8063ba414fa61461040a578063c4c6c87d1461042f578063cafffca81461044f57600080fd5b80635a4924e8116101595780637ec95ff3116101335780637ec95ff31461037c5780638b0af9bb1461039c578063a3cfe14d146103b1578063a47395f6146103d157600080fd5b80635a4924e8146102f55780636c49c32c146103235780637a943a371461034357600080fd5b80633a768463116101955780633a768463146102295780633d3d130d1461026e57806353e575ac1461028e578063557f49c3146102bc57600080fd5b80630cc9d656146101c75780632644c05c146101e957806333ac5efd1461020957600080fd5b366101c257005b600080fd5b3480156101d357600080fd5b506101e76101e236600461142d565b6105e8565b005b3480156101f557600080fd5b506101e7610204366004611492565b610631565b34801561021557600080fd5b506101e76102243660046114cd565b6106af565b34801561023557600080fd5b50610251737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561027a57600080fd5b506101e7610289366004611529565b610731565b34801561029a57600080fd5b506102ae6102a9366004611492565b61078d565b604051908152602001610265565b3480156102c857600080fd5b506101e76102d736600461157a565b60028054911515600160a81b0260ff60a81b19909216919091179055565b34801561030157600080fd5b506101e761031036600461157a565b6004805460ff1916911515919091179055565b34801561032f57600080fd5b506102ae61033e36600461159e565b610821565b34801561034f57600080fd5b506101e761035e36600461157a565b60028054911515600160b81b0260ff60b81b19909216919091179055565b34801561038857600080fd5b506102ae6103973660046114cd565b610988565b3480156103a857600080fd5b506102ae610a1d565b3480156103bd57600080fd5b506101e76103cc3660046115bb565b610a8f565b3480156103dd57600080fd5b506101e76103ec36600461157a565b60028054911515600160a01b0260ff60a01b19909216919091179055565b34801561041657600080fd5b5061041f610b0b565b6040519015158152602001610265565b34801561043b57600080fd5b506102ae61044a3660046115e7565b610c3a565b34801561045b57600080fd5b506102ae61046a3660046115e7565b610ccd565b34801561047b57600080fd5b506102ae61048a366004611600565b610d1e565b34801561049b57600080fd5b506102ae6104aa366004611659565b610d9e565b3480156104bb57600080fd5b506101e76104ca3660046115e7565b610e30565b3480156104db57600080fd5b506101e76104ea3660046115e7565b600355565b3480156104fb57600080fd5b506102ae61050a366004611492565b610e92565b34801561051b57600080fd5b506101e761052a36600461168b565b610f1b565b34801561053b57600080fd5b5060045461041f906301000000900460ff1681565b34801561055c57600080fd5b5060045461041f90610100900460ff1681565b34801561057b57600080fd5b506102ae61058a3660046116cc565b610f94565b34801561059b57600080fd5b5061041f6105aa3660046115e7565b611022565b3480156105bb57600080fd5b506101e76105ca36600461157a565b60028054911515600160b01b0260ff60b01b19909216919091179055565b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c28686868686866040516106219695949392919061172e565b60405180910390a1505050505050565b60008054600154600254604051636a4f769160e01b81526001600160a01b0393841694636a4f7691946106769481169316918b918b918b91908b908b90600401611767565b600060405180830381600087803b15801561069057600080fd5b505af11580156106a4573d6000803e3d6000fd5b505050505050505050565b60008054600154600254604051636a4f769160e01b81526001600160a01b0393841694636a4f76919487946106f794908216939116918d918d918d918d908d90600401611767565b6000604051808303818588803b15801561071057600080fd5b505af1158015610724573d6000803e3d6000fd5b5050505050505050505050565b6003541561077f5761077f81602001356003546040518060400160405280601881526020017f496e636f727265637420737461747573206d6573736167650000000000000000815250611092565b61078982826110da565b5050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc9387936107d4939183169216908c908c908c908a908d906004016117ab565b60206040518083038185885af11580156107f2573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061081791906117e9565b9695505050505050565b600254600090600160b01b900460ff161561085c576040805160208082019092526f1d195cdd13585ad95c8bdc995d995c9d60821b81529081fd5b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c23361088b6020850185611802565b61089b6040860160208701611802565b856040013586608001358760a001356040516108bc9695949392919061172e565b60405180910390a1600254600160a01b900460ff161561095f576108e36020830183611802565b6000805460405163095ea7b360e01b81526001600160a01b0391821660048201526024810192909252919091169063095ea7b3906044016020604051808303816000875af1158015610939573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095d919061181f565b505b600254600160a81b900460ff161561098057506418589bdc9d60da1b919050565b506000919050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc9387936109cf939183169216908d908d908d908d908d906004016117ab565b60206040518083038185885af11580156109ed573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610a1291906117e9565b979650505050505050565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610a66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8a91906117e9565b905090565b60005460405163095ea7b360e01b81526001600160a01b039182166004820152602481018390529083169063095ea7b3906044016020604051808303816000875af1158015610ae2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b06919061181f565b505050565b60045460009062010000900460ff1615610b2f575060045462010000900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610c355760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610bbd917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611868565b60408051601f1981840301815290829052610bd791611899565b6000604051808303816000865af19150503d8060008114610c14576040519150601f19603f3d011682016040523d82523d6000602084013e610c19565b606091505b5091505080806020019051810190610c31919061181f565b9150505b919050565b6000805460015460025460405163ad97db1b60e01b81526001600160a01b0392831660048201529082166024820152604481018590526064810184905291169063ad97db1b906084015b6020604051808303816000875af1158015610ca3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc791906117e9565b92915050565b600080546001805460025460405163ad97db1b60e01b81526001600160a01b03928316600482015290821660248201526044810186905260648101929092529091169063ad97db1b90608401610c84565b6000805460405163127db4b760e21b81526001600160a01b03909116906349f6d2dc90610d5b908a908a908a908a908a9089908b906004016117ab565b6020604051808303816000875af1158015610d7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1291906117e9565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc93610de493908216929116908a908a908a9089908b906004016117ab565b6020604051808303816000875af1158015610e03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2791906117e9565b95945050505050565b600054604051630460488160e31b81523060048201526001600160a01b039091169063230244089083906024016000604051808303818588803b158015610e7657600080fd5b505af1158015610e8a573d6000803e3d6000fd5b505050505050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc93610ed893908216929116908b908b908b908b908b906004016117ab565b6020604051808303816000875af1158015610ef7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081791906117e9565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af1158015610f6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8e919061181f565b50505050565b6000805460405163127db4b760e21b81526001600160a01b03909116906349f6d2dc908490610fd3908c908c908c908c908c908a908d906004016117ab565b60206040518083038185885af1158015610ff1573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061101691906117e9565b98975050505050505050565b60008054604051632e1a7d4d60e01b8152600481018490526001600160a01b0390911690632e1a7d4d906024016020604051808303816000875af115801561106e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc7919061181f565b818314610b06577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583816040516110c891906118b5565b60405180910390a1610b0683836111e2565b60045460ff16156111205760405162461bcd60e51b815260206004820152600c60248201526b1c1bdcdd1a1bdbdad1985a5b60a21b604482015260640160405180910390fd5b600254600160b81b900460ff1615610789576000546001600160a01b0316636a4f76916111506020850185611802565b6111606040860160208701611802565b606080870135901c6bffffffffffffffffffffffff166bffffffffffffffffffffffff60608801351660c088013560481c62ffffff16600060608a013560e01c8a604001356040518963ffffffff1660e01b81526004016111c8989796959493929190611767565b600060405180830381600087803b158015610e7657600080fd5b808214610789577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516112569060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974604082015264657333325d60d81b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a1610789737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156114025760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526113a19291602001611868565b60408051601f19818403018152908290526113bb91611899565b6000604051808303816000865af19150503d80600081146113f8576040519150601f19603f3d011682016040523d82523d6000602084013e6113fd565b606091505b505050505b6004805462ff0000191662010000179055565b6001600160a01b038116811461142a57600080fd5b50565b60008060008060008060c0878903121561144657600080fd5b863561145181611415565b9550602087013561146181611415565b9450604087013561147181611415565b959894975094956060810135955060808101359460a0909101359350915050565b600080600080600060a086880312156114aa57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b60008060008060008060c087890312156114e657600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b6000610120828403121561152357600080fd5b50919050565b60008082840361016081121561153e57600080fd5b6115488585611510565b9250604061011f198201121561155d57600080fd5b50610120830190509250929050565b801515811461142a57600080fd5b60006020828403121561158c57600080fd5b81356115978161156c565b9392505050565b600061012082840312156115b157600080fd5b6115978383611510565b600080604083850312156115ce57600080fd5b82356115d981611415565b946020939093013593505050565b6000602082840312156115f957600080fd5b5035919050565b60008060008060008060c0878903121561161957600080fd5b863561162481611415565b9550602087013561163481611415565b95989597505050506040840135936060810135936080820135935060a0909101359150565b6000806000806080858703121561166f57600080fd5b5050823594602084013594506040840135936060013592509050565b6000806000606084860312156116a057600080fd5b83356116ab81611415565b925060208401356116bb81611415565b929592945050506040919091013590565b600080600080600080600060e0888a0312156116e757600080fd5b87356116f281611415565b9650602088013561170281611415565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b6001600160a01b03968716815294861660208601529290941660408401526060830152608082019290925260a081019190915260c00190565b6001600160a01b03988916815296909716602087015260408601949094526060850192909252608084015260a083015260c082015260e08101919091526101000190565b6001600160a01b03978816815295909616602086015260408501939093526060840191909152608083015260a082015260c081019190915260e00190565b6000602082840312156117fb57600080fd5b5051919050565b60006020828403121561181457600080fd5b813561159781611415565b60006020828403121561183157600080fd5b81516115978161156c565b60005b8381101561185757818101518382015260200161183f565b83811115610f8e5750506000910152565b6001600160e01b031983168152815160009061188b81600485016020870161183c565b919091016004019392505050565b600082516118ab81846020870161183c565b9190910192915050565b60408152600560408201526422b93937b960d91b606082015260806020820152600082518060808401526118f08160a085016020870161183c565b601f01601f19169190910160a0019291505056fea2646970667358221220758e228e653deeab2b14f8b888185a342a3bf92b0afc7614c92763efafc6472a64736f6c634300080e0033a264697066735822122028664c34373e72c49123f9c3469bcfa72398b0533b5bf2e6737015883ecc80b564736f6c634300080e003360806040526004805463ff00ff00191663010001001790553480156200002457600080fd5b5060405162001a4138038062001a418339810160408190526200004791620000a3565b600080546001600160a01b039485166001600160a01b031991821617909155600180549385169382169390931790925560028054919093169116179055620000f7565b6001600160a01b0381168114620000a057600080fd5b50565b600080600060608486031215620000b957600080fd5b8351620000c6816200008a565b6020850151909350620000d9816200008a565b6040850151909250620000ec816200008a565b809150509250925092565b61193a80620001076000396000f3fe6080604052600436106101bb5760003560e01c8063ba414fa6116100ec578063e923c6511161008a578063fa7626d411610064578063fa7626d414610550578063fc3816c81461056f578063fc8349f21461058f578063ffae399e146105af57600080fd5b8063e923c651146104ef578063f5537ede1461050f578063f8ccbf471461052f57600080fd5b8063ccfbf94d116100c6578063ccfbf94d1461046f578063cda30c3b1461048f578063d3845fea146104af578063e67ecda1146104cf57600080fd5b8063ba414fa61461040a578063c4c6c87d1461042f578063cafffca81461044f57600080fd5b80635a4924e8116101595780637ec95ff3116101335780637ec95ff31461037c5780638b0af9bb1461039c578063a3cfe14d146103b1578063a47395f6146103d157600080fd5b80635a4924e8146102f55780636c49c32c146103235780637a943a371461034357600080fd5b80633a768463116101955780633a768463146102295780633d3d130d1461026e57806353e575ac1461028e578063557f49c3146102bc57600080fd5b80630cc9d656146101c75780632644c05c146101e957806333ac5efd1461020957600080fd5b366101c257005b600080fd5b3480156101d357600080fd5b506101e76101e236600461142d565b6105e8565b005b3480156101f557600080fd5b506101e7610204366004611492565b610631565b34801561021557600080fd5b506101e76102243660046114cd565b6106af565b34801561023557600080fd5b50610251737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561027a57600080fd5b506101e7610289366004611529565b610731565b34801561029a57600080fd5b506102ae6102a9366004611492565b61078d565b604051908152602001610265565b3480156102c857600080fd5b506101e76102d736600461157a565b60028054911515600160a81b0260ff60a81b19909216919091179055565b34801561030157600080fd5b506101e761031036600461157a565b6004805460ff1916911515919091179055565b34801561032f57600080fd5b506102ae61033e36600461159e565b610821565b34801561034f57600080fd5b506101e761035e36600461157a565b60028054911515600160b81b0260ff60b81b19909216919091179055565b34801561038857600080fd5b506102ae6103973660046114cd565b610988565b3480156103a857600080fd5b506102ae610a1d565b3480156103bd57600080fd5b506101e76103cc3660046115bb565b610a8f565b3480156103dd57600080fd5b506101e76103ec36600461157a565b60028054911515600160a01b0260ff60a01b19909216919091179055565b34801561041657600080fd5b5061041f610b0b565b6040519015158152602001610265565b34801561043b57600080fd5b506102ae61044a3660046115e7565b610c3a565b34801561045b57600080fd5b506102ae61046a3660046115e7565b610ccd565b34801561047b57600080fd5b506102ae61048a366004611600565b610d1e565b34801561049b57600080fd5b506102ae6104aa366004611659565b610d9e565b3480156104bb57600080fd5b506101e76104ca3660046115e7565b610e30565b3480156104db57600080fd5b506101e76104ea3660046115e7565b600355565b3480156104fb57600080fd5b506102ae61050a366004611492565b610e92565b34801561051b57600080fd5b506101e761052a36600461168b565b610f1b565b34801561053b57600080fd5b5060045461041f906301000000900460ff1681565b34801561055c57600080fd5b5060045461041f90610100900460ff1681565b34801561057b57600080fd5b506102ae61058a3660046116cc565b610f94565b34801561059b57600080fd5b5061041f6105aa3660046115e7565b611022565b3480156105bb57600080fd5b506101e76105ca36600461157a565b60028054911515600160b01b0260ff60b01b19909216919091179055565b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c28686868686866040516106219695949392919061172e565b60405180910390a1505050505050565b60008054600154600254604051636a4f769160e01b81526001600160a01b0393841694636a4f7691946106769481169316918b918b918b91908b908b90600401611767565b600060405180830381600087803b15801561069057600080fd5b505af11580156106a4573d6000803e3d6000fd5b505050505050505050565b60008054600154600254604051636a4f769160e01b81526001600160a01b0393841694636a4f76919487946106f794908216939116918d918d918d918d908d90600401611767565b6000604051808303818588803b15801561071057600080fd5b505af1158015610724573d6000803e3d6000fd5b5050505050505050505050565b6003541561077f5761077f81602001356003546040518060400160405280601881526020017f496e636f727265637420737461747573206d6573736167650000000000000000815250611092565b61078982826110da565b5050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc9387936107d4939183169216908c908c908c908a908d906004016117ab565b60206040518083038185885af11580156107f2573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061081791906117e9565b9695505050505050565b600254600090600160b01b900460ff161561085c576040805160208082019092526f1d195cdd13585ad95c8bdc995d995c9d60821b81529081fd5b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c23361088b6020850185611802565b61089b6040860160208701611802565b856040013586608001358760a001356040516108bc9695949392919061172e565b60405180910390a1600254600160a01b900460ff161561095f576108e36020830183611802565b6000805460405163095ea7b360e01b81526001600160a01b0391821660048201526024810192909252919091169063095ea7b3906044016020604051808303816000875af1158015610939573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095d919061181f565b505b600254600160a81b900460ff161561098057506418589bdc9d60da1b919050565b506000919050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc9387936109cf939183169216908d908d908d908d908d906004016117ab565b60206040518083038185885af11580156109ed573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610a1291906117e9565b979650505050505050565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610a66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8a91906117e9565b905090565b60005460405163095ea7b360e01b81526001600160a01b039182166004820152602481018390529083169063095ea7b3906044016020604051808303816000875af1158015610ae2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b06919061181f565b505050565b60045460009062010000900460ff1615610b2f575060045462010000900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610c355760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610bbd917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611868565b60408051601f1981840301815290829052610bd791611899565b6000604051808303816000865af19150503d8060008114610c14576040519150601f19603f3d011682016040523d82523d6000602084013e610c19565b606091505b5091505080806020019051810190610c31919061181f565b9150505b919050565b6000805460015460025460405163ad97db1b60e01b81526001600160a01b0392831660048201529082166024820152604481018590526064810184905291169063ad97db1b906084015b6020604051808303816000875af1158015610ca3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc791906117e9565b92915050565b600080546001805460025460405163ad97db1b60e01b81526001600160a01b03928316600482015290821660248201526044810186905260648101929092529091169063ad97db1b90608401610c84565b6000805460405163127db4b760e21b81526001600160a01b03909116906349f6d2dc90610d5b908a908a908a908a908a9089908b906004016117ab565b6020604051808303816000875af1158015610d7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1291906117e9565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc93610de493908216929116908a908a908a9089908b906004016117ab565b6020604051808303816000875af1158015610e03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2791906117e9565b95945050505050565b600054604051630460488160e31b81523060048201526001600160a01b039091169063230244089083906024016000604051808303818588803b158015610e7657600080fd5b505af1158015610e8a573d6000803e3d6000fd5b505050505050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc93610ed893908216929116908b908b908b908b908b906004016117ab565b6020604051808303816000875af1158015610ef7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081791906117e9565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af1158015610f6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8e919061181f565b50505050565b6000805460405163127db4b760e21b81526001600160a01b03909116906349f6d2dc908490610fd3908c908c908c908c908c908a908d906004016117ab565b60206040518083038185885af1158015610ff1573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061101691906117e9565b98975050505050505050565b60008054604051632e1a7d4d60e01b8152600481018490526001600160a01b0390911690632e1a7d4d906024016020604051808303816000875af115801561106e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc7919061181f565b818314610b06577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583816040516110c891906118b5565b60405180910390a1610b0683836111e2565b60045460ff16156111205760405162461bcd60e51b815260206004820152600c60248201526b1c1bdcdd1a1bdbdad1985a5b60a21b604482015260640160405180910390fd5b600254600160b81b900460ff1615610789576000546001600160a01b0316636a4f76916111506020850185611802565b6111606040860160208701611802565b606080870135901c6bffffffffffffffffffffffff166bffffffffffffffffffffffff60608801351660c088013560481c62ffffff16600060608a013560e01c8a604001356040518963ffffffff1660e01b81526004016111c8989796959493929190611767565b600060405180830381600087803b158015610e7657600080fd5b808214610789577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516112569060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974604082015264657333325d60d81b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a1610789737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156114025760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526113a19291602001611868565b60408051601f19818403018152908290526113bb91611899565b6000604051808303816000865af19150503d80600081146113f8576040519150601f19603f3d011682016040523d82523d6000602084013e6113fd565b606091505b505050505b6004805462ff0000191662010000179055565b6001600160a01b038116811461142a57600080fd5b50565b60008060008060008060c0878903121561144657600080fd5b863561145181611415565b9550602087013561146181611415565b9450604087013561147181611415565b959894975094956060810135955060808101359460a0909101359350915050565b600080600080600060a086880312156114aa57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b60008060008060008060c087890312156114e657600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b6000610120828403121561152357600080fd5b50919050565b60008082840361016081121561153e57600080fd5b6115488585611510565b9250604061011f198201121561155d57600080fd5b50610120830190509250929050565b801515811461142a57600080fd5b60006020828403121561158c57600080fd5b81356115978161156c565b9392505050565b600061012082840312156115b157600080fd5b6115978383611510565b600080604083850312156115ce57600080fd5b82356115d981611415565b946020939093013593505050565b6000602082840312156115f957600080fd5b5035919050565b60008060008060008060c0878903121561161957600080fd5b863561162481611415565b9550602087013561163481611415565b95989597505050506040840135936060810135936080820135935060a0909101359150565b6000806000806080858703121561166f57600080fd5b5050823594602084013594506040840135936060013592509050565b6000806000606084860312156116a057600080fd5b83356116ab81611415565b925060208401356116bb81611415565b929592945050506040919091013590565b600080600080600080600060e0888a0312156116e757600080fd5b87356116f281611415565b9650602088013561170281611415565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b6001600160a01b03968716815294861660208601529290941660408401526060830152608082019290925260a081019190915260c00190565b6001600160a01b03988916815296909716602087015260408601949094526060850192909252608084015260a083015260c082015260e08101919091526101000190565b6001600160a01b03978816815295909616602086015260408501939093526060840191909152608083015260a082015260c081019190915260e00190565b6000602082840312156117fb57600080fd5b5051919050565b60006020828403121561181457600080fd5b813561159781611415565b60006020828403121561183157600080fd5b81516115978161156c565b60005b8381101561185757818101518382015260200161183f565b83811115610f8e5750506000910152565b6001600160e01b031983168152815160009061188b81600485016020870161183c565b919091016004019392505050565b600082516118ab81846020870161183c565b9190910192915050565b60408152600560408201526422b93937b960d91b606082015260806020820152600082518060808401526118f08160a085016020870161183c565b601f01601f19169190910160a0019291505056fea2646970667358221220758e228e653deeab2b14f8b888185a342a3bf92b0afc7614c92763efafc6472a64736f6c634300080e00336101406040523480156200001257600080fd5b5060405162001bb838038062001bb88339810160408190526200003591620002c1565b82828180604051806040016040528060018152602001603160f81b815250848481600390805190602001906200006d9291906200014e565b508051620000839060049060208401906200014e565b5050825160208085019190912083518483012060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81880181905281830187905260608201869052608082019490945230818401528151808203909301835260c0019052805194019390932091935091906080523060c05261012052505050506001600160a01b03969096166000908152600860205260409020805460ff19166001179055505060ff1660095550620003a1915050565b8280546200015c9062000365565b90600052602060002090601f016020900481019282620001805760008555620001cb565b82601f106200019b57805160ff1916838001178555620001cb565b82800160010185558215620001cb579182015b82811115620001cb578251825591602001919060010190620001ae565b50620001d9929150620001dd565b5090565b5b80821115620001d95760008155600101620001de565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200021c57600080fd5b81516001600160401b0380821115620002395762000239620001f4565b604051601f8301601f19908116603f01168101908282118183101715620002645762000264620001f4565b816040528381526020925086838588010111156200028157600080fd5b600091505b83821015620002a5578582018301518183018401529082019062000286565b83821115620002b75760008385830101525b9695505050505050565b60008060008060808587031215620002d857600080fd5b84516001600160a01b0381168114620002f057600080fd5b60208601519094506001600160401b03808211156200030e57600080fd5b6200031c888389016200020a565b945060408701519150808211156200033357600080fd5b5062000342878288016200020a565b925050606085015160ff811681146200035a57600080fd5b939692955090935050565b600181811c908216806200037a57607f821691505b6020821081036200039b57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e05161010051610120516117c7620003f160003960006109290152600061097801526000610953015260006108ac015260006108d60152600061090001526117c76000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806340c10f19116100c357806395d89b411161007c57806395d89b41146102c45780639dc29fac146102cc578063a457c2d7146102df578063a9059cbb146102f2578063d505accf14610305578063dd62ed3e1461031857600080fd5b806340c10f1914610236578063704802751461024957806370a082311461025c5780637a6d69b4146102855780637ecebe00146102a85780638ea2da7d146102bb57600080fd5b80631e7be210116101155780631e7be210146101cd57806323b872dd146101e057806325db769e146101f3578063313ce567146102065780633644e5151461021b578063395093511461022357600080fd5b806306fdde0314610152578063095ea7b31461017057806316c02129146101935780631785f53c146101a857806318160ddd146101bb575b600080fd5b61015a61032b565b604051610167919061140b565b60405180910390f35b61018361017e36600461147c565b6103bd565b6040519015158152602001610167565b6101a66101a13660046114a6565b610444565b005b6101a66101b63660046114a6565b610477565b6002545b604051908152602001610167565b6101a66101db3660046114a6565b6104a0565b6101836101ee3660046114c8565b6104cd565b6101bf610201366004611504565b610589565b60095460405160ff9091168152602001610167565b6101bf6105af565b61018361023136600461147c565b6105be565b6101a661024436600461147c565b6105ea565b6101a66102573660046114a6565b610600565b6101bf61026a3660046114a6565b6001600160a01b031660009081526020819052604090205490565b6101836102933660046114a6565b60076020526000908152604090205460ff1681565b6101bf6102b63660046114a6565b61062c565b6101bf60095481565b61015a61064a565b6101a66102da36600461147c565b610659565b6101836102ed36600461147c565b61066b565b61018361030036600461147c565b6106f1565b6101a661031336600461151d565b610766565b6101bf610326366004611590565b6107f6565b60606003805461033a906115c3565b80601f0160208091040260200160405190810160405280929190818152602001828054610366906115c3565b80156103b35780601f10610388576101008083540402835291602001916103b3565b820191906000526020600020905b81548152906001019060200180831161039657829003601f168201915b5050505050905090565b6001600160a01b038216600090815260076020526040812054839060ff16156104015760405162461bcd60e51b81526004016103f8906115f7565b60405180910390fd5b3360008181526007602052604090205460ff16156104315760405162461bcd60e51b81526004016103f8906115f7565b61043b8585610821565b95945050505050565b61044c61082f565b610474816001600160a01b03166000908152600760205260409020805460ff19166001179055565b50565b61047f61082f565b6001600160a01b03166000908152600860205260409020805460ff19169055565b6104a861082f565b610474816001600160a01b03166000908152600760205260409020805460ff19169055565b6001600160a01b038316600090815260076020526040812054849060ff16156105085760405162461bcd60e51b81526004016103f8906115f7565b6001600160a01b038416600090815260076020526040902054849060ff16156105435760405162461bcd60e51b81526004016103f8906115f7565b3360008181526007602052604090205460ff16156105735760405162461bcd60e51b81526004016103f8906115f7565b61057e878787610886565b979650505050505050565b600061059460095490565b61059f90600a61171e565b6105a9908361172d565b92915050565b60006105b961089f565b905090565b6000336105e08185856105d183836107f6565b6105db919061174c565b6109c6565b5060019392505050565b6105f261082f565b6105fc8282610aeb565b5050565b61060861082f565b6001600160a01b03166000908152600860205260409020805460ff19166001179055565b6001600160a01b0381166000908152600560205260408120546105a9565b60606004805461033a906115c3565b61066161082f565b6105fc8282610bca565b6000338161067982866107f6565b9050838110156106d95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103f8565b6106e682868684036109c6565b506001949350505050565b6001600160a01b038216600090815260076020526040812054839060ff161561072c5760405162461bcd60e51b81526004016103f8906115f7565b3360008181526007602052604090205460ff161561075c5760405162461bcd60e51b81526004016103f8906115f7565b61043b8585610d10565b6001600160a01b038716600090815260076020526040902054879060ff16156107a15760405162461bcd60e51b81526004016103f8906115f7565b6001600160a01b038716600090815260076020526040902054879060ff16156107dc5760405162461bcd60e51b81526004016103f8906115f7565b6107eb89898989898989610d1e565b505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6000336105e08185856109c6565b3360009081526008602052604090205460ff166108845760405162461bcd60e51b815260206004820152601360248201527254657374546f6b656e2f61646d696e4f6e6c7960681b60448201526064016103f8565b565b600033610894858285610e82565b6106e6858585610efc565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156108f857507f000000000000000000000000000000000000000000000000000000000000000046145b1561092257507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6001600160a01b038316610a285760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103f8565b6001600160a01b038216610a895760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103f8565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038216610b415760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103f8565b8060026000828254610b53919061174c565b90915550506001600160a01b03821660009081526020819052604081208054839290610b8090849061174c565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610c2a5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103f8565b6001600160a01b03821660009081526020819052604090205481811015610c9e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103f8565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610ccd908490611764565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610ade565b6000336105e0818585610efc565b83421115610d6e5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016103f8565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610d9d8c6110ca565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610df8826110f2565b90506000610e0882878787611140565b9050896001600160a01b0316816001600160a01b031614610e6b5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016103f8565b610e768a8a8a6109c6565b50505050505050505050565b6000610e8e84846107f6565b90506000198114610ef65781811015610ee95760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103f8565b610ef684848484036109c6565b50505050565b6001600160a01b038316610f605760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103f8565b6001600160a01b038216610fc25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103f8565b6001600160a01b0383166000908152602081905260409020548181101561103a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103f8565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061107190849061174c565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110bd91815260200190565b60405180910390a3610ef6565b6001600160a01b03811660009081526005602052604090208054600181018255905b50919050565b60006105a96110ff61089f565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061115187878787611168565b9150915061115e81611255565b5095945050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561119f575060009050600361124c565b8460ff16601b141580156111b757508460ff16601c14155b156111c8575060009050600461124c565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561121c573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166112455760006001925092505061124c565b9150600090505b94509492505050565b60008160048111156112695761126961177b565b036112715750565b60018160048111156112855761128561177b565b036112d25760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016103f8565b60028160048111156112e6576112e661177b565b036113335760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016103f8565b60038160048111156113475761134761177b565b0361139f5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016103f8565b60048160048111156113b3576113b361177b565b036104745760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016103f8565b600060208083528351808285015260005b818110156114385785810183015185820160400152820161141c565b8181111561144a576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461147757600080fd5b919050565b6000806040838503121561148f57600080fd5b61149883611460565b946020939093013593505050565b6000602082840312156114b857600080fd5b6114c182611460565b9392505050565b6000806000606084860312156114dd57600080fd5b6114e684611460565b92506114f460208501611460565b9150604084013590509250925092565b60006020828403121561151657600080fd5b5035919050565b600080600080600080600060e0888a03121561153857600080fd5b61154188611460565b965061154f60208901611460565b95506040880135945060608801359350608088013560ff8116811461157357600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156115a357600080fd5b6115ac83611460565b91506115ba60208401611460565b90509250929050565b600181811c908216806115d757607f821691505b6020821081036110ec57634e487b7160e01b600052602260045260246000fd5b602080825260139082015272115490cc8c10930bd09b1858dadb1a5cdd1959606a1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561167557816000190482111561165b5761165b611624565b8085161561166857918102915b93841c939080029061163f565b509250929050565b60008261168c575060016105a9565b81611699575060006105a9565b81600181146116af57600281146116b9576116d5565b60019150506105a9565b60ff8411156116ca576116ca611624565b50506001821b6105a9565b5060208310610133831016604e8410600b84101617156116f8575081810a6105a9565b611702838361163a565b806000190482111561171657611716611624565b029392505050565b60006114c160ff84168361167d565b600081600019048311821515161561174757611747611624565b500290565b6000821982111561175f5761175f611624565b500190565b60008282101561177657611776611624565b500390565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220bd809d42139540058cd45d799cf966bb21014a2ed0f238b1bc1b09a3c80841fd64736f6c634300080e00334661696c6564206f666665722073686f756c64206465636c61726520302074616b65724761766541304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f500000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35834d616e67726f766520686173206e6f742073656e642074686520636f727265637420616d6f756e7420746f2074616b65724661696c6564206f666665722073686f756c64206465636c61726520302074616b6572476f74885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d4661696c696e67206f666665722073686f756c642068617665206265656e2072656d6f7665642066726f6d204d6776a2646970667358221220c13775b0ce1ef088e20ed3b6f1128b48f5bec29e854a034a1c4fa0338f2213b764736f6c634300080e0033",
    "sourceMap": "105:10983:91:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7709:411:94;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;581:32:113;;;563:51;;551:2;536:18;7709:411:94;;;;;;;;1610:828:91;;;:::i;:::-;;8384:243:94;;;;;;:::i;:::-;;:::i;780:82:95:-;847:10;780:82;;4705:1866:91;;;:::i;:::-;;;;;;;:::i;9614:268:94:-;;;;;;:::i;:::-;;:::i;303:38:1:-;;-1:-1:-1;;;;;;;;;;;303:38:1;;2442:962:91;;;:::i;4455:283:95:-;;;;;;:::i;:::-;;:::i;10208:132:94:-;;;;;;:::i;:::-;;:::i;:::-;;;6281:25:113;;;6269:2;6254:18;10208:132:94;6135:177:113;7570:97:94;;;:::i;4169:282:95:-;;;;;;:::i;:::-;;:::i;1610:472:0:-;;;:::i;:::-;;;7377:14:113;;7370:22;7352:41;;7340:2;7325:18;1610:472:0;7212:187:113;9442:168:94;;;;;;:::i;:::-;;:::i;9170:268::-;;;;;;:::i;:::-;;:::i;9981:169::-;;;;;;:::i;:::-;;:::i;8157:173::-;;;;;;:::i;:::-;;:::i;163:28:1:-;;;;;;;;;;;;1368:26:0;;;;;;;;;7709:411:94;7763:21;7796:8;7792:272;;;7866:4;7891:2;7911:9;7821:108;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;7814:115;;7792:272;;;7994:4;8019:2;8039:9;7957:100;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;7950:107;;7792:272;-1:-1:-1;;;;;;;;;;;8069:8:94;8080:4;8069:29;;;-1:-1:-1;;;;;;8069:29:94;;;;;;;-1:-1:-1;;;;;9683:32:113;;;8069:29:94;;;9665:51:113;9732:18;;;9725:30;9791:1;9771:18;;;9764:29;-1:-1:-1;;;9809:18:113;;;9802:38;9857:19;;8069:29:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7709:411;;;:::o;1610:828:91:-;1649:13;:11;:13::i;:::-;1669:3;;1682:4;;1691:5;;1669:38;;-1:-1:-1;;;1669:38:91;;-1:-1:-1;;;;;1669:3:91;;;;:10;;:38;;1682:4;;;;1691:5;;;235:3;;1669:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1744:4:91;;1723:37;;-1:-1:-1;;;;;;1744:4:91;;-1:-1:-1;1753:5:91;;-1:-1:-1;;;;;1753:5:91;9442:168:94;:::i;1723:37:91:-;1714:6;:46;;-1:-1:-1;;;;;;1714:46:91;-1:-1:-1;;;;;1714:46:91;;;;;;;;;1766:16;;-1:-1:-1;;;1766:16:91;;1780:1;1766:16;;;6281:25:113;1766:13:91;;6254:18:113;;1766:16:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1802:1:91;;-1:-1:-1;;;1788:160:91;1809:6;;;;;;;;;-1:-1:-1;;;;;1809:6:91;-1:-1:-1;;;;;1809:13:91;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1805:1;:19;1788:160;;;1865:6;;:18;;-1:-1:-1;;;1865:18:91;;;;;6281:25:113;;;-1:-1:-1;;;;;;;;;;;237:61:1;1839:8:91;;-1:-1:-1;;;;;1865:6:91;;;;:15;;6254:18:113;;1865::91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1918:14;;-1:-1:-1;;;1918:14:91;;;;;6281:25:113;;;-1:-1:-1;;;;;;;;;;;237:61:1;1918:11:91;;6254:18:113;;1918:14:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1918:14:91;;;;;;;;;;;;:::i;:::-;1894:39;;;;;;;;:::i;:::-;;;;;;;;;;;;;1839:102;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1826:3;;;;;:::i;:::-;;;;1788:160;;;-1:-1:-1;1970:6:91;;:18;;-1:-1:-1;;;1970:18:91;;261:34:1;1970:18:91;;;6281:25:113;-1:-1:-1;;;;;;;;;;;237:61:1;1953:8:91;;-1:-1:-1;;;;;1970:6:91;;;;:15;;6254:18:113;;1970::91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1953:47;;;-1:-1:-1;;;;;;1953:47:91;;;;;;;-1:-1:-1;;;;;13543:32:113;;;1953:47:91;;;13525:51:113;13592:18;;;13585:30;13651:1;13631:18;;;13624:29;-1:-1:-1;;;13669:18:113;;;13662:36;13715:19;;1953:47:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2027:4:91;;2014:38;;-1:-1:-1;;;;;;2027:4:91;;-1:-1:-1;2036:5:91;;-1:-1:-1;;;;;2036:5:91;2014:38;;;;;;;;;;;;;-1:-1:-1;;;2014:38:91;;;:10;:38::i;:::-;2006:5;:46;;-1:-1:-1;;;;;;2006:46:91;-1:-1:-1;;;;;2006:46:91;;;;;;2072:6;;2059:31;;2072:6;2081:8;2059:4;:31::i;:::-;2096:6;;;;;;;;;-1:-1:-1;;;;;2096:6:91;-1:-1:-1;;;;;2096:15:91;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2125:6;2120:176;2141:6;;;;;;;;;-1:-1:-1;;;;;2141:6:91;-1:-1:-1;;;;;2141:13:91;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2137:1;:19;2120:176;;;2189:6;;:18;;-1:-1:-1;;;2189:18:91;;;;;6281:25:113;;;2171:15:91;;-1:-1:-1;;;;;2189:6:91;;:15;;6254:18:113;;2189::91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2215:28;;-1:-1:-1;;;2215:28:91;;2234:8;2215:28;;;6281:25:113;2171:36:91;;-1:-1:-1;;;;;;2215:18:91;;;;;6254::113;;2215:28:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2258:4:91;;2251:38;;-1:-1:-1;;;;;;2258:4:91;;-1:-1:-1;2273:5:91;2281:7;2251:4;:38::i;:::-;-1:-1:-1;2158:3:91;;;;:::i;:::-;;;;2120:176;;;-1:-1:-1;2302:5:91;;2321;;2302:35;;-1:-1:-1;;;2302:35:91;;-1:-1:-1;;;;;2302:5:91;;;;:10;;:35;;2321:5;;;2329:7;;2302:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2343:5:91;;2360;;2343:32;;-1:-1:-1;;;2343:32:91;;-1:-1:-1;;;;;2343:5:91;;;;-1:-1:-1;2343:16:91;;-1:-1:-1;2343:32:91;;2360:5;;;;2367:7;;2343:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2381:5:91;;2398:4;;2381:32;;-1:-1:-1;;;2381:32:91;;-1:-1:-1;;;;;2381:5:91;;;;-1:-1:-1;2381:16:91;;-1:-1:-1;2381:32:91;;2398:4;;;;2404:8;;2381:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2419:14;:12;:14::i;:::-;1610:828::o;8384:243:94:-;8495:21;8531:23;8545:8;8531:13;:23::i;:::-;8524:30;;8560:62;8580:12;8603:11;8617:4;8560:11;:62::i;:::-;8384:243;;;;;:::o;4705:1866:91:-;4739:13;4797:22;4833:6;;;;;;;;;-1:-1:-1;;;;;4833:6:91;-1:-1:-1;;;;;4833:13:91;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4822:27:91;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4822:27:91;-1:-1:-1;4869:6:91;;:18;;-1:-1:-1;;;4869:18:91;;:6;:18;;;6281:25:113;4797:52:91;;-1:-1:-1;;;;;;4869:6:91;;:15;;6254:18:113;;4869::91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:132;;-1:-1:-1;;;4869:132:91;;4923:7;4869:132;;;15400:25:113;4945:9:91;15441:18:113;;;15434:34;4970:6:91;15484:18:113;;;15477:34;4993:1:91;15527:18:113;;;15520:34;-1:-1:-1;;;;;4869:27:91;;;;;;;15372:19:113;;4869:132:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4855:8;4864:1;4855:11;;;;;;;;:::i;:::-;;;;;;;;;;:146;5021:6;;:18;;-1:-1:-1;;;5021:18:91;;5037:1;5021:18;;;6281:25:113;-1:-1:-1;;;;;5021:6:91;;;;:15;;6254:18:113;;5021::91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:132;;-1:-1:-1;;;5021:132:91;;5075:7;5021:132;;;15400:25:113;5097:9:91;15441:18:113;;;15434:34;5122:6:91;15484:18:113;;;15477:34;5145:1:91;15527:18:113;;;15520:34;-1:-1:-1;;;;;5021:27:91;;;;;;;15372:19:113;;5021:132:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5007:8;5016:1;5007:11;;;;;;;;:::i;:::-;;;;;;;;;;:146;5173:6;;:18;;-1:-1:-1;;;5173:18:91;;5189:1;5173:18;;;6281:25:113;-1:-1:-1;;;;;5173:6:91;;;;:15;;6254:18:113;;5173::91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:133;;-1:-1:-1;;;5173:133:91;;5227:9;5173:133;;;15400:25:113;5251:7:91;15441:18:113;;;15434:34;5274:6:91;15484:18:113;;;15477:34;5297:2:91;15527:18:113;;;15520:34;-1:-1:-1;;;;;5173:27:91;;;;;;;15372:19:113;;5173:133:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5159:8;5168:1;5159:11;;;;;;;;:::i;:::-;;;;;;;;;;:147;5333:3;;5346:4;;5355:5;;5333:29;;-1:-1:-1;;;5333:29:91;;5313:14;;-1:-1:-1;;;;;5333:3:91;;;;:10;;:29;;5346:4;;;;5355:5;;5333:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5382:6:91;;:18;;-1:-1:-1;;;5382:18:91;;:6;:18;;;6281:25:113;5312:50:91;;-1:-1:-1;;;;;;5382:6:91;;:15;;6254:18:113;;5382::91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5382:27:91;;5442:8;5465;5898:58:26;;;;;;5382:144:91;;-1:-1:-1;;;;;;5382:144:91;;;;;;;;;;15400:25:113;;;;15441:18;;;15434:34;;;;15484:18;;;15477:34;5518:1:91;15527:18:113;;;15520:34;15372:19;;5382:144:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5368:8;5377:1;5368:11;;;;;;;;:::i;:::-;;;;;;:158;;;;;5598:6;5593:402;5614:6;;;;;;;;;-1:-1:-1;;;;;5614:6:91;-1:-1:-1;;;;;5614:13:91;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5610:1;:19;5593:402;;;5660:3;;5679:4;;5644:13;;5660:57;;-1:-1:-1;;;;;5660:3:91;;;;:16;;5679:4;5688:5;;-1:-1:-1;;;;;5688:5:91;5696:8;5705:1;5696:11;;;;;;;;:::i;:::-;;;;;;;5660:48;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4071:58:29;;;;;3990:145;5660:57:91;5759:4;;5644:73;;-1:-1:-1;5725:16:91;;5744:41;;-1:-1:-1;;;;;5759:4:91;5768:5;;-1:-1:-1;;;;;5768:5:91;5776:8;5744:12;:41::i;:::-;5811:3;;5833:6;;:18;;-1:-1:-1;;;5833:18:91;;;;;6281:25:113;;;5725:60:91;;-1:-1:-1;5793:195:91;;-1:-1:-1;;;;;5811:3:91;;;;:13;;5833:6;;:15;;6254:18:113;;5833::91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5811:42;;-1:-1:-1;;;;;;5811:42:91;;;;;;;-1:-1:-1;;;;;581:32:113;;;5811:42:91;;;563:51:113;536:18;;5811:42:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5894:11;5863:8;:25;;5889:1;5863:28;;;;;;;;:::i;:::-;;;;;;;;;:42;;;;:::i;:::-;5965:14;;-1:-1:-1;;;5965:14:91;;;;;6281:25:113;;;-1:-1:-1;;;;;;;;;;;237:61:1;5965:11:91;;6254:18:113;;5965:14:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5965:14:91;;;;;;;;;;;;:::i;:::-;5915:65;;;;;;;;:::i;:::-;;;;;;;;;;;;;5793:8;:195::i;:::-;5636:359;;5631:3;;;;;:::i;:::-;;;;5593:402;;;-1:-1:-1;6078:3:91;;6089:4;;6098:5;;6078:27;;-1:-1:-1;;;6078:27:91;;6063:12;;-1:-1:-1;;;;;6078:3:91;;;;:8;;:27;;6089:4;;;;6098:5;;6078:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6063:42;-1:-1:-1;6133:1:91;6140:406;6147:12;;6140:406;;6231:3;;6256:4;;6170:26;;;;-1:-1:-1;;;;;6231:3:91;;;;:22;;6256:4;6265:5;;-1:-1:-1;;;;;6265:5:91;6273:7;6231:50;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6307:8;;6333:6;;:31;;-1:-1:-1;;;6333:31:91;;;;;6281:25:113;;;6169:112:91;;-1:-1:-1;6307:8:91;;-1:-1:-1;6289:166:91;;6307:8;;-1:-1:-1;;;;;6333:6:91;;:15;;6254:18:113;;6333:31:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6426:20;;-1:-1:-1;;;6426:20:91;;;;;6281:25:113;;;-1:-1:-1;;;;;;;;;;;237:61:1;6426:11:91;;6254:18:113;;6426:20:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6426:20:91;;;;;;;;;;;;:::i;:::-;6375:72;;;;;;;;:::i;:::-;;;;;;;;;;;;;6289:8;:166::i;:::-;-1:-1:-1;6529:10:91;;;;-1:-1:-1;;;6484:19:91;6140:406;;;-1:-1:-1;6558:8:91;;4705:1866;-1:-1:-1;;;4705:1866:91:o;9614:268:94:-;9714:9;9731:12;9760:3;;;;;;;;;-1:-1:-1;;;;;9760:3:94;9772:4;9786:3;9746:45;;;;;:::i;:::-;-1:-1:-1;;;;;20718:15:113;;;20700:34;;20770:15;;;20765:2;20750:18;;20743:43;20822:15;;;20817:2;20802:18;;20795:43;20650:2;20635:18;9746:45:94;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9797:31:94;;-1:-1:-1;;;9797:31:94;;9731:60;;-1:-1:-1;;;;;;;;;;;;237:61:1;9797:7:94;;:31;;9731:60;;9818:9;;9797:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9834:28:94;;-1:-1:-1;;;9834:28:94;;-1:-1:-1;;;;;;;;;;;237:61:1;-1:-1:-1;9834:8:94;;-1:-1:-1;9834:28:94;;9851:2;;9856:5;;9834:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9875:2:94;;9614:268;-1:-1:-1;;;;;;;9614:268:94:o;2442:962:91:-;2503:8;:6;:8::i;:::-;2493:18;;;;:7;;:18;;;;;;:::i;:::-;;2518:14;:12;:14::i;:::-;2538:12;:10;:12::i;:::-;2569:3;;2556:18;;-1:-1:-1;;;;;2569:3:91;2556:10;:18::i;:::-;2585:12;;;;;;;2616:3;;2603:18;;-1:-1:-1;;;;;2616:3:91;2556:10;:18::i;2603:::-;2692:5;;2670;;2655:4;;2632:219;;;2706:11;15400:25:113;;2752:11:91;15456:2:113;15441:18;;15434:34;-1:-1:-1;15484:18:113;;;15477:34;2807:11:91;15542:2:113;15527:18;;15520:34;2632:219:91;;-1:-1:-1;;;;;2692:5:91;;;;2670;;;;2655:4;;;;;2632:219;;;;;15387:3:113;2632:219:91;;;2858:7;:5;:7::i;:::-;-1:-1:-1;;2886:4:91;;2871:34;;-1:-1:-1;;;;;;2886:4:91;2884:7;2895:5;;-1:-1:-1;;;;;2895:5:91;2903:1;2871:12;:34::i;:::-;2989:6;;:18;;-1:-1:-1;;;2989:18:91;;3005:1;2989:18;;;6281:25:113;-1:-1:-1;;;;;2989:6:91;;;;:15;;6254:18:113;;2989::91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:126;;-1:-1:-1;;;2989:126:91;;3027:21;2989:126;;;21970:25:113;3056:21:91;22011:18:113;;;22004:34;3085:6:91;22054:18:113;;;22047:34;3099:1:91;22097:18:113;;;22090:34;3108:1:91;22140:19:113;;;22133:35;-1:-1:-1;;;;;2989:30:91;;;;;;;21942:19:113;;2989:126:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3137:4:91;;3122:34;;-1:-1:-1;;;;;;3137:4:91;;-1:-1:-1;3135:7:91;10715:96:94;3122:34:91;3163:14;:12;:14::i;:::-;3183:12;:10;:12::i;:::-;3201:4;:2;:4::i;:::-;3226;;3211:34;;-1:-1:-1;;;;;3226:4:91;3224:7;10715:96:94;3211:34:91;3252:14;:12;:14::i;:::-;3272:12;:10;:12::i;:::-;3290:31;3310:7;3318:1;3310:10;;;;;;;;:::i;:::-;;;;;;;;;3290:19;:31::i;:::-;3342:4;;3327:34;;-1:-1:-1;;;;;3342:4:91;3340:7;10715:96:94;3327:34:91;3367:14;:12;:14::i;:::-;3387:12;:10;:12::i;4455:283:95:-;4508:20;;;;;;;;;:15;:20;;;4534:179;4555:4;:11;4551:1;:15;4534:179;;;4619:7;;4599:1;;-1:-1:-1;;;;;;;;;;;237:61:1;4602:11:95;;4619:4;;4624:1;;4619:7;;;;;;:::i;:::-;;;;;;;4602:26;;;;;;;;;;;;;6281:25:113;;6269:2;6254:18;;6135:177;4602:26:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4602:26:95;;;;;;;;;;;;:::i;:::-;4585:44;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4581:48;;4659:1;4645:4;:11;:15;;;;:::i;:::-;4641:1;:19;4637:70;;;4690:1;4676:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;4672:26;;4637:70;4568:3;;;;:::i;:::-;;;;4534:179;;;;4718:15;4731:1;4718:12;:15::i;:::-;4502:236;4455:283;:::o;10208:132:94:-;10289:4;10326:9;10330:5;10326:2;:9;:::i;:::-;10308:15;10313:1;10316:6;10308:4;:15::i;:::-;:27;;;;:::i;:::-;10301:34;10208:132;-1:-1:-1;;;;10208:132:94:o;7570:97::-;7611:16;7642:20;7656:5;7642:13;:20::i;:::-;7635:27;;7570:97;:::o;4169:282:95:-;4224:20;;;;;;;;;:15;:20;;;4250:176;4271:5;:12;4267:1;:16;4250:176;;;4331:8;;4316:1;;-1:-1:-1;;;;;;;;;;;237:61:1;4319:11:95;;4331:5;;4337:1;;4331:8;;;;;;:::i;:::-;;;;;;;4319:21;;;;;;;;;;;;;6281:25:113;;6269:2;6254:18;;6135:177;4319:21:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4319:21:95;;;;;;;;;;;;:::i;:::-;4302:39;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4298:43;;4372:1;4357:5;:12;:16;;;;:::i;:::-;4353:1;:20;4349:71;;;4403:1;4389:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;4385:26;;4349:71;4285:3;;;;:::i;:::-;;;;4250:176;;1610:472:0;1644:4;1660:7;;;;;;;1656:422;;;-1:-1:-1;1684:7:0;;;;;;;;1610:472::o;1656:422::-;1712:17;-1:-1:-1;;;;;;;;;;;2564:55:0;2637:16;1745:300;;1919:43;;1780:20;;-1:-1:-1;;;;;;;;;;;1459:61:0;1870:34;;1919:43;;1459:61;;-1:-1:-1;;;1944:17:0;1919:43;;;:::i;:::-;;;;-1:-1:-1;;1919:43:0;;;;;;;;;;1833:141;;;1919:43;1833:141;;:::i;:::-;;;;-1:-1:-1;;1833:141:0;;;;;;;;;;1804:180;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1777:207;;;2020:7;2009:27;;;;;;;;;;;;:::i;:::-;1994:42;;1767:278;1745:300;2059:12;1610:472;-1:-1:-1;1610:472:0:o;9442:168:94:-;9552:3;;9521:13;;9544;;-1:-1:-1;;;;;9552:3:94;9544:5;:13::i;:::-;-1:-1:-1;9589:3:94;;9571:33;;-1:-1:-1;;;;;9589:3:94;;;;9594:4;;9600:3;;9571:33;;;:::i;:::-;-1:-1:-1;;;;;20718:15:113;;;20700:34;;20770:15;;;20765:2;20750:18;;20743:43;20822:15;;;20817:2;20802:18;;20795:43;20650:2;20635:18;9571:33:94;;;;;;;;;;;;;;;;;;;;;;;9563:42;;9442:168;;;;;:::o;9170:268::-;9270:9;9287:12;9316:3;;;;;;;;;-1:-1:-1;;;;;9316:3:94;9328:4;9342:3;9302:45;;;;;:::i;9981:169::-;10034:4;10046:11;:9;:11::i;:::-;10063:13;10079:1;-1:-1:-1;;;;;10079:10:94;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10063:28;;;;10097:14;:12;:14::i;:::-;10133:12;10137:8;10133:2;:12;:::i;:::-;10124:21;;:6;:21;:::i;8157:173::-;8245:16;8278:47;8292:12;8306:11;8319:5;8278:13;:47::i;2363:802::-;2510:21;;2422:115;;2445:4;;2458:12;;2483:19;;2510:21;;;2422:115;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2415:4:94;:122;;-1:-1:-1;;;;;;2415:122:94;-1:-1:-1;;;;;2415:122:94;;;;;;;;;;2574:4;2641:22;;2551:118;;2587:13;;2613:20;;2641:22;;;;;2551:118;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2543:5:94;:126;;-1:-1:-1;;;;;;2543:126:94;-1:-1:-1;;;;;2543:126:94;;;;;;;;;2718:4;;2731:7;:24;2704:52;;2718:4;;;;;2543:126;2731:24;;2704:13;:52::i;:::-;2698:3;:58;;-1:-1:-1;;;;;;2698:58:94;-1:-1:-1;;;;;2698:58:94;;;;;;;;;2977:27;;;-1:-1:-1;;;2977:27:94;;;;:8;;2993;;2977:27;;;;;-1:-1:-1;;2977:27:94;;;;;;;2993:8;2698:58;2977:27;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3081:4:94;;3096:3;;3081:36;;-1:-1:-1;;;3081:36:94;;-1:-1:-1;;;;;3081:4:94;;;;-1:-1:-1;3081:12:94;;-1:-1:-1;3081:36:94;;-1:-1:-1;3096:3:94;;;-1:-1:-1;;3102:14:94;3081:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3123:5:94;;3139:3;;3123:37;;-1:-1:-1;;;3123:37:94;;-1:-1:-1;;;;;3123:5:94;;;;:13;;:37;;3139:3;;;-1:-1:-1;;3145:14:94;3123:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2363:802::o;3419:74:2:-;3471:17;;-1:-1:-1;;;3471:17:2;;-1:-1:-1;;;;;;;;;;;237:61:1;3471:7:2;;:17;;3479:2;;3483:4;;3471:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3419:74;;:::o;3611:116::-;3694:28;3699:5;3706:2;3710:4;3716:5;3694:4;:28::i;:::-;3611:116;;;:::o;789:817:91:-;860:6;;:15;;;-1:-1:-1;;;860:15:91;;;;828:18;;-1:-1:-1;;;;;860:6:91;;:13;;:15;;;;;;;;;;;;;;:6;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;849:27:91;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;849:27:91;;828:48;;882:18;914:6;;;;;;;;;-1:-1:-1;;;;;914:6:91;-1:-1:-1;;;;;914:13:91;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;903:27:91;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;903:27:91;;882:48;;936:20;970:6;;;;;;;;;-1:-1:-1;;;;;970:6:91;-1:-1:-1;;;;;970:13:91;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;959:27:91;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;959:27:91;;936:50;;997:6;992:235;1013:6;;;;;;;;;-1:-1:-1;;;;;1013:6:91;-1:-1:-1;;;;;1013:13:91;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1009:1;:19;992:235;;;1053:4;;1076:6;;:18;;-1:-1:-1;;;1076:18:91;;;;;6281:25:113;;;-1:-1:-1;;;;;1053:4:91;;;;:14;;1076:6;;:15;;6254:18:113;;1076::91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1053:43;;-1:-1:-1;;;;;;1053:43:91;;;;;;;-1:-1:-1;;;;;581:32:113;;;1053:43:91;;;563:51:113;536:18;;1053:43:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1043:4;1048:1;1043:7;;;;;;;;:::i;:::-;;;;;;;;;;:53;1114:5;;1138:6;;:18;;-1:-1:-1;;;1138:18:91;;;;;6281:25:113;;;-1:-1:-1;;;;;1114:5:91;;;;:15;;1138:6;;:15;;6254:18:113;;1138::91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1114:44;;-1:-1:-1;;;;;;1114:44:91;;;;;;;-1:-1:-1;;;;;581:32:113;;;1114:44:91;;;563:51:113;536:18;;1114:44:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1104:4;1109:1;1104:7;;;;;;;;:::i;:::-;;;;;;;;;;:54;1178:3;;1200:6;;:18;;-1:-1:-1;;;1200:18:91;;;;;6281:25:113;;;-1:-1:-1;;;;;1178:3:91;;;;:13;;1200:6;;:15;;6254:18:113;;1200::91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1178:42;;-1:-1:-1;;;;;;1178:42:91;;;;;;;-1:-1:-1;;;;;581:32:113;;;1178:42:91;;;563:51:113;536:18;;1178:42:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1166:6;1173:1;1166:9;;;;;;;;:::i;:::-;;;;;;;;;;:54;1030:3;;;;:::i;:::-;;;;992:235;;;-1:-1:-1;1243:358:91;;;;;;;;1277:3;;-1:-1:-1;;;;;1277:3:91;;;1275:14;;1243:358;;1313:4;;1328:16;;-1:-1:-1;;;1328:16:91;;;;1243:358;;;;;;;1313:4;;;;;:14;;1277:3;1328:14;;:16;;;;;1243:358;1328:16;;;;;;1277:3;1328:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1313:32;;-1:-1:-1;;;;;;1313:32:91;;;;;;;-1:-1:-1;;;;;581:32:113;;;1313::91;;;563:51:113;536:18;;1313:32:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1243:358;;1368:4;;1391:5;;1368:30;;-1:-1:-1;;;1368:30:91;;-1:-1:-1;;;;;1391:5:91;;;1368:30;;;563:51:113;1243:358:91;;;;;1368:4;;;:14;;536:18:113;;1368:30:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1243:358;;1421:5;;1445;;1421:31;;-1:-1:-1;;;1421:31:91;;-1:-1:-1;;;;;1445:5:91;;;1421:31;;;563:51:113;1243:358:91;;;;;1421:5;;;:15;;536:18:113;;1421:31:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1243:358;;1477:3;;1499:5;;1477:29;;-1:-1:-1;;;1477:29:91;;-1:-1:-1;;;;;1499:5:91;;;1477:29;;;563:51:113;1243:358:91;;;;;1477:3;;;:13;;536:18:113;;1477:29:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1243:358;;;;;;;;;;;;;;;;;;;;;;;1232:369;;:8;:369;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1232:369:91;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1232:369:91;;;;;;;;;;;;;;;;;;:::i;8631:337:94:-;8730:9;8736:2;8730:5;:9::i;:::-;;8745;8751:2;8745:5;:9::i;:::-;-1:-1:-1;8782:18:94;;8760:52;;-1:-1:-1;;;8760:52:94;;-1:-1:-1;;;;;29674:15:113;;;8760:52:94;;;29656:34:113;29726:15;;;29706:18;;;29699:43;29758:18;;;29751:34;;;;8802:1:94;29801:18:113;;;29794:34;8805:6:94;29844:19:113;;;29837:35;8760:13:94;;;;;;29590:19:113;;8760:52:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8840:18:94;;8818:52;;-1:-1:-1;;;8818:52:94;;-1:-1:-1;;;;;29674:15:113;;;8818:52:94;;;29656:34:113;29726:15;;;29706:18;;;29699:43;29758:18;;;29751:34;;;;8860:1:94;29801:18:113;;;29794:34;8863:6:94;29844:19:113;;;29837:35;8818:13:94;;;;-1:-1:-1;8818:13:94;;-1:-1:-1;29590:19:113;;8818:52:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;261:34:1;;245:52;;237:61;;-1:-1:-1;;;;;8891:8:94;;8900:2;8911;-1:-1:-1;;;;;8904:17:94;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8904:19:94;;;;;;;;;;;;:::i;:::-;8891:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;261:34:1;;245:52;;237:61;;-1:-1:-1;;;;;8930:8:94;;8939:2;8950;-1:-1:-1;;;;;8943:17:94;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8943:19:94;;;;;;;;;;;;:::i;:::-;8930:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8631:337;;;:::o;6867:277::-;7022:3;;:21;;-1:-1:-1;;;7022:21:94;;6968:4;;;;;;-1:-1:-1;;;;;7022:3:94;;:10;;:21;;7033:4;;7039:3;;7022:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6980:63;;-1:-1:-1;6980:63:94;-1:-1:-1;5534:62:26;;;;;;7058:32:94;5847:72:27;;;;;;7058:6:94;:32;:::i;:::-;7057:67;;;;:::i;:::-;:81;;7133:5;7057:81;:::i;:::-;7049:90;6867:277;-1:-1:-1;;;;;;6867:277:94:o;4812:172:0:-;4905:1;4900;:6;4896:84;;-1:-1:-1;;;;;;;;;;;4947:3:0;4921:30;;;;;;:::i;:::-;;;;;;;;4959:14;4968:1;4971;4959:8;:14::i;3368:178::-;3467:1;-1:-1:-1;;;;;3462:6:0;:1;-1:-1:-1;;;;;3462:6:0;;3458:84;;-1:-1:-1;;;;;;;;;;;3509:3:0;3483:30;;;;;;:::i;:::-;;;;;;;;3521:14;3530:1;3533;3521:8;:14::i;346:439:91:-;398:3;;409:4;;418:5;;398:27;;-1:-1:-1;;;398:27:91;;383:12;;-1:-1:-1;;;;;398:3:91;;;;:8;;:27;;409:4;;;;418:5;;398:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;383:42;;431:350;438:12;;431:350;;531:3;;556:4;;461:26;;;;-1:-1:-1;;;;;531:3:91;;;;:22;;556:4;565:5;;-1:-1:-1;;;;;565:5:91;573:7;531:50;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;624:11;;;;;589:15;;;;:6;:15;;;;;;;:32;;;;;;;;:46;;;;678:11;;;;659:15;643:32;;;;;:46;728:18;;;;713:11;697:28;;;;:49;;;;764:10;;;;;;-1:-1:-1;431:350:91;;-1:-1:-1;431:350:91;2931:97:95;2980:43;;-1:-1:-1;;;2980:43:95;;2994:4;2980:43;;;31143:41:113;;;31200:18;;;31193:50;;;31259:18;;;31252:50;;;31318:18;;;31311:50;-1:-1:-1;;;;;31398:32:113;;31377:19;;;31370:61;-1:-1:-1;;;;;;;;;;;237:61:1;2980:13:95;;31115:19:113;;2980:43:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2931:97;:::o;8902:2184:91:-;8952:13;8973:14;8995:16;9026:14;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;9026:14:91;9064:9;9046:27;;9094:1;9079:12;;;:16;9187:4;;9178:42;;-1:-1:-1;;;;;9187:4:91;9196:5;;-1:-1:-1;;;;;9196:5:91;9204:15;;9178:6;:42::i;:::-;9244:6;;9260:12;;;;9244:29;;-1:-1:-1;;;9244:29:91;;9164:56;;-1:-1:-1;9226:15:91;;-1:-1:-1;;;;;9244:6:91;;;;:15;;:29;;;;6281:25:113;;;6269:2;6254:18;;6135:177;9244:29:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9511:5;;9539:12;;;;9561:15;;9511:73;;-1:-1:-1;;;9511:73:91;;;;;31616:25:113;;;;31657:18;;;31650:34;9226:47:91;;-1:-1:-1;9446:16:91;;-1:-1:-1;;;;;9511:5:91;;;;:18;;31589::113;;9511:73:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;9593:52:91;;;;;;;;;;;;;;;;;9470:114;;-1:-1:-1;9470:114:91;-1:-1:-1;9470:114:91;;-1:-1:-1;9593:52:91;;9470:114;;9593:10;:52::i;:::-;-1:-1:-1;9673:4:91;;9688:3;;:16;;;-1:-1:-1;;;9688:16:91;;;;9657:158;;-1:-1:-1;;;;;9673:4:91;;;;:14;;9688:3;;;:14;;:16;;;;;;;;;;;;;;;:3;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9673:32;;-1:-1:-1;;;;;;9673:32:91;;;;;;;-1:-1:-1;;;;;581:32:113;;;9673::91;;;563:51:113;536:18;;9673:32:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9722:23;;:37;;9748:11;;9722:37;:::i;:::-;9657:158;;;;;;;;;;;;;;;;;:8;:158::i;:::-;9837:4;;9860:5;;9837:30;;-1:-1:-1;;;9837:30:91;;-1:-1:-1;;;;;9860:5:91;;;9837:30;;;563:51:113;9821:171:91;;9837:4;;;;;:14;;536:18:113;;9837:30:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9910:15;;9885:22;;9928:11;;9885:40;;;:::i;:::-;:54;;;;:::i;:::-;9821:171;;;;;;;;;;;;;;;;;:8;:171::i;:::-;9998:107;10014:8;10048:11;10030:3;:15;;;:29;;;;:::i;:::-;9998:107;;;;;;;;;;;;;-1:-1:-1;;;9998:107:91;;;:8;:107::i;:::-;10220:12;;;;;;10119:15;10213:20;;;:6;:20;;;;;;;10234:15;10213:37;;;;;;;;10171:12;;10164:20;;;;;;;;:37;;;;;;;;;;10138:15;;:63;;10164:37;10138:63;:::i;:::-;10137:113;;;;:::i;:::-;10276:5;;10300;;10276:31;;-1:-1:-1;;;10276:31:91;;-1:-1:-1;;;;;10300:5:91;;;10276:31;;;563:51:113;10119:131:91;;-1:-1:-1;10258:139:91;;10276:5;;;:15;;536:18:113;;10276:31:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10317:22;;:35;;10342:10;;10317:35;:::i;:::-;10258:139;;;;;;;;;;;;;;;;;:8;:139::i;:::-;10405:54;10414:9;10425:10;10405:54;;;;;;;;;;;;;-1:-1:-1;;;10405:54:91;;;:8;:54::i;:::-;-1:-1:-1;10487:4:91;;:30;;-1:-1:-1;;;10487:30:91;;-1:-1:-1;;;;;581:32:113;;;10487:30:91;;;563:51:113;10471:150:91;;10487:4;;:14;;536:18:113;;10487:30:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10565:15;;10549:12;;;;10525:23;:37;;:23;;10549:12;10525:37;;;;;;:::i;:::-;;;;;;;;;:55;;;;:::i;:::-;10471:150;;;;;;;;;;;;;;;;;:8;:150::i;:::-;10643:5;;:31;;-1:-1:-1;;;10643:31:91;;-1:-1:-1;;;;;581:32:113;;;10643:31:91;;;563:51:113;10627:249:91;;10643:5;;:15;;536:18:113;;10643:31:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10805:12;;;;;;10798:20;;;;:6;:20;;;;;;;10819:15;10798:37;;;;;;;;10756:12;;10749:20;;;;;;;;:37;;;;;;;;;;;10731:15;;:55;;10749:37;10731:55;:::i;:::-;10730:105;;;;:::i;:::-;10682:23;10706:12;;;;10682:37;;;;;;;;:::i;:::-;;;;;;;;;:153;;;;:::i;:::-;10627:249;;;;;;;;;;;;;;;;;:8;:249::i;:::-;10943:3;;10966:4;;10981:5;;10995:12;;;;10943:70;;-1:-1:-1;;;10943:70:91;;10913:24;;-1:-1:-1;;;;;10943:3:91;;;;:13;;:70;;10966:4;;;;10981:5;;;10943:70;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10912:101;;;11019:62;11030:3;:9;;;11043:1;11030:14;11019:62;;;;;;;;;;;;;;;;;:10;:62::i;:::-;9020:2066;;;8902:2184;;;:::o;3725:908:94:-;3831:3;;:19;;-1:-1:-1;;;3831:19:94;;3816:12;;-1:-1:-1;;;;;3831:3:94;;:8;;:19;;3840:4;;3846:3;;3831:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3816:34;;3909:17;3940:4;-1:-1:-1;;;;;3929:16:94;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3929:16:94;;3909:36;;3951:25;3995:4;-1:-1:-1;;;;;3979:21:94;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3979:21:94;;3951:49;;4006:32;4063:4;-1:-1:-1;;;;;4041:27:94;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4041:27:94;;4006:62;;4074:6;4090:220;4098:12;;;;;4097:28;;;4120:4;4116:1;:8;4097:28;4090:220;;;4144:7;4135:3;4139:1;4135:6;;;;;;;;:::i;:::-;;;;;;;;;;:16;4171:3;;:30;;-1:-1:-1;;;4171:30:94;;-1:-1:-1;;;;;4171:3:94;;;;:10;;:30;;4182:4;;4188:3;;4193:7;;4171:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4159:6;4166:1;4159:9;;;;;;;;:::i;:::-;;;;;;;;;;:42;4222:3;;:36;;-1:-1:-1;;;4222:36:94;;-1:-1:-1;;;;;4222:3:94;;;;:16;;:36;;4239:4;;4245:3;;4250:7;;4222:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4209:7;4217:1;4209:10;;;;;;;;:::i;:::-;;;;;;:49;;;;;4276:16;:6;4283:1;4276:9;;;;;;;;:::i;:::-;;;;;;;3735:54:28;;;;;;;;3656:139;4276:16:94;4266:26;-1:-1:-1;4300:3:94;;;;:::i;:::-;;;;4090:220;;;4319:1;4315:5;;4331:22;4343:4;4349:3;4331:22;;;;;;;:::i;:::-;;;;;;;;4359:194;4370:4;4366:1;:8;4359:194;;;4389:146;4410:3;4414:1;4410:6;;;;;;;;:::i;:::-;;;;;;;4426:17;:6;4433:1;4426:9;;;;;;;;:::i;:::-;;;;;;;4074:56:28;1737:2;4074:56;;;;;;3994:142;4426:17:94;4453;:6;4460:1;4453:9;;;;;;;;:::i;:::-;;;;;;;4419:56:28;;;4339:142;4453:17:94;4480:18;:7;4488:1;4480:10;;;;;;;;:::i;:::-;;;;;;;3746:14:29;3705:56;;3606:163;4480:18:94;4508:19;:7;4516:1;4508:10;;;;;;;;:::i;:::-;;;;;;;4071:58:29;;;;;;;;3990:145;4508:19:94;4389:146;;;33042:25:113;;;33098:2;33083:18;;33076:34;;;;33126:18;;;33119:34;;;;-1:-1:-1;;;;;33189:32:113;33184:2;33169:18;;33162:60;33253:3;33238:19;;33231:35;33029:3;33014:19;4389:146:94;;;;;;;4543:3;;;;:::i;:::-;;;;4359:194;;;3810:823;;;;;3725:908;;;:::o;6575:2240:91:-;6731:5;;:41;;-1:-1:-1;;;6731:41:91;;6622:9;6731:41;;;31616:25:113;;;6669:7:91;31657:18:113;;;31650:34;;;6622:9:91;;6669:7;;6604:15;;;;-1:-1:-1;;;;;6731:5:91;;;;:17;;31589:18:113;;6731:41:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6697:75;;-1:-1:-1;6697:75:91;-1:-1:-1;6825:1:91;6811:514;6832:1;6828;:5;6811:514;;;6913:4;;6936:6;;:18;;-1:-1:-1;;;6936:18:91;;;;;6281:25:113;;;6895:207:91;;-1:-1:-1;;;;;6913:4:91;;;;:14;;6936:6;;;:15;;6254:18:113;;6936::91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6913:43;;-1:-1:-1;;;;;;6913:43:91;;;;;;;-1:-1:-1;;;;;581:32:113;;;6913:43:91;;;563:51:113;536:18;;6913:43:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6995:9;;;;:6;:9;;;;;;;;7005:15;6995:26;;;;;;;;6966:23;:26;;6995:9;;6966:26;;;;;;:::i;:::-;;;;;;;;;:55;;;;:::i;:::-;7079:14;;-1:-1:-1;;;7079:14:91;;;;;6281:25:113;;;-1:-1:-1;;;;;;;;;;;237:61:1;7079:11:91;;6254:18:113;;7079:14:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7079:14:91;;;;;;;;;;;;:::i;:::-;7031:63;;;;;;;;:::i;6895:207::-;7128:5;;7152:6;;:18;;-1:-1:-1;;;7152:18:91;;;;;6281:25:113;;;7110:208:91;;-1:-1:-1;;;;;7128:5:91;;;;:15;;7152:6;;;:15;;6254:18:113;;7152::91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7128:44;;-1:-1:-1;;;;;;7128:44:91;;;;;;;-1:-1:-1;;;;;581:32:113;;;7128:44:91;;;563:51:113;536:18;;7128:44:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7211:9;;;;:6;:9;;;;;;;;:26;;;;;;;;;7182;;7211;;:9;;;7182:26;;;;;;:::i;:::-;;;;;;;;;:55;;;;:::i;:::-;7295:14;;-1:-1:-1;;;7295:14:91;;;;;6281:25:113;;;-1:-1:-1;;;;;;;;;;;237:61:1;7295:11:91;;6254:18:113;;7295:14:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7295:14:91;;;;;;;;;;;;:::i;:::-;7247:63;;;;;;;;:::i;7110:208::-;6835:3;;;;:::i;:::-;;;;6811:514;;;-1:-1:-1;7432:26:91;;7442:15;7330:17;7403:26;;;:9;7432;7403:26;;;7330:17;;;;7403:55;;7432:26;7403:55;:::i;:::-;7381:78;;:10;:78;:::i;:::-;7545:26;;:9;7492:26;;7545:9;;7492:26;;;7361:98;;-1:-1:-1;7545:26:91;7492:41;;7361:98;;7492:41;:::i;:::-;7491:80;;;;:::i;:::-;7598:4;;7621:6;;:18;;-1:-1:-1;;;7621:18:91;;7598:4;7621:18;;;6281:25:113;7468:103:91;;-1:-1:-1;7580:163:91;;-1:-1:-1;;;;;7598:4:91;;;;:14;;7621:6;;:15;;6254:18:113;;7621::91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7598:43;;-1:-1:-1;;;;;;7598:43:91;;;;;;;-1:-1:-1;;;;;581:32:113;;;7598:43:91;;;563:51:113;536:18;;7598:43:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7680:12;7651:8;:23;;7675:1;7651:26;;;;;;;;:::i;:::-;;;;;;;;;:41;;;;:::i;:::-;7580:163;;;;;;;;;;;;;;;;;:8;:163::i;:::-;-1:-1:-1;7772:5:91;;7796:6;;:18;;-1:-1:-1;;;7796:18:91;;7772:5;7796:18;;;6281:25:113;7756:156:91;;-1:-1:-1;;;;;7772:5:91;;;;:15;;7796:6;;;:15;;6254:18:113;;7796::91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7772:44;;-1:-1:-1;;;;;;7772:44:91;;;;;;;-1:-1:-1;;;;;581:32:113;;;7772:44:91;;;563:51:113;536:18;;7772:44:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7853:12;7824:8;:23;;7848:1;7824:26;;;;;;;;:::i;:::-;;;;;;;;;:41;;;;:::i;:::-;7756:156;;;;;;;;;;;;;;;;;:8;:156::i;:::-;7965:4;;7988:5;;7965:30;;-1:-1:-1;;;7965:30:91;;-1:-1:-1;;;;;7988:5:91;;;7965:30;;;563:51:113;7949:181:91;;7965:4;;;;;:14;;536:18:113;;7965:30:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8049:4;;8038:39;;-1:-1:-1;;;;;8049:4:91;8047:7;8058:5;;-1:-1:-1;;;;;8058:5:91;8066:10;8038:8;:39::i;:::-;8013:22;;:64;;;;:::i;7949:181::-;8180:4;;8137:114;;8153:8;;8169:39;;-1:-1:-1;;;;;8180:4:91;8178:7;10715:96:94;8169:39:91;8137:114;;;;;;;;;;;;;;;;;:8;:114::i;:::-;8312:26;;8258:15;8277:26;;;:9;8312;8277:26;;;8258:15;;8347:12;;8277:61;;8312:26;8277:61;:::i;:::-;:82;;;;:::i;:::-;8382:5;;8406;;8382:31;;-1:-1:-1;;;8382:31:91;;-1:-1:-1;;;;;8406:5:91;;;8382:31;;;563:51:113;8258:102:91;;-1:-1:-1;8366:153:91;;8382:5;;;:15;;536:18:113;;8382:31:91;383:237:113;8366:153:91;8526:63;8535:9;8546:10;8526:63;;;;;;;;;;;;;;;;;:8;:63::i;:::-;8644:4;;8659:3;;:16;;;-1:-1:-1;;;8659:16:91;;;;8628:182;;-1:-1:-1;;;;;8644:4:91;;;;:14;;8659:3;;;:14;;:16;;;;;;;;;;;;;;;:3;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8644:32;;-1:-1:-1;;;;;;8644:32:91;;;;;;;-1:-1:-1;;;;;581:32:113;;;8644::91;;;563:51:113;536:18;;8644:32:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8728:4;;8719:37;;-1:-1:-1;;;;;8728:4:91;8737:5;;-1:-1:-1;;;;;8737:5:91;8745:10;8719:6;:37::i;:::-;8693:23;;:63;;;;:::i;:::-;8628:182;;;;;;;;;;;;;;;;;:8;:182::i;3462:1239::-;3562:5;;:45;;-1:-1:-1;;;3562:45:91;;;;;31616:25:113;;;3597:9:91;31657:18:113;;;31650:34;-1:-1:-1;;;;;3562:5:91;;;;:18;;31589::113;;3562:45:91;;;;;;;;;;;;;;;;;;;-1:-1:-1;3562:45:91;;;;;;;;-1:-1:-1;;3562:45:91;;;;;;;;;;;;:::i;:::-;;;3558:1139;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4623:17;4654:8;4643:30;;;;;;;;;;;;:::i;:::-;4623:50;;4681:9;4686:3;4681:4;:9::i;3558:1139::-;3762:42;3774:7;3773:8;3762:42;;;;;;;;;;;;;-1:-1:-1;;;3762:42:91;;;:10;:42::i;:::-;3812:63;3821:8;3831:1;3812:63;;;;;;;;;;;;;;;;;:8;:63::i;:::-;3883:65;3892:9;3903:1;3883:65;;;;;;;;;;;;;;;;;:8;:65::i;:::-;4045:3;;4069:4;;4078:5;;4056:45;;-1:-1:-1;;;4056:45:91;;4022:151;;-1:-1:-1;;;;;4045:3:91;;;;:10;;:3;;4056:10;;:45;;4069:4;;;4078:5;;4086:14;;4056:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4045:57;;;;;;;;;;;;;6281:25:113;;6269:2;6254:18;;6135:177;4045:57:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4044:58;4022:151;;;;;;;;;;;;;;;;;:10;:151::i;:::-;4230:4;;4189:14;;4206:100;;-1:-1:-1;;;;;4230:4:91;4247:5;;-1:-1:-1;;;;;4247:5:91;4263:22;;;;:6;:22;;;;;;4286:11;4263:35;;;;;;;;;;;;4206:12;:100::i;:::-;4189:117;;4314:13;4383:8;:25;;4409:1;4383:28;;;;;;;;:::i;:::-;;;;;;;;;;4330:3;;4352:6;;:18;;-1:-1:-1;;;4352:18:91;;;;;6281:25:113;;;;4383:28:91;;-1:-1:-1;;;;;4330:3:91;;;;:13;;4352:6;;:15;;6254:18:113;;4352::91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4330:42;;-1:-1:-1;;;;;;4330:42:91;;;;;;;-1:-1:-1;;;;;581:32:113;;;4330:42:91;;;563:51:113;536:18;;4330:42:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:81;;;;:::i;:::-;4439:3;;4314:97;;-1:-1:-1;4419:158:91;;-1:-1:-1;;;;;4439:3:91;4437:14;4487:20;4314:97;4487:9;:20;:::i;:::-;4461:8;:22;:47;;;;:::i;:::-;4419:158;;;;;;;;;;;;;;;;;:8;:158::i;5747:115:5:-;5798:59;5853:2;5814:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5814:42:5;;;;;;;;;;;;;;-1:-1:-1;;;;;5814:42:5;-1:-1:-1;;;5814:42:5;;;5798:15;:59::i;3302:226:95:-;3346:4;-1:-1:-1;;;;;3362:15:95;;3358:136;;-1:-1:-1;;;;;;;;;;;3392:37:95;;;;35325:2:113;35307:21;;;35364:2;35344:18;;;35337:30;35403:32;35398:2;35383:18;;35376:60;35468:2;35453:18;;35123:354;3392:37:95;;;;;;;;3442:31;;;35694:21:113;;;35751:1;35731:18;;;35724:29;-1:-1:-1;;;35784:2:113;35769:18;;35762:37;-1:-1:-1;;;;;35873:32:113;;35866:4;35851:20;;35844:62;3442:31:95;;;;;;;35831:3:113;3442:31:95;;;3481:6;:4;:6::i;:::-;-1:-1:-1;;;;;;3507:15:95;;;;3302:226::o;1434:57::-;1470:16;1480:5;1470:9;:16::i;1517:186::-;1560:10;:15;1579:1;1560:20;1556:143;;1599:15;;1590:25;;-1:-1:-1;;;1590:25:95;;-1:-1:-1;;;;;1599:15:95;;;1590:25;;;563:51:113;-1:-1:-1;;;;;;;;;;;237:61:1;1590:8:95;;536:18:113;;1590:25:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1610:828:91:o;1556:143:95:-;1632:10;:15;1651:1;1632:20;1628:71;;1676:15;;1662:30;;-1:-1:-1;;;1662:30:95;;-1:-1:-1;;;;;1676:15:95;;;1662:30;;;563:51:113;-1:-1:-1;;;;;;;;;;;237:61:1;1662:13:95;;536:18:113;;1662:30:95;383:237:113;3731:764:2;3903:38;;;-1:-1:-1;;;;;581:32:113;;;3903:38:2;;;;563:51:113;;;;3903:38:2;;;;;;;;;;536:18:113;;;;3903:38:2;;;;;;;-1:-1:-1;;;;;3903:38:2;-1:-1:-1;;;3903:38:2;;;3885:62;;3861:20;;3885:10;;;:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3858:89;;;3953:12;3979:7;3968:27;;;;;;;;;;;;:::i;:::-;3953:42;-1:-1:-1;4024:71:2;4090:4;4024:51;4072:2;4024:38;-1:-1:-1;;;4024:22:2;:8;4040:5;4024:15;:22::i;:::-;:26;19133:9;;;:16;;-1:-1:-1;;19133:16:2;;;;;;;;;;;;:9;19028:143;4024:38;:47;19445:10;;;:44;;;;;;;-1:-1:-1;19445:44:2;;;;;;;-1:-1:-1;;;;;19469:18:2;;;;19445:44;;;:10;19335:176;4024:51;:65;;:71::i;:::-;4133:6;4129:362;;;4199:34;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4199:34:2;-1:-1:-1;;;4199:34:2;;;4179:62;;4152:23;;-1:-1:-1;;;;;4179:10:2;;;:62;;4199:34;4179:62;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4149:92;;;4249:11;4274:10;4263:30;;;;;;;;;;;;:::i;:::-;4249:44;;4312:7;4305:4;:14;4301:116;;;4342:14;4352:4;4342:7;:14;:::i;:::-;4331:26;;;;:::i;:::-;;;4301:116;;;4393:14;4400:7;4393:4;:14;:::i;:::-;4382:26;;;;:::i;:::-;;;4301:116;4424:60;4477:6;4424:38;-1:-1:-1;;;4424:22:2;:8;4440:5;4424:15;:22::i;4580:228:0:-;4638:1;4633;:6;4629:175;;-1:-1:-1;;;;;;;;;;;4654:41:0;;;;36119:2:113;36101:21;;;36158:2;36138:18;;;36131:30;36197:34;36192:2;36177:18;;36170:62;-1:-1:-1;;;36263:2:113;36248:18;;36241:32;36305:3;36290:19;;35917:398;4654:41:0;;;;;;;;4708:31;4737:1;4708:31;;;;;;:::i;:::-;;;;;;;;4752;4781:1;4752:31;;;;;;:::i;:::-;;;;;;;;4791:6;:4;:6::i;3121:243::-;3185:1;-1:-1:-1;;;;;3180:6:0;:1;-1:-1:-1;;;;;3180:6:0;;3176:184;;-1:-1:-1;;;;;;;;;;;3201:44:0;;;;37556:2:113;37538:21;;;37595:2;37575:18;;;37568:30;37634:34;37629:2;37614:18;;37607:62;-1:-1:-1;;;37700:2:113;37685:18;;37678:35;37745:3;37730:19;;37354:401;3201:44:0;;;;;;;;3258:34;3290:1;3258:34;;;;;;:::i;:::-;;;;;;;;3305;3337:1;3305:34;;;;;;:::i;6452:198:94:-;6580:3;;:21;;-1:-1:-1;;;6580:21:94;;6546:4;;;;-1:-1:-1;;;;;6580:3:94;;;;:10;;:21;;6591:4;;6597:3;;6580:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6558:43;-1:-1:-1;6639:5:94;;-1:-1:-1;5147:52:27;;;;;;6624:11:94;6616:19;;:5;:19;:::i;:::-;6615:29;;;;:::i;:::-;6607:38;6452:198;-1:-1:-1;;;;;6452:198:94:o;2948:169:0:-;3023:9;3018:95;;-1:-1:-1;;;;;;;;;;;3073:3:0;3047:30;;;;;;:::i;:::-;;;;;;;;3085:21;3096:9;3085:10;:21::i;6654:209:94:-;6784:3;;:21;;-1:-1:-1;;;6784:21:94;;6750:4;;;;-1:-1:-1;;;;;6784:3:94;;;;:10;;:21;;6795:4;;6801:3;;6784:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6762:43;-1:-1:-1;6853:5:94;;-1:-1:-1;6828:20:94;5147:52:27;;;;;;6853:5:94;6828:20;:::i;6954:108:2:-;-1:-1:-1;;;;;;;;;;;7041:3:2;7015:30;;;;;;:::i;:::-;;;;;;;;7051:6;:4;:6::i;631:356:5:-;718:14;;583:42;834:2;821:16;;697:18;;718:14;821:16;583:42;873:5;853:124;844:133;;793:190;;631:356;:::o;2086:353:0:-;-1:-1:-1;;;;;;;;;;;2564:55:0;2637:16;2117:298;;2283:64;;2148:11;;-1:-1:-1;;;;;;;;;;;1459:61:0;2227:43;;2283:64;;1459:61;;-1:-1:-1;;;2308:17:0;2340:4;;2283:64;;;:::i;:::-;;;;-1:-1:-1;;2283:64:0;;;;;;;;;;2192:165;;;2283:64;2192:165;;:::i;:::-;;;;-1:-1:-1;;2192:165:0;;;;;;;;;;2165:200;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2117:298:0;2420:7;:14;;-1:-1:-1;;2420:14:0;;;;;2086:353::o;959:444:95:-;1025:1;1007:10;:19;1050:17;;;-1:-1:-1;;;1050:17:95;;;;:4;;:15;;:17;;;;;;;;;;;;;;:4;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1032:15;:35;;-1:-1:-1;;;;;;1032:35:95;-1:-1:-1;;;;;1032:35:95;;;;;;;;;1104:4;1077:32;1073:326;;1180:4;-1:-1:-1;;;;;1180:15:95;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1161:15;;-1:-1:-1;;;;;1161:15:95;;;:36;;;1157:236;;1260:1;1242:10;:19;3123:37:94;2363:802::o;1157:236:95:-;1280:7;1276:117;;;1359:1;1341:10;:19;1370:14;;;-1:-1:-1;;;1370:14:95;;;;-1:-1:-1;;;;;;;;;;;237:61:1;1370:12:95;;:14;;;;;1341:15;;1370:14;;;;;;;1341:15;237:61:1;1370:14:95;;;;;;;;;;18868:156:2;18980:12;;;:22;;-1:-1:-1;;;;;;18980:22:2;-1:-1:-1;;;;;18980:22:2;;;;;;;;;;:12;18868:156::o;20119:111::-;20192:33;20206:4;20220:3;20192:13;:33::i;2809:135:0:-;2865:9;2860:80;;-1:-1:-1;;;;;;;;;;;2889:30:0;;;;39070:2:113;39052:21;;;39109:2;39089:18;;;39082:30;39148:25;39143:2;39128:18;;39121:53;39206:2;39191:18;;38868:347;20432:1000:2;20522:12;;;;20554:9;;;;20588:11;;;;20628:10;;;20605:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;20522:12:2;;;;20554:9;;;;;;20508:11;;20605:33;;20628:10;;20605:33;;20628:10;20605:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20645:17;20682:4;20688:12;20696:3;20688:7;:12::i;:::-;20665:36;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;20665:36:2;;;;;;;;;-1:-1:-1;;;;;20712:15:2;;;;;;:10;;;20665:36;20712:15;;;;;;-1:-1:-1;;;;;;20712:21:2;;;;;;;;;20665:36;;-1:-1:-1;20712:21:2;;:15;;20744:34;;20761:3;;20766:11;;20744:34;;:::i;:::-;;;;-1:-1:-1;;20744:34:2;;;;;;;;;20734:45;;20744:34;20734:45;;;;20712:68;;;;;;;;;;-1:-1:-1;20712:68:2;;;;20707:100;;20790:10;20795:4;20790;:10::i;:::-;;20707:100;-1:-1:-1;;;;;20842:15:2;;20812:12;20842:15;;;;;;;;;;;-1:-1:-1;;;;;;20842:21:2;;;;;;;;;20874:34;;20842:21;;20812:12;;20874:34;;20891:3;;20896:11;;20874:34;;:::i;:::-;;;;;;;;;;;;;20864:45;;;;;;20842:68;;;;;;;;;;;;20827:89;;20812:104;;20923:12;20952:17;20973:3;-1:-1:-1;;;;;20973:14:2;20988:4;20973:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20949:44:2;-1:-1:-1;21008:38:2;;-1:-1:-1;20949:44:2;21029:16;21034:11;21029:2;:16;:::i;:::-;21008:14;:38::i;:::-;21073:28;;-1:-1:-1;;;21073:28:2;;21001:45;;-1:-1:-1;21058:12:2;;-1:-1:-1;;;;;;;;;;;;21073:17:2;;;:28;;21091:3;;21096:4;;21073:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21058:43;;21120:4;21112;:12;21108:186;;21134:153;;-1:-1:-1;;;21134:153:2;;;;;;;:::i;:::-;;;;;;;;;21299:34;;-1:-1:-1;;;21299:34:2;;-1:-1:-1;;;;;;;;;;;21299:18:2;;;:34;;21318:3;;21323:4;;21329:3;;21299:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;21346:12:2;;;21339:19;;-1:-1:-1;;;;;;21339:19:2;;;-1:-1:-1;21371:9:2;;;21364:16;;-1:-1:-1;;21364:16:2;;;21386:17;-1:-1:-1;21393:10:2;;21346:12;21386:17;:::i;:::-;21416:4;:11;;21409:18;;;20502:930;;;;;;;;20432:1000;;:::o;22680:340::-;22739:12;22759:19;22791:1;:8;22802:2;22791:13;;;;:::i;:::-;-1:-1:-1;;;;;22781:24:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22781:24:2;;22759:46;;22816:6;22811:185;22832:1;:8;22828:1;:12;22811:185;;;22855:9;22867:1;22869;22867:4;;;;;;;;:::i;:::-;;;;;;;22855:16;;22980:1;22974;22970:2;22966:10;22962:2;22958:19;22950:6;22946:32;22939:43;22929:61;22842:3;;;;;:::i;:::-;;;;22811:185;;;-1:-1:-1;23009:6:2;22680:340;-1:-1:-1;;22680:340:2:o;15827:3037::-;15910:12;;;;15942:9;;;;15976:11;;;;16016:10;;;15993:33;;;;;;;;;;;;;;;;;;;15884:4;;-1:-1:-1;;;;;15910:12:2;;15942:9;;;15976:11;15884:4;;15993:33;;16016:10;;15993:33;;;16016:10;15993:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;16069:15:2;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;16069:21:2;;;;;;;;;16101:34;;15993:33;;-1:-1:-1;16069:21:2;:15;;-1:-1:-1;16101:34:2;;-1:-1:-1;15993:33:2;;16123:11;;16101:34;;:::i;:::-;;;;-1:-1:-1;;16101:34:2;;;;;;;;;16091:45;;16101:34;16091:45;;;;16069:68;;;;;;;;;;-1:-1:-1;16069:68:2;;;;16065:172;;;-1:-1:-1;;;;;16162:15:2;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;16162:21:2;;;;;;;;;16194:34;;16162:21;;:10;16194:34;;16211:3;;16216:11;;16194:34;;:::i;:::-;;;;;;;;;;;;;16184:45;;;;;;16162:68;;;;;;;;;;;;16147:83;;;;;;15827:3037;;;:::o;16065:172::-;16242:17;16279:4;16285:12;16293:3;16285:7;:12::i;:::-;16262:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16242:56;;-1:-1:-1;;;;;;;;;;;15168:34:2;;-1:-1:-1;;;;;16304:19:2;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16331:12;16360:17;16381:3;-1:-1:-1;;;;;16381:14:2;16396:4;16381:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16357:44:2;-1:-1:-1;16416:38:2;;-1:-1:-1;16357:44:2;16437:16;16442:11;16437:2;:16;:::i;16416:38::-;16496:35;;-1:-1:-1;;;16496:35:2;;-1:-1:-1;;;;;581:32:113;;16496:35:2;;;563:51:113;16409:45:2;;-1:-1:-1;16468:22:2;;-1:-1:-1;;;;;;;;;;;;16496:21:2;;;536:18:113;;16496:35:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16496:35:2;;;;;;;;;;;;:::i;:::-;16467:64;;;16541:5;:12;16557:1;16541:17;16537:1993;;16568:12;-1:-1:-1;;;;;;;;;;;15168:34:2;;-1:-1:-1;;;;;16583:17:2;;16601:3;16606:5;16612:1;16606:8;;;;;;;;:::i;:::-;;;;;;;16583:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16568:47;-1:-1:-1;16568:47:2;16623:89;;16662:41;16683:3;16693:5;16699:1;16693:8;;;;;;;;:::i;:::-;;;;;;;16688:14;;16662:41;;;;;;;:::i;:::-;;;;;;;;16623:89;16731:4;16723;:12;16719:196;;16747:159;;-1:-1:-1;;;16747:159:2;;;;;;;:::i;:::-;16927:123;16946:3;16959:4;17000:3;17005:11;16983:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16973:45;;;;;;17033:5;17039:1;17033:8;;;;;;;;:::i;:::-;;;;;;;17028:14;;16927:123;;;;;;;;;:::i;:::-;;;;;;;;17150:5;17156:1;17150:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;17058:15:2;;17145:14;17058:15;;;;;;;;;;-1:-1:-1;;;;;;17058:21:2;;;;;;;;;17099:34;;17150:8;;17058:21;;17099:34;;17116:3;;17121:11;;17099:34;;:::i;:::-;;;;-1:-1:-1;;17099:34:2;;;;;;;;;17089:45;;17099:34;17089:45;;;;17058:84;;;;;;;;;;;;-1:-1:-1;17058:84:2;;;:101;;;;-1:-1:-1;;;;;17167:15:2;;;;17254:4;17167:10;;;:15;;;;;-1:-1:-1;;;;;;17167:21:2;;;;;;;;;17208:34;;17254:4;;-1:-1:-1;17208:34:2;;17225:3;;17230:11;;17208:34;;:::i;:::-;;;;;;;-1:-1:-1;;17208:34:2;;;;;;17198:45;;17208:34;17198:45;;;;17167:84;;;;;;;;;;-1:-1:-1;17167:84:2;:91;;-1:-1:-1;;17167:91:2;;;;;;;;;;-1:-1:-1;16537:1993:2;;;17290:1;17275:5;:12;:16;17271:1259;;;17306:6;17301:1096;17322:5;:12;17318:1;:16;17301:1096;;;17351:12;-1:-1:-1;;;;;;;;;;;15168:34:2;;-1:-1:-1;;;;;17366:17:2;;17384:3;17389:5;17395:1;17389:8;;;;;;;;:::i;:::-;;;;;;;17366:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17351:47;-1:-1:-1;17351:47:2;17408:93;;17449:41;17470:3;17480:5;17486:1;17480:8;;;;;;;;:::i;:::-;;;;;;;17475:14;;17449:41;;;;;;;:::i;:::-;;;;;;;;17408:93;-1:-1:-1;;;;;;;;;;;15168:34:2;;-1:-1:-1;;;;;17527:18:2;;17546:3;17551:5;17557:1;17551:8;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;17527:53:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17590:12;17612:17;17669:3;-1:-1:-1;;;;;17669:14:2;17684:4;17669:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17651:38:2;;-1:-1:-1;17651:38:2;-1:-1:-1;17708:38:2;17651;17729:16;17734:11;17729:2;:16;:::i;17708:38::-;17701:45;;17771:7;:37;;;;;-1:-1:-1;;;17782:4:2;:26;17771:37;17767:573;;;17886:143;17909:3;17926:4;17971:3;17976:11;17954:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;17944:45;;;;;;18008:5;18014:1;18008:8;;;;;;;;:::i;:::-;;;;;;;18003:14;;17886:143;;;;;;;;;:::i;:::-;;;;;;;;18141:5;18147:1;18141:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;18041:15:2;;18136:14;18041:15;;;;;;;;;;-1:-1:-1;;;;;;18041:21:2;;;;;;;;;18086:34;;18141:8;;18041:21;;18086:34;;18103:3;;18108:11;;18086:34;;:::i;:::-;;;;;;;;;;;;;18076:45;;;;;;18041:92;;;;;;;;;;;:109;;;;18257:4;18162;:10;;:15;18173:3;-1:-1:-1;;;;;18162:15:2;-1:-1:-1;;;;;18162:15:2;;;;;;;;;;;;:21;18178:4;-1:-1:-1;;;;;18162:21:2;;-1:-1:-1;;;;;18162:21:2;;;;;;;;;;;;;:92;18224:3;18229:11;18207:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;18197:45;;;;;;18162:92;;;;;;;;;;;;:99;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;15168:34:2;;-1:-1:-1;;;;;18273:18:2;;18292:3;18297:5;18303:1;18297:8;;;;;;;;:::i;:::-;;;;;;;18307:4;18273:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18324:5;;;;;17767:573;-1:-1:-1;;;;;;;;;;;15168:34:2;;-1:-1:-1;;;;;18349:18:2;;18368:3;18373:5;18379:1;18373:8;;;;;;;;:::i;:::-;;;;;;;18383:4;18349:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17341:1056;;;17336:3;;;;;:::i;:::-;;;;17301:1096;;;;17271:1259;;;18417:106;;;-1:-1:-1;;;18417:106:2;;42516:2:113;18417:106:2;;;42498:21:113;42535:18;;;42528:30;;;;42594:34;42574:18;;;42567:62;42665:34;42645:18;;;42638:62;42717:19;;18417:106:2;42314:428:113;18417:106:2;-1:-1:-1;;;;;18551:15:2;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;18551:21:2;;;;;;;;;18583:34;;18551:21;;:15;18583:34;;18600:3;;18605:11;;18583:34;;:::i;:::-;;;;-1:-1:-1;;18583:34:2;;;;;;;;;18573:45;;18583:34;18573:45;;;;18551:68;;;;;;;;;;-1:-1:-1;18551:68:2;;;;18536:146;;;;-1:-1:-1;;;18536:146:2;;42949:2:113;18536:146:2;;;42931:21:113;42988:2;42968:18;;;42961:30;43027:34;43007:18;;;43000:62;-1:-1:-1;;;43078:18:113;;;43071:45;43133:19;;18536:146:2;42747:411:113;18536:146:2;18696:12;;;18689:19;;-1:-1:-1;;;;;;18689:19:2;;;18721:9;;;18714:16;;-1:-1:-1;;18714:16:2;;;18736:17;-1:-1:-1;18743:10:2;;18696:12;18736:17;:::i;:::-;18759:18;18766:11;;;18759:18;;;-1:-1:-1;;;;;18791:15:2;;;;;;;;;;;;-1:-1:-1;;;;;;18791:21:2;;;;;;;;;18823:34;;18791:21;;18759:18;18823:34;;18840:3;;18845:11;;18823:34;;:::i;:::-;;;;;;;;;;;;;18813:45;;;;;;18791:68;;;;;;;;;;;;18784:75;;;;;;;;;15827:3037;;;:::o;22396:280::-;22482:7;22499:11;22517:8;22539:2;22528:1;:8;:13;:29;;22549:1;:8;22528:29;;;22544:2;22528:29;22517:40;;22568:6;22563:93;22584:3;22580:1;:7;22563:93;;;22643:5;:1;22647;22643:5;:::i;:::-;22617:1;22619:10;22628:1;22619:6;:10;:::i;:::-;22617:13;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;22617:13:2;22609:40;;22602:47;;;;;22589:3;;;;:::i;:::-;;;;22563:93;;;-1:-1:-1;22668:3:2;;22396:280;-1:-1:-1;;;;22396:280:2:o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:118:113;100:5;93:13;86:21;79:5;76:32;66:60;;122:1;119;112:12;137:241;193:6;246:2;234:9;225:7;221:23;217:32;214:52;;;262:1;259;252:12;214:52;301:9;288:23;320:28;342:5;320:28;:::i;625:139::-;-1:-1:-1;;;;;708:31:113;;698:42;;688:70;;754:1;751;744:12;769:571;875:6;883;891;944:2;932:9;923:7;919:23;915:32;912:52;;;960:1;957;950:12;912:52;999:9;986:23;1018:39;1051:5;1018:39;:::i;:::-;1076:5;-1:-1:-1;1133:2:113;1118:18;;1105:32;1146:41;1105:32;1146:41;:::i;:::-;1206:7;-1:-1:-1;1265:2:113;1250:18;;1237:32;1278:30;1237:32;1278:30;:::i;:::-;1327:7;1317:17;;;769:571;;;;;:::o;1719:632::-;1890:2;1942:21;;;2012:13;;1915:18;;;2034:22;;;1861:4;;1890:2;2113:15;;;;2087:2;2072:18;;;1861:4;2156:169;2170:6;2167:1;2164:13;2156:169;;;2231:13;;2219:26;;2300:15;;;;2265:12;;;;2192:1;2185:9;2156:169;;;-1:-1:-1;2342:3:113;;1719:632;-1:-1:-1;;;;;;1719:632:113:o;2356:127::-;2417:10;2412:3;2408:20;2405:1;2398:31;2448:4;2445:1;2438:15;2472:4;2469:1;2462:15;2488:253;2560:2;2554:9;2602:4;2590:17;;-1:-1:-1;;;;;2622:34:113;;2658:22;;;2619:62;2616:88;;;2684:18;;:::i;:::-;2720:2;2713:22;2488:253;:::o;2746:275::-;2817:2;2811:9;2882:2;2863:13;;-1:-1:-1;;2859:27:113;2847:40;;-1:-1:-1;;;;;2902:34:113;;2938:22;;;2899:62;2896:88;;;2964:18;;:::i;:::-;3000:2;2993:22;2746:275;;-1:-1:-1;2746:275:113:o;3026:187::-;3075:4;-1:-1:-1;;;;;3100:6:113;3097:30;3094:56;;;3130:18;;:::i;:::-;-1:-1:-1;3196:2:113;3175:15;-1:-1:-1;;3171:29:113;3202:4;3167:40;;3026:187::o;3218:965::-;3305:6;3313;3321;3374:2;3362:9;3353:7;3349:23;3345:32;3342:52;;;3390:1;3387;3380:12;3342:52;3429:9;3416:23;3448:39;3481:5;3448:39;:::i;:::-;3506:5;-1:-1:-1;3563:2:113;3548:18;;3535:32;3576:41;3535:32;3576:41;:::i;:::-;3636:7;-1:-1:-1;3694:2:113;3679:18;;3666:32;-1:-1:-1;;;;;3710:30:113;;3707:50;;;3753:1;3750;3743:12;3707:50;3776:22;;3829:4;3821:13;;3817:27;-1:-1:-1;3807:55:113;;3858:1;3855;3848:12;3807:55;3894:2;3881:16;3919:49;3935:32;3964:2;3935:32;:::i;:::-;3919:49;:::i;:::-;3991:2;3984:5;3977:17;4031:7;4026:2;4021;4017;4013:11;4009:20;4006:33;4003:53;;;4052:1;4049;4042:12;4003:53;4107:2;4102;4098;4094:11;4089:2;4082:5;4078:14;4065:45;4151:1;4146:2;4141;4134:5;4130:14;4126:23;4119:34;4172:5;4162:15;;;;;3218:965;;;;;:::o;4642:182::-;4701:4;-1:-1:-1;;;;;4726:6:113;4723:30;4720:56;;;4756:18;;:::i;:::-;-1:-1:-1;4801:1:113;4797:14;4813:4;4793:25;;4642:182::o;4829:889::-;4912:6;4943:2;4986;4974:9;4965:7;4961:23;4957:32;4954:52;;;5002:1;4999;4992:12;4954:52;5042:9;5029:23;-1:-1:-1;;;;;5067:6:113;5064:30;5061:50;;;5107:1;5104;5097:12;5061:50;5130:22;;5183:4;5175:13;;5171:27;-1:-1:-1;5161:55:113;;5212:1;5209;5202:12;5161:55;5248:2;5235:16;5271:59;5287:42;5326:2;5287:42;:::i;5271:59::-;5364:15;;;5446:1;5442:10;;;;5434:19;;5430:28;;;5395:12;;;;5470:19;;;5467:39;;;5502:1;5499;5492:12;5467:39;5526:11;;;;5546:142;5562:6;5557:3;5554:15;5546:142;;;5628:17;;5616:30;;5579:12;;;;5666;;;;5546:142;;;5707:5;4829:889;-1:-1:-1;;;;;;;4829:889:113:o;5723:407::-;5816:6;5824;5832;5885:2;5873:9;5864:7;5860:23;5856:32;5853:52;;;5901:1;5898;5891:12;5853:52;5940:9;5927:23;5959:39;5992:5;5959:39;:::i;:::-;6017:5;6069:2;6054:18;;6041:32;;-1:-1:-1;6120:2:113;6105:18;;;6092:32;;5723:407;-1:-1:-1;;;5723:407:113:o;7404:404::-;7472:6;7480;7533:2;7521:9;7512:7;7508:23;7504:32;7501:52;;;7549:1;7546;7539:12;7501:52;7588:9;7575:23;7607:39;7640:5;7607:39;:::i;:::-;7665:5;-1:-1:-1;7722:2:113;7707:18;;7694:32;7735:41;7694:32;7735:41;:::i;:::-;7795:7;7785:17;;;7404:404;;;;;:::o;8279:339::-;8363:6;8371;8424:2;8412:9;8403:7;8399:23;8395:32;8392:52;;;8440:1;8437;8430:12;8392:52;8479:9;8466:23;8498:39;8531:5;8498:39;:::i;:::-;8556:5;8608:2;8593:18;;;;8580:32;;-1:-1:-1;;;8279:339:113:o;9064:376::-;-1:-1:-1;;;;;9315:32:113;;;;9297:51;;9379:2;9364:18;;9357:34;;;;9422:2;9407:18;;9400:34;9285:2;9270:18;;9064:376::o;9887:391::-;-1:-1:-1;;;;;10161:15:113;;;10143:34;;10213:15;;;;10208:2;10193:18;;10186:43;10260:2;10245:18;;10238:34;;;;10093:2;10078:18;;9887:391::o;10473:184::-;10543:6;10596:2;10584:9;10575:7;10571:23;10567:32;10564:52;;;10612:1;10609;10602:12;10564:52;-1:-1:-1;10635:16:113;;10473:184;-1:-1:-1;10473:184:113:o;10662:278::-;10751:6;10804:2;10792:9;10783:7;10779:23;10775:32;10772:52;;;10820:1;10817;10810:12;10772:52;10852:9;10846:16;10871:39;10904:5;10871:39;:::i;10945:258::-;11017:1;11027:113;11041:6;11038:1;11035:13;11027:113;;;11117:11;;;11111:18;11098:11;;;11091:39;11063:2;11056:10;11027:113;;;11158:6;11155:1;11152:13;11149:48;;;-1:-1:-1;;11193:1:113;11175:16;;11168:27;10945:258::o;11208:636::-;11288:6;11341:2;11329:9;11320:7;11316:23;11312:32;11309:52;;;11357:1;11354;11347:12;11309:52;11390:9;11384:16;-1:-1:-1;;;;;11415:6:113;11412:30;11409:50;;;11455:1;11452;11445:12;11409:50;11478:22;;11531:4;11523:13;;11519:27;-1:-1:-1;11509:55:113;;11560:1;11557;11550:12;11509:55;11589:2;11583:9;11614:49;11630:32;11659:2;11630:32;:::i;11614:49::-;11686:2;11679:5;11672:17;11726:7;11721:2;11716;11712;11708:11;11704:20;11701:33;11698:53;;;11747:1;11744;11737:12;11698:53;11760:54;11811:2;11806;11799:5;11795:14;11790:2;11786;11782:11;11760:54;:::i;11849:412::-;-1:-1:-1;;;12095:3:113;12088:21;12070:3;12138:6;12132:13;12154:61;12208:6;12204:1;12199:3;12195:11;12188:4;12180:6;12176:17;12154:61;:::i;:::-;12235:16;;;;12253:1;12231:24;;11849:412;-1:-1:-1;;11849:412:113:o;12266:258::-;12308:3;12346:5;12340:12;12373:6;12368:3;12361:19;12389:63;12445:6;12438:4;12433:3;12429:14;12422:4;12415:5;12411:16;12389:63;:::i;:::-;12506:2;12485:15;-1:-1:-1;;12481:29:113;12472:39;;;;12513:4;12468:50;;12266:258;-1:-1:-1;;12266:258:113:o;12529:317::-;-1:-1:-1;;;;;12706:32:113;;12688:51;;12775:2;12770;12755:18;;12748:30;;;-1:-1:-1;;12795:45:113;;12821:18;;12813:6;12795:45;:::i;12851:127::-;12912:10;12907:3;12903:20;12900:1;12893:31;12943:4;12940:1;12933:15;12967:4;12964:1;12957:15;12983:135;13022:3;13043:17;;;13040:43;;13063:18;;:::i;:::-;-1:-1:-1;13110:1:113;13099:13;;12983:135::o;13954:300::-;-1:-1:-1;;;;;14172:32:113;;;;14154:51;;14236:2;14221:18;;14214:34;14142:2;14127:18;;13954:300::o;15565:127::-;15626:10;15621:3;15617:20;15614:1;15607:31;15657:4;15654:1;15647:15;15681:4;15678:1;15671:15;17012:320;-1:-1:-1;;;;;17258:15:113;;;17240:34;;17310:15;;17305:2;17290:18;;17283:43;17190:2;17175:18;;17012:320::o;17337:291::-;17462:6;17470;17523:2;17511:9;17502:7;17498:23;17494:32;17491:52;;;17539:1;17536;17529:12;17491:52;-1:-1:-1;;17562:16:113;;17618:2;17603:18;;;17597:25;17562:16;;17597:25;;-1:-1:-1;17337:291:113:o;18303:125::-;18343:4;18371:1;18368;18365:8;18362:34;;;18376:18;;:::i;:::-;-1:-1:-1;18413:9:113;;18303:125::o;18433:439::-;18685:34;18680:3;18673:47;18655:3;18749:6;18743:13;18765:60;18818:6;18813:2;18808:3;18804:12;18799:2;18791:6;18787:15;18765:60;:::i;:::-;18845:16;;;;18863:2;18841:25;;18433:439;-1:-1:-1;;18433:439:113:o;18877:1024::-;19022:6;19030;19074:9;19065:7;19061:23;19104:3;19100:2;19096:12;19093:32;;;19121:1;19118;19111:12;19093:32;19145:4;19141:2;19137:13;19134:33;;;19163:1;19160;19153:12;19134:33;19189:22;;:::i;:::-;19240:9;19234:16;19227:5;19220:31;19304:2;19293:9;19289:18;19283:25;19278:2;19271:5;19267:14;19260:49;19362:2;19351:9;19347:18;19341:25;19336:2;19329:5;19325:14;19318:49;19420:2;19409:9;19405:18;19399:25;19394:2;19387:5;19383:14;19376:49;19444:5;19434:15;;;19484:4;19477:3;19473:8;19469:2;19465:17;19461:28;19458:48;;;19502:1;19499;19492:12;19458:48;;19530:22;;:::i;:::-;19597:4;19586:9;19582:20;19576:27;19612:41;19645:7;19612:41;:::i;:::-;19662:24;;19741:3;19726:19;;19720:26;19715:2;19702:16;;19695:52;19802:3;19787:19;;19781:26;19776:2;19763:16;;19756:52;19863:3;19848:19;;;19842:26;19837:2;19824:16;;19817:52;-1:-1:-1;18877:1024:113;19669:7;;-1:-1:-1;18877:1024:113:o;19906:483::-;20168:34;20163:3;20156:47;-1:-1:-1;;;20228:2:113;20223:3;20219:12;20212:25;20138:3;20266:6;20260:13;20282:60;20335:6;20330:2;20325:3;20321:12;20316:2;20308:6;20304:15;20282:60;:::i;:::-;20362:16;;;;20380:2;20358:25;;19906:483;-1:-1:-1;;19906:483:113:o;22179:470::-;22358:3;22396:6;22390:13;22412:53;22458:6;22453:3;22446:4;22438:6;22434:17;22412:53;:::i;:::-;22528:13;;22487:16;;;;22550:57;22528:13;22487:16;22584:4;22572:17;;22550:57;:::i;:::-;22623:20;;22179:470;-1:-1:-1;;;;22179:470:113:o;22654:429::-;22875:3;22913:6;22907:13;22929:53;22975:6;22970:3;22963:4;22955:6;22951:17;22929:53;:::i;:::-;-1:-1:-1;;;23004:16:113;;23029:19;;;-1:-1:-1;23075:1:113;23064:13;;22654:429;-1:-1:-1;22654:429:113:o;23088:422::-;23177:1;23220:5;23177:1;23234:270;23255:7;23245:8;23242:21;23234:270;;;23314:4;23310:1;23306:6;23302:17;23296:4;23293:27;23290:53;;;23323:18;;:::i;:::-;23373:7;23363:8;23359:22;23356:55;;;23393:16;;;;23356:55;23472:22;;;;23432:15;;;;23234:270;;;23238:3;23088:422;;;;;:::o;23515:806::-;23564:5;23594:8;23584:80;;-1:-1:-1;23635:1:113;23649:5;;23584:80;23683:4;23673:76;;-1:-1:-1;23720:1:113;23734:5;;23673:76;23765:4;23783:1;23778:59;;;;23851:1;23846:130;;;;23758:218;;23778:59;23808:1;23799:10;;23822:5;;;23846:130;23883:3;23873:8;23870:17;23867:43;;;23890:18;;:::i;:::-;-1:-1:-1;;23946:1:113;23932:16;;23961:5;;23758:218;;24060:2;24050:8;24047:16;24041:3;24035:4;24032:13;24028:36;24022:2;24012:8;24009:16;24004:2;23998:4;23995:12;23991:35;23988:77;23985:159;;;-1:-1:-1;24097:19:113;;;24129:5;;23985:159;24176:34;24201:8;24195:4;24176:34;:::i;:::-;24246:6;24242:1;24238:6;24234:19;24225:7;24222:32;24219:58;;;24257:18;;:::i;:::-;24295:20;;23515:806;-1:-1:-1;;;23515:806:113:o;24326:131::-;24386:5;24415:36;24442:8;24436:4;24415:36;:::i;24462:217::-;24502:1;24528;24518:132;;24572:10;24567:3;24563:20;24560:1;24553:31;24607:4;24604:1;24597:15;24635:4;24632:1;24625:15;24518:132;-1:-1:-1;24664:9:113;;24462:217::o;24963:371::-;-1:-1:-1;;;;;;25148:33:113;;25136:46;;25205:13;;25118:3;;25227:61;25205:13;25277:1;25268:11;;25261:4;25249:17;;25227:61;:::i;:::-;25308:16;;;;25326:1;25304:24;;24963:371;-1:-1:-1;;;24963:371:113:o;25339:274::-;25468:3;25506:6;25500:13;25522:53;25568:6;25563:3;25556:4;25548:6;25544:17;25522:53;:::i;:::-;25591:16;;;;;25339:274;-1:-1:-1;;25339:274:113:o;25618:245::-;25685:6;25738:2;25726:9;25717:7;25713:23;25709:32;25706:52;;;25754:1;25751;25744:12;25706:52;25786:9;25780:16;25805:28;25827:5;25805:28;:::i;26291:273::-;26359:6;26412:2;26400:9;26391:7;26387:23;26383:32;26380:52;;;26428:1;26425;26418:12;26380:52;26460:9;26454:16;26510:4;26503:5;26499:16;26492:5;26489:27;26479:55;;26530:1;26527;26520:12;26569:168;26609:7;26675:1;26671;26667:6;26663:14;26660:1;26657:21;26652:1;26645:9;26638:17;26634:45;26631:71;;;26682:18;;:::i;:::-;-1:-1:-1;26722:9:113;;26569:168::o;26868:1053::-;26953:12;;26918:3;;27008:1;27028:18;;;;27081;;;;27108:61;;27162:4;27154:6;27150:17;27140:27;;27108:61;27188:2;27236;27228:6;27225:14;27205:18;27202:38;27199:161;;27282:10;27277:3;27273:20;27270:1;27263:31;27317:4;27314:1;27307:15;27345:4;27342:1;27335:15;27199:161;1651:19;;;1703:4;1694:14;;27457:18;27484:104;;;;27602:1;27597:318;;;;27450:465;;27484:104;-1:-1:-1;;27519:24:113;;27505:39;;27564:14;;;;-1:-1:-1;27484:104:113;;27597:318;26815:1;26808:14;;;26852:4;26839:18;;27691:1;27705:167;27719:6;27716:1;27713:13;27705:167;;;27799:14;;27784:13;;;27777:37;27842:16;;;;27734:10;;27705:167;;;27892:13;;;-1:-1:-1;;27450:465:113;;;;;;;;26868:1053;;;;:::o;27926:578::-;-1:-1:-1;;;;;28177:32:113;;28159:51;;28246:3;28241:2;28226:18;;28219:31;;;-1:-1:-1;;28273:54:113;;28307:19;;28299:6;28273:54;:::i;:::-;28375:9;28367:6;28363:22;28358:2;28347:9;28343:18;28336:50;28403:41;28437:6;28429;28403:41;:::i;:::-;28395:49;;;28492:4;28484:6;28480:17;28475:2;28464:9;28460:18;28453:45;27926:578;;;;;;;:::o;30192:128::-;30232:3;30263:1;30259:6;30256:1;30253:13;30250:39;;;30269:18;;:::i;:::-;-1:-1:-1;30305:9:113;;30192:128::o;30325:446::-;30575:2;30564:9;30557:21;30614:1;30609:2;30598:9;30594:18;30587:29;-1:-1:-1;;;30647:2:113;30636:9;30632:18;30625:35;30698:3;30691:4;30680:9;30676:20;30669:33;30538:4;30719:46;30760:3;30749:9;30745:19;30737:6;30719:46;:::i;31695:491::-;31798:6;31806;31814;31822;31830;31883:3;31871:9;31862:7;31858:23;31854:33;31851:53;;;31900:1;31897;31890:12;31851:53;31932:9;31926:16;31951:28;31973:5;31951:28;:::i;:::-;32043:2;32028:18;;32022:25;32087:2;32072:18;;32066:25;32131:2;32116:18;;32110:25;32175:3;32160:19;;;32154:26;31998:5;;32022:25;;-1:-1:-1;32066:25:113;32110;-1:-1:-1;32154:26:113;;-1:-1:-1;31695:491:113;-1:-1:-1;;;31695:491:113:o;33527:439::-;33779:32;33774:3;33767:45;33749:3;33841:6;33835:13;33857:62;33912:6;33907:2;33902:3;33898:12;33891:4;33883:6;33879:17;33857:62;:::i;:::-;33939:16;;;;33957:2;33935:25;;33527:439;-1:-1:-1;;33527:439:113:o;33971:::-;34223:32;34218:3;34211:45;34193:3;34285:6;34279:13;34301:62;34356:6;34351:2;34346:3;34342:12;34335:4;34327:6;34323:17;34301:62;:::i;34898:220::-;35047:2;35036:9;35029:21;35010:4;35067:45;35108:2;35097:9;35093:18;35085:6;35067:45;:::i;36484:348::-;36714:2;36703:9;36696:21;36677:4;36734:49;36779:2;36768:9;36764:18;36397:2;36385:15;;-1:-1:-1;;;36425:4:113;36416:14;;36409:36;36470:2;36461:12;;36320:159;36734:49;36726:57;;36819:6;36814:2;36803:9;36799:18;36792:34;36484:348;;;;:::o;37001:::-;37231:2;37220:9;37213:21;37194:4;37251:49;37296:2;37285:9;37281:18;36914:2;36902:15;;-1:-1:-1;;;36942:4:113;36933:14;;36926:36;36987:2;36978:12;;36837:159;37760:374;37990:2;37979:9;37972:21;37953:4;38010:49;38055:2;38044:9;38040:18;36397:2;36385:15;;-1:-1:-1;;;36425:4:113;36416:14;;36409:36;36470:2;36461:12;;36320:159;38010:49;-1:-1:-1;;;;;38095:32:113;;;;38090:2;38075:18;;;;38068:60;;;;-1:-1:-1;38002:57:113;37760:374::o;38139:::-;38369:2;38358:9;38351:21;38332:4;38389:49;38434:2;38423:9;38419:18;36914:2;36902:15;;-1:-1:-1;;;36942:4:113;36933:14;;36926:36;36987:2;36978:12;;36837:159;39220:610;39466:13;;39409:3;;39440;;39519:4;39546:15;;;39409:3;39589:175;39603:6;39600:1;39597:13;39589:175;;;39666:13;;39652:28;;39702:14;;;;39739:15;;;;39625:1;39618:9;39589:175;;;-1:-1:-1;;39773:21:113;;;-1:-1:-1;39810:14:113;;;;;-1:-1:-1;;;39220:610:113:o;40024:556::-;40226:2;40208:21;;;40265:3;40245:18;;;40238:31;40305:34;40300:2;40285:18;;40278:62;40376:34;40371:2;40356:18;;40349:62;40448:34;40442:3;40427:19;;40420:63;-1:-1:-1;;;40514:3:113;40499:19;;40492:46;40570:3;40555:19;;40024:556::o;40585:658::-;40650:5;40703:3;40696:4;40688:6;40684:17;40680:27;40670:55;;40721:1;40718;40711:12;40670:55;40750:6;40744:13;40776:4;40800:59;40816:42;40855:2;40816:42;:::i;40800:59::-;40893:15;;;40979:1;40975:10;;;;40963:23;;40959:32;;;40924:12;;;;41003:15;;;41000:35;;;41031:1;41028;41021:12;41000:35;41067:2;41059:6;41055:15;41079:135;41095:6;41090:3;41087:15;41079:135;;;41161:10;;41149:23;;41192:12;;;;41112;;41079:135;;;-1:-1:-1;41232:5:113;40585:658;-1:-1:-1;;;;;;40585:658:113:o;41248:614::-;41377:6;41385;41438:2;41426:9;41417:7;41413:23;41409:32;41406:52;;;41454:1;41451;41444:12;41406:52;41487:9;41481:16;-1:-1:-1;;;;;41557:2:113;41549:6;41546:14;41543:34;;;41573:1;41570;41563:12;41543:34;41596:72;41660:7;41651:6;41640:9;41636:22;41596:72;:::i;:::-;41586:82;;41714:2;41703:9;41699:18;41693:25;41677:41;;41743:2;41733:8;41730:16;41727:36;;;41759:1;41756;41749:12;41727:36;;41782:74;41848:7;41837:8;41826:9;41822:24;41782:74;:::i;:::-;41772:84;;;41248:614;;;;;:::o;41867:442::-;-1:-1:-1;;;;;42114:32:113;;;;42096:51;;-1:-1:-1;;;;;;42183:33:113;;;;42178:2;42163:18;;42156:61;42248:2;42233:18;;42226:34;42291:2;42276:18;;42269:34;42083:3;42068:19;;41867:442::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "cash(address,uint256)": "d56a22f0",
    "cash(address,uint256,uint256)": "6cc12a24",
    "echoSender()": "1e91f8cb",
    "failed()": "ba414fa6",
    "insert()": "25f7b1de",
    "logary(int256[])": "521606d2",
    "logary(uint256[])": "b84e3eda",
    "setUp()": "0a9254e4",
    "setupMaker(address,address,string)": "bfdc3588",
    "setupMakerDeployer(address,address)": "bbab0fac",
    "setupMangrove()": "8c004832",
    "setupMangrove(address,address)": "ea14b5c3",
    "setupMangrove(address,address,bool)": "0b3d8c42",
    "setupMangrove(bool)": "0645f2be",
    "setupTaker(address,address,string)": "3336a63f",
    "test_snipe_insert_and_fail()": "3d8713cc",
    "vm()": "3a768463"
  },
  "ast": {
    "absolutePath": "packages/mangrove-solidity/test/core/Scenarii.t.sol",
    "id": 64303,
    "exportedSymbols": {
      "AbstractMangrove": [22211],
      "AccessControlled": [42692],
      "DSTest": [1786],
      "DeepCollectTest": [64302],
      "HasMgvEvents": [24088],
      "IERC20": [24224],
      "IMaker": [24106],
      "IMgvMonitor": [24146],
      "ITaker": [24118],
      "InvertedMangrove": [22954],
      "MakerDeployer": [71682],
      "Mangrove": [23080],
      "MangroveTest": [69891],
      "MgvLib": [23913],
      "P": [23884],
      "ScenariiTest": [64151],
      "Script": [2022],
      "StdStorage": [3553],
      "Test": [3455],
      "Test2": [70380],
      "TestMaker": [72397],
      "TestMoriartyMaker": [72646],
      "TestTaker": [72989],
      "TestToken": [75210],
      "TrivialTestMaker": [71717],
      "Utilities": [71483],
      "Vm": [5425],
      "console": [13489],
      "console2": [21553],
      "csl": [21553],
      "stdError": [3525],
      "stdMath": [4796],
      "stdStorage": [4655]
    },
    "nodeType": "SourceUnit",
    "src": "38:12024:91",
    "nodes": [
      {
        "id": 62701,
        "nodeType": "PragmaDirective",
        "src": "38:24:91",
        "literals": ["solidity", "^", "0.8", ".10"]
      },
      {
        "id": 62702,
        "nodeType": "ImportDirective",
        "src": "64:39:91",
        "absolutePath": "packages/mangrove-solidity/test/lib/MangroveTest.sol",
        "file": "mgv_test/lib/MangroveTest.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64303,
        "sourceUnit": 69892,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 64151,
        "nodeType": "ContractDefinition",
        "src": "105:10983:91",
        "nodes": [
          {
            "id": 62707,
            "nodeType": "VariableDeclaration",
            "src": "147:15:91",
            "constant": false,
            "mutability": "mutable",
            "name": "taker",
            "nameLocation": "157:5:91",
            "scope": 64151,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestTaker_$72989",
              "typeString": "contract TestTaker"
            },
            "typeName": {
              "id": 62706,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 62705,
                "name": "TestTaker",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 72989,
                "src": "147:9:91"
              },
              "referencedDeclaration": 72989,
              "src": "147:9:91",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestTaker_$72989",
                "typeString": "contract TestTaker"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 62710,
            "nodeType": "VariableDeclaration",
            "src": "166:20:91",
            "constant": false,
            "mutability": "mutable",
            "name": "makers",
            "nameLocation": "180:6:91",
            "scope": 64151,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MakerDeployer_$71682",
              "typeString": "contract MakerDeployer"
            },
            "typeName": {
              "id": 62709,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 62708,
                "name": "MakerDeployer",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 71682,
                "src": "166:13:91"
              },
              "referencedDeclaration": 71682,
              "src": "166:13:91",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MakerDeployer_$71682",
                "typeString": "contract MakerDeployer"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 62713,
            "nodeType": "VariableDeclaration",
            "src": "190:17:91",
            "constant": false,
            "mutability": "mutable",
            "name": "balances",
            "nameLocation": "199:8:91",
            "scope": 64151,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Balances_$69175_storage",
              "typeString": "struct MangroveTest.Balances"
            },
            "typeName": {
              "id": 62712,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 62711,
                "name": "Balances",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 69175,
                "src": "190:8:91"
              },
              "referencedDeclaration": 69175,
              "src": "190:8:91",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Balances_$69175_storage_ptr",
                "typeString": "struct MangroveTest.Balances"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 62716,
            "nodeType": "VariableDeclaration",
            "src": "211:27:91",
            "constant": true,
            "mutability": "constant",
            "name": "testFee",
            "nameLocation": "225:7:91",
            "scope": 64151,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 62714,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "211:4:91",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "333030",
              "id": 62715,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "235:3:91",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_300_by_1",
                "typeString": "int_const 300"
              },
              "value": "300"
            },
            "visibility": "internal"
          },
          {
            "id": 62719,
            "nodeType": "VariableDeclaration",
            "src": "242:14:91",
            "constant": false,
            "mutability": "mutable",
            "name": "offerOf",
            "nameLocation": "249:7:91",
            "scope": 64151,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 62717,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "242:4:91",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 62718,
              "nodeType": "ArrayTypeName",
              "src": "242:6:91",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 62726,
            "nodeType": "VariableDeclaration",
            "src": "261:45:91",
            "constant": false,
            "mutability": "mutable",
            "name": "offers",
            "nameLocation": "300:6:91",
            "scope": 64151,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_enum$_Info_$69182_$_t_uint256_$_$",
              "typeString": "mapping(uint256 => mapping(enum MangroveTest.Info => uint256))"
            },
            "typeName": {
              "id": 62725,
              "keyType": {
                "id": 62720,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "269:4:91",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "261:38:91",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_enum$_Info_$69182_$_t_uint256_$_$",
                "typeString": "mapping(uint256 => mapping(enum MangroveTest.Info => uint256))"
              },
              "valueType": {
                "id": 62724,
                "keyType": {
                  "id": 62722,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 62721,
                    "name": "Info",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 69182,
                    "src": "285:4:91"
                  },
                  "referencedDeclaration": 69182,
                  "src": "285:4:91",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Info_$69182",
                    "typeString": "enum MangroveTest.Info"
                  }
                },
                "nodeType": "Mapping",
                "src": "277:21:91",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_enum$_Info_$69182_$_t_uint256_$",
                  "typeString": "mapping(enum MangroveTest.Info => uint256)"
                },
                "valueType": {
                  "id": 62723,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "293:4:91",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 62801,
            "nodeType": "FunctionDefinition",
            "src": "346:439:91",
            "body": {
              "id": 62800,
              "nodeType": "Block",
              "src": "377:408:91",
              "statements": [
                {
                  "assignments": [62730],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 62730,
                      "mutability": "mutable",
                      "name": "offerId",
                      "nameLocation": "388:7:91",
                      "nodeType": "VariableDeclaration",
                      "scope": 62800,
                      "src": "383:12:91",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 62729,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "383:4:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 62740,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 62734,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "409:4:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 62733,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "407:1:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 62735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "407:7:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 62737,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "418:5:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 62736,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "416:1:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 62738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "416:8:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 62731,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "398:3:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 62732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "best",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23618,
                      "src": "398:8:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 62739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "398:27:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "383:42:91"
                },
                {
                  "body": {
                    "id": 62798,
                    "nodeType": "Block",
                    "src": "452:329:91",
                    "statements": [
                      {
                        "assignments": [62748, 62751],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 62748,
                            "mutability": "mutable",
                            "name": "offer",
                            "nameLocation": "482:5:91",
                            "nodeType": "VariableDeclaration",
                            "scope": 62798,
                            "src": "461:26:91",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OfferStruct_$32698_memory_ptr",
                              "typeString": "struct OfferStruct"
                            },
                            "typeName": {
                              "id": 62747,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 62746,
                                "name": "P.OfferStruct",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 32698,
                                "src": "461:13:91"
                              },
                              "referencedDeclaration": 32698,
                              "src": "461:13:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferStruct_$32698_storage_ptr",
                                "typeString": "struct OfferStruct"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 62751,
                            "mutability": "mutable",
                            "name": "offerDetail",
                            "nameLocation": "516:11:91",
                            "nodeType": "VariableDeclaration",
                            "scope": 62798,
                            "src": "489:38:91",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OfferDetailStruct_$32707_memory_ptr",
                              "typeString": "struct OfferDetailStruct"
                            },
                            "typeName": {
                              "id": 62750,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 62749,
                                "name": "P.OfferDetailStruct",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 32707,
                                "src": "489:19:91"
                              },
                              "referencedDeclaration": 32707,
                              "src": "489:19:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferDetailStruct_$32707_storage_ptr",
                                "typeString": "struct OfferDetailStruct"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 62762,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 62755,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 68676,
                                  "src": "556:4:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$75210",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$75210",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 62754,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  69787, 69804, 69821, 69838, 69855
                                ],
                                "referencedDeclaration": 69855,
                                "src": "554:1:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 62756,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "554:7:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 62758,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 68679,
                                  "src": "565:5:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$75210",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$75210",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 62757,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  69787, 69804, 69821, 69838, 69855
                                ],
                                "referencedDeclaration": 69855,
                                "src": "563:1:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 62759,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "563:8:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 62760,
                              "name": "offerId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62730,
                              "src": "573:7:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 62752,
                              "name": "mgv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68673,
                              "src": "531:3:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                                "typeString": "contract AbstractMangrove"
                              }
                            },
                            "id": 62753,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "offerInfo",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23675,
                            "src": "531:22:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_struct$_OfferStruct_$32698_memory_ptr_$_t_struct$_OfferDetailStruct_$32707_memory_ptr_$",
                              "typeString": "function (address,address,uint256) view external returns (struct OfferStruct memory,struct OfferDetailStruct memory)"
                            }
                          },
                          "id": 62761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "531:50:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_struct$_OfferStruct_$32698_memory_ptr_$_t_struct$_OfferDetailStruct_$32707_memory_ptr_$",
                            "typeString": "tuple(struct OfferStruct memory,struct OfferDetailStruct memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "460:121:91"
                      },
                      {
                        "expression": {
                          "id": 62771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 62763,
                                "name": "offers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 62726,
                                "src": "589:6:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_enum$_Info_$69182_$_t_uint256_$_$",
                                  "typeString": "mapping(uint256 => mapping(enum MangroveTest.Info => uint256))"
                                }
                              },
                              "id": 62767,
                              "indexExpression": {
                                "id": 62764,
                                "name": "offerId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 62730,
                                "src": "596:7:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "589:15:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_Info_$69182_$_t_uint256_$",
                                "typeString": "mapping(enum MangroveTest.Info => uint256)"
                              }
                            },
                            "id": 62768,
                            "indexExpression": {
                              "expression": {
                                "id": 62765,
                                "name": "Info",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69182,
                                "src": "605:4:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Info_$69182_$",
                                  "typeString": "type(enum MangroveTest.Info)"
                                }
                              },
                              "id": 62766,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "makerWants",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69176,
                              "src": "605:15:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Info_$69182",
                                "typeString": "enum MangroveTest.Info"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "589:32:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 62769,
                              "name": "offer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62748,
                              "src": "624:5:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferStruct_$32698_memory_ptr",
                                "typeString": "struct OfferStruct memory"
                              }
                            },
                            "id": 62770,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "wants",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32695,
                            "src": "624:11:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "589:46:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 62772,
                        "nodeType": "ExpressionStatement",
                        "src": "589:46:91"
                      },
                      {
                        "expression": {
                          "id": 62781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 62773,
                                "name": "offers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 62726,
                                "src": "643:6:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_enum$_Info_$69182_$_t_uint256_$_$",
                                  "typeString": "mapping(uint256 => mapping(enum MangroveTest.Info => uint256))"
                                }
                              },
                              "id": 62777,
                              "indexExpression": {
                                "id": 62774,
                                "name": "offerId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 62730,
                                "src": "650:7:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "643:15:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_Info_$69182_$_t_uint256_$",
                                "typeString": "mapping(enum MangroveTest.Info => uint256)"
                              }
                            },
                            "id": 62778,
                            "indexExpression": {
                              "expression": {
                                "id": 62775,
                                "name": "Info",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69182,
                                "src": "659:4:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Info_$69182_$",
                                  "typeString": "type(enum MangroveTest.Info)"
                                }
                              },
                              "id": 62776,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "makerGives",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69177,
                              "src": "659:15:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Info_$69182",
                                "typeString": "enum MangroveTest.Info"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "643:32:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 62779,
                              "name": "offer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62748,
                              "src": "678:5:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferStruct_$32698_memory_ptr",
                                "typeString": "struct OfferStruct memory"
                              }
                            },
                            "id": 62780,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "gives",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32697,
                            "src": "678:11:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "643:46:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 62782,
                        "nodeType": "ExpressionStatement",
                        "src": "643:46:91"
                      },
                      {
                        "expression": {
                          "id": 62791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 62783,
                                "name": "offers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 62726,
                                "src": "697:6:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_enum$_Info_$69182_$_t_uint256_$_$",
                                  "typeString": "mapping(uint256 => mapping(enum MangroveTest.Info => uint256))"
                                }
                              },
                              "id": 62787,
                              "indexExpression": {
                                "id": 62784,
                                "name": "offerId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 62730,
                                "src": "704:7:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "697:15:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_Info_$69182_$_t_uint256_$",
                                "typeString": "mapping(enum MangroveTest.Info => uint256)"
                              }
                            },
                            "id": 62788,
                            "indexExpression": {
                              "expression": {
                                "id": 62785,
                                "name": "Info",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69182,
                                "src": "713:4:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Info_$69182_$",
                                  "typeString": "type(enum MangroveTest.Info)"
                                }
                              },
                              "id": 62786,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "gasreq",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69181,
                              "src": "713:11:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Info_$69182",
                                "typeString": "enum MangroveTest.Info"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "697:28:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 62789,
                              "name": "offerDetail",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62751,
                              "src": "728:11:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferDetailStruct_$32707_memory_ptr",
                                "typeString": "struct OfferDetailStruct memory"
                              }
                            },
                            "id": 62790,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "gasreq",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32702,
                            "src": "728:18:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "697:49:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 62792,
                        "nodeType": "ExpressionStatement",
                        "src": "697:49:91"
                      },
                      {
                        "expression": {
                          "id": 62796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 62793,
                            "name": "offerId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62730,
                            "src": "754:7:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 62794,
                              "name": "offer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62748,
                              "src": "764:5:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferStruct_$32698_memory_ptr",
                                "typeString": "struct OfferStruct memory"
                              }
                            },
                            "id": 62795,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "next",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32693,
                            "src": "764:10:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "754:20:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 62797,
                        "nodeType": "ExpressionStatement",
                        "src": "754:20:91"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 62743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 62741,
                      "name": "offerId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62730,
                      "src": "438:7:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 62742,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "449:1:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "438:12:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 62799,
                  "nodeType": "WhileStatement",
                  "src": "431:350:91"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "saveOffers",
            "nameLocation": "355:10:91",
            "parameters": {
              "id": 62727,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "365:2:91"
            },
            "returnParameters": {
              "id": 62728,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "377:0:91"
            },
            "scope": 64151,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 62942,
            "nodeType": "FunctionDefinition",
            "src": "789:817:91",
            "body": {
              "id": 62941,
              "nodeType": "Block",
              "src": "822:784:91",
              "statements": [
                {
                  "assignments": [62808],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 62808,
                      "mutability": "mutable",
                      "name": "balA",
                      "nameLocation": "842:4:91",
                      "nodeType": "VariableDeclaration",
                      "scope": 62941,
                      "src": "828:18:91",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 62806,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "828:4:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 62807,
                        "nodeType": "ArrayTypeName",
                        "src": "828:6:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 62816,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 62812,
                            "name": "makers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62710,
                            "src": "860:6:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MakerDeployer_$71682",
                              "typeString": "contract MakerDeployer"
                            }
                          },
                          "id": 62813,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 71587,
                          "src": "860:13:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 62814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "860:15:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 62811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "849:10:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 62809,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "853:4:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 62810,
                        "nodeType": "ArrayTypeName",
                        "src": "853:6:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 62815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "849:27:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "828:48:91"
                },
                {
                  "assignments": [62821],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 62821,
                      "mutability": "mutable",
                      "name": "balB",
                      "nameLocation": "896:4:91",
                      "nodeType": "VariableDeclaration",
                      "scope": 62941,
                      "src": "882:18:91",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 62819,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "882:4:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 62820,
                        "nodeType": "ArrayTypeName",
                        "src": "882:6:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 62829,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 62825,
                            "name": "makers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62710,
                            "src": "914:6:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MakerDeployer_$71682",
                              "typeString": "contract MakerDeployer"
                            }
                          },
                          "id": 62826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 71587,
                          "src": "914:13:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 62827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "914:15:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 62824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "903:10:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 62822,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "907:4:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 62823,
                        "nodeType": "ArrayTypeName",
                        "src": "907:6:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 62828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "903:27:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "882:48:91"
                },
                {
                  "assignments": [62834],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 62834,
                      "mutability": "mutable",
                      "name": "balWei",
                      "nameLocation": "950:6:91",
                      "nodeType": "VariableDeclaration",
                      "scope": 62941,
                      "src": "936:20:91",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 62832,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "936:4:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 62833,
                        "nodeType": "ArrayTypeName",
                        "src": "936:6:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 62842,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 62838,
                            "name": "makers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62710,
                            "src": "970:6:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MakerDeployer_$71682",
                              "typeString": "contract MakerDeployer"
                            }
                          },
                          "id": 62839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 71587,
                          "src": "970:13:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 62840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "970:15:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 62837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "959:10:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 62835,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "963:4:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 62836,
                        "nodeType": "ArrayTypeName",
                        "src": "963:6:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 62841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "959:27:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "936:50:91"
                },
                {
                  "body": {
                    "id": 62900,
                    "nodeType": "Block",
                    "src": "1035:192:91",
                    "statements": [
                      {
                        "expression": {
                          "id": 62868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 62855,
                              "name": "balA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62808,
                              "src": "1043:4:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 62857,
                            "indexExpression": {
                              "id": 62856,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62844,
                              "src": "1048:1:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1043:7:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 62864,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 62844,
                                        "src": "1092:1:91",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 62862,
                                        "name": "makers",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 62710,
                                        "src": "1076:6:91",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_MakerDeployer_$71682",
                                          "typeString": "contract MakerDeployer"
                                        }
                                      },
                                      "id": 62863,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "getMaker",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 71602,
                                      "src": "1076:15:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_TestMaker_$72397_$",
                                        "typeString": "function (uint256) view external returns (contract TestMaker)"
                                      }
                                    },
                                    "id": 62865,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1076:18:91",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestMaker_$72397",
                                      "typeString": "contract TestMaker"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestMaker_$72397",
                                      "typeString": "contract TestMaker"
                                    }
                                  ],
                                  "id": 62861,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1068:7:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 62860,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1068:7:91",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 62866,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1068:27:91",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 62858,
                                "name": "base",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68676,
                                "src": "1053:4:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$75210",
                                  "typeString": "contract TestToken"
                                }
                              },
                              "id": 62859,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 73347,
                              "src": "1053:14:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 62867,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1053:43:91",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1043:53:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 62869,
                        "nodeType": "ExpressionStatement",
                        "src": "1043:53:91"
                      },
                      {
                        "expression": {
                          "id": 62883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 62870,
                              "name": "balB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62821,
                              "src": "1104:4:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 62872,
                            "indexExpression": {
                              "id": 62871,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62844,
                              "src": "1109:1:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1104:7:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 62879,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 62844,
                                        "src": "1154:1:91",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 62877,
                                        "name": "makers",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 62710,
                                        "src": "1138:6:91",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_MakerDeployer_$71682",
                                          "typeString": "contract MakerDeployer"
                                        }
                                      },
                                      "id": 62878,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "getMaker",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 71602,
                                      "src": "1138:15:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_TestMaker_$72397_$",
                                        "typeString": "function (uint256) view external returns (contract TestMaker)"
                                      }
                                    },
                                    "id": 62880,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1138:18:91",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestMaker_$72397",
                                      "typeString": "contract TestMaker"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestMaker_$72397",
                                      "typeString": "contract TestMaker"
                                    }
                                  ],
                                  "id": 62876,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1130:7:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 62875,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1130:7:91",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 62881,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1130:27:91",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 62873,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68679,
                                "src": "1114:5:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$75210",
                                  "typeString": "contract TestToken"
                                }
                              },
                              "id": 62874,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 73347,
                              "src": "1114:15:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 62882,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1114:44:91",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1104:54:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 62884,
                        "nodeType": "ExpressionStatement",
                        "src": "1104:54:91"
                      },
                      {
                        "expression": {
                          "id": 62898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 62885,
                              "name": "balWei",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62834,
                              "src": "1166:6:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 62887,
                            "indexExpression": {
                              "id": 62886,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62844,
                              "src": "1173:1:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1166:9:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 62894,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 62844,
                                        "src": "1216:1:91",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 62892,
                                        "name": "makers",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 62710,
                                        "src": "1200:6:91",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_MakerDeployer_$71682",
                                          "typeString": "contract MakerDeployer"
                                        }
                                      },
                                      "id": 62893,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "getMaker",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 71602,
                                      "src": "1200:15:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_TestMaker_$72397_$",
                                        "typeString": "function (uint256) view external returns (contract TestMaker)"
                                      }
                                    },
                                    "id": 62895,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1200:18:91",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestMaker_$72397",
                                      "typeString": "contract TestMaker"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestMaker_$72397",
                                      "typeString": "contract TestMaker"
                                    }
                                  ],
                                  "id": 62891,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1192:7:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 62890,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1192:7:91",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 62896,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1192:27:91",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 62888,
                                "name": "mgv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68673,
                                "src": "1178:3:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                                  "typeString": "contract AbstractMangrove"
                                }
                              },
                              "id": 62889,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23591,
                              "src": "1178:13:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 62897,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1178:42:91",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1166:54:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 62899,
                        "nodeType": "ExpressionStatement",
                        "src": "1166:54:91"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 62851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 62847,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62844,
                      "src": "1009:1:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 62848,
                          "name": "makers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62710,
                          "src": "1013:6:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MakerDeployer_$71682",
                            "typeString": "contract MakerDeployer"
                          }
                        },
                        "id": 62849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 71587,
                        "src": "1013:13:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 62850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1013:15:91",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1009:19:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 62901,
                  "initializationExpression": {
                    "assignments": [62844],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 62844,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1002:1:91",
                        "nodeType": "VariableDeclaration",
                        "scope": 62901,
                        "src": "997:6:91",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 62843,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "997:4:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 62846,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 62845,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1006:1:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "997:10:91"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 62853,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1030:3:91",
                      "subExpression": {
                        "id": 62852,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62844,
                        "src": "1030:1:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 62854,
                    "nodeType": "ExpressionStatement",
                    "src": "1030:3:91"
                  },
                  "nodeType": "ForStatement",
                  "src": "992:235:91"
                },
                {
                  "expression": {
                    "id": 62939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 62902,
                      "name": "balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62713,
                      "src": "1232:8:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Balances_$69175_storage",
                        "typeString": "struct MangroveTest.Balances storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 62905,
                                "name": "mgv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68673,
                                "src": "1277:3:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                                  "typeString": "contract AbstractMangrove"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                                  "typeString": "contract AbstractMangrove"
                                }
                              ],
                              "id": 62904,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                69787, 69804, 69821, 69838, 69855
                              ],
                              "referencedDeclaration": 69787,
                              "src": "1275:1:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                                "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                              }
                            },
                            "id": 62906,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1275:6:91",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 62907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "1275:14:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 62910,
                                  "name": "mgv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 68673,
                                  "src": "1328:3:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                                    "typeString": "contract AbstractMangrove"
                                  }
                                },
                                "id": 62911,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "governance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23092,
                                "src": "1328:14:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 62912,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1328:16:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 62908,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68676,
                              "src": "1313:4:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            },
                            "id": 62909,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 73347,
                            "src": "1313:14:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 62913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1313:32:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 62918,
                                  "name": "taker",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 62707,
                                  "src": "1391:5:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestTaker_$72989",
                                    "typeString": "contract TestTaker"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestTaker_$72989",
                                    "typeString": "contract TestTaker"
                                  }
                                ],
                                "id": 62917,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1383:7:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 62916,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1383:7:91",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 62919,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1383:14:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 62914,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68676,
                              "src": "1368:4:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            },
                            "id": 62915,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 73347,
                            "src": "1368:14:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 62920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1368:30:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 62925,
                                  "name": "taker",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 62707,
                                  "src": "1445:5:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestTaker_$72989",
                                    "typeString": "contract TestTaker"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestTaker_$72989",
                                    "typeString": "contract TestTaker"
                                  }
                                ],
                                "id": 62924,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1437:7:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 62923,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1437:7:91",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 62926,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1437:14:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 62921,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68679,
                              "src": "1421:5:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            },
                            "id": 62922,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 73347,
                            "src": "1421:15:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 62927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1421:31:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 62932,
                                  "name": "taker",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 62707,
                                  "src": "1499:5:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestTaker_$72989",
                                    "typeString": "contract TestTaker"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestTaker_$72989",
                                    "typeString": "contract TestTaker"
                                  }
                                ],
                                "id": 62931,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1491:7:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 62930,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1491:7:91",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 62933,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1491:14:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 62928,
                              "name": "mgv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68673,
                              "src": "1477:3:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                                "typeString": "contract AbstractMangrove"
                              }
                            },
                            "id": 62929,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23591,
                            "src": "1477:13:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 62934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1477:29:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 62935,
                          "name": "balA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62808,
                          "src": "1530:4:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 62936,
                          "name": "balB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62821,
                          "src": "1558:4:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 62937,
                          "name": "balWei",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62834,
                          "src": "1588:6:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        ],
                        "id": 62903,
                        "name": "Balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69175,
                        "src": "1243:8:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Balances_$69175_storage_ptr_$",
                          "typeString": "type(struct MangroveTest.Balances storage pointer)"
                        }
                      },
                      "id": 62938,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "mgvBalanceWei",
                        "mgvBalanceFees",
                        "takerBalanceA",
                        "takerBalanceB",
                        "takerBalanceWei",
                        "makersBalanceA",
                        "makersBalanceB",
                        "makersBalanceWei"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1243:358:91",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Balances_$69175_memory_ptr",
                        "typeString": "struct MangroveTest.Balances memory"
                      }
                    },
                    "src": "1232:369:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Balances_$69175_storage",
                      "typeString": "struct MangroveTest.Balances storage ref"
                    }
                  },
                  "id": 62940,
                  "nodeType": "ExpressionStatement",
                  "src": "1232:369:91"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "saveBalances",
            "nameLocation": "798:12:91",
            "parameters": {
              "id": 62802,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "810:2:91"
            },
            "returnParameters": {
              "id": 62803,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "822:0:91"
            },
            "scope": 64151,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 63120,
            "nodeType": "FunctionDefinition",
            "src": "1610:828:91",
            "body": {
              "id": 63119,
              "nodeType": "Block",
              "src": "1643:795:91",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 62946,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1649:5:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ScenariiTest_$64151_$",
                          "typeString": "type(contract super ScenariiTest)"
                        }
                      },
                      "id": 62948,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setUp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68801,
                      "src": "1649:11:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 62949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1649:13:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62950,
                  "nodeType": "ExpressionStatement",
                  "src": "1649:13:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 62955,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "1682:4:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 62954,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "1680:1:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 62956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1680:7:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 62958,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "1691:5:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 62957,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "1689:1:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 62959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1689:8:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 62960,
                        "name": "testFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62716,
                        "src": "1699:7:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 62951,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "1669:3:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 62953,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23283,
                      "src": "1669:10:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 62961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1669:38:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62962,
                  "nodeType": "ExpressionStatement",
                  "src": "1669:38:91"
                },
                {
                  "expression": {
                    "id": 62972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 62963,
                      "name": "makers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62710,
                      "src": "1714:6:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MakerDeployer_$71682",
                        "typeString": "contract MakerDeployer"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 62966,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68676,
                              "src": "1744:4:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 62965,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              69787, 69804, 69821, 69838, 69855
                            ],
                            "referencedDeclaration": 69855,
                            "src": "1742:1:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 62967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1742:7:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 62969,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68679,
                              "src": "1753:5:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 62968,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              69787, 69804, 69821, 69838, 69855
                            ],
                            "referencedDeclaration": 69855,
                            "src": "1751:1:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 62970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1751:8:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 62964,
                        "name": "setupMakerDeployer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69669,
                        "src": "1723:18:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$_t_contract$_MakerDeployer_$71682_$",
                          "typeString": "function (address,address) returns (contract MakerDeployer)"
                        }
                      },
                      "id": 62971,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1723:37:91",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MakerDeployer_$71682",
                        "typeString": "contract MakerDeployer"
                      }
                    },
                    "src": "1714:46:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MakerDeployer_$71682",
                      "typeString": "contract MakerDeployer"
                    }
                  },
                  "id": 62973,
                  "nodeType": "ExpressionStatement",
                  "src": "1714:46:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "34",
                        "id": 62977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1780:1:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        }
                      ],
                      "expression": {
                        "id": 62974,
                        "name": "makers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62710,
                        "src": "1766:6:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MakerDeployer_$71682",
                          "typeString": "contract MakerDeployer"
                        }
                      },
                      "id": 62976,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deploy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71681,
                      "src": "1766:13:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 62978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1766:16:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62979,
                  "nodeType": "ExpressionStatement",
                  "src": "1766:16:91"
                },
                {
                  "body": {
                    "id": 63013,
                    "nodeType": "Block",
                    "src": "1831:117:91",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 62999,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 62981,
                                      "src": "1881:1:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 62997,
                                      "name": "makers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 62710,
                                      "src": "1865:6:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_MakerDeployer_$71682",
                                        "typeString": "contract MakerDeployer"
                                      }
                                    },
                                    "id": 62998,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "getMaker",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 71602,
                                    "src": "1865:15:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_TestMaker_$72397_$",
                                      "typeString": "function (uint256) view external returns (contract TestMaker)"
                                    }
                                  },
                                  "id": 63000,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1865:18:91",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestMaker_$72397",
                                    "typeString": "contract TestMaker"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestMaker_$72397",
                                    "typeString": "contract TestMaker"
                                  }
                                ],
                                "id": 62996,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1857:7:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 62995,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1857:7:91",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 63001,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1857:27:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "6d616b65722d",
                                  "id": 63005,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1908:8:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_421ac23044cd52abd40239c07a2539bd175b00e0b2528db2ffb9723cdcdd2892",
                                    "typeString": "literal_string \"maker-\""
                                  },
                                  "value": "maker-"
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 63008,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 62981,
                                      "src": "1930:1:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 63006,
                                      "name": "vm",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1817,
                                      "src": "1918:2:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Vm_$5425",
                                        "typeString": "contract Vm"
                                      }
                                    },
                                    "id": 63007,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "toString",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 5258,
                                    "src": "1918:11:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                      "typeString": "function (uint256) pure external returns (string memory)"
                                    }
                                  },
                                  "id": 63009,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1918:14:91",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_421ac23044cd52abd40239c07a2539bd175b00e0b2528db2ffb9723cdcdd2892",
                                    "typeString": "literal_string \"maker-\""
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 63003,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1894:6:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                    "typeString": "type(string storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 63002,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1894:6:91",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 63004,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "concat",
                                "nodeType": "MemberAccess",
                                "src": "1894:13:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                                  "typeString": "function () pure returns (string memory)"
                                }
                              },
                              "id": 63010,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1894:39:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 62992,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1817,
                              "src": "1839:2:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$5425",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 62994,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "label",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5156,
                            "src": "1839:8:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (address,string memory) external"
                            }
                          },
                          "id": 63011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1839:102:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 63012,
                        "nodeType": "ExpressionStatement",
                        "src": "1839:102:91"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 62988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 62984,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62981,
                      "src": "1805:1:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 62985,
                          "name": "makers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62710,
                          "src": "1809:6:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MakerDeployer_$71682",
                            "typeString": "contract MakerDeployer"
                          }
                        },
                        "id": 62986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 71587,
                        "src": "1809:13:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 62987,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1809:15:91",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1805:19:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 63014,
                  "initializationExpression": {
                    "assignments": [62981],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 62981,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1798:1:91",
                        "nodeType": "VariableDeclaration",
                        "scope": 63014,
                        "src": "1793:6:91",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 62980,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1793:4:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 62983,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 62982,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1802:1:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1793:10:91"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 62990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1826:3:91",
                      "subExpression": {
                        "id": 62989,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62981,
                        "src": "1826:1:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 62991,
                    "nodeType": "ExpressionStatement",
                    "src": "1826:3:91"
                  },
                  "nodeType": "ForStatement",
                  "src": "1788:160:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 63022,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1986:1:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "expression": {
                                "id": 63020,
                                "name": "makers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 62710,
                                "src": "1970:6:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MakerDeployer_$71682",
                                  "typeString": "contract MakerDeployer"
                                }
                              },
                              "id": 63021,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getMaker",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 71602,
                              "src": "1970:15:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_TestMaker_$72397_$",
                                "typeString": "function (uint256) view external returns (contract TestMaker)"
                              }
                            },
                            "id": 63023,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1970:18:91",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$72397",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$72397",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 63019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1962:7:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 63018,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1962:7:91",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 63024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1962:27:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "6661696c6572",
                        "id": 63025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1991:8:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6332b323dff570935a476794d83f85ef6631eead32d79d93dde9b7eaf5c91c76",
                          "typeString": "literal_string \"failer\""
                        },
                        "value": "failer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6332b323dff570935a476794d83f85ef6631eead32d79d93dde9b7eaf5c91c76",
                          "typeString": "literal_string \"failer\""
                        }
                      ],
                      "expression": {
                        "id": 63015,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1953:2:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 63017,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5156,
                      "src": "1953:8:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 63026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1953:47:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63027,
                  "nodeType": "ExpressionStatement",
                  "src": "1953:47:91"
                },
                {
                  "expression": {
                    "id": 63038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 63028,
                      "name": "taker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62707,
                      "src": "2006:5:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestTaker_$72989",
                        "typeString": "contract TestTaker"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 63031,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68676,
                              "src": "2027:4:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 63030,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              69787, 69804, 69821, 69838, 69855
                            ],
                            "referencedDeclaration": 69855,
                            "src": "2025:1:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 63032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2025:7:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 63034,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68679,
                              "src": "2036:5:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 63033,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              69787, 69804, 69821, 69838, 69855
                            ],
                            "referencedDeclaration": 69855,
                            "src": "2034:1:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 63035,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2034:8:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "74616b6572",
                          "id": 63036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2044:7:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_dabc31545dc394527fa3167263fd61e7c7bb9eb939a344961942003782d7e47d",
                            "typeString": "literal_string \"taker\""
                          },
                          "value": "taker"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_dabc31545dc394527fa3167263fd61e7c7bb9eb939a344961942003782d7e47d",
                            "typeString": "literal_string \"taker\""
                          }
                        ],
                        "id": 63029,
                        "name": "setupTaker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69719,
                        "src": "2014:10:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$_t_contract$_TestTaker_$72989_$",
                          "typeString": "function (address,address,string memory) returns (contract TestTaker)"
                        }
                      },
                      "id": 63037,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2014:38:91",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestTaker_$72989",
                        "typeString": "contract TestTaker"
                      }
                    },
                    "src": "2006:46:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestTaker_$72989",
                      "typeString": "contract TestTaker"
                    }
                  },
                  "id": 63039,
                  "nodeType": "ExpressionStatement",
                  "src": "2006:46:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 63043,
                            "name": "makers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62710,
                            "src": "2072:6:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MakerDeployer_$71682",
                              "typeString": "contract MakerDeployer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MakerDeployer_$71682",
                              "typeString": "contract MakerDeployer"
                            }
                          ],
                          "id": 63042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2064:7:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 63041,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2064:7:91",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 63044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2064:15:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3830",
                        "id": 63045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2081:8:91",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_80000000000000000000_by_1",
                          "typeString": "int_const 80000000000000000000"
                        },
                        "value": "80"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_80000000000000000000_by_1",
                          "typeString": "int_const 80000000000000000000"
                        }
                      ],
                      "id": 63040,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [2399, 2416, 2519],
                      "referencedDeclaration": 2399,
                      "src": "2059:4:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 63046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2059:31:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63047,
                  "nodeType": "ExpressionStatement",
                  "src": "2059:31:91"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 63048,
                        "name": "makers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62710,
                        "src": "2096:6:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MakerDeployer_$71682",
                          "typeString": "contract MakerDeployer"
                        }
                      },
                      "id": 63050,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "dispatch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71578,
                      "src": "2096:15:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 63051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2096:17:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63052,
                  "nodeType": "ExpressionStatement",
                  "src": "2096:17:91"
                },
                {
                  "body": {
                    "id": 63090,
                    "nodeType": "Block",
                    "src": "2163:133:91",
                    "statements": [
                      {
                        "assignments": [63067],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 63067,
                            "mutability": "mutable",
                            "name": "maker",
                            "nameLocation": "2181:5:91",
                            "nodeType": "VariableDeclaration",
                            "scope": 63090,
                            "src": "2171:15:91",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$72397",
                              "typeString": "contract TestMaker"
                            },
                            "typeName": {
                              "id": 63066,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 63065,
                                "name": "TestMaker",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 72397,
                                "src": "2171:9:91"
                              },
                              "referencedDeclaration": 72397,
                              "src": "2171:9:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestMaker_$72397",
                                "typeString": "contract TestMaker"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 63072,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 63070,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63054,
                              "src": "2205:1:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 63068,
                              "name": "makers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62710,
                              "src": "2189:6:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MakerDeployer_$71682",
                                "typeString": "contract MakerDeployer"
                              }
                            },
                            "id": 63069,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getMaker",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 71602,
                            "src": "2189:15:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_TestMaker_$72397_$",
                              "typeString": "function (uint256) view external returns (contract TestMaker)"
                            }
                          },
                          "id": 63071,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2189:18:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestMaker_$72397",
                            "typeString": "contract TestMaker"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2171:36:91"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "3130",
                              "id": 63076,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2234:8:91",
                              "subdenomination": "ether",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10000000000000000000_by_1",
                                "typeString": "int_const 10000000000000000000"
                              },
                              "value": "10"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_10000000000000000000_by_1",
                                "typeString": "int_const 10000000000000000000"
                              }
                            ],
                            "expression": {
                              "id": 63073,
                              "name": "maker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63067,
                              "src": "2215:5:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestMaker_$72397",
                                "typeString": "contract TestMaker"
                              }
                            },
                            "id": 63075,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "provisionMgv",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 72313,
                            "src": "2215:18:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 63077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2215:28:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 63078,
                        "nodeType": "ExpressionStatement",
                        "src": "2215:28:91"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 63081,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 68676,
                                  "src": "2258:4:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$75210",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$75210",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 63080,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  69787, 69804, 69821, 69838, 69855
                                ],
                                "referencedDeclaration": 69855,
                                "src": "2256:1:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 63082,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2256:7:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 63085,
                                  "name": "maker",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 63067,
                                  "src": "2273:5:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestMaker_$72397",
                                    "typeString": "contract TestMaker"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestMaker_$72397",
                                    "typeString": "contract TestMaker"
                                  }
                                ],
                                "id": 63084,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2265:7:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 63083,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2265:7:91",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 63086,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2265:14:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "35",
                              "id": 63087,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2281:7:91",
                              "subdenomination": "ether",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_5000000000000000000_by_1",
                                "typeString": "int_const 5000000000000000000"
                              },
                              "value": "5"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_5000000000000000000_by_1",
                                "typeString": "int_const 5000000000000000000"
                              }
                            ],
                            "id": 63079,
                            "name": "deal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [2399, 2416, 2519],
                            "referencedDeclaration": 2416,
                            "src": "2251:4:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 63088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2251:38:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 63089,
                        "nodeType": "ExpressionStatement",
                        "src": "2251:38:91"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 63061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 63057,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63054,
                      "src": "2137:1:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 63058,
                          "name": "makers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62710,
                          "src": "2141:6:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MakerDeployer_$71682",
                            "typeString": "contract MakerDeployer"
                          }
                        },
                        "id": 63059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 71587,
                        "src": "2141:13:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 63060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2141:15:91",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2137:19:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 63091,
                  "initializationExpression": {
                    "assignments": [63054],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 63054,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2130:1:91",
                        "nodeType": "VariableDeclaration",
                        "scope": 63091,
                        "src": "2125:6:91",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 63053,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2125:4:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 63056,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 63055,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2134:1:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2125:10:91"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 63063,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2158:3:91",
                      "subExpression": {
                        "id": 63062,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63054,
                        "src": "2158:1:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 63064,
                    "nodeType": "ExpressionStatement",
                    "src": "2158:3:91"
                  },
                  "nodeType": "ForStatement",
                  "src": "2120:176:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 63097,
                            "name": "taker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62707,
                            "src": "2321:5:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$72989",
                              "typeString": "contract TestTaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestTaker_$72989",
                              "typeString": "contract TestTaker"
                            }
                          ],
                          "id": 63096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2313:7:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 63095,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2313:7:91",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 63098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2313:14:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 63099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2329:7:91",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 63092,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "2302:5:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 63094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75167,
                      "src": "2302:10:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 63100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2302:35:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63101,
                  "nodeType": "ExpressionStatement",
                  "src": "2302:35:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 63105,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "2360:5:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 63106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2367:7:91",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 63102,
                        "name": "taker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62707,
                        "src": "2343:5:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$72989",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 63104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approveMgv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72721,
                      "src": "2343:16:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$24224_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,uint256) external"
                      }
                    },
                    "id": 63107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2343:32:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63108,
                  "nodeType": "ExpressionStatement",
                  "src": "2343:32:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 63112,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68676,
                        "src": "2398:4:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "3530",
                        "id": 63113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2404:8:91",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000000_by_1",
                          "typeString": "int_const 50000000000000000000"
                        },
                        "value": "50"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_rational_50000000000000000000_by_1",
                          "typeString": "int_const 50000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 63109,
                        "name": "taker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62707,
                        "src": "2381:5:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$72989",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 63111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approveMgv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72721,
                      "src": "2381:16:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$24224_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,uint256) external"
                      }
                    },
                    "id": 63114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2381:32:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63115,
                  "nodeType": "ExpressionStatement",
                  "src": "2381:32:91"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 63116,
                      "name": "saveBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62942,
                      "src": "2419:12:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 63117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2419:14:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63118,
                  "nodeType": "ExpressionStatement",
                  "src": "2419:14:91"
                }
              ]
            },
            "baseFunctions": [68801],
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "1619:5:91",
            "overrides": {
              "id": 62944,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1634:8:91"
            },
            "parameters": {
              "id": 62943,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1624:2:91"
            },
            "returnParameters": {
              "id": 62945,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1643:0:91"
            },
            "scope": 64151,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 63254,
            "nodeType": "FunctionDefinition",
            "src": "2442:962:91",
            "body": {
              "id": 63253,
              "nodeType": "Block",
              "src": "2487:917:91",
              "statements": [
                {
                  "expression": {
                    "id": 63126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 63123,
                      "name": "offerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62719,
                      "src": "2493:7:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 63124,
                        "name": "insert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63627,
                        "src": "2503:6:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function () returns (uint256[] memory)"
                        }
                      },
                      "id": 63125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2503:8:91",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "2493:18:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "id": 63127,
                  "nodeType": "ExpressionStatement",
                  "src": "2493:18:91"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 63128,
                      "name": "saveBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62942,
                      "src": "2518:12:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 63129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2518:14:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63130,
                  "nodeType": "ExpressionStatement",
                  "src": "2518:14:91"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 63131,
                      "name": "saveOffers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62801,
                      "src": "2538:10:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 63132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2538:12:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63133,
                  "nodeType": "ExpressionStatement",
                  "src": "2538:12:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 63136,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "2569:3:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 63135,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "2567:1:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 63137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2567:6:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 63134,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70164,
                      "src": "2556:10:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 63138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2556:18:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63139,
                  "nodeType": "ExpressionStatement",
                  "src": "2556:18:91"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 63140,
                      "name": "OrderStart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23989,
                      "src": "2585:10:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 63141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2585:12:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63142,
                  "nodeType": "EmitStatement",
                  "src": "2580:17:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 63145,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "2616:3:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 63144,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "2614:1:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 63146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2614:6:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 63143,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70164,
                      "src": "2603:10:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 63147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2603:18:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63148,
                  "nodeType": "ExpressionStatement",
                  "src": "2603:18:91"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 63151,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "2655:4:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 63150,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "2653:1:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 63152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2653:7:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 63154,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "2670:5:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 63153,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "2668:1:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 63155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2668:8:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 63158,
                            "name": "taker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62707,
                            "src": "2692:5:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$72989",
                              "typeString": "contract TestTaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestTaker_$72989",
                              "typeString": "contract TestTaker"
                            }
                          ],
                          "id": 63157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2684:7:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 63156,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2684:7:91",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 63159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2684:14:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "302e323931",
                        "id": 63160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2706:11:91",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_291000000000000000_by_1",
                          "typeString": "int_const 291000000000000000"
                        },
                        "value": "0.291"
                      },
                      {
                        "hexValue": "302e333735",
                        "id": 63161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2752:11:91",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_375000000000000000_by_1",
                          "typeString": "int_const 375000000000000000"
                        },
                        "value": "0.375"
                      },
                      {
                        "hexValue": "30",
                        "id": 63162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2798:1:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "302e303039",
                        "id": 63163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2807:11:91",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_9000000000000000_by_1",
                          "typeString": "int_const 9000000000000000"
                        },
                        "value": "0.009"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_291000000000000000_by_1",
                          "typeString": "int_const 291000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_375000000000000000_by_1",
                          "typeString": "int_const 375000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_9000000000000000_by_1",
                          "typeString": "int_const 9000000000000000"
                        }
                      ],
                      "id": 63149,
                      "name": "OrderComplete",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24005,
                      "src": "2632:13:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 63164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2632:219:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63165,
                  "nodeType": "EmitStatement",
                  "src": "2627:224:91"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 63166,
                      "name": "snipe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64150,
                      "src": "2858:5:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function () returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 63167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2858:7:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "id": 63168,
                  "nodeType": "ExpressionStatement",
                  "src": "2858:7:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 63171,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "2886:4:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 63170,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "2884:1:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 63172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2884:7:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 63174,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "2895:5:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 63173,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "2893:1:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 63175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2893:8:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "34",
                        "id": 63176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2903:1:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        }
                      ],
                      "id": 63169,
                      "name": "logOfferBook",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68995,
                      "src": "2871:12:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 63177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2871:34:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63178,
                  "nodeType": "ExpressionStatement",
                  "src": "2871:34:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_625000000000000000_by_1",
                          "typeString": "int_const 625000000000000000"
                        },
                        "id": 63187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31",
                          "id": 63185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3027:7:91",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "302e333735",
                          "id": 63186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3037:11:91",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_375000000000000000_by_1",
                            "typeString": "int_const 375000000000000000"
                          },
                          "value": "0.375"
                        },
                        "src": "3027:21:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_625000000000000000_by_1",
                          "typeString": "int_const 625000000000000000"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "id": 63190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "302e38",
                          "id": 63188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3056:9:91",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_800000000000000000_by_1",
                            "typeString": "int_const 800000000000000000"
                          },
                          "value": "0.8"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "302e33",
                          "id": 63189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3068:9:91",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_300000000000000000_by_1",
                            "typeString": "int_const 300000000000000000"
                          },
                          "value": "0.3"
                        },
                        "src": "3056:21:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        }
                      },
                      {
                        "hexValue": "38305f303030",
                        "id": 63191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3085:6:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_80000_by_1",
                          "typeString": "int_const 80000"
                        },
                        "value": "80_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 63192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3099:1:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "32",
                        "id": 63193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3108:1:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_625000000000000000_by_1",
                          "typeString": "int_const 625000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_80000_by_1",
                          "typeString": "int_const 80000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 63182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3005:1:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "expression": {
                            "id": 63179,
                            "name": "makers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62710,
                            "src": "2989:6:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MakerDeployer_$71682",
                              "typeString": "contract MakerDeployer"
                            }
                          },
                          "id": 63181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getMaker",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 71602,
                          "src": "2989:15:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_TestMaker_$72397_$",
                            "typeString": "function (uint256) view external returns (contract TestMaker)"
                          }
                        },
                        "id": 63183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2989:18:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 63184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72233,
                      "src": "2989:30:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,uint256,uint256) external"
                      }
                    },
                    "id": 63194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2989:126:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63195,
                  "nodeType": "ExpressionStatement",
                  "src": "2989:126:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 63198,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "3137:4:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 63197,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "3135:1:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 63199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3135:7:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 63201,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "3146:5:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 63200,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "3144:1:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 63202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3144:8:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "34",
                        "id": 63203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3154:1:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        }
                      ],
                      "id": 63196,
                      "name": "logOfferBook",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68995,
                      "src": "3122:12:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 63204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3122:34:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63205,
                  "nodeType": "ExpressionStatement",
                  "src": "3122:34:91"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 63206,
                      "name": "saveBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62942,
                      "src": "3163:12:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 63207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3163:14:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63208,
                  "nodeType": "ExpressionStatement",
                  "src": "3163:14:91"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 63209,
                      "name": "saveOffers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62801,
                      "src": "3183:10:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 63210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3183:12:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63211,
                  "nodeType": "ExpressionStatement",
                  "src": "3183:12:91"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 63212,
                      "name": "mo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63908,
                      "src": "3201:2:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 63213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3201:4:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63214,
                  "nodeType": "ExpressionStatement",
                  "src": "3201:4:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 63217,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "3226:4:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 63216,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "3224:1:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 63218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3224:7:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 63220,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "3235:5:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 63219,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "3233:1:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 63221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3233:8:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "34",
                        "id": 63222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3243:1:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        }
                      ],
                      "id": 63215,
                      "name": "logOfferBook",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68995,
                      "src": "3211:12:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 63223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3211:34:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63224,
                  "nodeType": "ExpressionStatement",
                  "src": "3211:34:91"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 63225,
                      "name": "saveBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62942,
                      "src": "3252:12:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 63226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3252:14:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63227,
                  "nodeType": "ExpressionStatement",
                  "src": "3252:14:91"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 63228,
                      "name": "saveOffers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62801,
                      "src": "3272:10:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 63229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3272:12:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63230,
                  "nodeType": "ExpressionStatement",
                  "src": "3272:12:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 63232,
                          "name": "offerOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62719,
                          "src": "3310:7:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 63234,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 63233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3318:1:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3310:10:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 63231,
                      "name": "collectFailingOffer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63385,
                      "src": "3290:19:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 63235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3290:31:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63236,
                  "nodeType": "ExpressionStatement",
                  "src": "3290:31:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 63239,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "3342:4:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 63238,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "3340:1:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 63240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3340:7:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 63242,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "3351:5:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 63241,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "3349:1:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 63243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3349:8:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "34",
                        "id": 63244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3359:1:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        }
                      ],
                      "id": 63237,
                      "name": "logOfferBook",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68995,
                      "src": "3327:12:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 63245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3327:34:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63246,
                  "nodeType": "ExpressionStatement",
                  "src": "3327:34:91"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 63247,
                      "name": "saveBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62942,
                      "src": "3367:12:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 63248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3367:14:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63249,
                  "nodeType": "ExpressionStatement",
                  "src": "3367:14:91"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 63250,
                      "name": "saveOffers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62801,
                      "src": "3387:10:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 63251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3387:12:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63252,
                  "nodeType": "ExpressionStatement",
                  "src": "3387:12:91"
                }
              ]
            },
            "functionSelector": "3d8713cc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_snipe_insert_and_fail",
            "nameLocation": "2451:26:91",
            "parameters": {
              "id": 63121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2477:2:91"
            },
            "returnParameters": {
              "id": 63122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2487:0:91"
            },
            "scope": 64151,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 63385,
            "nodeType": "FunctionDefinition",
            "src": "3462:1239:91",
            "body": {
              "id": 63384,
              "nodeType": "Block",
              "src": "3521:1180:91",
              "statements": [
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 63362,
                        "nodeType": "Block",
                        "src": "3710:874:91",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 63277,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "!",
                                  "prefix": true,
                                  "src": "3773:8:91",
                                  "subExpression": {
                                    "id": 63276,
                                    "name": "success",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 63265,
                                    "src": "3774:7:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "4661696c65722073686f756c64206661696c",
                                  "id": 63278,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3783:20:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_6c1182b301516fbe0cc55b25e2c7018d3e42904db6d949e8ac5bbee4af423551",
                                    "typeString": "literal_string \"Failer should fail\""
                                  },
                                  "value": "Failer should fail"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_6c1182b301516fbe0cc55b25e2c7018d3e42904db6d949e8ac5bbee4af423551",
                                    "typeString": "literal_string \"Failer should fail\""
                                  }
                                ],
                                "id": 63275,
                                "name": "assertTrue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [269, 290],
                                "referencedDeclaration": 290,
                                "src": "3762:10:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory)"
                                }
                              },
                              "id": 63279,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3762:42:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 63280,
                            "nodeType": "ExpressionStatement",
                            "src": "3762:42:91"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 63282,
                                  "name": "takerGot",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 63267,
                                  "src": "3821:8:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 63283,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3831:1:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                {
                                  "hexValue": "4661696c6564206f666665722073686f756c64206465636c61726520302074616b6572476f74",
                                  "id": 63284,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3834:40:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_74d4b5e84827d8b8f1588ae8601b548bd6c3ff2cf224c73bd0604f5bee4340c8",
                                    "typeString": "literal_string \"Failed offer should declare 0 takerGot\""
                                  },
                                  "value": "Failed offer should declare 0 takerGot"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_74d4b5e84827d8b8f1588ae8601b548bd6c3ff2cf224c73bd0604f5bee4340c8",
                                    "typeString": "literal_string \"Failed offer should declare 0 takerGot\""
                                  }
                                ],
                                "id": 63281,
                                "name": "assertEq",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  2779, 2804, 2817, 2833, 2875, 2917, 2959,
                                  2996, 3033, 3070, 320, 345, 375, 400, 459,
                                  484, 514, 539, 1639, 1674
                                ],
                                "referencedDeclaration": 539,
                                "src": "3812:8:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (uint256,uint256,string memory)"
                                }
                              },
                              "id": 63285,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3812:63:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 63286,
                            "nodeType": "ExpressionStatement",
                            "src": "3812:63:91"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 63288,
                                  "name": "takerGave",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 63269,
                                  "src": "3892:9:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 63289,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3903:1:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                {
                                  "hexValue": "4661696c6564206f666665722073686f756c64206465636c61726520302074616b657247617665",
                                  "id": 63290,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3906:41:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_07dc68ab398cabc9198cd441cec34ce3abcb2bc5a4eca621b078354905032844",
                                    "typeString": "literal_string \"Failed offer should declare 0 takerGave\""
                                  },
                                  "value": "Failed offer should declare 0 takerGave"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_07dc68ab398cabc9198cd441cec34ce3abcb2bc5a4eca621b078354905032844",
                                    "typeString": "literal_string \"Failed offer should declare 0 takerGave\""
                                  }
                                ],
                                "id": 63287,
                                "name": "assertEq",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  2779, 2804, 2817, 2833, 2875, 2917, 2959,
                                  2996, 3033, 3070, 320, 345, 375, 400, 459,
                                  484, 514, 539, 1639, 1674
                                ],
                                "referencedDeclaration": 539,
                                "src": "3883:8:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (uint256,uint256,string memory)"
                                }
                              },
                              "id": 63291,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3883:65:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 63292,
                            "nodeType": "ExpressionStatement",
                            "src": "3883:65:91"
                          },
                          {
                            "id": 63311,
                            "nodeType": "Block",
                            "src": "4012:170:91",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 63307,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "!",
                                      "prefix": true,
                                      "src": "4044:58:91",
                                      "subExpression": {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "id": 63299,
                                                    "name": "base",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 68676,
                                                    "src": "4069:4:91",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_contract$_TestToken_$75210",
                                                      "typeString": "contract TestToken"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_contract$_TestToken_$75210",
                                                      "typeString": "contract TestToken"
                                                    }
                                                  ],
                                                  "id": 63298,
                                                  "name": "$",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [
                                                    69787, 69804, 69821, 69838,
                                                    69855
                                                  ],
                                                  "referencedDeclaration": 69855,
                                                  "src": "4067:1:91",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                                                    "typeString": "function (contract IERC20) pure returns (address payable)"
                                                  }
                                                },
                                                "id": 63300,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4067:7:91",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address_payable",
                                                  "typeString": "address payable"
                                                }
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "id": 63302,
                                                    "name": "quote",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 68679,
                                                    "src": "4078:5:91",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_contract$_TestToken_$75210",
                                                      "typeString": "contract TestToken"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_contract$_TestToken_$75210",
                                                      "typeString": "contract TestToken"
                                                    }
                                                  ],
                                                  "id": 63301,
                                                  "name": "$",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [
                                                    69787, 69804, 69821, 69838,
                                                    69855
                                                  ],
                                                  "referencedDeclaration": 69855,
                                                  "src": "4076:1:91",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                                                    "typeString": "function (contract IERC20) pure returns (address payable)"
                                                  }
                                                },
                                                "id": 63303,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4076:8:91",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address_payable",
                                                  "typeString": "address payable"
                                                }
                                              },
                                              {
                                                "id": 63304,
                                                "name": "failingOfferId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 63256,
                                                "src": "4086:14:91",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address_payable",
                                                  "typeString": "address payable"
                                                },
                                                {
                                                  "typeIdentifier": "t_address_payable",
                                                  "typeString": "address payable"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "expression": {
                                                "id": 63296,
                                                "name": "mgv",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 68673,
                                                "src": "4056:3:91",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                                                  "typeString": "contract AbstractMangrove"
                                                }
                                              },
                                              "id": 63297,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "offers",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 23578,
                                              "src": "4056:10:91",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_userDefinedValueType$_t_$31540_$",
                                                "typeString": "function (address,address,uint256) view external returns (t)"
                                              }
                                            },
                                            "id": 63305,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "4056:45:91",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_userDefinedValueType$_t_$31540",
                                              "typeString": "t"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_userDefinedValueType$_t_$31540",
                                              "typeString": "t"
                                            }
                                          ],
                                          "expression": {
                                            "id": 63294,
                                            "name": "mgv",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 68673,
                                            "src": "4045:3:91",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                                              "typeString": "contract AbstractMangrove"
                                            }
                                          },
                                          "id": 63295,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "isLive",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 23879,
                                          "src": "4045:10:91",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_pure$_t_userDefinedValueType$_t_$31540_$returns$_t_bool_$",
                                            "typeString": "function (t) pure external returns (bool)"
                                          }
                                        },
                                        "id": 63306,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4045:57:91",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    {
                                      "hexValue": "4661696c696e67206f666665722073686f756c642068617665206265656e2072656d6f7665642066726f6d204d6776",
                                      "id": 63308,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4114:49:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_b913f0c0b1026aa2dfec533e1d73de423b2833a4703c52154bb77cdf213feca7",
                                        "typeString": "literal_string \"Failing offer should have been removed from Mgv\""
                                      },
                                      "value": "Failing offer should have been removed from Mgv"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      {
                                        "typeIdentifier": "t_stringliteral_b913f0c0b1026aa2dfec533e1d73de423b2833a4703c52154bb77cdf213feca7",
                                        "typeString": "literal_string \"Failing offer should have been removed from Mgv\""
                                      }
                                    ],
                                    "id": 63293,
                                    "name": "assertTrue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [269, 290],
                                    "referencedDeclaration": 290,
                                    "src": "4022:10:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                      "typeString": "function (bool,string memory)"
                                    }
                                  },
                                  "id": 63309,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4022:151:91",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 63310,
                                "nodeType": "ExpressionStatement",
                                "src": "4022:151:91"
                              }
                            ]
                          },
                          {
                            "assignments": [63313],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 63313,
                                "mutability": "mutable",
                                "name": "provision",
                                "nameLocation": "4194:9:91",
                                "nodeType": "VariableDeclaration",
                                "scope": 63362,
                                "src": "4189:14:91",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 63312,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4189:4:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 63328,
                            "initialValue": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 63316,
                                      "name": "base",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 68676,
                                      "src": "4230:4:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TestToken_$75210",
                                        "typeString": "contract TestToken"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_TestToken_$75210",
                                        "typeString": "contract TestToken"
                                      }
                                    ],
                                    "id": 63315,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      69787, 69804, 69821, 69838, 69855
                                    ],
                                    "referencedDeclaration": 69855,
                                    "src": "4228:1:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                                      "typeString": "function (contract IERC20) pure returns (address payable)"
                                    }
                                  },
                                  "id": 63317,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4228:7:91",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 63319,
                                      "name": "quote",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 68679,
                                      "src": "4247:5:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TestToken_$75210",
                                        "typeString": "contract TestToken"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_TestToken_$75210",
                                        "typeString": "contract TestToken"
                                      }
                                    ],
                                    "id": 63318,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      69787, 69804, 69821, 69838, 69855
                                    ],
                                    "referencedDeclaration": 69855,
                                    "src": "4245:1:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                                      "typeString": "function (contract IERC20) pure returns (address payable)"
                                    }
                                  },
                                  "id": 63320,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4245:8:91",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 63321,
                                      "name": "offers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 62726,
                                      "src": "4263:6:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_enum$_Info_$69182_$_t_uint256_$_$",
                                        "typeString": "mapping(uint256 => mapping(enum MangroveTest.Info => uint256))"
                                      }
                                    },
                                    "id": 63323,
                                    "indexExpression": {
                                      "id": 63322,
                                      "name": "failingOfferId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 63256,
                                      "src": "4270:14:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4263:22:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_enum$_Info_$69182_$_t_uint256_$",
                                      "typeString": "mapping(enum MangroveTest.Info => uint256)"
                                    }
                                  },
                                  "id": 63326,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 63324,
                                      "name": "Info",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 69182,
                                      "src": "4286:4:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_Info_$69182_$",
                                        "typeString": "type(enum MangroveTest.Info)"
                                      }
                                    },
                                    "id": 63325,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "gasreq",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 69181,
                                    "src": "4286:11:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_Info_$69182",
                                      "typeString": "enum MangroveTest.Info"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4263:35:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 63314,
                                "name": "getProvision",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [69316, 69383],
                                "referencedDeclaration": 69316,
                                "src": "4206:12:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (address,address,uint256) view returns (uint256)"
                                }
                              },
                              "id": 63327,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4206:100:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "4189:117:91"
                          },
                          {
                            "assignments": [63330],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 63330,
                                "mutability": "mutable",
                                "name": "returned",
                                "nameLocation": "4319:8:91",
                                "nodeType": "VariableDeclaration",
                                "scope": 63362,
                                "src": "4314:13:91",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 63329,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4314:4:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 63346,
                            "initialValue": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 63345,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "hexValue": "30",
                                            "id": 63337,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "4368:1:91",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            }
                                          ],
                                          "expression": {
                                            "id": 63335,
                                            "name": "makers",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 62710,
                                            "src": "4352:6:91",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_MakerDeployer_$71682",
                                              "typeString": "contract MakerDeployer"
                                            }
                                          },
                                          "id": 63336,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "getMaker",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 71602,
                                          "src": "4352:15:91",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_TestMaker_$72397_$",
                                            "typeString": "function (uint256) view external returns (contract TestMaker)"
                                          }
                                        },
                                        "id": 63338,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4352:18:91",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                                          "typeString": "contract TestMaker"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                                          "typeString": "contract TestMaker"
                                        }
                                      ],
                                      "id": 63334,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4344:7:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 63333,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4344:7:91",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 63339,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4344:27:91",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 63331,
                                    "name": "mgv",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 68673,
                                    "src": "4330:3:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                                      "typeString": "contract AbstractMangrove"
                                    }
                                  },
                                  "id": 63332,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 23591,
                                  "src": "4330:13:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 63340,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4330:42:91",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 63341,
                                    "name": "balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 62713,
                                    "src": "4383:8:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Balances_$69175_storage",
                                      "typeString": "struct MangroveTest.Balances storage ref"
                                    }
                                  },
                                  "id": 63342,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "makersBalanceWei",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 69174,
                                  "src": "4383:25:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                    "typeString": "uint256[] storage ref"
                                  }
                                },
                                "id": 63344,
                                "indexExpression": {
                                  "hexValue": "30",
                                  "id": 63343,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4409:1:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4383:28:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4330:81:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "4314:97:91"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 63349,
                                        "name": "mgv",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 68673,
                                        "src": "4439:3:91",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                                          "typeString": "contract AbstractMangrove"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                                          "typeString": "contract AbstractMangrove"
                                        }
                                      ],
                                      "id": 63348,
                                      "name": "$",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        69787, 69804, 69821, 69838, 69855
                                      ],
                                      "referencedDeclaration": 69787,
                                      "src": "4437:1:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                                        "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                                      }
                                    },
                                    "id": 63350,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4437:6:91",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "id": 63351,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balance",
                                  "nodeType": "MemberAccess",
                                  "src": "4437:14:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 63358,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 63352,
                                      "name": "balances",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 62713,
                                      "src": "4461:8:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Balances_$69175_storage",
                                        "typeString": "struct MangroveTest.Balances storage ref"
                                      }
                                    },
                                    "id": 63353,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mgvBalanceWei",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 69157,
                                    "src": "4461:22:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 63356,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 63354,
                                          "name": "provision",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 63313,
                                          "src": "4487:9:91",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 63355,
                                          "name": "returned",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 63330,
                                          "src": "4499:8:91",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "4487:20:91",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 63357,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "4486:22:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4461:47:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "hexValue": "4d616e67726f766520686173206e6f742073656e642074686520636f727265637420616d6f756e7420746f2074616b6572",
                                  "id": 63359,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4518:51:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_5a21ac61bad4123393ba670ae37c9d7905415950f6fdb2b86af49974425c12a5",
                                    "typeString": "literal_string \"Mangrove has not send the correct amount to taker\""
                                  },
                                  "value": "Mangrove has not send the correct amount to taker"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_5a21ac61bad4123393ba670ae37c9d7905415950f6fdb2b86af49974425c12a5",
                                    "typeString": "literal_string \"Mangrove has not send the correct amount to taker\""
                                  }
                                ],
                                "id": 63347,
                                "name": "assertEq",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  2779, 2804, 2817, 2833, 2875, 2917, 2959,
                                  2996, 3033, 3070, 320, 345, 375, 400, 459,
                                  484, 514, 539, 1639, 1674
                                ],
                                "referencedDeclaration": 539,
                                "src": "4419:8:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (uint256,uint256,string memory)"
                                }
                              },
                              "id": 63360,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4419:158:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 63361,
                            "nodeType": "ExpressionStatement",
                            "src": "4419:158:91"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 63363,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 63274,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 63265,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "3629:7:91",
                            "nodeType": "VariableDeclaration",
                            "scope": 63363,
                            "src": "3624:12:91",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 63264,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "3624:4:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 63267,
                            "mutability": "mutable",
                            "name": "takerGot",
                            "nameLocation": "3649:8:91",
                            "nodeType": "VariableDeclaration",
                            "scope": 63363,
                            "src": "3644:13:91",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 63266,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3644:4:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 63269,
                            "mutability": "mutable",
                            "name": "takerGave",
                            "nameLocation": "3670:9:91",
                            "nodeType": "VariableDeclaration",
                            "scope": 63363,
                            "src": "3665:14:91",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 63268,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3665:4:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 63271,
                            "mutability": "mutable",
                            "name": "",
                            "nameLocation": "-1:-1:-1",
                            "nodeType": "VariableDeclaration",
                            "scope": 63363,
                            "src": "3687:4:91",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 63270,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3687:4:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 63273,
                            "mutability": "mutable",
                            "name": "",
                            "nameLocation": "-1:-1:-1",
                            "nodeType": "VariableDeclaration",
                            "scope": 63363,
                            "src": "3699:4:91",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 63272,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3699:4:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "3616:93:91"
                      },
                      "src": "3608:976:91"
                    },
                    {
                      "block": {
                        "id": 63381,
                        "nodeType": "Block",
                        "src": "4615:82:91",
                        "statements": [
                          {
                            "assignments": [63368],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 63368,
                                "mutability": "mutable",
                                "name": "err",
                                "nameLocation": "4637:3:91",
                                "nodeType": "VariableDeclaration",
                                "scope": 63381,
                                "src": "4623:17:91",
                                "stateVariable": false,
                                "storageLocation": "memory",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string"
                                },
                                "typeName": {
                                  "id": 63367,
                                  "name": "string",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4623:6:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage_ptr",
                                    "typeString": "string"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 63376,
                            "initialValue": {
                              "arguments": [
                                {
                                  "id": 63371,
                                  "name": "errorMsg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 63365,
                                  "src": "4654:8:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                {
                                  "components": [
                                    {
                                      "id": 63373,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4665:6:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                        "typeString": "type(string storage pointer)"
                                      },
                                      "typeName": {
                                        "id": 63372,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4665:6:91",
                                        "typeDescriptions": {}
                                      }
                                    }
                                  ],
                                  "id": 63374,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "4664:8:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                    "typeString": "type(string storage pointer)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  },
                                  {
                                    "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                    "typeString": "type(string storage pointer)"
                                  }
                                ],
                                "expression": {
                                  "id": 63369,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "4643:3:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 63370,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "decode",
                                "nodeType": "MemberAccess",
                                "src": "4643:10:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 63375,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4643:30:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "4623:50:91"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 63378,
                                  "name": "err",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 63368,
                                  "src": "4686:3:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 63377,
                                "name": "fail",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [2718, 216],
                                "referencedDeclaration": 2718,
                                "src": "4681:4:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (string memory)"
                                }
                              },
                              "id": 63379,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4681:9:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 63380,
                            "nodeType": "ExpressionStatement",
                            "src": "4681:9:91"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 63382,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 63366,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 63365,
                            "mutability": "mutable",
                            "name": "errorMsg",
                            "nameLocation": "4605:8:91",
                            "nodeType": "VariableDeclaration",
                            "scope": 63382,
                            "src": "4592:21:91",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 63364,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "4592:5:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "4591:23:91"
                      },
                      "src": "4585:112:91"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "id": 63261,
                        "name": "failingOfferId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63256,
                        "src": "3581:14:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "302e35",
                        "id": 63262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3597:9:91",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "value": "0.5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 63259,
                        "name": "taker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62707,
                        "src": "3562:5:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$72989",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 63260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "takeWithInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72843,
                      "src": "3562:18:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) external returns (bool,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 63263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3562:45:91",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 63383,
                  "nodeType": "TryStatement",
                  "src": "3558:1139:91"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "collectFailingOffer",
            "nameLocation": "3471:19:91",
            "parameters": {
              "id": 63257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63256,
                  "mutability": "mutable",
                  "name": "failingOfferId",
                  "nameLocation": "3496:14:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 63385,
                  "src": "3491:19:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63255,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3491:4:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3490:21:91"
            },
            "returnParameters": {
              "id": 63258,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3521:0:91"
            },
            "scope": 64151,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 63627,
            "nodeType": "FunctionDefinition",
            "src": "4705:1866:91",
            "body": {
              "id": 63626,
              "nodeType": "Block",
              "src": "4754:1817:91",
              "statements": [
                {
                  "assignments": [63395],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63395,
                      "mutability": "mutable",
                      "name": "_offerOf",
                      "nameLocation": "4811:8:91",
                      "nodeType": "VariableDeclaration",
                      "scope": 63626,
                      "src": "4797:22:91",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 63393,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4797:4:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 63394,
                        "nodeType": "ArrayTypeName",
                        "src": "4797:6:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63403,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 63399,
                            "name": "makers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62710,
                            "src": "4833:6:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MakerDeployer_$71682",
                              "typeString": "contract MakerDeployer"
                            }
                          },
                          "id": 63400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 71587,
                          "src": "4833:13:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 63401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4833:15:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 63398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4822:10:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 63396,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4826:4:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 63397,
                        "nodeType": "ArrayTypeName",
                        "src": "4826:6:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 63402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4822:27:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4797:52:91"
                },
                {
                  "expression": {
                    "id": 63417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 63404,
                        "name": "_offerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63395,
                        "src": "4855:8:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 63406,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 63405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4864:1:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4855:11:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 63412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4923:7:91",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "302e35",
                          "id": 63413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4945:9:91",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_500000000000000000_by_1",
                            "typeString": "int_const 500000000000000000"
                          },
                          "value": "0.5"
                        },
                        {
                          "hexValue": "35305f303030",
                          "id": 63414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4970:6:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_50000_by_1",
                            "typeString": "int_const 50000"
                          },
                          "value": "50_000"
                        },
                        {
                          "hexValue": "30",
                          "id": 63415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4993:1:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_500000000000000000_by_1",
                            "typeString": "int_const 500000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_50000_by_1",
                            "typeString": "int_const 50000"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 63409,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4885:1:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "id": 63407,
                              "name": "makers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62710,
                              "src": "4869:6:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MakerDeployer_$71682",
                                "typeString": "contract MakerDeployer"
                              }
                            },
                            "id": 63408,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getMaker",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 71602,
                            "src": "4869:15:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_TestMaker_$72397_$",
                              "typeString": "function (uint256) view external returns (contract TestMaker)"
                            }
                          },
                          "id": 63410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4869:18:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestMaker_$72397",
                            "typeString": "contract TestMaker"
                          }
                        },
                        "id": 63411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "newOffer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 72052,
                        "src": "4869:27:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                        }
                      },
                      "id": 63416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": ["wants", "gives", "gasreq", "pivotId"],
                      "nodeType": "FunctionCall",
                      "src": "4869:132:91",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4855:146:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 63418,
                  "nodeType": "ExpressionStatement",
                  "src": "4855:146:91"
                },
                {
                  "expression": {
                    "id": 63432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 63419,
                        "name": "_offerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63395,
                        "src": "5007:8:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 63421,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 63420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5016:1:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5007:11:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 63427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5075:7:91",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "302e38",
                          "id": 63428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5097:9:91",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_800000000000000000_by_1",
                            "typeString": "int_const 800000000000000000"
                          },
                          "value": "0.8"
                        },
                        {
                          "hexValue": "38305f303030",
                          "id": 63429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5122:6:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_80000_by_1",
                            "typeString": "int_const 80000"
                          },
                          "value": "80_000"
                        },
                        {
                          "hexValue": "31",
                          "id": 63430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5145:1:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_800000000000000000_by_1",
                            "typeString": "int_const 800000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_80000_by_1",
                            "typeString": "int_const 80000"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "32",
                              "id": 63424,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5037:1:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "id": 63422,
                              "name": "makers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62710,
                              "src": "5021:6:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MakerDeployer_$71682",
                                "typeString": "contract MakerDeployer"
                              }
                            },
                            "id": 63423,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getMaker",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 71602,
                            "src": "5021:15:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_TestMaker_$72397_$",
                              "typeString": "function (uint256) view external returns (contract TestMaker)"
                            }
                          },
                          "id": 63425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5021:18:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestMaker_$72397",
                            "typeString": "contract TestMaker"
                          }
                        },
                        "id": 63426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "newOffer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 72052,
                        "src": "5021:27:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                        }
                      },
                      "id": 63431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": ["wants", "gives", "gasreq", "pivotId"],
                      "nodeType": "FunctionCall",
                      "src": "5021:132:91",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5007:146:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 63433,
                  "nodeType": "ExpressionStatement",
                  "src": "5007:146:91"
                },
                {
                  "expression": {
                    "id": 63447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 63434,
                        "name": "_offerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63395,
                        "src": "5159:8:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 63436,
                      "indexExpression": {
                        "hexValue": "33",
                        "id": 63435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5168:1:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5159:11:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "302e35",
                          "id": 63442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5227:9:91",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_500000000000000000_by_1",
                            "typeString": "int_const 500000000000000000"
                          },
                          "value": "0.5"
                        },
                        {
                          "hexValue": "31",
                          "id": 63443,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5251:7:91",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "39305f303030",
                          "id": 63444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5274:6:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_90000_by_1",
                            "typeString": "int_const 90000"
                          },
                          "value": "90_000"
                        },
                        {
                          "hexValue": "3732",
                          "id": 63445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5297:2:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_72_by_1",
                            "typeString": "int_const 72"
                          },
                          "value": "72"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_500000000000000000_by_1",
                            "typeString": "int_const 500000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_90000_by_1",
                            "typeString": "int_const 90000"
                          },
                          {
                            "typeIdentifier": "t_rational_72_by_1",
                            "typeString": "int_const 72"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "33",
                              "id": 63439,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5189:1:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              }
                            ],
                            "expression": {
                              "id": 63437,
                              "name": "makers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62710,
                              "src": "5173:6:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MakerDeployer_$71682",
                                "typeString": "contract MakerDeployer"
                              }
                            },
                            "id": 63438,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getMaker",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 71602,
                            "src": "5173:15:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_TestMaker_$72397_$",
                              "typeString": "function (uint256) view external returns (contract TestMaker)"
                            }
                          },
                          "id": 63440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5173:18:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestMaker_$72397",
                            "typeString": "contract TestMaker"
                          }
                        },
                        "id": 63441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "newOffer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 72052,
                        "src": "5173:27:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                        }
                      },
                      "id": 63446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": ["wants", "gives", "gasreq", "pivotId"],
                      "nodeType": "FunctionCall",
                      "src": "5173:133:91",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5159:147:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 63448,
                  "nodeType": "ExpressionStatement",
                  "src": "5159:147:91"
                },
                {
                  "assignments": [63454, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63454,
                      "mutability": "mutable",
                      "name": "cfg",
                      "nameLocation": "5324:3:91",
                      "nodeType": "VariableDeclaration",
                      "scope": 63626,
                      "src": "5313:14:91",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_t_$29729",
                        "typeString": "t"
                      },
                      "typeName": {
                        "id": 63453,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 63452,
                          "name": "P.Global.t",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 29729,
                          "src": "5313:10:91"
                        },
                        "referencedDeclaration": 29729,
                        "src": "5313:10:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_t_$29729",
                          "typeString": "t"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 63464,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 63458,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "5346:4:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 63457,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "5344:1:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 63459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5344:7:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 63461,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "5355:5:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 63460,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "5353:1:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 63462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5353:8:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 63455,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "5333:3:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 63456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "config",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27973,
                      "src": "5333:10:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_userDefinedValueType$_t_$29729_$_t_userDefinedValueType$_t_$30598_$",
                        "typeString": "function (address,address) view external returns (t,t)"
                      }
                    },
                    "id": 63463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5333:29:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_userDefinedValueType$_t_$29729_$_t_userDefinedValueType$_t_$30598_$",
                      "typeString": "tuple(t,t)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5312:50:91"
                },
                {
                  "expression": {
                    "id": 63480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 63465,
                        "name": "_offerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63395,
                        "src": "5368:8:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 63467,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 63466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5377:1:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5368:11:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "3230",
                          "id": 63473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5442:8:91",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20000000000000000000_by_1",
                            "typeString": "int_const 20000000000000000000"
                          },
                          "value": "20"
                        },
                        {
                          "hexValue": "3130",
                          "id": 63474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5465:8:91",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 63475,
                              "name": "cfg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63454,
                              "src": "5489:3:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_t_$29729",
                                "typeString": "t"
                              }
                            },
                            "id": 63476,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "gasmax",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30358,
                            "src": "5489:10:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$29729_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$29729_$",
                              "typeString": "function (t) pure returns (uint256)"
                            }
                          },
                          "id": 63477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5489:12:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 63478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5518:1:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_20000000000000000000_by_1",
                            "typeString": "int_const 20000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 63470,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5398:1:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 63468,
                              "name": "makers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62710,
                              "src": "5382:6:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MakerDeployer_$71682",
                                "typeString": "contract MakerDeployer"
                              }
                            },
                            "id": 63469,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getMaker",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 71602,
                            "src": "5382:15:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_TestMaker_$72397_$",
                              "typeString": "function (uint256) view external returns (contract TestMaker)"
                            }
                          },
                          "id": 63471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5382:18:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestMaker_$72397",
                            "typeString": "contract TestMaker"
                          }
                        },
                        "id": 63472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "newOffer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 72052,
                        "src": "5382:27:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                        }
                      },
                      "id": 63479,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": ["wants", "gives", "gasreq", "pivotId"],
                      "nodeType": "FunctionCall",
                      "src": "5382:144:91",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5368:158:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 63481,
                  "nodeType": "ExpressionStatement",
                  "src": "5368:158:91"
                },
                {
                  "body": {
                    "id": 63551,
                    "nodeType": "Block",
                    "src": "5636:359:91",
                    "statements": [
                      {
                        "assignments": [63495],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 63495,
                            "mutability": "mutable",
                            "name": "gasreq_i",
                            "nameLocation": "5649:8:91",
                            "nodeType": "VariableDeclaration",
                            "scope": 63551,
                            "src": "5644:13:91",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 63494,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "5644:4:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 63510,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 63499,
                                      "name": "base",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 68676,
                                      "src": "5679:4:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TestToken_$75210",
                                        "typeString": "contract TestToken"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_TestToken_$75210",
                                        "typeString": "contract TestToken"
                                      }
                                    ],
                                    "id": 63498,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      69787, 69804, 69821, 69838, 69855
                                    ],
                                    "referencedDeclaration": 69855,
                                    "src": "5677:1:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                                      "typeString": "function (contract IERC20) pure returns (address payable)"
                                    }
                                  },
                                  "id": 63500,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5677:7:91",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 63502,
                                      "name": "quote",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 68679,
                                      "src": "5688:5:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TestToken_$75210",
                                        "typeString": "contract TestToken"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_TestToken_$75210",
                                        "typeString": "contract TestToken"
                                      }
                                    ],
                                    "id": 63501,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      69787, 69804, 69821, 69838, 69855
                                    ],
                                    "referencedDeclaration": 69855,
                                    "src": "5686:1:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                                      "typeString": "function (contract IERC20) pure returns (address payable)"
                                    }
                                  },
                                  "id": 63503,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5686:8:91",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "id": 63504,
                                    "name": "_offerOf",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 63395,
                                    "src": "5696:8:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 63506,
                                  "indexExpression": {
                                    "id": 63505,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 63483,
                                    "src": "5705:1:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5696:11:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 63496,
                                  "name": "mgv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 68673,
                                  "src": "5660:3:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                                    "typeString": "contract AbstractMangrove"
                                  }
                                },
                                "id": 63497,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "offerDetails",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23587,
                                "src": "5660:16:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_userDefinedValueType$_t_$32093_$",
                                  "typeString": "function (address,address,uint256) view external returns (t)"
                                }
                              },
                              "id": 63507,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5660:48:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_t_$32093",
                                "typeString": "t"
                              }
                            },
                            "id": 63508,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "gasreq",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32422,
                            "src": "5660:55:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$32093_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$32093_$",
                              "typeString": "function (t) pure returns (uint256)"
                            }
                          },
                          "id": 63509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5660:57:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5644:73:91"
                      },
                      {
                        "assignments": [63512],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 63512,
                            "mutability": "mutable",
                            "name": "provision_i",
                            "nameLocation": "5730:11:91",
                            "nodeType": "VariableDeclaration",
                            "scope": 63551,
                            "src": "5725:16:91",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 63511,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "5725:4:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 63522,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 63515,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 68676,
                                  "src": "5759:4:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$75210",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$75210",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 63514,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  69787, 69804, 69821, 69838, 69855
                                ],
                                "referencedDeclaration": 69855,
                                "src": "5757:1:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 63516,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5757:7:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 63518,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 68679,
                                  "src": "5768:5:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$75210",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$75210",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 63517,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  69787, 69804, 69821, 69838, 69855
                                ],
                                "referencedDeclaration": 69855,
                                "src": "5766:1:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 63519,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5766:8:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 63520,
                              "name": "gasreq_i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63495,
                              "src": "5776:8:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 63513,
                            "name": "getProvision",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [69316, 69383],
                            "referencedDeclaration": 69316,
                            "src": "5744:12:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,address,uint256) view returns (uint256)"
                            }
                          },
                          "id": 63521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5744:41:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5725:60:91"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 63530,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 63483,
                                          "src": "5849:1:91",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 63528,
                                          "name": "makers",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 62710,
                                          "src": "5833:6:91",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_MakerDeployer_$71682",
                                            "typeString": "contract MakerDeployer"
                                          }
                                        },
                                        "id": 63529,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "getMaker",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 71602,
                                        "src": "5833:15:91",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_TestMaker_$72397_$",
                                          "typeString": "function (uint256) view external returns (contract TestMaker)"
                                        }
                                      },
                                      "id": 63531,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5833:18:91",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TestMaker_$72397",
                                        "typeString": "contract TestMaker"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_TestMaker_$72397",
                                        "typeString": "contract TestMaker"
                                      }
                                    ],
                                    "id": 63527,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5825:7:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 63526,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5825:7:91",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 63532,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5825:27:91",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 63524,
                                  "name": "mgv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 68673,
                                  "src": "5811:3:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                                    "typeString": "contract AbstractMangrove"
                                  }
                                },
                                "id": 63525,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balanceOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23591,
                                "src": "5811:13:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view external returns (uint256)"
                                }
                              },
                              "id": 63533,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5811:42:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 63539,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 63534,
                                    "name": "balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 62713,
                                    "src": "5863:8:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Balances_$69175_storage",
                                      "typeString": "struct MangroveTest.Balances storage ref"
                                    }
                                  },
                                  "id": 63535,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "makersBalanceWei",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 69174,
                                  "src": "5863:25:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                    "typeString": "uint256[] storage ref"
                                  }
                                },
                                "id": 63537,
                                "indexExpression": {
                                  "id": 63536,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 63483,
                                  "src": "5889:1:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5863:28:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 63538,
                                "name": "provision_i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63512,
                                "src": "5894:11:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5863:42:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "496e636f7272656374207765692062616c616e636520666f72206d616b657220",
                                  "id": 63543,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5929:34:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_da5fd56319adf0e6c775bd50897c890dfad90104946a8f672e3c2cd9adfa7191",
                                    "typeString": "literal_string \"Incorrect wei balance for maker \""
                                  },
                                  "value": "Incorrect wei balance for maker "
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 63546,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 63483,
                                      "src": "5977:1:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 63544,
                                      "name": "vm",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1817,
                                      "src": "5965:2:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Vm_$5425",
                                        "typeString": "contract Vm"
                                      }
                                    },
                                    "id": 63545,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "toString",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 5258,
                                    "src": "5965:11:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                      "typeString": "function (uint256) pure external returns (string memory)"
                                    }
                                  },
                                  "id": 63547,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5965:14:91",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_da5fd56319adf0e6c775bd50897c890dfad90104946a8f672e3c2cd9adfa7191",
                                    "typeString": "literal_string \"Incorrect wei balance for maker \""
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 63541,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5915:6:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                    "typeString": "type(string storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 63540,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5915:6:91",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 63542,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "concat",
                                "nodeType": "MemberAccess",
                                "src": "5915:13:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                                  "typeString": "function () pure returns (string memory)"
                                }
                              },
                              "id": 63548,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5915:65:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 63523,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996,
                              3033, 3070, 320, 345, 375, 400, 459, 484, 514,
                              539, 1639, 1674
                            ],
                            "referencedDeclaration": 539,
                            "src": "5793:8:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 63549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5793:195:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 63550,
                        "nodeType": "ExpressionStatement",
                        "src": "5793:195:91"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 63490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 63486,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63483,
                      "src": "5610:1:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 63487,
                          "name": "makers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62710,
                          "src": "5614:6:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MakerDeployer_$71682",
                            "typeString": "contract MakerDeployer"
                          }
                        },
                        "id": 63488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 71587,
                        "src": "5614:13:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 63489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5614:15:91",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5610:19:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 63552,
                  "initializationExpression": {
                    "assignments": [63483],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 63483,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5603:1:91",
                        "nodeType": "VariableDeclaration",
                        "scope": 63552,
                        "src": "5598:6:91",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 63482,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5598:4:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 63485,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 63484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5607:1:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5598:10:91"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 63492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5631:3:91",
                      "subExpression": {
                        "id": 63491,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63483,
                        "src": "5631:1:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 63493,
                    "nodeType": "ExpressionStatement",
                    "src": "5631:3:91"
                  },
                  "nodeType": "ForStatement",
                  "src": "5593:402:91"
                },
                {
                  "assignments": [63554],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63554,
                      "mutability": "mutable",
                      "name": "offerId",
                      "nameLocation": "6068:7:91",
                      "nodeType": "VariableDeclaration",
                      "scope": 63626,
                      "src": "6063:12:91",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 63553,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6063:4:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63564,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 63558,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "6089:4:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 63557,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "6087:1:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 63559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6087:7:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 63561,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "6098:5:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 63560,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "6096:1:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 63562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6096:8:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 63555,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "6078:3:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 63556,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "best",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23618,
                      "src": "6078:8:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 63563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6078:27:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6063:42:91"
                },
                {
                  "assignments": [63566],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63566,
                      "mutability": "mutable",
                      "name": "expected_maker",
                      "nameLocation": "6116:14:91",
                      "nodeType": "VariableDeclaration",
                      "scope": 63626,
                      "src": "6111:19:91",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 63565,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6111:4:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63568,
                  "initialValue": {
                    "hexValue": "33",
                    "id": 63567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6133:1:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_3_by_1",
                      "typeString": "int_const 3"
                    },
                    "value": "3"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6111:23:91"
                },
                {
                  "body": {
                    "id": 63622,
                    "nodeType": "Block",
                    "src": "6161:385:91",
                    "statements": [
                      {
                        "assignments": [63576, 63579],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 63576,
                            "mutability": "mutable",
                            "name": "offer",
                            "nameLocation": "6191:5:91",
                            "nodeType": "VariableDeclaration",
                            "scope": 63622,
                            "src": "6170:26:91",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OfferStruct_$32698_memory_ptr",
                              "typeString": "struct OfferStruct"
                            },
                            "typeName": {
                              "id": 63575,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 63574,
                                "name": "P.OfferStruct",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 32698,
                                "src": "6170:13:91"
                              },
                              "referencedDeclaration": 32698,
                              "src": "6170:13:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferStruct_$32698_storage_ptr",
                                "typeString": "struct OfferStruct"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 63579,
                            "mutability": "mutable",
                            "name": "od",
                            "nameLocation": "6225:2:91",
                            "nodeType": "VariableDeclaration",
                            "scope": 63622,
                            "src": "6198:29:91",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OfferDetailStruct_$32707_memory_ptr",
                              "typeString": "struct OfferDetailStruct"
                            },
                            "typeName": {
                              "id": 63578,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 63577,
                                "name": "P.OfferDetailStruct",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 32707,
                                "src": "6198:19:91"
                              },
                              "referencedDeclaration": 32707,
                              "src": "6198:19:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferDetailStruct_$32707_storage_ptr",
                                "typeString": "struct OfferDetailStruct"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 63590,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 63583,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 68676,
                                  "src": "6256:4:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$75210",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$75210",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 63582,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  69787, 69804, 69821, 69838, 69855
                                ],
                                "referencedDeclaration": 69855,
                                "src": "6254:1:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 63584,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6254:7:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 63586,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 68679,
                                  "src": "6265:5:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$75210",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$75210",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 63585,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  69787, 69804, 69821, 69838, 69855
                                ],
                                "referencedDeclaration": 69855,
                                "src": "6263:1:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 63587,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6263:8:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 63588,
                              "name": "offerId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63554,
                              "src": "6273:7:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 63580,
                              "name": "mgv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68673,
                              "src": "6231:3:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                                "typeString": "contract AbstractMangrove"
                              }
                            },
                            "id": 63581,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "offerInfo",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23675,
                            "src": "6231:22:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_struct$_OfferStruct_$32698_memory_ptr_$_t_struct$_OfferDetailStruct_$32707_memory_ptr_$",
                              "typeString": "function (address,address,uint256) view external returns (struct OfferStruct memory,struct OfferDetailStruct memory)"
                            }
                          },
                          "id": 63589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6231:50:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_struct$_OfferStruct_$32698_memory_ptr_$_t_struct$_OfferDetailStruct_$32707_memory_ptr_$",
                            "typeString": "tuple(struct OfferStruct memory,struct OfferDetailStruct memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6169:112:91"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 63592,
                                "name": "od",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63579,
                                "src": "6307:2:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OfferDetailStruct_$32707_memory_ptr",
                                  "typeString": "struct OfferDetailStruct memory"
                                }
                              },
                              "id": 63593,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "maker",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 32700,
                              "src": "6307:8:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 63598,
                                      "name": "expected_maker",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 63566,
                                      "src": "6349:14:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 63596,
                                      "name": "makers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 62710,
                                      "src": "6333:6:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_MakerDeployer_$71682",
                                        "typeString": "contract MakerDeployer"
                                      }
                                    },
                                    "id": 63597,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "getMaker",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 71602,
                                    "src": "6333:15:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_TestMaker_$72397_$",
                                      "typeString": "function (uint256) view external returns (contract TestMaker)"
                                    }
                                  },
                                  "id": 63599,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6333:31:91",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestMaker_$72397",
                                    "typeString": "contract TestMaker"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestMaker_$72397",
                                    "typeString": "contract TestMaker"
                                  }
                                ],
                                "id": 63595,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6325:7:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 63594,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6325:7:91",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 63600,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6325:40:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "496e636f7272656374206d616b65722061646472657373206174206f6666657220",
                                  "id": 63604,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6389:35:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_1078dbf9b56925c3760a51df4a2db52e66b5e9b61586c44ba365bdcae37fe335",
                                    "typeString": "literal_string \"Incorrect maker address at offer \""
                                  },
                                  "value": "Incorrect maker address at offer "
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 63607,
                                      "name": "offerId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 63554,
                                      "src": "6438:7:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 63605,
                                      "name": "vm",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1817,
                                      "src": "6426:2:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Vm_$5425",
                                        "typeString": "contract Vm"
                                      }
                                    },
                                    "id": 63606,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "toString",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 5258,
                                    "src": "6426:11:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                      "typeString": "function (uint256) pure external returns (string memory)"
                                    }
                                  },
                                  "id": 63608,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6426:20:91",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_1078dbf9b56925c3760a51df4a2db52e66b5e9b61586c44ba365bdcae37fe335",
                                    "typeString": "literal_string \"Incorrect maker address at offer \""
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 63602,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6375:6:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                    "typeString": "type(string storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 63601,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6375:6:91",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 63603,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "concat",
                                "nodeType": "MemberAccess",
                                "src": "6375:13:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                                  "typeString": "function () pure returns (string memory)"
                                }
                              },
                              "id": 63609,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6375:72:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 63591,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996,
                              3033, 3070, 320, 345, 375, 400, 459, 484, 514,
                              539, 1639, 1674
                            ],
                            "referencedDeclaration": 345,
                            "src": "6289:8:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,string memory)"
                            }
                          },
                          "id": 63610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6289:166:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 63611,
                        "nodeType": "ExpressionStatement",
                        "src": "6289:166:91"
                      },
                      {
                        "id": 63616,
                        "nodeType": "UncheckedBlock",
                        "src": "6464:48:91",
                        "statements": [
                          {
                            "expression": {
                              "id": 63614,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 63612,
                                "name": "expected_maker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63566,
                                "src": "6484:14:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "-=",
                              "rightHandSide": {
                                "hexValue": "31",
                                "id": 63613,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6502:1:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "6484:19:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 63615,
                            "nodeType": "ExpressionStatement",
                            "src": "6484:19:91"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "id": 63620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 63617,
                            "name": "offerId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63554,
                            "src": "6519:7:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 63618,
                              "name": "offer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63576,
                              "src": "6529:5:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferStruct_$32698_memory_ptr",
                                "typeString": "struct OfferStruct memory"
                              }
                            },
                            "id": 63619,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "next",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32693,
                            "src": "6529:10:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6519:20:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 63621,
                        "nodeType": "ExpressionStatement",
                        "src": "6519:20:91"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 63571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 63569,
                      "name": "offerId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63554,
                      "src": "6147:7:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 63570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6158:1:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6147:12:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 63623,
                  "nodeType": "WhileStatement",
                  "src": "6140:406:91"
                },
                {
                  "expression": {
                    "id": 63624,
                    "name": "_offerOf",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 63395,
                    "src": "6558:8:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 63390,
                  "id": 63625,
                  "nodeType": "Return",
                  "src": "6551:15:91"
                }
              ]
            },
            "functionSelector": "25f7b1de",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "insert",
            "nameLocation": "4714:6:91",
            "parameters": {
              "id": 63386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4720:2:91"
            },
            "returnParameters": {
              "id": 63390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63389,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63627,
                  "src": "4739:13:91",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 63387,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "4739:4:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 63388,
                    "nodeType": "ArrayTypeName",
                    "src": "4739:6:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4738:15:91"
            },
            "scope": 64151,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 63908,
            "nodeType": "FunctionDefinition",
            "src": "6575:2240:91",
            "body": {
              "id": 63907,
              "nodeType": "Block",
              "src": "6598:2217:91",
              "statements": [
                {
                  "assignments": [63631],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63631,
                      "mutability": "mutable",
                      "name": "takerWants",
                      "nameLocation": "6609:10:91",
                      "nodeType": "VariableDeclaration",
                      "scope": 63907,
                      "src": "6604:15:91",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 63630,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6604:4:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63633,
                  "initialValue": {
                    "hexValue": "312e36",
                    "id": 63632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6622:9:91",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1600000000000000000_by_1",
                      "typeString": "int_const 1600000000000000000"
                    },
                    "value": "1.6"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6604:27:91"
                },
                {
                  "assignments": [63635],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63635,
                      "mutability": "mutable",
                      "name": "takerGives",
                      "nameLocation": "6656:10:91",
                      "nodeType": "VariableDeclaration",
                      "scope": 63907,
                      "src": "6651:15:91",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 63634,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6651:4:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63637,
                  "initialValue": {
                    "hexValue": "32",
                    "id": 63636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6669:7:91",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2000000000000000000_by_1",
                      "typeString": "int_const 2000000000000000000"
                    },
                    "value": "2"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6651:25:91"
                },
                {
                  "assignments": [63639, 63641],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63639,
                      "mutability": "mutable",
                      "name": "takerGot",
                      "nameLocation": "6703:8:91",
                      "nodeType": "VariableDeclaration",
                      "scope": 63907,
                      "src": "6698:13:91",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 63638,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6698:4:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 63641,
                      "mutability": "mutable",
                      "name": "takerGave",
                      "nameLocation": "6718:9:91",
                      "nodeType": "VariableDeclaration",
                      "scope": 63907,
                      "src": "6713:14:91",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 63640,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6713:4:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63647,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 63644,
                        "name": "takerWants",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63631,
                        "src": "6749:10:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 63645,
                        "name": "takerGives",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63635,
                        "src": "6761:10:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 63642,
                        "name": "taker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62707,
                        "src": "6731:5:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$72989",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 63643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72931,
                      "src": "6731:17:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) external returns (uint256,uint256)"
                      }
                    },
                    "id": 63646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6731:41:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6697:75:91"
                },
                {
                  "body": {
                    "id": 63724,
                    "nodeType": "Block",
                    "src": "6840:485:91",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 63665,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 63649,
                                          "src": "6952:1:91",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 63663,
                                          "name": "makers",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 62710,
                                          "src": "6936:6:91",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_MakerDeployer_$71682",
                                            "typeString": "contract MakerDeployer"
                                          }
                                        },
                                        "id": 63664,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "getMaker",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 71602,
                                        "src": "6936:15:91",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_TestMaker_$72397_$",
                                          "typeString": "function (uint256) view external returns (contract TestMaker)"
                                        }
                                      },
                                      "id": 63666,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6936:18:91",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TestMaker_$72397",
                                        "typeString": "contract TestMaker"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_TestMaker_$72397",
                                        "typeString": "contract TestMaker"
                                      }
                                    ],
                                    "id": 63662,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "6928:7:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 63661,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "6928:7:91",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 63667,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6928:27:91",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 63659,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 68676,
                                  "src": "6913:4:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$75210",
                                    "typeString": "contract TestToken"
                                  }
                                },
                                "id": 63660,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balanceOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 73347,
                                "src": "6913:14:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view external returns (uint256)"
                                }
                              },
                              "id": 63668,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6913:43:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 63679,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 63669,
                                    "name": "balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 62713,
                                    "src": "6966:8:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Balances_$69175_storage",
                                      "typeString": "struct MangroveTest.Balances storage ref"
                                    }
                                  },
                                  "id": 63670,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "makersBalanceA",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 69168,
                                  "src": "6966:23:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                    "typeString": "uint256[] storage ref"
                                  }
                                },
                                "id": 63672,
                                "indexExpression": {
                                  "id": 63671,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 63649,
                                  "src": "6990:1:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6966:26:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 63673,
                                    "name": "offers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 62726,
                                    "src": "6995:6:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_enum$_Info_$69182_$_t_uint256_$_$",
                                      "typeString": "mapping(uint256 => mapping(enum MangroveTest.Info => uint256))"
                                    }
                                  },
                                  "id": 63675,
                                  "indexExpression": {
                                    "id": 63674,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 63649,
                                    "src": "7002:1:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6995:9:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_enum$_Info_$69182_$_t_uint256_$",
                                    "typeString": "mapping(enum MangroveTest.Info => uint256)"
                                  }
                                },
                                "id": 63678,
                                "indexExpression": {
                                  "expression": {
                                    "id": 63676,
                                    "name": "Info",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 69182,
                                    "src": "7005:4:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_Info_$69182_$",
                                      "typeString": "type(enum MangroveTest.Info)"
                                    }
                                  },
                                  "id": 63677,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "makerGives",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 69177,
                                  "src": "7005:15:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Info_$69182",
                                    "typeString": "enum MangroveTest.Info"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6995:26:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6966:55:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "496e636f727265637420412062616c616e636520666f72206d616b657220",
                                  "id": 63683,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7045:32:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_44ae4cbe4e62f2f73c321db199c55a99fa253b9dc01e388e0dcdd3046cbf8019",
                                    "typeString": "literal_string \"Incorrect A balance for maker \""
                                  },
                                  "value": "Incorrect A balance for maker "
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 63686,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 63649,
                                      "src": "7091:1:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 63684,
                                      "name": "vm",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1817,
                                      "src": "7079:2:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Vm_$5425",
                                        "typeString": "contract Vm"
                                      }
                                    },
                                    "id": 63685,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "toString",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 5258,
                                    "src": "7079:11:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                      "typeString": "function (uint256) pure external returns (string memory)"
                                    }
                                  },
                                  "id": 63687,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7079:14:91",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_44ae4cbe4e62f2f73c321db199c55a99fa253b9dc01e388e0dcdd3046cbf8019",
                                    "typeString": "literal_string \"Incorrect A balance for maker \""
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 63681,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7031:6:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                    "typeString": "type(string storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 63680,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7031:6:91",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 63682,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "concat",
                                "nodeType": "MemberAccess",
                                "src": "7031:13:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                                  "typeString": "function () pure returns (string memory)"
                                }
                              },
                              "id": 63688,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7031:63:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 63658,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996,
                              3033, 3070, 320, 345, 375, 400, 459, 484, 514,
                              539, 1639, 1674
                            ],
                            "referencedDeclaration": 539,
                            "src": "6895:8:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 63689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6895:207:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 63690,
                        "nodeType": "ExpressionStatement",
                        "src": "6895:207:91"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 63698,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 63649,
                                          "src": "7168:1:91",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 63696,
                                          "name": "makers",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 62710,
                                          "src": "7152:6:91",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_MakerDeployer_$71682",
                                            "typeString": "contract MakerDeployer"
                                          }
                                        },
                                        "id": 63697,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "getMaker",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 71602,
                                        "src": "7152:15:91",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_TestMaker_$72397_$",
                                          "typeString": "function (uint256) view external returns (contract TestMaker)"
                                        }
                                      },
                                      "id": 63699,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7152:18:91",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TestMaker_$72397",
                                        "typeString": "contract TestMaker"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_TestMaker_$72397",
                                        "typeString": "contract TestMaker"
                                      }
                                    ],
                                    "id": 63695,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "7144:7:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 63694,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7144:7:91",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 63700,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7144:27:91",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 63692,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 68679,
                                  "src": "7128:5:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$75210",
                                    "typeString": "contract TestToken"
                                  }
                                },
                                "id": 63693,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balanceOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 73347,
                                "src": "7128:15:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view external returns (uint256)"
                                }
                              },
                              "id": 63701,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7128:44:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 63712,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 63702,
                                    "name": "balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 62713,
                                    "src": "7182:8:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Balances_$69175_storage",
                                      "typeString": "struct MangroveTest.Balances storage ref"
                                    }
                                  },
                                  "id": 63703,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "makersBalanceB",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 69171,
                                  "src": "7182:23:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                    "typeString": "uint256[] storage ref"
                                  }
                                },
                                "id": 63705,
                                "indexExpression": {
                                  "id": 63704,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 63649,
                                  "src": "7206:1:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7182:26:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 63706,
                                    "name": "offers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 62726,
                                    "src": "7211:6:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_enum$_Info_$69182_$_t_uint256_$_$",
                                      "typeString": "mapping(uint256 => mapping(enum MangroveTest.Info => uint256))"
                                    }
                                  },
                                  "id": 63708,
                                  "indexExpression": {
                                    "id": 63707,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 63649,
                                    "src": "7218:1:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7211:9:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_enum$_Info_$69182_$_t_uint256_$",
                                    "typeString": "mapping(enum MangroveTest.Info => uint256)"
                                  }
                                },
                                "id": 63711,
                                "indexExpression": {
                                  "expression": {
                                    "id": 63709,
                                    "name": "Info",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 69182,
                                    "src": "7221:4:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_Info_$69182_$",
                                      "typeString": "type(enum MangroveTest.Info)"
                                    }
                                  },
                                  "id": 63710,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "makerWants",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 69176,
                                  "src": "7221:15:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Info_$69182",
                                    "typeString": "enum MangroveTest.Info"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7211:26:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7182:55:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "496e636f727265637420422062616c616e636520666f72206d616b657220",
                                  "id": 63716,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7261:32:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_98205ed21505c0e42ede344dd5860176344595a30b45779dfe0fedd2b57780fd",
                                    "typeString": "literal_string \"Incorrect B balance for maker \""
                                  },
                                  "value": "Incorrect B balance for maker "
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 63719,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 63649,
                                      "src": "7307:1:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 63717,
                                      "name": "vm",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1817,
                                      "src": "7295:2:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Vm_$5425",
                                        "typeString": "contract Vm"
                                      }
                                    },
                                    "id": 63718,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "toString",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 5258,
                                    "src": "7295:11:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                      "typeString": "function (uint256) pure external returns (string memory)"
                                    }
                                  },
                                  "id": 63720,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7295:14:91",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_98205ed21505c0e42ede344dd5860176344595a30b45779dfe0fedd2b57780fd",
                                    "typeString": "literal_string \"Incorrect B balance for maker \""
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 63714,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7247:6:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                    "typeString": "type(string storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 63713,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7247:6:91",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 63715,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "concat",
                                "nodeType": "MemberAccess",
                                "src": "7247:13:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                                  "typeString": "function () pure returns (string memory)"
                                }
                              },
                              "id": 63721,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7247:63:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 63691,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996,
                              3033, 3070, 320, 345, 375, 400, 459, 484, 514,
                              539, 1639, 1674
                            ],
                            "referencedDeclaration": 539,
                            "src": "7110:8:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 63722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7110:208:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 63723,
                        "nodeType": "ExpressionStatement",
                        "src": "7110:208:91"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 63654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 63652,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63649,
                      "src": "6828:1:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "34",
                      "id": 63653,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6832:1:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "src": "6828:5:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 63725,
                  "initializationExpression": {
                    "assignments": [63649],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 63649,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6821:1:91",
                        "nodeType": "VariableDeclaration",
                        "scope": 63725,
                        "src": "6816:6:91",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 63648,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6816:4:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 63651,
                    "initialValue": {
                      "hexValue": "32",
                      "id": 63650,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6825:1:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6816:10:91"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 63656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6835:3:91",
                      "subExpression": {
                        "id": 63655,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63649,
                        "src": "6835:1:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 63657,
                    "nodeType": "ExpressionStatement",
                    "src": "6835:3:91"
                  },
                  "nodeType": "ForStatement",
                  "src": "6811:514:91"
                },
                {
                  "assignments": [63727],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63727,
                      "mutability": "mutable",
                      "name": "leftMkrWants",
                      "nameLocation": "7335:12:91",
                      "nodeType": "VariableDeclaration",
                      "scope": 63907,
                      "src": "7330:17:91",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 63726,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7330:4:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63728,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7330:17:91"
                },
                {
                  "id": 63787,
                  "nodeType": "Block",
                  "src": "7353:397:91",
                  "statements": [
                    {
                      "assignments": [63730],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 63730,
                          "mutability": "mutable",
                          "name": "leftTkrWants",
                          "nameLocation": "7366:12:91",
                          "nodeType": "VariableDeclaration",
                          "scope": 63787,
                          "src": "7361:17:91",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 63729,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "7361:4:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 63747,
                      "initialValue": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 63746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 63731,
                          "name": "takerWants",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63631,
                          "src": "7381:10:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 63744,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 63732,
                                    "name": "offers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 62726,
                                    "src": "7403:6:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_enum$_Info_$69182_$_t_uint256_$_$",
                                      "typeString": "mapping(uint256 => mapping(enum MangroveTest.Info => uint256))"
                                    }
                                  },
                                  "id": 63734,
                                  "indexExpression": {
                                    "hexValue": "32",
                                    "id": 63733,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7410:1:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7403:9:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_enum$_Info_$69182_$_t_uint256_$",
                                    "typeString": "mapping(enum MangroveTest.Info => uint256)"
                                  }
                                },
                                "id": 63737,
                                "indexExpression": {
                                  "expression": {
                                    "id": 63735,
                                    "name": "Info",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 69182,
                                    "src": "7413:4:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_Info_$69182_$",
                                      "typeString": "type(enum MangroveTest.Info)"
                                    }
                                  },
                                  "id": 63736,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "makerGives",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 69177,
                                  "src": "7413:15:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Info_$69182",
                                    "typeString": "enum MangroveTest.Info"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7403:26:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 63738,
                                    "name": "offers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 62726,
                                    "src": "7432:6:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_enum$_Info_$69182_$_t_uint256_$_$",
                                      "typeString": "mapping(uint256 => mapping(enum MangroveTest.Info => uint256))"
                                    }
                                  },
                                  "id": 63740,
                                  "indexExpression": {
                                    "hexValue": "33",
                                    "id": 63739,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7439:1:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_3_by_1",
                                      "typeString": "int_const 3"
                                    },
                                    "value": "3"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7432:9:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_enum$_Info_$69182_$_t_uint256_$",
                                    "typeString": "mapping(enum MangroveTest.Info => uint256)"
                                  }
                                },
                                "id": 63743,
                                "indexExpression": {
                                  "expression": {
                                    "id": 63741,
                                    "name": "Info",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 69182,
                                    "src": "7442:4:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_Info_$69182_$",
                                      "typeString": "type(enum MangroveTest.Info)"
                                    }
                                  },
                                  "id": 63742,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "makerGives",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 69177,
                                  "src": "7442:15:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Info_$69182",
                                    "typeString": "enum MangroveTest.Info"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7432:26:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7403:55:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 63745,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7402:57:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7381:78:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "7361:98:91"
                    },
                    {
                      "expression": {
                        "id": 63765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 63748,
                          "name": "leftMkrWants",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63727,
                          "src": "7468:12:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 63764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 63756,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 63749,
                                      "name": "offers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 62726,
                                      "src": "7492:6:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_enum$_Info_$69182_$_t_uint256_$_$",
                                        "typeString": "mapping(uint256 => mapping(enum MangroveTest.Info => uint256))"
                                      }
                                    },
                                    "id": 63751,
                                    "indexExpression": {
                                      "hexValue": "31",
                                      "id": 63750,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7499:1:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7492:9:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_enum$_Info_$69182_$_t_uint256_$",
                                      "typeString": "mapping(enum MangroveTest.Info => uint256)"
                                    }
                                  },
                                  "id": 63754,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 63752,
                                      "name": "Info",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 69182,
                                      "src": "7502:4:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_Info_$69182_$",
                                        "typeString": "type(enum MangroveTest.Info)"
                                      }
                                    },
                                    "id": 63753,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "makerWants",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 69176,
                                    "src": "7502:15:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_Info_$69182",
                                      "typeString": "enum MangroveTest.Info"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7492:26:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 63755,
                                  "name": "leftTkrWants",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 63730,
                                  "src": "7521:12:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7492:41:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 63757,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "7491:43:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 63758,
                                "name": "offers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 62726,
                                "src": "7545:6:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_enum$_Info_$69182_$_t_uint256_$_$",
                                  "typeString": "mapping(uint256 => mapping(enum MangroveTest.Info => uint256))"
                                }
                              },
                              "id": 63760,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 63759,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7552:1:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7545:9:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_Info_$69182_$_t_uint256_$",
                                "typeString": "mapping(enum MangroveTest.Info => uint256)"
                              }
                            },
                            "id": 63763,
                            "indexExpression": {
                              "expression": {
                                "id": 63761,
                                "name": "Info",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69182,
                                "src": "7555:4:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Info_$69182_$",
                                  "typeString": "type(enum MangroveTest.Info)"
                                }
                              },
                              "id": 63762,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "makerGives",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69177,
                              "src": "7555:15:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Info_$69182",
                                "typeString": "enum MangroveTest.Info"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7545:26:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7491:80:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7468:103:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 63766,
                      "nodeType": "ExpressionStatement",
                      "src": "7468:103:91"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "31",
                                        "id": 63774,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7637:1:91",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        }
                                      ],
                                      "expression": {
                                        "id": 63772,
                                        "name": "makers",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 62710,
                                        "src": "7621:6:91",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_MakerDeployer_$71682",
                                          "typeString": "contract MakerDeployer"
                                        }
                                      },
                                      "id": 63773,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "getMaker",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 71602,
                                      "src": "7621:15:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_TestMaker_$72397_$",
                                        "typeString": "function (uint256) view external returns (contract TestMaker)"
                                      }
                                    },
                                    "id": 63775,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7621:18:91",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestMaker_$72397",
                                      "typeString": "contract TestMaker"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestMaker_$72397",
                                      "typeString": "contract TestMaker"
                                    }
                                  ],
                                  "id": 63771,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7613:7:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 63770,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7613:7:91",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 63776,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7613:27:91",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 63768,
                                "name": "base",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68676,
                                "src": "7598:4:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$75210",
                                  "typeString": "contract TestToken"
                                }
                              },
                              "id": 63769,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 73347,
                              "src": "7598:14:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 63777,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7598:43:91",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 63783,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "expression": {
                                  "id": 63778,
                                  "name": "balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 62713,
                                  "src": "7651:8:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Balances_$69175_storage",
                                    "typeString": "struct MangroveTest.Balances storage ref"
                                  }
                                },
                                "id": 63779,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "makersBalanceA",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 69168,
                                "src": "7651:23:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                  "typeString": "uint256[] storage ref"
                                }
                              },
                              "id": 63781,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 63780,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7675:1:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7651:26:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 63782,
                              "name": "leftTkrWants",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63730,
                              "src": "7680:12:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7651:41:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "496e636f727265637420412062616c616e636520666f72206d616b65722031",
                            "id": 63784,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7702:33:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_8cff1a4633f9f0254b2fd5fa4690a1962ef3d953e9ed7f8b6668dcf7e99b5444",
                              "typeString": "literal_string \"Incorrect A balance for maker 1\""
                            },
                            "value": "Incorrect A balance for maker 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_8cff1a4633f9f0254b2fd5fa4690a1962ef3d953e9ed7f8b6668dcf7e99b5444",
                              "typeString": "literal_string \"Incorrect A balance for maker 1\""
                            }
                          ],
                          "id": 63767,
                          "name": "assertEq",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996,
                            3033, 3070, 320, 345, 375, 400, 459, 484, 514, 539,
                            1639, 1674
                          ],
                          "referencedDeclaration": 539,
                          "src": "7580:8:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (uint256,uint256,string memory)"
                          }
                        },
                        "id": 63785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7580:163:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 63786,
                      "nodeType": "ExpressionStatement",
                      "src": "7580:163:91"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "31",
                                    "id": 63795,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7812:1:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "expression": {
                                    "id": 63793,
                                    "name": "makers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 62710,
                                    "src": "7796:6:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_MakerDeployer_$71682",
                                      "typeString": "contract MakerDeployer"
                                    }
                                  },
                                  "id": 63794,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getMaker",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 71602,
                                  "src": "7796:15:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_TestMaker_$72397_$",
                                    "typeString": "function (uint256) view external returns (contract TestMaker)"
                                  }
                                },
                                "id": 63796,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7796:18:91",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestMaker_$72397",
                                  "typeString": "contract TestMaker"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestMaker_$72397",
                                  "typeString": "contract TestMaker"
                                }
                              ],
                              "id": 63792,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7788:7:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 63791,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7788:7:91",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 63797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7788:27:91",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 63789,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "7772:5:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          },
                          "id": 63790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 73347,
                          "src": "7772:15:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 63798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7772:44:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 63804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 63799,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62713,
                              "src": "7824:8:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Balances_$69175_storage",
                                "typeString": "struct MangroveTest.Balances storage ref"
                              }
                            },
                            "id": 63800,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "makersBalanceB",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 69171,
                            "src": "7824:23:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 63802,
                          "indexExpression": {
                            "hexValue": "31",
                            "id": 63801,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7848:1:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7824:26:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 63803,
                          "name": "leftMkrWants",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63727,
                          "src": "7853:12:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7824:41:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f727265637420422062616c616e636520666f72206d616b65722031",
                        "id": 63805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7873:33:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_235f0e0e0872a21da2d3c27ce7b1df09d914383c6c84fdd0d41dac9c3f42887d",
                          "typeString": "literal_string \"Incorrect B balance for maker 1\""
                        },
                        "value": "Incorrect B balance for maker 1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_235f0e0e0872a21da2d3c27ce7b1df09d914383c6c84fdd0d41dac9c3f42887d",
                          "typeString": "literal_string \"Incorrect B balance for maker 1\""
                        }
                      ],
                      "id": 63788,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "7756:8:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 63806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7756:156:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63807,
                  "nodeType": "ExpressionStatement",
                  "src": "7756:156:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 63813,
                                "name": "taker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 62707,
                                "src": "7988:5:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestTaker_$72989",
                                  "typeString": "contract TestTaker"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestTaker_$72989",
                                  "typeString": "contract TestTaker"
                                }
                              ],
                              "id": 63812,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7980:7:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 63811,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7980:7:91",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 63814,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7980:14:91",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 63809,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "7965:4:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          },
                          "id": 63810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 73347,
                          "src": "7965:14:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 63815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7965:30:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 63827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 63816,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62713,
                            "src": "8013:8:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Balances_$69175_storage",
                              "typeString": "struct MangroveTest.Balances storage ref"
                            }
                          },
                          "id": 63817,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "takerBalanceA",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 69161,
                          "src": "8013:22:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 63820,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 68676,
                                  "src": "8049:4:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$75210",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$75210",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 63819,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  69787, 69804, 69821, 69838, 69855
                                ],
                                "referencedDeclaration": 69855,
                                "src": "8047:1:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 63821,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8047:7:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 63823,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 68679,
                                  "src": "8058:5:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$75210",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$75210",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 63822,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  69787, 69804, 69821, 69838, 69855
                                ],
                                "referencedDeclaration": 69855,
                                "src": "8056:1:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 63824,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8056:8:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 63825,
                              "name": "takerWants",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63631,
                              "src": "8066:10:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 63818,
                            "name": "minusFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69270,
                            "src": "8038:8:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,address,uint256) view returns (uint256)"
                            }
                          },
                          "id": 63826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8038:39:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8013:64:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "696e636f72726563742074616b657220412062616c616e6365",
                        "id": 63828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8097:27:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5c569c41b5fe27249b124191fbf4638883199ec2dc4ccd37fcb4adb33cd9768a",
                          "typeString": "literal_string \"incorrect taker A balance\""
                        },
                        "value": "incorrect taker A balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5c569c41b5fe27249b124191fbf4638883199ec2dc4ccd37fcb4adb33cd9768a",
                          "typeString": "literal_string \"incorrect taker A balance\""
                        }
                      ],
                      "id": 63808,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "7949:8:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 63829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7949:181:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63830,
                  "nodeType": "ExpressionStatement",
                  "src": "7949:181:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 63832,
                        "name": "takerGot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63639,
                        "src": "8153:8:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 63835,
                                "name": "base",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68676,
                                "src": "8180:4:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$75210",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$75210",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 63834,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                69787, 69804, 69821, 69838, 69855
                              ],
                              "referencedDeclaration": 69855,
                              "src": "8178:1:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 63836,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8178:7:91",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 63838,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68679,
                                "src": "8189:5:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$75210",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$75210",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 63837,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                69787, 69804, 69821, 69838, 69855
                              ],
                              "referencedDeclaration": 69855,
                              "src": "8187:1:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 63839,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8187:8:91",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 63840,
                            "name": "takerWants",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63631,
                            "src": "8197:10:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 63833,
                          "name": "minusFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69270,
                          "src": "8169:8:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,address,uint256) view returns (uint256)"
                          }
                        },
                        "id": 63841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8169:39:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374206465636c617265642074616b6572476f74",
                        "id": 63842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8216:29:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0f68c2ba2186afef81ab40a004659c59e2396aa7cbcb23984026d7e64e999e2d",
                          "typeString": "literal_string \"Incorrect declared takerGot\""
                        },
                        "value": "Incorrect declared takerGot"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0f68c2ba2186afef81ab40a004659c59e2396aa7cbcb23984026d7e64e999e2d",
                          "typeString": "literal_string \"Incorrect declared takerGot\""
                        }
                      ],
                      "id": 63831,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "8137:8:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 63843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8137:114:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63844,
                  "nodeType": "ExpressionStatement",
                  "src": "8137:114:91"
                },
                {
                  "assignments": [63846],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63846,
                      "mutability": "mutable",
                      "name": "shouldGive",
                      "nameLocation": "8263:10:91",
                      "nodeType": "VariableDeclaration",
                      "scope": 63907,
                      "src": "8258:15:91",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 63845,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8258:4:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63863,
                  "initialValue": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 63861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 63859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 63847,
                                "name": "offers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 62726,
                                "src": "8277:6:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_enum$_Info_$69182_$_t_uint256_$_$",
                                  "typeString": "mapping(uint256 => mapping(enum MangroveTest.Info => uint256))"
                                }
                              },
                              "id": 63849,
                              "indexExpression": {
                                "hexValue": "33",
                                "id": 63848,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8284:1:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3_by_1",
                                  "typeString": "int_const 3"
                                },
                                "value": "3"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8277:9:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_Info_$69182_$_t_uint256_$",
                                "typeString": "mapping(enum MangroveTest.Info => uint256)"
                              }
                            },
                            "id": 63852,
                            "indexExpression": {
                              "expression": {
                                "id": 63850,
                                "name": "Info",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69182,
                                "src": "8287:4:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Info_$69182_$",
                                  "typeString": "type(enum MangroveTest.Info)"
                                }
                              },
                              "id": 63851,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "makerWants",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69176,
                              "src": "8287:15:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Info_$69182",
                                "typeString": "enum MangroveTest.Info"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8277:26:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 63853,
                                "name": "offers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 62726,
                                "src": "8312:6:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_enum$_Info_$69182_$_t_uint256_$_$",
                                  "typeString": "mapping(uint256 => mapping(enum MangroveTest.Info => uint256))"
                                }
                              },
                              "id": 63855,
                              "indexExpression": {
                                "hexValue": "32",
                                "id": 63854,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8319:1:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8312:9:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_Info_$69182_$_t_uint256_$",
                                "typeString": "mapping(enum MangroveTest.Info => uint256)"
                              }
                            },
                            "id": 63858,
                            "indexExpression": {
                              "expression": {
                                "id": 63856,
                                "name": "Info",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69182,
                                "src": "8322:4:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Info_$69182_$",
                                  "typeString": "type(enum MangroveTest.Info)"
                                }
                              },
                              "id": 63857,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "makerWants",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69176,
                              "src": "8322:15:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Info_$69182",
                                "typeString": "enum MangroveTest.Info"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8312:26:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8277:61:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 63860,
                          "name": "leftMkrWants",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63727,
                          "src": "8347:12:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8277:82:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 63862,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "8276:84:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8258:102:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 63869,
                                "name": "taker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 62707,
                                "src": "8406:5:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestTaker_$72989",
                                  "typeString": "contract TestTaker"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestTaker_$72989",
                                  "typeString": "contract TestTaker"
                                }
                              ],
                              "id": 63868,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8398:7:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 63867,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8398:7:91",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 63870,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8398:14:91",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 63865,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "8382:5:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          },
                          "id": 63866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 73347,
                          "src": "8382:15:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 63871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8382:31:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 63875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 63872,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62713,
                            "src": "8431:8:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Balances_$69175_storage",
                              "typeString": "struct MangroveTest.Balances storage ref"
                            }
                          },
                          "id": 63873,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "takerBalanceB",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 69163,
                          "src": "8431:22:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 63874,
                          "name": "shouldGive",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63846,
                          "src": "8456:10:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8431:35:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "696e636f72726563742074616b657220422062616c616e6365",
                        "id": 63876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8486:27:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e8a3f68e11186b36c1f4a509a0143a7d6d50db10bc8af0782b7d557f0652c87f",
                          "typeString": "literal_string \"incorrect taker B balance\""
                        },
                        "value": "incorrect taker B balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e8a3f68e11186b36c1f4a509a0143a7d6d50db10bc8af0782b7d557f0652c87f",
                          "typeString": "literal_string \"incorrect taker B balance\""
                        }
                      ],
                      "id": 63864,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "8366:8:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 63877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8366:153:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63878,
                  "nodeType": "ExpressionStatement",
                  "src": "8366:153:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 63880,
                        "name": "takerGave",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63641,
                        "src": "8535:9:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 63881,
                        "name": "shouldGive",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63846,
                        "src": "8546:10:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374206465636c617265642074616b657247617665",
                        "id": 63882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8558:30:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3d66e7962fa2429dd024e289e57f534fed1835305a3daf43e8498e67d41b9bc5",
                          "typeString": "literal_string \"Incorrect declared takerGave\""
                        },
                        "value": "Incorrect declared takerGave"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3d66e7962fa2429dd024e289e57f534fed1835305a3daf43e8498e67d41b9bc5",
                          "typeString": "literal_string \"Incorrect declared takerGave\""
                        }
                      ],
                      "id": 63879,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "8526:8:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 63883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8526:63:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63884,
                  "nodeType": "ExpressionStatement",
                  "src": "8526:63:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 63888,
                                "name": "mgv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68673,
                                "src": "8659:3:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                                  "typeString": "contract AbstractMangrove"
                                }
                              },
                              "id": 63889,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "governance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23092,
                              "src": "8659:14:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 63890,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8659:16:91",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 63886,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "8644:4:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          },
                          "id": 63887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 73347,
                          "src": "8644:14:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 63891,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8644:32:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 63903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 63892,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62713,
                            "src": "8693:8:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Balances_$69175_storage",
                              "typeString": "struct MangroveTest.Balances storage ref"
                            }
                          },
                          "id": 63893,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mgvBalanceFees",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 69159,
                          "src": "8693:23:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 63896,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 68676,
                                  "src": "8728:4:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$75210",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$75210",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 63895,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  69787, 69804, 69821, 69838, 69855
                                ],
                                "referencedDeclaration": 69855,
                                "src": "8726:1:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 63897,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8726:7:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 63899,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 68679,
                                  "src": "8737:5:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$75210",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$75210",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 63898,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  69787, 69804, 69821, 69838, 69855
                                ],
                                "referencedDeclaration": 69855,
                                "src": "8735:1:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 63900,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8735:8:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 63901,
                              "name": "takerWants",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63631,
                              "src": "8745:10:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 63894,
                            "name": "getFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69234,
                            "src": "8719:6:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,address,uint256) view returns (uint256)"
                            }
                          },
                          "id": 63902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8719:37:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8693:63:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "696e636f7272656374204d616e67726f76652062616c616e636573",
                        "id": 63904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8775:29:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a87256afa19bd14c9782e82b28c86949f236f4fc2b86e5ed43b5c54d891e90bd",
                          "typeString": "literal_string \"incorrect Mangrove balances\""
                        },
                        "value": "incorrect Mangrove balances"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a87256afa19bd14c9782e82b28c86949f236f4fc2b86e5ed43b5c54d891e90bd",
                          "typeString": "literal_string \"incorrect Mangrove balances\""
                        }
                      ],
                      "id": 63885,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "8628:8:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 63905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8628:182:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63906,
                  "nodeType": "ExpressionStatement",
                  "src": "8628:182:91"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mo",
            "nameLocation": "6584:2:91",
            "parameters": {
              "id": 63628,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6586:2:91"
            },
            "returnParameters": {
              "id": 63629,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6598:0:91"
            },
            "scope": 64151,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 63915,
            "nodeType": "StructDefinition",
            "src": "8819:79:91",
            "canonicalName": "ScenariiTest.Bag",
            "members": [
              {
                "constant": false,
                "id": 63910,
                "mutability": "mutable",
                "name": "orderAmount",
                "nameLocation": "8841:11:91",
                "nodeType": "VariableDeclaration",
                "scope": 63915,
                "src": "8836:16:91",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 63909,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "8836:4:91",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 63912,
                "mutability": "mutable",
                "name": "snipedId",
                "nameLocation": "8863:8:91",
                "nodeType": "VariableDeclaration",
                "scope": 63915,
                "src": "8858:13:91",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 63911,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "8858:4:91",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 63914,
                "mutability": "mutable",
                "name": "expectedFee",
                "nameLocation": "8882:11:91",
                "nodeType": "VariableDeclaration",
                "scope": 63915,
                "src": "8877:16:91",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 63913,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "8877:4:91",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Bag",
            "nameLocation": "8826:3:91",
            "scope": 64151,
            "visibility": "public"
          },
          {
            "id": 64150,
            "nodeType": "FunctionDefinition",
            "src": "8902:2184:91",
            "body": {
              "id": 64149,
              "nodeType": "Block",
              "src": "9020:2066:91",
              "statements": [
                {
                  "assignments": [63926],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63926,
                      "mutability": "mutable",
                      "name": "bag",
                      "nameLocation": "9037:3:91",
                      "nodeType": "VariableDeclaration",
                      "scope": 64149,
                      "src": "9026:14:91",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Bag_$63915_memory_ptr",
                        "typeString": "struct ScenariiTest.Bag"
                      },
                      "typeName": {
                        "id": 63925,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 63924,
                          "name": "Bag",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 63915,
                          "src": "9026:3:91"
                        },
                        "referencedDeclaration": 63915,
                        "src": "9026:3:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bag_$63915_storage_ptr",
                          "typeString": "struct ScenariiTest.Bag"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63927,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9026:14:91"
                },
                {
                  "expression": {
                    "id": 63932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 63928,
                        "name": "bag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63926,
                        "src": "9046:3:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bag_$63915_memory_ptr",
                          "typeString": "struct ScenariiTest.Bag memory"
                        }
                      },
                      "id": 63930,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "orderAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63910,
                      "src": "9046:15:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "302e33",
                      "id": 63931,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9064:9:91",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_300000000000000000_by_1",
                        "typeString": "int_const 300000000000000000"
                      },
                      "value": "0.3"
                    },
                    "src": "9046:27:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 63933,
                  "nodeType": "ExpressionStatement",
                  "src": "9046:27:91"
                },
                {
                  "expression": {
                    "id": 63938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 63934,
                        "name": "bag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63926,
                        "src": "9079:3:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bag_$63915_memory_ptr",
                          "typeString": "struct ScenariiTest.Bag memory"
                        }
                      },
                      "id": 63936,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "snipedId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63912,
                      "src": "9079:12:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "32",
                      "id": 63937,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9094:1:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "9079:16:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 63939,
                  "nodeType": "ExpressionStatement",
                  "src": "9079:16:91"
                },
                {
                  "expression": {
                    "id": 63951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 63940,
                      "name": "expectedFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63922,
                      "src": "9164:11:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 63943,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68676,
                              "src": "9187:4:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 63942,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              69787, 69804, 69821, 69838, 69855
                            ],
                            "referencedDeclaration": 69855,
                            "src": "9185:1:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 63944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9185:7:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 63946,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68679,
                              "src": "9196:5:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 63945,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              69787, 69804, 69821, 69838, 69855
                            ],
                            "referencedDeclaration": 69855,
                            "src": "9194:1:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 63947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9194:8:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "expression": {
                            "id": 63948,
                            "name": "bag",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63926,
                            "src": "9204:3:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Bag_$63915_memory_ptr",
                              "typeString": "struct ScenariiTest.Bag memory"
                            }
                          },
                          "id": 63949,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "orderAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 63910,
                          "src": "9204:15:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 63941,
                        "name": "getFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69234,
                        "src": "9178:6:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (address,address,uint256) view returns (uint256)"
                        }
                      },
                      "id": 63950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9178:42:91",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9164:56:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 63952,
                  "nodeType": "ExpressionStatement",
                  "src": "9164:56:91"
                },
                {
                  "assignments": [63955],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63955,
                      "mutability": "mutable",
                      "name": "maker",
                      "nameLocation": "9236:5:91",
                      "nodeType": "VariableDeclaration",
                      "scope": 64149,
                      "src": "9226:15:91",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestMaker_$72397",
                        "typeString": "contract TestMaker"
                      },
                      "typeName": {
                        "id": 63954,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 63953,
                          "name": "TestMaker",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 72397,
                          "src": "9226:9:91"
                        },
                        "referencedDeclaration": 72397,
                        "src": "9226:9:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63961,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 63958,
                          "name": "bag",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63926,
                          "src": "9260:3:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bag_$63915_memory_ptr",
                            "typeString": "struct ScenariiTest.Bag memory"
                          }
                        },
                        "id": 63959,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "snipedId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63912,
                        "src": "9260:12:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 63956,
                        "name": "makers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62710,
                        "src": "9244:6:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MakerDeployer_$71682",
                          "typeString": "contract MakerDeployer"
                        }
                      },
                      "id": 63957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getMaker",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71602,
                      "src": "9244:15:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_TestMaker_$72397_$",
                        "typeString": "function (uint256) view external returns (contract TestMaker)"
                      }
                    },
                    "id": 63960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9244:29:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestMaker_$72397",
                      "typeString": "contract TestMaker"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9226:47:91"
                },
                {
                  "id": 63983,
                  "nodeType": "Block",
                  "src": "9438:214:91",
                  "statements": [
                    {
                      "assignments": [63963],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 63963,
                          "mutability": "mutable",
                          "name": "takeSuccess",
                          "nameLocation": "9451:11:91",
                          "nodeType": "VariableDeclaration",
                          "scope": 63983,
                          "src": "9446:16:91",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "typeName": {
                            "id": 63962,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "9446:4:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 63964,
                      "nodeType": "VariableDeclarationStatement",
                      "src": "9446:16:91"
                    },
                    {
                      "expression": {
                        "id": 63976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "components": [
                            {
                              "id": 63965,
                              "name": "takeSuccess",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63963,
                              "src": "9471:11:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 63966,
                              "name": "takerGot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63918,
                              "src": "9484:8:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 63967,
                              "name": "takerGave",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63920,
                              "src": "9494:9:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            null,
                            null
                          ],
                          "id": 63968,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "TupleExpression",
                          "src": "9470:38:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$__$__$",
                            "typeString": "tuple(bool,uint256,uint256,,)"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 63971,
                                "name": "bag",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63926,
                                "src": "9539:3:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Bag_$63915_memory_ptr",
                                  "typeString": "struct ScenariiTest.Bag memory"
                                }
                              },
                              "id": 63972,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "snipedId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 63912,
                              "src": "9539:12:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 63973,
                                "name": "bag",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63926,
                                "src": "9561:3:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Bag_$63915_memory_ptr",
                                  "typeString": "struct ScenariiTest.Bag memory"
                                }
                              },
                              "id": 63974,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "orderAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 63910,
                              "src": "9561:15:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 63969,
                              "name": "taker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62707,
                              "src": "9511:5:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestTaker_$72989",
                                "typeString": "contract TestTaker"
                              }
                            },
                            "id": 63970,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "takeWithInfo",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 72843,
                            "src": "9511:18:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                              "typeString": "function (uint256,uint256) external returns (bool,uint256,uint256,uint256,uint256)"
                            }
                          },
                          "id": 63975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9511:73:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(bool,uint256,uint256,uint256,uint256)"
                          }
                        },
                        "src": "9470:114:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 63977,
                      "nodeType": "ExpressionStatement",
                      "src": "9470:114:91"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 63979,
                            "name": "takeSuccess",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63963,
                            "src": "9604:11:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "736e6970652073686f756c6420626520612073756363657373",
                            "id": 63980,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9617:27:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_26a19faa10754c4ac40a87b70305c2cde6cceb5214c5ebab61c3b0338263a61f",
                              "typeString": "literal_string \"snipe should be a success\""
                            },
                            "value": "snipe should be a success"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_26a19faa10754c4ac40a87b70305c2cde6cceb5214c5ebab61c3b0338263a61f",
                              "typeString": "literal_string \"snipe should be a success\""
                            }
                          ],
                          "id": 63978,
                          "name": "assertTrue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [269, 290],
                          "referencedDeclaration": 290,
                          "src": "9593:10:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory)"
                          }
                        },
                        "id": 63981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9593:52:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 63982,
                      "nodeType": "ExpressionStatement",
                      "src": "9593:52:91"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 63987,
                                "name": "mgv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68673,
                                "src": "9688:3:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                                  "typeString": "contract AbstractMangrove"
                                }
                              },
                              "id": 63988,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "governance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23092,
                              "src": "9688:14:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 63989,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9688:16:91",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 63985,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "9673:4:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          },
                          "id": 63986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 73347,
                          "src": "9673:14:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 63990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9673:32:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 63994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 63991,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62713,
                            "src": "9722:8:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Balances_$69175_storage",
                              "typeString": "struct MangroveTest.Balances storage ref"
                            }
                          },
                          "id": 63992,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mgvBalanceFees",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 69159,
                          "src": "9722:23:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 63993,
                          "name": "expectedFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63922,
                          "src": "9748:11:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9722:37:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "696e636f7272656374204d616e67726f766520412062616c616e6365",
                        "id": 63995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9779:30:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dafc0377726e37e0b8b2466d6d366024830e7928ca47acd67121d784d7df2966",
                          "typeString": "literal_string \"incorrect Mangrove A balance\""
                        },
                        "value": "incorrect Mangrove A balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dafc0377726e37e0b8b2466d6d366024830e7928ca47acd67121d784d7df2966",
                          "typeString": "literal_string \"incorrect Mangrove A balance\""
                        }
                      ],
                      "id": 63984,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "9657:8:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 63996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9657:158:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63997,
                  "nodeType": "ExpressionStatement",
                  "src": "9657:158:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 64003,
                                "name": "taker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 62707,
                                "src": "9860:5:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestTaker_$72989",
                                  "typeString": "contract TestTaker"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestTaker_$72989",
                                  "typeString": "contract TestTaker"
                                }
                              ],
                              "id": 64002,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9852:7:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 64001,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9852:7:91",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 64004,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9852:14:91",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 63999,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "9837:4:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          },
                          "id": 64000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 73347,
                          "src": "9837:14:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 64005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9837:30:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 64012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 64010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 64006,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62713,
                              "src": "9885:8:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Balances_$69175_storage",
                                "typeString": "struct MangroveTest.Balances storage ref"
                              }
                            },
                            "id": 64007,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "takerBalanceA",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 69161,
                            "src": "9885:22:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "expression": {
                              "id": 64008,
                              "name": "bag",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63926,
                              "src": "9910:3:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Bag_$63915_memory_ptr",
                                "typeString": "struct ScenariiTest.Bag memory"
                              }
                            },
                            "id": 64009,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "orderAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 63910,
                            "src": "9910:15:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9885:40:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 64011,
                          "name": "expectedFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63922,
                          "src": "9928:11:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9885:54:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "696e636f72726563742074616b657220412062616c616e6365",
                        "id": 64013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9959:27:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5c569c41b5fe27249b124191fbf4638883199ec2dc4ccd37fcb4adb33cd9768a",
                          "typeString": "literal_string \"incorrect taker A balance\""
                        },
                        "value": "incorrect taker A balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5c569c41b5fe27249b124191fbf4638883199ec2dc4ccd37fcb4adb33cd9768a",
                          "typeString": "literal_string \"incorrect taker A balance\""
                        }
                      ],
                      "id": 63998,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "9821:8:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 64014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9821:171:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64015,
                  "nodeType": "ExpressionStatement",
                  "src": "9821:171:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64017,
                        "name": "takerGot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63918,
                        "src": "10014:8:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 64021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 64018,
                            "name": "bag",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63926,
                            "src": "10030:3:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Bag_$63915_memory_ptr",
                              "typeString": "struct ScenariiTest.Bag memory"
                            }
                          },
                          "id": 64019,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "orderAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 63910,
                          "src": "10030:15:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 64020,
                          "name": "expectedFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63922,
                          "src": "10048:11:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10030:29:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f72726563742074616b6572476f74",
                        "id": 64022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10079:20:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a84bb6540eccb0b2fe8d392b105ee483bcaf767a459aa82ab8b4132ac7ae0ac",
                          "typeString": "literal_string \"Incorrect takerGot\""
                        },
                        "value": "Incorrect takerGot"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a84bb6540eccb0b2fe8d392b105ee483bcaf767a459aa82ab8b4132ac7ae0ac",
                          "typeString": "literal_string \"Incorrect takerGot\""
                        }
                      ],
                      "id": 64016,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "9998:8:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 64023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9998:107:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64024,
                  "nodeType": "ExpressionStatement",
                  "src": "9998:107:91"
                },
                {
                  "id": 64068,
                  "nodeType": "Block",
                  "src": "10111:355:91",
                  "statements": [
                    {
                      "assignments": [64026],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 64026,
                          "mutability": "mutable",
                          "name": "shouldGive",
                          "nameLocation": "10124:10:91",
                          "nodeType": "VariableDeclaration",
                          "scope": 64068,
                          "src": "10119:15:91",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 64025,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "10119:4:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 64046,
                      "initialValue": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 64045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 64036,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 64027,
                                  "name": "bag",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 63926,
                                  "src": "10138:3:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Bag_$63915_memory_ptr",
                                    "typeString": "struct ScenariiTest.Bag memory"
                                  }
                                },
                                "id": 64028,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "orderAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 63910,
                                "src": "10138:15:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 64029,
                                    "name": "offers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 62726,
                                    "src": "10164:6:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_enum$_Info_$69182_$_t_uint256_$_$",
                                      "typeString": "mapping(uint256 => mapping(enum MangroveTest.Info => uint256))"
                                    }
                                  },
                                  "id": 64032,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 64030,
                                      "name": "bag",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 63926,
                                      "src": "10171:3:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Bag_$63915_memory_ptr",
                                        "typeString": "struct ScenariiTest.Bag memory"
                                      }
                                    },
                                    "id": 64031,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "snipedId",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 63912,
                                    "src": "10171:12:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10164:20:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_enum$_Info_$69182_$_t_uint256_$",
                                    "typeString": "mapping(enum MangroveTest.Info => uint256)"
                                  }
                                },
                                "id": 64035,
                                "indexExpression": {
                                  "expression": {
                                    "id": 64033,
                                    "name": "Info",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 69182,
                                    "src": "10185:4:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_Info_$69182_$",
                                      "typeString": "type(enum MangroveTest.Info)"
                                    }
                                  },
                                  "id": 64034,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "makerWants",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 69176,
                                  "src": "10185:15:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Info_$69182",
                                    "typeString": "enum MangroveTest.Info"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10164:37:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10138:63:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 64037,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "10137:65:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 64038,
                              "name": "offers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62726,
                              "src": "10213:6:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_enum$_Info_$69182_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(enum MangroveTest.Info => uint256))"
                              }
                            },
                            "id": 64041,
                            "indexExpression": {
                              "expression": {
                                "id": 64039,
                                "name": "bag",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63926,
                                "src": "10220:3:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Bag_$63915_memory_ptr",
                                  "typeString": "struct ScenariiTest.Bag memory"
                                }
                              },
                              "id": 64040,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "snipedId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 63912,
                              "src": "10220:12:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10213:20:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_enum$_Info_$69182_$_t_uint256_$",
                              "typeString": "mapping(enum MangroveTest.Info => uint256)"
                            }
                          },
                          "id": 64044,
                          "indexExpression": {
                            "expression": {
                              "id": 64042,
                              "name": "Info",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69182,
                              "src": "10234:4:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Info_$69182_$",
                                "typeString": "type(enum MangroveTest.Info)"
                              }
                            },
                            "id": 64043,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "makerGives",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 69177,
                            "src": "10234:15:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Info_$69182",
                              "typeString": "enum MangroveTest.Info"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10213:37:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10137:113:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "10119:131:91"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 64052,
                                    "name": "taker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 62707,
                                    "src": "10300:5:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestTaker_$72989",
                                      "typeString": "contract TestTaker"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestTaker_$72989",
                                      "typeString": "contract TestTaker"
                                    }
                                  ],
                                  "id": 64051,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10292:7:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 64050,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10292:7:91",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 64053,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10292:14:91",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 64048,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68679,
                                "src": "10276:5:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$75210",
                                  "typeString": "contract TestToken"
                                }
                              },
                              "id": 64049,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 73347,
                              "src": "10276:15:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 64054,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10276:31:91",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 64058,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 64055,
                                "name": "balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 62713,
                                "src": "10317:8:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Balances_$69175_storage",
                                  "typeString": "struct MangroveTest.Balances storage ref"
                                }
                              },
                              "id": 64056,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "takerBalanceB",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69163,
                              "src": "10317:22:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 64057,
                              "name": "shouldGive",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64026,
                              "src": "10342:10:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "10317:35:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "696e636f72726563742074616b657220422062616c616e6365",
                            "id": 64059,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10362:27:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_e8a3f68e11186b36c1f4a509a0143a7d6d50db10bc8af0782b7d557f0652c87f",
                              "typeString": "literal_string \"incorrect taker B balance\""
                            },
                            "value": "incorrect taker B balance"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_e8a3f68e11186b36c1f4a509a0143a7d6d50db10bc8af0782b7d557f0652c87f",
                              "typeString": "literal_string \"incorrect taker B balance\""
                            }
                          ],
                          "id": 64047,
                          "name": "assertEq",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996,
                            3033, 3070, 320, 345, 375, 400, 459, 484, 514, 539,
                            1639, 1674
                          ],
                          "referencedDeclaration": 539,
                          "src": "10258:8:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (uint256,uint256,string memory)"
                          }
                        },
                        "id": 64060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10258:139:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 64061,
                      "nodeType": "ExpressionStatement",
                      "src": "10258:139:91"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 64063,
                            "name": "takerGave",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63920,
                            "src": "10414:9:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 64064,
                            "name": "shouldGive",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64026,
                            "src": "10425:10:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "496e636f72726563742074616b657247617665",
                            "id": 64065,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10437:21:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_fad10ff5558a4deffa43dc56612017ff9d61af162ea026f978381f7618325464",
                              "typeString": "literal_string \"Incorrect takerGave\""
                            },
                            "value": "Incorrect takerGave"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_fad10ff5558a4deffa43dc56612017ff9d61af162ea026f978381f7618325464",
                              "typeString": "literal_string \"Incorrect takerGave\""
                            }
                          ],
                          "id": 64062,
                          "name": "assertEq",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996,
                            3033, 3070, 320, 345, 375, 400, 459, 484, 514, 539,
                            1639, 1674
                          ],
                          "referencedDeclaration": 539,
                          "src": "10405:8:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (uint256,uint256,string memory)"
                          }
                        },
                        "id": 64066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10405:54:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 64067,
                      "nodeType": "ExpressionStatement",
                      "src": "10405:54:91"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 64074,
                                "name": "maker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63955,
                                "src": "10510:5:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestMaker_$72397",
                                  "typeString": "contract TestMaker"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestMaker_$72397",
                                  "typeString": "contract TestMaker"
                                }
                              ],
                              "id": 64073,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10502:7:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 64072,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10502:7:91",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 64075,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10502:14:91",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 64070,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "10487:4:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          },
                          "id": 64071,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 73347,
                          "src": "10487:14:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 64076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10487:30:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 64084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 64077,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62713,
                              "src": "10525:8:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Balances_$69175_storage",
                                "typeString": "struct MangroveTest.Balances storage ref"
                              }
                            },
                            "id": 64078,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "makersBalanceA",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 69168,
                            "src": "10525:23:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 64081,
                          "indexExpression": {
                            "expression": {
                              "id": 64079,
                              "name": "bag",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63926,
                              "src": "10549:3:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Bag_$63915_memory_ptr",
                                "typeString": "struct ScenariiTest.Bag memory"
                              }
                            },
                            "id": 64080,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "snipedId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 63912,
                            "src": "10549:12:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10525:37:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "expression": {
                            "id": 64082,
                            "name": "bag",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63926,
                            "src": "10565:3:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Bag_$63915_memory_ptr",
                              "typeString": "struct ScenariiTest.Bag memory"
                            }
                          },
                          "id": 64083,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "orderAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 63910,
                          "src": "10565:15:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10525:55:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "696e636f7272656374206d616b657220412062616c616e6365",
                        "id": 64085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10588:27:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5d3e20773acb2e3934c6c9e639b5489a7aa73d773b10aa4083dc25cac66b6cf4",
                          "typeString": "literal_string \"incorrect maker A balance\""
                        },
                        "value": "incorrect maker A balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5d3e20773acb2e3934c6c9e639b5489a7aa73d773b10aa4083dc25cac66b6cf4",
                          "typeString": "literal_string \"incorrect maker A balance\""
                        }
                      ],
                      "id": 64069,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "10471:8:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 64086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10471:150:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64087,
                  "nodeType": "ExpressionStatement",
                  "src": "10471:150:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 64093,
                                "name": "maker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63955,
                                "src": "10667:5:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestMaker_$72397",
                                  "typeString": "contract TestMaker"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestMaker_$72397",
                                  "typeString": "contract TestMaker"
                                }
                              ],
                              "id": 64092,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10659:7:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 64091,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10659:7:91",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 64094,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10659:14:91",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 64089,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "10643:5:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          },
                          "id": 64090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 73347,
                          "src": "10643:15:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 64095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10643:31:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 64120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 64096,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62713,
                              "src": "10682:8:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Balances_$69175_storage",
                                "typeString": "struct MangroveTest.Balances storage ref"
                              }
                            },
                            "id": 64097,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "makersBalanceB",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 69171,
                            "src": "10682:23:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 64100,
                          "indexExpression": {
                            "expression": {
                              "id": 64098,
                              "name": "bag",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63926,
                              "src": "10706:3:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Bag_$63915_memory_ptr",
                                "typeString": "struct ScenariiTest.Bag memory"
                              }
                            },
                            "id": 64099,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "snipedId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 63912,
                            "src": "10706:12:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10682:37:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 64119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 64110,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 64101,
                                    "name": "bag",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 63926,
                                    "src": "10731:3:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Bag_$63915_memory_ptr",
                                      "typeString": "struct ScenariiTest.Bag memory"
                                    }
                                  },
                                  "id": 64102,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "orderAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 63910,
                                  "src": "10731:15:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 64103,
                                      "name": "offers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 62726,
                                      "src": "10749:6:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_enum$_Info_$69182_$_t_uint256_$_$",
                                        "typeString": "mapping(uint256 => mapping(enum MangroveTest.Info => uint256))"
                                      }
                                    },
                                    "id": 64106,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 64104,
                                        "name": "bag",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 63926,
                                        "src": "10756:3:91",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Bag_$63915_memory_ptr",
                                          "typeString": "struct ScenariiTest.Bag memory"
                                        }
                                      },
                                      "id": 64105,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "snipedId",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 63912,
                                      "src": "10756:12:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10749:20:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_enum$_Info_$69182_$_t_uint256_$",
                                      "typeString": "mapping(enum MangroveTest.Info => uint256)"
                                    }
                                  },
                                  "id": 64109,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 64107,
                                      "name": "Info",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 69182,
                                      "src": "10770:4:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_Info_$69182_$",
                                        "typeString": "type(enum MangroveTest.Info)"
                                      }
                                    },
                                    "id": 64108,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "makerWants",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 69176,
                                    "src": "10770:15:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_Info_$69182",
                                      "typeString": "enum MangroveTest.Info"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10749:37:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10731:55:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 64111,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "10730:57:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 64112,
                                "name": "offers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 62726,
                                "src": "10798:6:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_enum$_Info_$69182_$_t_uint256_$_$",
                                  "typeString": "mapping(uint256 => mapping(enum MangroveTest.Info => uint256))"
                                }
                              },
                              "id": 64115,
                              "indexExpression": {
                                "expression": {
                                  "id": 64113,
                                  "name": "bag",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 63926,
                                  "src": "10805:3:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Bag_$63915_memory_ptr",
                                    "typeString": "struct ScenariiTest.Bag memory"
                                  }
                                },
                                "id": 64114,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "snipedId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 63912,
                                "src": "10805:12:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10798:20:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_Info_$69182_$_t_uint256_$",
                                "typeString": "mapping(enum MangroveTest.Info => uint256)"
                              }
                            },
                            "id": 64118,
                            "indexExpression": {
                              "expression": {
                                "id": 64116,
                                "name": "Info",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69182,
                                "src": "10819:4:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Info_$69182_$",
                                  "typeString": "type(enum MangroveTest.Info)"
                                }
                              },
                              "id": 64117,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "makerGives",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69177,
                              "src": "10819:15:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Info_$69182",
                                "typeString": "enum MangroveTest.Info"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10798:37:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10730:105:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10682:153:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "696e636f7272656374206d616b657220422062616c616e6365",
                        "id": 64121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10843:27:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_448e49f69b2afa5125645b307c804e9e48e55306e205e9dda60af2a3aa11abb5",
                          "typeString": "literal_string \"incorrect maker B balance\""
                        },
                        "value": "incorrect maker B balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_448e49f69b2afa5125645b307c804e9e48e55306e205e9dda60af2a3aa11abb5",
                          "typeString": "literal_string \"incorrect maker B balance\""
                        }
                      ],
                      "id": 64088,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "10627:8:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 64122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10627:249:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64123,
                  "nodeType": "ExpressionStatement",
                  "src": "10627:249:91"
                },
                {
                  "assignments": [64128, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64128,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "10934:3:91",
                      "nodeType": "VariableDeclaration",
                      "scope": 64149,
                      "src": "10913:24:91",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OfferStruct_$32698_memory_ptr",
                        "typeString": "struct OfferStruct"
                      },
                      "typeName": {
                        "id": 64127,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 64126,
                          "name": "P.OfferStruct",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 32698,
                          "src": "10913:13:91"
                        },
                        "referencedDeclaration": 32698,
                        "src": "10913:13:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferStruct_$32698_storage_ptr",
                          "typeString": "struct OfferStruct"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 64140,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64132,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "10966:4:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 64131,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "10964:1:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 64133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10964:7:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 64135,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "10981:5:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 64134,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "10979:1:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 64136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10979:8:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 64137,
                          "name": "bag",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63926,
                          "src": "10995:3:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bag_$63915_memory_ptr",
                            "typeString": "struct ScenariiTest.Bag memory"
                          }
                        },
                        "id": 64138,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "snipedId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63912,
                        "src": "10995:12:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 64129,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "10943:3:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 64130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "offerInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23675,
                      "src": "10943:13:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_struct$_OfferStruct_$32698_memory_ptr_$_t_struct$_OfferDetailStruct_$32707_memory_ptr_$",
                        "typeString": "function (address,address,uint256) view external returns (struct OfferStruct memory,struct OfferDetailStruct memory)"
                      }
                    },
                    "id": 64139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10943:70:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_OfferStruct_$32698_memory_ptr_$_t_struct$_OfferDetailStruct_$32707_memory_ptr_$",
                      "typeString": "tuple(struct OfferStruct memory,struct OfferDetailStruct memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10912:101:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 64145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 64142,
                            "name": "ofr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64128,
                            "src": "11030:3:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OfferStruct_$32698_memory_ptr",
                              "typeString": "struct OfferStruct memory"
                            }
                          },
                          "id": 64143,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "gives",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32697,
                          "src": "11030:9:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 64144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11043:1:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11030:14:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f666665722073686f756c64206e6f742068617665206120726573696475616c",
                        "id": 64146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11046:34:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0d4e5b3d86a23138802c2c400062e0d8844afbba98545b2125e3931e80f72af8",
                          "typeString": "literal_string \"Offer should not have a residual\""
                        },
                        "value": "Offer should not have a residual"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0d4e5b3d86a23138802c2c400062e0d8844afbba98545b2125e3931e80f72af8",
                          "typeString": "literal_string \"Offer should not have a residual\""
                        }
                      ],
                      "id": 64141,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "11019:10:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 64147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11019:62:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64148,
                  "nodeType": "ExpressionStatement",
                  "src": "11019:62:91"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "snipe",
            "nameLocation": "8911:5:91",
            "parameters": {
              "id": 63916,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8916:2:91"
            },
            "returnParameters": {
              "id": 63923,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63918,
                  "mutability": "mutable",
                  "name": "takerGot",
                  "nameLocation": "8957:8:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 64150,
                  "src": "8952:13:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63917,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8952:4:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63920,
                  "mutability": "mutable",
                  "name": "takerGave",
                  "nameLocation": "8978:9:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 64150,
                  "src": "8973:14:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63919,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8973:4:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63922,
                  "mutability": "mutable",
                  "name": "expectedFee",
                  "nameLocation": "9000:11:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 64150,
                  "src": "8995:16:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63921,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8995:4:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8944:73:91"
            },
            "scope": 64151,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 62703,
              "name": "MangroveTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 69891,
              "src": "130:12:91"
            },
            "id": 62704,
            "nodeType": "InheritanceSpecifier",
            "src": "130:12:91"
          }
        ],
        "canonicalName": "ScenariiTest",
        "contractDependencies": [22954, 23080, 71682, 72397, 72989, 75210],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          64151, 69891, 24088, 70380, 71483, 3455, 2022, 1786
        ],
        "name": "ScenariiTest",
        "nameLocation": "114:12:91",
        "scope": 64303,
        "usedErrors": []
      },
      {
        "id": 64302,
        "nodeType": "ContractDefinition",
        "src": "11090:971:91",
        "nodes": [
          {
            "id": 64156,
            "nodeType": "VariableDeclaration",
            "src": "11135:13:91",
            "constant": false,
            "mutability": "mutable",
            "name": "tkr",
            "nameLocation": "11145:3:91",
            "scope": 64302,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestTaker_$72989",
              "typeString": "contract TestTaker"
            },
            "typeName": {
              "id": 64155,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 64154,
                "name": "TestTaker",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 72989,
                "src": "11135:9:91"
              },
              "referencedDeclaration": 72989,
              "src": "11135:9:91",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestTaker_$72989",
                "typeString": "contract TestTaker"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 64159,
            "nodeType": "VariableDeclaration",
            "src": "11152:22:91",
            "constant": false,
            "mutability": "mutable",
            "name": "evil",
            "nameLocation": "11170:4:91",
            "scope": 64302,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestMoriartyMaker_$72646",
              "typeString": "contract TestMoriartyMaker"
            },
            "typeName": {
              "id": 64158,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 64157,
                "name": "TestMoriartyMaker",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 72646,
                "src": "11152:17:91"
              },
              "referencedDeclaration": 72646,
              "src": "11152:17:91",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestMoriartyMaker_$72646",
                "typeString": "contract TestMoriartyMaker"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 64271,
            "nodeType": "FunctionDefinition",
            "src": "11214:585:91",
            "body": {
              "id": 64270,
              "nodeType": "Block",
              "src": "11247:552:91",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 64163,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "11253:5:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_DeepCollectTest_$64302_$",
                          "typeString": "type(contract super DeepCollectTest)"
                        }
                      },
                      "id": 64165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setUp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68801,
                      "src": "11253:11:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 64166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11253:13:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64167,
                  "nodeType": "ExpressionStatement",
                  "src": "11253:13:91"
                },
                {
                  "expression": {
                    "id": 64178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 64168,
                      "name": "tkr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64156,
                      "src": "11272:3:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestTaker_$72989",
                        "typeString": "contract TestTaker"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 64171,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68676,
                              "src": "11291:4:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 64170,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              69787, 69804, 69821, 69838, 69855
                            ],
                            "referencedDeclaration": 69855,
                            "src": "11289:1:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 64172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11289:7:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 64174,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68679,
                              "src": "11300:5:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 64173,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              69787, 69804, 69821, 69838, 69855
                            ],
                            "referencedDeclaration": 69855,
                            "src": "11298:1:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 64175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11298:8:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "74616b6572",
                          "id": 64176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11308:7:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_dabc31545dc394527fa3167263fd61e7c7bb9eb939a344961942003782d7e47d",
                            "typeString": "literal_string \"taker\""
                          },
                          "value": "taker"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_dabc31545dc394527fa3167263fd61e7c7bb9eb939a344961942003782d7e47d",
                            "typeString": "literal_string \"taker\""
                          }
                        ],
                        "id": 64169,
                        "name": "setupTaker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69719,
                        "src": "11278:10:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$_t_contract$_TestTaker_$72989_$",
                          "typeString": "function (address,address,string memory) returns (contract TestTaker)"
                        }
                      },
                      "id": 64177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11278:38:91",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestTaker_$72989",
                        "typeString": "contract TestTaker"
                      }
                    },
                    "src": "11272:44:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestTaker_$72989",
                      "typeString": "contract TestTaker"
                    }
                  },
                  "id": 64179,
                  "nodeType": "ExpressionStatement",
                  "src": "11272:44:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64182,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "11330:5:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 64181,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "11328:1:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 64183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11328:8:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 64186,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64156,
                            "src": "11346:3:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$72989",
                              "typeString": "contract TestTaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestTaker_$72989",
                              "typeString": "contract TestTaker"
                            }
                          ],
                          "id": 64185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11338:7:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64184,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11338:7:91",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11338:12:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 64188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11352:7:91",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        }
                      ],
                      "id": 64180,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [2399, 2416, 2519],
                      "referencedDeclaration": 2416,
                      "src": "11323:4:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 64189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11323:37:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64190,
                  "nodeType": "ExpressionStatement",
                  "src": "11323:37:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64194,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "11381:5:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "3230",
                        "id": 64195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11388:8:91",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000"
                        },
                        "value": "20"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_rational_20000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 64191,
                        "name": "tkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64156,
                        "src": "11366:3:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$72989",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 64193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approveMgv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72721,
                      "src": "11366:14:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$24224_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,uint256) external"
                      }
                    },
                    "id": 64196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11366:31:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64197,
                  "nodeType": "ExpressionStatement",
                  "src": "11366:31:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64201,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68676,
                        "src": "11418:4:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "3230",
                        "id": 64202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11424:8:91",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000"
                        },
                        "value": "20"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_rational_20000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 64198,
                        "name": "tkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64156,
                        "src": "11403:3:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$72989",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 64200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approveMgv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72721,
                      "src": "11403:14:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$24224_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,uint256) external"
                      }
                    },
                    "id": 64203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11403:30:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64204,
                  "nodeType": "ExpressionStatement",
                  "src": "11403:30:91"
                },
                {
                  "expression": {
                    "id": 64217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 64205,
                      "name": "evil",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64159,
                      "src": "11440:4:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestMoriartyMaker_$72646",
                        "typeString": "contract TestMoriartyMaker"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 64209,
                          "name": "mgv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68673,
                          "src": "11469:3:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                            "typeString": "contract AbstractMangrove"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 64211,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68676,
                              "src": "11476:4:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 64210,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              69787, 69804, 69821, 69838, 69855
                            ],
                            "referencedDeclaration": 69855,
                            "src": "11474:1:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 64212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11474:7:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 64214,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68679,
                              "src": "11485:5:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 64213,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              69787, 69804, 69821, 69838, 69855
                            ],
                            "referencedDeclaration": 69855,
                            "src": "11483:1:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 64215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11483:8:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                            "typeString": "contract AbstractMangrove"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 64208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "11447:21:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_AbstractMangrove_$22211_$_t_address_$_t_address_$returns$_t_contract$_TestMoriartyMaker_$72646_$",
                          "typeString": "function (contract AbstractMangrove,address,address) returns (contract TestMoriartyMaker)"
                        },
                        "typeName": {
                          "id": 64207,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 64206,
                            "name": "TestMoriartyMaker",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 72646,
                            "src": "11451:17:91"
                          },
                          "referencedDeclaration": 72646,
                          "src": "11451:17:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestMoriartyMaker_$72646",
                            "typeString": "contract TestMoriartyMaker"
                          }
                        }
                      },
                      "id": 64216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11447:45:91",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestMoriartyMaker_$72646",
                        "typeString": "contract TestMoriartyMaker"
                      }
                    },
                    "src": "11440:52:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestMoriartyMaker_$72646",
                      "typeString": "contract TestMoriartyMaker"
                    }
                  },
                  "id": 64218,
                  "nodeType": "ExpressionStatement",
                  "src": "11440:52:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64224,
                            "name": "evil",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64159,
                            "src": "11515:4:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMoriartyMaker_$72646",
                              "typeString": "contract TestMoriartyMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMoriartyMaker_$72646",
                              "typeString": "contract TestMoriartyMaker"
                            }
                          ],
                          "id": 64223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11507:7:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64222,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11507:7:91",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11507:13:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4d6f726961727479",
                        "id": 64226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11522:10:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f6b6cae4db7d7f32a78b3675b2abbe0a48a5dbc6edd8de1fb107ab496ccc9330",
                          "typeString": "literal_string \"Moriarty\""
                        },
                        "value": "Moriarty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f6b6cae4db7d7f32a78b3675b2abbe0a48a5dbc6edd8de1fb107ab496ccc9330",
                          "typeString": "literal_string \"Moriarty\""
                        }
                      ],
                      "expression": {
                        "id": 64219,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "11498:2:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 64221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5156,
                      "src": "11498:8:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 64227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11498:35:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64228,
                  "nodeType": "ExpressionStatement",
                  "src": "11498:35:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64232,
                            "name": "evil",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64159,
                            "src": "11552:4:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMoriartyMaker_$72646",
                              "typeString": "contract TestMoriartyMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMoriartyMaker_$72646",
                              "typeString": "contract TestMoriartyMaker"
                            }
                          ],
                          "id": 64231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11544:7:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64230,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11544:7:91",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11544:13:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3230",
                        "id": 64234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11559:8:91",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000"
                        },
                        "value": "20"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_20000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000"
                        }
                      ],
                      "id": 64229,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [2399, 2416, 2519],
                      "referencedDeclaration": 2399,
                      "src": "11539:4:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 64235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11539:29:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64236,
                  "nodeType": "ExpressionStatement",
                  "src": "11539:29:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3130",
                        "id": 64240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11592:8:91",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 64237,
                        "name": "evil",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64159,
                        "src": "11574:4:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMoriartyMaker_$72646",
                          "typeString": "contract TestMoriartyMaker"
                        }
                      },
                      "id": 64239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "provisionMgv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72622,
                      "src": "11574:17:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 64241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11574:27:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64242,
                  "nodeType": "ExpressionStatement",
                  "src": "11574:27:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64245,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "11614:4:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 64244,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "11612:1:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 64246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11612:7:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 64249,
                            "name": "evil",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64159,
                            "src": "11629:4:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMoriartyMaker_$72646",
                              "typeString": "contract TestMoriartyMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMoriartyMaker_$72646",
                              "typeString": "contract TestMoriartyMaker"
                            }
                          ],
                          "id": 64248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11621:7:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64247,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11621:7:91",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11621:13:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 64251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11636:7:91",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        }
                      ],
                      "id": 64243,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [2399, 2416, 2519],
                      "referencedDeclaration": 2416,
                      "src": "11607:4:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 64252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11607:37:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64253,
                  "nodeType": "ExpressionStatement",
                  "src": "11607:37:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64257,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68676,
                        "src": "11666:4:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 64258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11672:7:91",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 64254,
                        "name": "evil",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64159,
                        "src": "11650:4:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMoriartyMaker_$72646",
                          "typeString": "contract TestMoriartyMaker"
                        }
                      },
                      "id": 64256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approveMgv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72641,
                      "src": "11650:15:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$24224_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,uint256) external"
                      }
                    },
                    "id": 64259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11650:30:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64260,
                  "nodeType": "ExpressionStatement",
                  "src": "11650:30:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 64264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11716:7:91",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "302e35",
                        "id": 64265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11738:9:91",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "value": "0.5"
                      },
                      {
                        "hexValue": "313030303030",
                        "id": 64266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11763:6:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100000"
                      },
                      {
                        "hexValue": "30",
                        "id": 64267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11786:1:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 64261,
                        "name": "evil",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64159,
                        "src": "11687:4:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMoriartyMaker_$72646",
                          "typeString": "contract TestMoriartyMaker"
                        }
                      },
                      "id": 64263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72600,
                      "src": "11687:13:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external"
                      }
                    },
                    "id": 64268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": ["wants", "gives", "gasreq", "pivotId"],
                    "nodeType": "FunctionCall",
                    "src": "11687:107:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64269,
                  "nodeType": "ExpressionStatement",
                  "src": "11687:107:91"
                }
              ]
            },
            "baseFunctions": [68801],
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "11223:5:91",
            "overrides": {
              "id": 64161,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11238:8:91"
            },
            "parameters": {
              "id": 64160,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11228:2:91"
            },
            "returnParameters": {
              "id": 64162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11247:0:91"
            },
            "scope": 64302,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 64278,
            "nodeType": "FunctionDefinition",
            "src": "11803:71:91",
            "body": {
              "id": 64277,
              "nodeType": "Block",
              "src": "11847:27:91",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 64274,
                      "name": "moWithFailures",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64301,
                      "src": "11853:14:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 64275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11853:16:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64276,
                  "nodeType": "ExpressionStatement",
                  "src": "11853:16:91"
                }
              ]
            },
            "functionSelector": "a6b23bdb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_market_with_failures",
            "nameLocation": "11812:25:91",
            "parameters": {
              "id": 64272,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11837:2:91"
            },
            "returnParameters": {
              "id": 64273,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11847:0:91"
            },
            "scope": 64302,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 64301,
            "nodeType": "FunctionDefinition",
            "src": "11878:181:91",
            "body": {
              "id": 64300,
              "nodeType": "Block",
              "src": "11913:146:91",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3130",
                        "id": 64284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11951:8:91",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "3330",
                        "id": 64285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11968:8:91",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30000000000000000000_by_1",
                          "typeString": "int_const 30000000000000000000"
                        },
                        "value": "30"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_30000000000000000000_by_1",
                          "typeString": "int_const 30000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 64281,
                        "name": "tkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64156,
                        "src": "11919:3:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$72989",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 64283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrderWithFail",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72988,
                      "src": "11919:23:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) external returns (uint256,uint256)"
                      }
                    },
                    "id": 64286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": ["wants", "gives"],
                    "nodeType": "FunctionCall",
                    "src": "11919:59:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "id": 64287,
                  "nodeType": "ExpressionStatement",
                  "src": "11919:59:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 64291,
                                "name": "base",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68676,
                                "src": "12007:4:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$75210",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$75210",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 64290,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                69787, 69804, 69821, 69838, 69855
                              ],
                              "referencedDeclaration": 69855,
                              "src": "12005:1:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 64292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12005:7:91",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 64294,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68679,
                                "src": "12016:5:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$75210",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$75210",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 64293,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                69787, 69804, 69821, 69838, 69855
                              ],
                              "referencedDeclaration": 69855,
                              "src": "12014:1:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 64295,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12014:8:91",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 64289,
                          "name": "isEmptyOB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69200,
                          "src": "11995:9:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view returns (bool)"
                          }
                        },
                        "id": 64296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11995:28:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6666657220626f6f6b2073686f756c6420626520656d707479",
                        "id": 64297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12025:28:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_37e3890716062db0abece1876ab45a8e6e15f11b0b70d4e2b7cabed69bfac90e",
                          "typeString": "literal_string \"Offer book should be empty\""
                        },
                        "value": "Offer book should be empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_37e3890716062db0abece1876ab45a8e6e15f11b0b70d4e2b7cabed69bfac90e",
                          "typeString": "literal_string \"Offer book should be empty\""
                        }
                      ],
                      "id": 64288,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "11984:10:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 64298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11984:70:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64299,
                  "nodeType": "ExpressionStatement",
                  "src": "11984:70:91"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "moWithFailures",
            "nameLocation": "11887:14:91",
            "parameters": {
              "id": 64279,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11901:2:91"
            },
            "returnParameters": {
              "id": 64280,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11913:0:91"
            },
            "scope": 64302,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 64152,
              "name": "MangroveTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 69891,
              "src": "11118:12:91"
            },
            "id": 64153,
            "nodeType": "InheritanceSpecifier",
            "src": "11118:12:91"
          }
        ],
        "canonicalName": "DeepCollectTest",
        "contractDependencies": [
          22954, 23080, 71682, 72397, 72646, 72989, 75210
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          64302, 69891, 24088, 70380, 71483, 3455, 2022, 1786
        ],
        "name": "DeepCollectTest",
        "nameLocation": "11099:15:91",
        "scope": 64303,
        "usedErrors": []
      }
    ],
    "license": "AGPL-3.0"
  },
  "id": 91
}
