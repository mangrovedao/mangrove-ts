{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Credit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Debit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Kill",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "NewMgv",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "base",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "quote",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "offerIds",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "wants",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "gives",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "makerAddr",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "gasreqs",
          "type": "uint256[]"
        }
      ],
      "name": "OBState",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerWants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGives",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "mgvData",
          "type": "bytes32"
        }
      ],
      "name": "OfferFail",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "OfferRetract",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerWants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGives",
          "type": "uint256"
        }
      ],
      "name": "OfferSuccess",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gives",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasprice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasreq",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "prev",
          "type": "uint256"
        }
      ],
      "name": "OfferWrite",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGot",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGave",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "penalty",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feePaid",
          "type": "uint256"
        }
      ],
      "name": "OrderComplete",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "OrderStart",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "posthookData",
          "type": "bytes32"
        }
      ],
      "name": "PosthookFail",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "SetActive",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetDensity",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "offer_gasbase",
          "type": "uint256"
        }
      ],
      "name": "SetGasbase",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetGasmax",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetGasprice",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "SetGovernance",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "SetMonitor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "SetNotify",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "SetUseOracle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "SetVault",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "outbound",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "inbound",
          "type": "address"
        }
      ],
      "name": "offers_head",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gives",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasreq",
          "type": "uint256"
        }
      ],
      "name": "offers_line",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "t",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "power",
          "type": "uint256"
        }
      ],
      "name": "cash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "t",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "cash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "echoSender",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256[]",
          "name": "ints",
          "type": "int256[]"
        }
      ],
      "name": "logary",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "uints",
          "type": "uint256[]"
        }
      ],
      "name": "logary",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "part_deploy_strat",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "part_kill",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "part_market_order",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "part_negative_shift",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "part_partial_fill",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "part_positive_shift",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "part_restart_fixed_shift",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "part_text_residual_1",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "part_text_residual_2",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "$out",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "$in",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "label",
          "type": "string"
        }
      ],
      "name": "setupMaker",
      "outputs": [
        {
          "internalType": "contract TestMaker",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "$out",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "$in",
          "type": "address"
        }
      ],
      "name": "setupMakerDeployer",
      "outputs": [
        {
          "internalType": "contract MakerDeployer",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "inverted",
          "type": "bool"
        }
      ],
      "name": "setupMangrove",
      "outputs": [
        {
          "internalType": "contract AbstractMangrove",
          "name": "_mgv",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "inverted",
          "type": "bool"
        }
      ],
      "name": "setupMangrove",
      "outputs": [
        {
          "internalType": "contract AbstractMangrove",
          "name": "_mgv",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setupMangrove",
      "outputs": [
        {
          "internalType": "contract AbstractMangrove",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "inbound_tkn",
          "type": "address"
        }
      ],
      "name": "setupMangrove",
      "outputs": [
        {
          "internalType": "contract AbstractMangrove",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "$out",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "$in",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "label",
          "type": "string"
        }
      ],
      "name": "setupTaker",
      "outputs": [
        {
          "internalType": "contract TestTaker",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_all",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6000805462ff00ff1916620100011781556001600a818155600b9182556080838152610160828152692130b9b2902a37b5b2b760b11b61018090815261010091825260046101a0818152632428412960e01b6101c05261012052601261014081905260a08490526102409687526a28bab7ba32902a37b5b2b760a91b610260526101e09687526102c0604052610280918252632428422960e01b6102a052610200919091526102205260c09490945260e0949094526010805460ff19168155909390929091601191620000d5918391906200029b565b506020828101518051620000f092600185019201906200029b565b50604091820151600291909101805460ff191660ff9092169190911790558201518051805160048401916200012b918391602001906200029b565b5060208281015180516200014692600185019201906200029b565b50604091909101516002909101805460ff191660ff909216919091179055606091909101516007909101553480156200017e57600080fd5b50604080516318caf8e360e31b8152326004820152602481019190915260096044820152683a3c1737b934b3b4b760b91b6064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c71890608401600060405180830381600087803b158015620001ee57600080fd5b505af115801562000203573d6000803e3d6000fd5b5050604080516318caf8e360e31b815230600482015260248101829052600b60448201526a2a32b9ba10393ab73732b960a91b60648201529051737109709ecfa91a80626ff3989d68f67f5b1dd12d935063c657c7189250608480830192600092919082900301818387803b1580156200027c57600080fd5b505af115801562000291573d6000803e3d6000fd5b505050506200037d565b828054620002a99062000341565b90600052602060002090601f016020900481019282620002cd576000855562000318565b82601f10620002e857805160ff191683800117855562000318565b8280016001018555821562000318579182015b8281111562000318578251825591602001919060010190620002fb565b50620003269291506200032a565b5090565b5b808211156200032657600081556001016200032b565b600181811c908216806200035657607f821691505b6020821081036200037757634e487b7160e01b600052602260045260246000fd5b50919050565b62021ffe806200038e6000396000f3fe60806040523480156200001157600080fd5b5060043610620001cc5760003560e01c80638c004832116200010d578063bfdc358811620000a3578063d56a22f0116200007a578063d56a22f01462000368578063ea14b5c3146200037f578063f8ccbf471462000396578063fa7626d414620003aa57600080fd5b8063bfdc3588146200033d578063c002f5ee1462000354578063c8e617c2146200035e57600080fd5b8063b23ae37c11620000e4578063b23ae37c14620002ea578063b84e3eda14620002f4578063ba414fa6146200030b578063bbab0fac146200032657600080fd5b80638c00483214620002cc578063a7465fca14620002d6578063a9b0690b14620002e057600080fd5b80633336a63f1162000183578063423c0f1e116200015a578063423c0f1e146200027b57806348980f641462000285578063521606d2146200028f5780636cc12a2414620002a657600080fd5b80633336a63f146200024357806335d75d3b146200025a5780633a768463146200026457600080fd5b80630645f2be14620001d15780630a9254e414620002055780630b3d8c4214620002115780631dff359114620002285780631e91f8cb14620002325780632d552ef61462000239575b600080fd5b620001e8620001e236600462006ecd565b620003b8565b6040516001600160a01b0390911681526020015b60405180910390f35b6200020f620004e2565b005b620001e86200022236600462006f03565b62000a68565b6200020f62000a8b565b33620001e8565b6200020f620014df565b620001e86200025436600462006ff6565b620017ac565b6200020f620018fc565b620001e860008051602062021e8383398151915281565b6200020f620024a1565b6200020f62002826565b6200020f620002a0366004620070ce565b62002ab1565b620002bd620002b736600462007168565b62002bf1565b604051908152602001620001fc565b620001e862002c20565b6200020f62002c33565b6200020f62002c8f565b6200020f620034aa565b6200020f62000305366004620070ce565b62003a1e565b6200031562003b4e565b6040519015158152602001620001fc565b620001e862000337366004620071a0565b62003c7f565b620001e86200034e36600462006ff6565b62003d02565b6200020f62003d2b565b6200020f62003f68565b620002bd62000379366004620071de565b620044df565b620001e862000390366004620071a0565b6200457a565b600054620003159062010000900460ff1681565b600054620003159060ff1681565b600081156200040a57306028621e8480604051620003d69062006d9f565b620003e4939291906200720d565b604051809103906000f08015801562000401573d6000803e3d6000fd5b5090506200044e565b306028621e84806040516200041f9062006dad565b6200042d939291906200720d565b604051809103906000f0801580156200044a573d6000803e3d6000fd5b5090505b60008051602062021e8383398151915263c657c71882604080516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260086044820152674d616e67726f766560c01b6064820152608401600060405180830381600087803b158015620004c457600080fd5b505af1158015620004d9573d6000803e3d6000fd5b50505050919050565b604080518082019091526004808252630ae8aa8960e31b60209092019182526200050f9160129162006dbb565b50604080518082019091526004808252635553444360e01b60209092019182526200053d9160159162006dbb565b506016805460ff19166006179055601e6017556200055a6200458a565b600e54601880546001600160a01b039283166001600160a01b031991821617909155600f546019805491909316911617905560408051808201909152600581526436b0b5b2b960d91b6020820152620005b390620047f3565b601a80546001600160a01b0319166001600160a01b0392909216918217905560405163c88a5e6d60e01b815260008051602062021e838339815191529163c88a5e6d916200060f9190678ac7230489e80000906004016200722e565b600060405180830381600087803b1580156200062a57600080fd5b505af11580156200063f573d6000803e3d6000fd5b505050506200066b604051806040016040528060058152602001643a30b5b2b960d91b815250620047f3565b601b80546001600160a01b0319166001600160a01b03928316908117909155601854620006a7921690620006a1826032620044df565b62004800565b601954601b54620006ce916001600160a01b039081169116620006a182620186a0620044df565b601b546040516303223eab60e11b81526001600160a01b03909116600482015260008051602062021e83833981519152906306447d5690602401600060405180830381600087803b1580156200072357600080fd5b505af115801562000738573d6000803e3d6000fd5b5050601854600d5460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b39350620007779290911690600019906004016200722e565b6020604051808303816000875af115801562000797573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007bd919062007247565b50601954600d5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b392620007f892911690600019906004016200722e565b6020604051808303816000875af115801562000818573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200083e919062007247565b50604080516390c5013b60e01b8152905160008051602062021e83833981519152916390c5013b91600480830192600092919082900301818387803b1580156200088757600080fd5b505af11580156200089c573d6000803e3d6000fd5b5050601a546040516303223eab60e11b81526001600160a01b03909116600482015260008051602062021e8383398151915292506306447d569150602401600060405180830381600087803b158015620008f557600080fd5b505af11580156200090a573d6000803e3d6000fd5b5050600d546001600160a01b03169150620009229050565b6018546019546001600160a01b03918216911662000944826022600262002bf1565b6019546200095e906001600160a01b03166103e8620044df565b601a54604051600a91630206cc80916001600160a01b0390911690620009849062006e46565b6001600160a01b039889168152968816602088015294871660408701526060860193909352608085019190915260a084015260c083015290911660e082015261010001604051809103906000f080158015620009e4573d6000803e3d6000fd5b50601c80546001600160a01b0319166001600160a01b0392909216919091179055604080516390c5013b60e01b8152905160008051602062021e83833981519152916390c5013b91600480830192600092919082900301818387803b15801562000a4d57600080fd5b505af115801562000a62573d6000803e3d6000fd5b50505050565b600062000a7582620003b8565b905062000a848484836200480f565b9392505050565b600d546018546019546001600160a01b039283169263fbb66910928116911662000ab7826001620044df565b6040518463ffffffff1660e01b815260040162000ad79392919062007267565b600060405180830381600087803b15801562000af257600080fd5b505af115801562000b07573d6000803e3d6000fd5b5050601b5460405163ca669fa760e01b81526001600160a01b03909116600482015260008051602062021e83833981519152925063ca669fa79150602401600060405180830381600087803b15801562000b6057600080fd5b505af115801562000b75573d6000803e3d6000fd5b5050600d546019546018546000945084935083926001600160a01b039081169263fbffe5fd92908216911662000baf826001600262002bf1565b60185462000bc8906001600160a01b03166001620044df565b60016040518663ffffffff1660e01b815260040162000bec9594939291906200728b565b6080604051808303816000875af115801562000c0c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c329190620072bc565b50600d5460185460195460408051636f7aeed560e11b81526001600160a01b03938416600482015291831660248301525195985093965091945060009391169163def5ddaa9160448083019260209291908290030181865afa15801562000c9d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000cc39190620072f3565b600d546018546019546040516368c13d6b60e01b81529394506000936001600160a01b03938416936368c13d6b9362000d089390821692911690879060040162007267565b602060405180830381865afa15801562000d26573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d4c9190620072f3565b905060006001600160601b038216601a5460405163ca669fa760e01b81526001600160a01b03909116600482015290915060008051602062021e838339815191529063ca669fa790602401600060405180830381600087803b15801562000db257600080fd5b505af115801562000dc7573d6000803e3d6000fd5b5050601c546040805163e20ccec360e01b81528151600095506001600160a01b03909316935063e20ccec392600480830193928290030181865afa15801562000e14573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e3a91906200730d565b60006020020151905062000e69818760405180606001604052806021815260200162021ec36021913962004ad2565b601b5460405163ca669fa760e01b81526001600160a01b03909116600482015260008051602062021e838339815191529063ca669fa790602401600060405180830381600087803b15801562000ebe57600080fd5b505af115801562000ed3573d6000803e3d6000fd5b5050600d546019546018546001600160a01b03928316945063fbffe5fd9350908216911662000f06826001600262002bf1565b60185462000f1f906001600160a01b03166001620044df565b60016040518663ffffffff1660e01b815260040162000f439594939291906200728b565b6080604051808303816000875af115801562000f63573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000f899190620072bc565b50601a5460405163ca669fa760e01b81526001600160a01b039091166004820152929950909750955060008051602062021e838339815191529063ca669fa790602401600060405180830381600087803b15801562000fe757600080fd5b505af115801562000ffc573d6000803e3d6000fd5b5050601c546040805163e20ccec360e01b81528151600095506001600160a01b03909316935063e20ccec392600480830193928290030181865afa15801562001049573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200106f91906200730d565b519050620010b681620010838985620073a0565b604051806040016040528060148152602001734d697373696e672070656e64696e67206261736560601b81525062004ad2565b600d54601854601954604051630fbb669160e41b81526001600160a01b039384169363fbb6691093620010f6939082169291169060649060040162007267565b600060405180830381600087803b1580156200111157600080fd5b505af115801562001126573d6000803e3d6000fd5b5050601b5460405163ca669fa760e01b81526001600160a01b03909116600482015260008051602062021e83833981519152925063ca669fa79150602401600060405180830381600087803b1580156200117f57600080fd5b505af115801562001194573d6000803e3d6000fd5b5050600d546019546018546001600160a01b03928316945063fbffe5fd93509082169116620011c7826001600262002bf1565b601854620011e0906001600160a01b03166001620044df565b60016040518663ffffffff1660e01b8152600401620012049594939291906200728b565b6080604051808303816000875af115801562001224573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200124a9190620072bc565b5050601a5460405163ca669fa760e01b81526001600160a01b03909116600482015260008051602062021e83833981519152925063ca669fa79150602401600060405180830381600087803b158015620012a357600080fd5b505af1158015620012b8573d6000803e3d6000fd5b5050601c546040805163e20ccec360e01b81528151600095506001600160a01b03909316935063e20ccec392600480830193928290030181865afa15801562001305573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200132b91906200730d565b6000602002015190506200135b81600060405180606001604052806024815260200162021e5f6024913962004ad2565b600d546018546001600160a01b039182169163def5ddaa91166019546001600160a01b03166040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015620013cc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620013f29190620072f3565b600d546018546019546040516368c13d6b60e01b81529399506001600160a01b03928316936368c13d6b93620014329381169216908b9060040162007267565b602060405180830381865afa15801562001450573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620014769190620072f3565b9450620014d46001600160601b03861689620014938588620073a0565b6200149f9190620073a0565b60405180604001604052806016815260200175125b98dbdc9c9958dd0819da5d995b88185b5bdd5b9d60521b81525062004ad2565b505050505050505050565b601a546040516303223eab60e11b81526001600160a01b03909116600482018190529060008051602062021e83833981519152906306447d5690602401600060405180830381600087803b1580156200153757600080fd5b505af11580156200154c573d6000803e3d6000fd5b5050601c5460408051606081019091526018546001600160a01b03928316945063815502679350600392600192620015de9290918291620015909116868662002bf1565b8152601854602090910190620015b3906001600160a01b03166003600162002bf1565b8152601854602090910190620015d6906001600160a01b03166003600162002bf1565b905262004b0e565b6040518463ffffffff1660e01b8152600401620015fe93929190620073f8565b600060405180830381600087803b1580156200161957600080fd5b505af11580156200162e573d6000803e3d6000fd5b50505050600062001640600062004b4a565b601954909150620016ca906001600160a01b03166018546001600160a01b03168360000151620016c46040518061014001604052806002815260200160038152602001600481526020016004198152602001600519815260200160008152602001600081526020016007198152602001600619815260200160001981525062004c25565b62004c5d565b60185462001747906001600160a01b03165b6019546001600160a01b03168360200151620016c4604051806101400160405280600081526020016000815260200160008152602001600681526020016001815260200160028152602001600381526020016004815260200160058152602001600781525062004c25565b50604080516390c5013b60e01b8152905160008051602062021e83833981519152916390c5013b91600480830192600092919082900301818387803b1580156200179057600080fd5b505af1158015620017a5573d6000803e3d6000fd5b5050505050565b600080600d60009054906101000a90046001600160a01b03168585604051620017d59062006e54565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f08015801562001812573d6000803e3d6000fd5b5060405163c88a5e6d60e01b815290915060008051602062021e838339815191529063c88a5e6d906200185590849068056bc75e2d63100000906004016200722e565b600060405180830381600087803b1580156200187057600080fd5b505af115801562001885573d6000803e3d6000fd5b50506040516318caf8e360e31b815260008051602062021e83833981519152925063c657c7189150620018bf908490879060040162007478565b600060405180830381600087803b158015620018da57600080fd5b505af1158015620018ef573d6000803e3d6000fd5b5092979650505050505050565b600d546019546018546001600160a01b039283169263fbb66910928116911662001928826001620044df565b6040518463ffffffff1660e01b8152600401620019489392919062007267565b600060405180830381600087803b1580156200196357600080fd5b505af115801562001978573d6000803e3d6000fd5b5050600d546018546019546001600160a01b03928316945063fbb6691093509082169116620019a9826001620044df565b6040518463ffffffff1660e01b8152600401620019c99392919062007267565b600060405180830381600087803b158015620019e457600080fd5b505af1158015620019f9573d6000803e3d6000fd5b5050600d54601954600093506001600160a01b03918216925063def5ddaa91166018546001600160a01b03166040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa15801562001a71573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a979190620072f3565b600d546019546018546040516368c13d6b60e01b81529394506000936001600160a01b03938416936368c13d6b9362001adc9390821692911690879060040162007267565b602060405180830381865afa15801562001afa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001b209190620072f3565b601b5460405163ca669fa760e01b81526001600160a01b03909116600482015290915060008051602062021e838339815191529063ca669fa790602401600060405180830381600087803b15801562001b7857600080fd5b505af115801562001b8d573d6000803e3d6000fd5b5050600d546019546018546000945084935083926001600160a01b039081169263fbffe5fd92908216911662001bc5826064620044df565b60185462001bde906001600160a01b03166001620044df565b60016040518663ffffffff1660e01b815260040162001c029594939291906200728b565b6080604051808303816000875af115801562001c22573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001c489190620072bc565b50601a546040516303223eab60e11b81526001600160a01b039091166004820152929550909350915060008051602062021e83833981519152906306447d5690602401600060405180830381600087803b15801562001ca657600080fd5b505af115801562001cbb573d6000803e3d6000fd5b5050601c546040805163e20ccec360e01b81528151600095506001600160a01b03909316935063e20ccec392600480830193928290030181865afa15801562001d08573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001d2e91906200730d565b51601c546040805163e20ccec360e01b815281519394506000936001600160a01b039093169263e20ccec3926004808401939192918290030181865afa15801562001d7d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001da391906200730d565b60200151604080516390c5013b60e01b8152905191925060008051602062021e83833981519152916390c5013b9160048082019260009290919082900301818387803b15801562001df357600080fd5b505af115801562001e08573d6000803e3d6000fd5b5050505062001e32848360405180606001604052806027815260200162021ee46027913962004ad2565b60195462001e869062001e50906001600160a01b03166064620044df565b62001e65906001600160601b0389166200749e565b826040518060600160405280602c815260200162021f2d602c913962004ad2565b600d546019546001600160a01b039182169163def5ddaa91166018546001600160a01b03166040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa15801562001ef7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001f1d9190620072f3565b600d546019546018546040516368c13d6b60e01b8152939a506001600160a01b03928316936368c13d6b9362001f5d9381169216908c9060040162007267565b602060405180830381865afa15801562001f7b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001fa19190620072f3565b601b5460405163ca669fa760e01b81526001600160a01b03909116600482015290965060008051602062021e838339815191529063ca669fa790602401600060405180830381600087803b15801562001ff957600080fd5b505af11580156200200e573d6000803e3d6000fd5b5050600d546019546018546001600160a01b03928316945063fbffe5fd935090821691166200203f826064620044df565b60185462002058906001600160a01b03166001620044df565b60016040518663ffffffff1660e01b81526004016200207c9594939291906200728b565b6080604051808303816000875af11580156200209c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620020c29190620072bc565b50601a546040516303223eab60e11b81526001600160a01b039091166004820152929750909550935060008051602062021e83833981519152906306447d5690602401600060405180830381600087803b1580156200212057600080fd5b505af115801562002135573d6000803e3d6000fd5b5050601c546040805163e20ccec360e01b81528151600095506001600160a01b03909316935063e20ccec392600480830193928290030181865afa15801562002182573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620021a891906200730d565b51601c546040805163e20ccec360e01b815281519394506000936001600160a01b039093169263e20ccec3926004808401939192918290030181865afa158015620021f7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200221d91906200730d565b60200151604080516390c5013b60e01b8152905191925060008051602062021e83833981519152916390c5013b9160048082019260009290919082900301818387803b1580156200226d57600080fd5b505af115801562002282573d6000803e3d6000fd5b50505050620022b98685620022989190620073a0565b8360405180606001604052806027815260200162021ee46027913962004ad2565b601954620022fa908490620022d9906001600160a01b03166064620044df565b620022ee906001600160601b038c166200749e565b62001e659190620073a0565b600d54601954601854604051630fbb669160e41b81526001600160a01b039384169363fbb66910936200233a939082169291169060649060040162007267565b600060405180830381600087803b1580156200235557600080fd5b505af11580156200236a573d6000803e3d6000fd5b5050600d546018546001600160a01b03918216935063fbb669109250166019546001600160a01b031660646040518463ffffffff1660e01b8152600401620023b59392919062007267565b600060405180830381600087803b158015620023d057600080fd5b505af1158015620023e5573d6000803e3d6000fd5b505050506000620023f7600062004b4a565b6019549091506200247e906001600160a01b03165b6018546001600160a01b03168360000151620016c460405180610140016040528060028152602001600219815260200160031981526020016004198152602001600519815260200160008152602001600081526020016007198152602001600619815260200160001981525062004c25565b60185462002495906001600160a01b0316620016dc565b50505050505050505050565b601a5460405163ca669fa760e01b81526001600160a01b03909116600482015260008051602062021e838339815191529063ca669fa790602401600060405180830381600087803b158015620024f657600080fd5b505af11580156200250b573d6000803e3d6000fd5b50505050601c60009054906101000a90046001600160a01b03166001600160a01b0316638456cb596040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200256057600080fd5b505af115801562002575573d6000803e3d6000fd5b5050601b5460405163ca669fa760e01b81526001600160a01b03909116600482015260008051602062021e83833981519152925063ca669fa79150602401600060405180830381600087803b158015620025ce57600080fd5b505af1158015620025e3573d6000803e3d6000fd5b5050600d54601954601854600094508493506001600160a01b039283169263fbffe5fd928116911662002619826109c4620044df565b60185462002634906001600160a01b0316600f600162002bf1565b60016040518663ffffffff1660e01b8152600401620026589594939291906200728b565b6080604051808303816000875af115801562002678573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200269e9190620072bc565b505091509150620026d98260006040518060400160405280600f81526020016e0676f742073686f756c64206265203608c1b81525062004ad2565b6200270f8160006040518060400160405280601081526020016f0676176652073686f756c6420626520360841b81525062004ad2565b60006200271d600062004b4a565b601954909150620027a4906001600160a01b03166018546001600160a01b03168360000151620016c46040518061014001604052806001198152602001600219815260200160031981526020016004198152602001600519815260200160008152602001600081526020016007198152602001600619815260200160001981525062004c25565b60185462002821906001600160a01b03165b6019546001600160a01b03168360200151620016c4604051806101400160405280600081526020016008815260200160008152602001600681526020016001815260200160028152602001600381526020016004815260200160058152602001600781525062004c25565b505050565b601a546040516303223eab60e11b81526001600160a01b03909116600482015260008051602062021e83833981519152906306447d5690602401600060405180830381600087803b1580156200287b57600080fd5b505af115801562002890573d6000803e3d6000fd5b50505050601c60009054906101000a90046001600160a01b03166001600160a01b0316631ef3755d6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620028e557600080fd5b505af1158015620028fa573d6000803e3d6000fd5b50506019546200293e92506200291d91506001600160a01b03166101f4620044df565b60185462002938906001600160a01b0316600f600262002bf1565b62004e45565b604080516390c5013b60e01b8152905160008051602062021e83833981519152916390c5013b91600480830192600092919082900301818387803b1580156200298657600080fd5b505af11580156200299b573d6000803e3d6000fd5b505050506000620029ad600062004b4a565b60195490915062002a2f906001600160a01b03166018546001600160a01b03168360000151620016c4604051806101400160405280600281526020016003815260200160048152602001600581526020016006815260200160008152602001600081526020016007198152602001600619815260200160001981525062004c25565b60185462002aae906001600160a01b03166019546001600160a01b03168360200151620016c4604051806101400160405280600081526020016007198152602001600081526020016005198152602001600019815260200160028152602001600381526020016004815260200160058152602001600781525062004c25565b50565b604080516020810190915260008082525b825181101562002be1578251829060008051602062021e8383398151915290636900a3ae9086908590811062002afc5762002afc62007374565b60200260200101516040518263ffffffff1660e01b815260040162002b2391815260200190565b600060405180830381865afa15801562002b41573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262002b6b9190810190620074b8565b60405160200162002b7e9291906200752f565b60405160208183030381529060405291506001835162002b9f91906200749e565b81101562002bcc578160405160200162002bba919062007562565b60405160208183030381529060405291505b8062002bd8816200758a565b91505062002ac2565b5062002bed8162004fcf565b5050565b600062002c0082600a620076a3565b62002c0c8585620044df565b62002c189190620076b1565b949350505050565b600062002c2e6000620003b8565b905090565b62002c3d62003f68565b62002c47620034aa565b62002c5162003d2b565b62002c5b620014df565b62002c6562000a8b565b62002c6f620018fc565b62002c7962002c8f565b62002c83620024a1565b62002c8d62002826565b565b601a546040516303223eab60e11b81526001600160a01b03909116600482015260008051602062021e83833981519152906306447d5690602401600060405180830381600087803b15801562002ce457600080fd5b505af115801562002cf9573d6000803e3d6000fd5b5050601c546040805163e20ccec360e01b81528151600095506001600160a01b03909316935063e20ccec392600480830193928290030181865afa15801562002d46573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002d6c91906200730d565b51601c546040805163e20ccec360e01b815281519394506000936001600160a01b039093169263e20ccec3926004808401939192918290030181865afa15801562002dbb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002de191906200730d565b60200151604080516390c5013b60e01b8152905191925060008051602062021e83833981519152916390c5013b9160048082019260009290919082900301818387803b15801562002e3157600080fd5b505af115801562002e46573d6000803e3d6000fd5b5050600d546019546018546040516368c13d6b60e01b8152600095506001600160a01b0393841694506368c13d6b9362002e8b93811692169060029060040162007267565b602060405180830381865afa15801562002ea9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002ecf9190620072f3565b601b5460405163ca669fa760e01b81526001600160a01b03909116600482015290915060008051602062021e838339815191529063ca669fa790602401600060405180830381600087803b15801562002f2757600080fd5b505af115801562002f3c573d6000803e3d6000fd5b5050600d54601954601854600094506001600160a01b03928316935063fbffe5fd92918216911662002f70826064620044df565b60185462002f89906001600160a01b03166001620044df565b60016040518663ffffffff1660e01b815260040162002fad9594939291906200728b565b6080604051808303816000875af115801562002fcd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002ff39190620072bc565b5050915050600062003006600062004b4a565b60195490915062003020906001600160a01b03166200240c565b60185462003037906001600160a01b0316620027b6565b601a546040516303223eab60e11b81526001600160a01b03909116600482015260008051602062021e83833981519152906306447d5690602401600060405180830381600087803b1580156200308c57600080fd5b505af1158015620030a1573d6000803e3d6000fd5b5050601c546040805163e20ccec360e01b81528151600095506001600160a01b03909316935063e20ccec392600480830193928290030181865afa158015620030ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200311491906200730d565b51601c546040805163e20ccec360e01b815281519394506000936001600160a01b039093169263e20ccec3926004808401939192918290030181865afa15801562003163573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200318991906200730d565b60200151604080516390c5013b60e01b8152905191925060008051602062021e83833981519152916390c5013b9160048082019260009290919082900301818387803b158015620031d957600080fd5b505af1158015620031ee573d6000803e3d6000fd5b505050506200321982600060405180606001604052806021815260200162021f796021913962004ad2565b6200324081600060405180606001604052806022815260200162021f0b6022913962004ad2565b600d546018546000916001600160a01b039081169163def5ddaa91166019546001600160a01b03166040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015620032b4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620032da9190620072f3565b600d546018546019546040516368c13d6b60e01b81529394506000936001600160a01b03938416936368c13d6b936200331f9390821692911690879060040162007267565b602060405180830381865afa1580156200333d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620033639190620072f3565b90506200338c8260086040518060600160405280602f815260200162021f9a602f913962004ad2565b620033da6001600160601b038216620033a68b89620073a0565b60405180604001604052806015815260200174496e636f7272656374206f6666657220676976657360581b81525062004ad2565b600d546019546018546040516368c13d6b60e01b81526000936001600160a01b03908116936368c13d6b936200341c9391831692169060029060040162007267565b602060405180830381865afa1580156200343a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620034609190620072f3565b9050620024956001600160601b03821660195462003489906001600160a01b03166064620044df565b6200349e6001600160601b038c168d620073a0565b620033a691906200749e565b601b546040516303223eab60e11b81526001600160a01b03909116600482018190529060008051602062021e83833981519152906306447d5690602401600060405180830381600087803b1580156200350257600080fd5b505af115801562003517573d6000803e3d6000fd5b5050600d546018546019546000945084935083926001600160a01b039081169263fbffe5fd92908216911662003551826005600162002bf1565b6019546200356b906001600160a01b0316610bb8620044df565b60016040518663ffffffff1660e01b81526004016200358f9594939291906200728b565b6080604051808303816000875af1158015620035af573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620035d59190620072bc565b509250925092506000620035ea600062004b4a565b6018549091506200365c90859062003620906001600160a01b03166019546001600160a01b03166706f05b59d3b2000062005016565b6040518060400160405280601981526020017f696e636f727265637420726563656976656420616d6f756e740000000000000081525062004ad2565b6200369f8260006040518060400160405280601f81526020017f74616b65722073686f756c64206e6f74207265636569766520626f756e74790081525062004ad2565b6019546200371b906001600160a01b03166018546001600160a01b03168360000151620016c4604051806101400160405280600181526020016002815260200160038152602001600481526020016005815260200160068152602001600081526020016000815260200160008152602001600081525062004c25565b60185462003798906001600160a01b03166019546001600160a01b03168360200151620016c460405180610140016040528060008152602001600081526020016000815260200160008152602001600081526020016000198152602001600281526020016003815260200160048152602001600581525062004c25565b600d546019546018546001600160a01b039283169263fbffe5fd9281169116620037c582610dac620044df565b601854620037e0906001600160a01b0316600f600162002bf1565b60016040518663ffffffff1660e01b8152600401620038049594939291906200728b565b6080604051808303816000875af115801562003824573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200384a9190620072bc565b5060195460185493975091955093506200388691869162003620916001600160a01b0391821691166200388082610dac620044df565b62005016565b620038c98260006040518060400160405280601f81526020017f74616b65722073686f756c64206e6f74207265636569766520626f756e74790081525062004ad2565b620038d5600062004b4a565b60195490915062003956906001600160a01b03166018546001600160a01b03168360000151620016c46040518061014001604052806001815260200160028152602001600381526020016004815260200160041981526020016005198152602001600081526020016000815260200160008152602001600081525062004c25565b601854620039d2906001600160a01b03166019546001600160a01b03168360200151620016c4604051806101400160405280600081526020016000815260200160008152602001600081526020016006815260200160018152602001600281526020016003815260200160048152602001600581525062004c25565b5050604080516390c5013b60e01b8152905160008051602062021e8383398151915293506390c5013b9250600480830192600092919082900301818387803b1580156200179057600080fd5b604080516020810190915260008082525b825181101562002be1578251829060008051602062021e8383398151915290636900a3ae9086908590811062003a695762003a6962007374565b60200260200101516040518263ffffffff1660e01b815260040162003a9091815260200190565b600060405180830381865afa15801562003aae573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262003ad89190810190620074b8565b60405160200162003aeb9291906200752f565b60405160208183030381529060405291506001835162003b0c91906200749e565b81101562003b39578160405160200162003b27919062007562565b60405160208183030381529060405291505b8062003b45816200758a565b91505062003a2f565b60008054610100900460ff161562003b6f5750600054610100900460ff1690565b600060008051602062021e838339815191523b1562003c7a5760405160009060008051602062021e83833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49062003bdc9083906519985a5b195960d21b906020016200722e565b60408051601f198184030181529082905262003bfc9291602001620076d4565b60408051601f198184030181529082905262003c189162007707565b6000604051808303816000865af19150503d806000811462003c57576040519150601f19603f3d011682016040523d82523d6000602084013e62003c5c565b606091505b509150508080602001905181019062003c76919062007247565b9150505b919050565b600d5460009062003c99906001600160a01b0316620050ce565b50600d546040516001600160a01b03909116908490849062003cbb9062006e62565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f08015801562003cf8573d6000803e3d6000fd5b5090505b92915050565b600080600d60009054906101000a90046001600160a01b03168585604051620017d59062006e70565b601a546040516303223eab60e11b81526001600160a01b03909116600482018190529060008051602062021e83833981519152906306447d5690602401600060405180830381600087803b15801562003d8357600080fd5b505af115801562003d98573d6000803e3d6000fd5b5050601c54604080518082019091526019546001600160a01b039283169450638155026793506001199260009262003e07929091829162003ddd91166103e8620044df565b815260195460209091019062003dff906001600160a01b03166103e8620044df565b9052620051b8565b6040518463ffffffff1660e01b815260040162003e2793929190620073f8565b600060405180830381600087803b15801562003e4257600080fd5b505af115801562003e57573d6000803e3d6000fd5b50505050600062003e69600062004b4a565b60195490915062003eea906001600160a01b03166018546001600160a01b03168360000151620016c46040518061014001604052806008815260200160078152602001600181526020016002815260200160038152602001600481526020016004198152602001600519815260200160008152602001600081525062004c25565b60185462001747906001600160a01b03166019546001600160a01b03168360200151620016c46040518061014001604052806003198152602001600419815260200160008152602001600081526020016000815260200160008152602001600681526020016001815260200160028152602001600381525062004c25565b601a546040516303223eab60e11b81526001600160a01b03909116600482018190529060008051602062021e83833981519152906306447d5690602401600060405180830381600087803b15801562003fc057600080fd5b505af115801562003fd5573d6000803e3d6000fd5b5050601954601c54604080516303e21fa960e61b815290516001600160a01b03938416955063095ea7b394506200405f939092169163f887ea40916004808201926020929091908290030181865afa15801562004036573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200405c919062007725565b90565b6000196040518363ffffffff1660e01b8152600401620040819291906200722e565b6020604051808303816000875af1158015620040a1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620040c7919062007247565b50601854601c54604080516303e21fa960e61b815290516001600160a01b039384169363095ea7b393620041249391169163f887ea40916004808201926020929091908290030181865afa15801562004036573d6000803e3d6000fd5b6000196040518363ffffffff1660e01b8152600401620041469291906200722e565b6020604051808303816000875af115801562004166573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200418c919062007247565b50601854601a54620041b2916001600160a01b039081169116620006a1826011620044df565b601954601a54620041d8916001600160a01b039081169116620006a18261c350620044df565b601c546018546019546040805163d1baa1ef60e01b815290516000946001600160a01b039081169463e4c34f849490821693911691859163d1baa1ef9160048083019260209291908290030181865afa1580156200423a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620042609190620072f3565b6000806040518663ffffffff1660e01b81526004016200428595949392919062007745565b602060405180830381865afa158015620042a3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620042c99190620072f3565b600d549091506001600160a01b03166323024408620042ea83601462007776565b601c546001600160a01b03166040516001600160e01b031960e085901b1681526001600160a01b0390911660048201526024016000604051808303818588803b1580156200433757600080fd5b505af11580156200434c573d6000803e3d6000fd5b50506019546200438c93506200437192506001600160a01b031690506103e8620044df565b60185462002938906001600160a01b03166003600162002bf1565b60006200439a600062004b4a565b60195490915062004419906001600160a01b03166018546001600160a01b03168360000151620016c4604051806101400160405280600181526020016002815260200160038152602001600481526020016005815260200160008152602001600081526020016000815260200160008152602001600081525062004c25565b60185462004495906001600160a01b03166019546001600160a01b03168360200151620016c4604051806101400160405280600081526020016000815260200160008152602001600081526020016000815260200160018152602001600281526020016003815260200160048152602001600581525062004c25565b5050604080516390c5013b60e01b8152905160008051602062021e83833981519152916390c5013b91600480830192600092919082900301818387803b1580156200179057600080fd5b6000620044eb620051eb565b6000836001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200452c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004552919062007798565b60ff16905062004561620051f7565b6200456e81600a620076a3565b62002c18908462007776565b600062000a848383600062000a68565b601354604051309160119160129160ff1690620045a79062006e7e565b620045b69493929190620078a0565b604051809103906000f080158015620045d3573d6000803e3d6000fd5b50600e80546001600160a01b0319166001600160a01b03929092169190911790553060165460405160149160159160ff90911690620046129062006e7e565b620046219493929190620078a0565b604051809103906000f0801580156200463e573d6000803e3d6000fd5b50600f80546001600160a01b0319166001600160a01b03928316908117909155600e54601054620046789391909116919060ff1662000a68565b600d80546001600160a01b0319166001600160a01b03929092169182179055604080516316c1a85160e31b8152905163b60d428891678ac7230489e8000091600480830192600092919082900301818588803b158015620046d857600080fd5b505af1158015620046ed573d6000803e3d6000fd5b5050600e54600d5460405163095ea7b360e01b81526001600160a01b03928316955063095ea7b394506200472c9350911690600019906004016200722e565b6020604051808303816000875af11580156200474c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004772919062007247565b50600f54600d5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b392620047ad92911690600019906004016200722e565b6020604051808303816000875af1158015620047cd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002aae919062007247565b600062000a8482620052a3565b6200282183838360006200542a565b6200481a83620050ce565b506200482682620050ce565b50601754604051630b73a18f60e01b81526001600160a01b03831691630b73a18f9162004862918791879190600090614e209060040162007745565b600060405180830381600087803b1580156200487d57600080fd5b505af115801562004892573d6000803e3d6000fd5b5050601754604051630b73a18f60e01b81526001600160a01b0385169350630b73a18f9250620048d1918691889190600090614e209060040162007745565b600060405180830381600087803b158015620048ec57600080fd5b505af115801562004901573d6000803e3d6000fd5b5050505060008051602062021f5983398151915260001c60601b60601c6001600160a01b031663c657c71884856001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156200496c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620049969190810190620074b8565b6040518363ffffffff1660e01b8152600401620049b592919062007478565b600060405180830381600087803b158015620049d057600080fd5b505af1158015620049e5573d6000803e3d6000fd5b5050505060008051602062021f5983398151915260001c60601b60601c6001600160a01b031663c657c71883846001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801562004a50573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262004a7a9190810190620074b8565b6040518363ffffffff1660e01b815260040162004a9992919062007478565b600060405180830381600087803b15801562004ab457600080fd5b505af115801562004ac9573d6000803e3d6000fd5b50505050505050565b818314620028215760008051602062021ea38339815191528160405162004afa9190620078ef565b60405180910390a16200282183836200566b565b60408051600380825260808201909252606091602082018380368337019050509050816020820162004b438260038362005762565b5050919050565b6040805180820190915260608082526020820152601c54604051631efa880b60e01b815283151560048201526000916001600160a01b031690631efa880b90602401600060405180830381865afa15801562004baa573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262004bd4919081019062007920565b905060405180604001604052808260006002811062004bf75762004bf762007374565b602002015181526020018260016002811062004c175762004c1762007374565b602002015190529392505050565b60408051600a80825261016082019092526060916020820161014080368337019050509050816020820162004b4382600a8362005762565b6000805b825181101562004e3d5782818151811062004c805762004c8062007374565b6020908102919091010151600d5490925062004dce9060009062004d29906001600160a01b03166368c13d6b8a8a62004cb9896200578e565b6040518463ffffffff1660e01b815260040162004cd99392919062007267565b602060405180830381865afa15801562004cf7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004d1d9190620072f3565b6001600160601b031690565b604051635191620760e11b815260048101869052911090600085139060008051602062021e838339815191529063a322c40e90602401600060405180830381865afa15801562004d7d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262004da79190810190620074b8565b60405160200162004db9919062007a20565b604051602081830303815290604052620057a8565b62004e2884828151811062004de75762004de762007374565b602002602001015162004dfa846200578e565b6040518060400160405280600f81526020016e13d999995c881b5a5cdc1b1858d959608a1b81525062004ad2565b8062004e34816200758a565b91505062004c61565b505050505050565b600062004e556002600a620076b1565b60408051600a8082526101608201909252919250600091906020820161014080368337505060408051600a80825261016082019092529293506000929150602082016101408036833701905050905060005b600a81101562004f045762004ebf6002600a620076b1565b811062004ecd578462004ecf565b855b82828151811062004ee45762004ee462007374565b60209081029190910101528062004efb816200758a565b91505062004ea7565b5060005b600281101562004e3d57601c546001600160a01b031663553e9f326001600462004f33858962007776565b62004f40866001620073a0565b62004f4c908a62007776565b60405180604001604052808a81526020018a815250886040518763ffffffff1660e01b815260040162004f859695949392919062007a5d565b600060405180830381600087803b15801562004fa057600080fd5b505af115801562004fb5573d6000803e3d6000fd5b50505050808062004fc6906200758a565b91505062004f08565b62002aae8160405160240162004fe6919062007b11565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052620057e8565b600d546040516365fbae4d60e11b81526001600160a01b0385811660048301528481166024830152600092839291169063cbf75c9a906044016040805180830381865afa1580156200506c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005092919062007b26565b91506127109050620050ad61ffff60e884901c16826200749e565b620050b9908562007776565b620050c59190620076b1565b95945050505050565b60006001600160a01b038216620051a9577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516200513f906020808252601e908201527f4572726f723a20616464726573732073686f756c64206e6f7420626520300000604082015260600190565b60405180910390a160408051818152600781830152664164647265737360c81b60608201526001600160a01b038416602082015290517f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f9181900360800190a1620051a962005809565b506001600160a01b0316151590565b6040805160028082526060808301845292602083019080368337019050509050816020820162004b438260028362005762565b62002c8d60006200590d565b600854600103620052585760095460405163ca669fa760e01b81526001600160a01b03909116600482015260008051602062021e838339815191529063ca669fa7906024015b600060405180830381600087803b15801562000a4d57600080fd5b60085460020362002c8d576009546040516303223eab60e11b81526001600160a01b03909116600482015260008051602062021e83833981519152906306447d56906024016200523d565b80516020820120600a8054600181019091556040516001625e79b760e01b031981529101600482018190529060009060008051602062021e838339815191529063ffa18649906024016020604051808303816000875af11580156200530c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005332919062007725565b60408051808201825260088152676e6f74207a65726f60c01b60208201529051635a6b63c160e11b815291925060008051602062021e838339815191529163b4d6c78291620053879185919060040162007478565b600060405180830381600087803b158015620053a257600080fd5b505af1158015620053b7573d6000803e3d6000fd5b50506040516318caf8e360e31b815260008051602062021e83833981519152925063c657c7189150620053f1908490879060040162007478565b600060405180830381600087803b1580156200540c57600080fd5b505af115801562005421573d6000803e3d6000fd5b50505050915091565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b1790529151600092871691620054809162007707565b6000604051808303816000865af19150503d8060008114620054bf576040519150601f19603f3d011682016040523d82523d6000602084013e620054c4565b606091505b50915050600081806020019051810190620054e09190620072f3565b905062005552846200554b87620055226370a0823160e01b6200550560018d62005a72565b9060038201805463ffffffff191660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b9062005a97565b821562004e3d5760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b038916916200559d919062007707565b6000604051808303816000865af19150503d8060008114620055dc576040519150601f19603f3d011682016040523d82523d6000602084013e620055e1565b606091505b50915050600081806020019051810190620055fd9190620072f3565b90508286101562005628576200561486846200749e565b6200562090826200749e565b905062005643565b6200563483876200749e565b620056409082620073a0565b90505b62005661816200554b6318160ddd60e01b6200550560018d62005a72565b5050505050505050565b80821462002bed577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620056de9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88160405162005717919062007b4b565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88260405162005750919062007b84565b60405180910390a162002bed62005809565b811562002821576000198201602002838101519082015281620057858162007baf565b92505062005762565b600080821215620057a45762003cfc8262007bc9565b5090565b81151583151514620028215760008051602062021ea383398151915281604051620057d49190620078ef565b60405180910390a162002821838362005aa3565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60008051602062021e838339815191523b15620058fc5760405160009060008051602062021e83833981519152907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490620058779083906519985a5b195960d21b906001906020016200720d565b60408051601f1981840301815290829052620058979291602001620076d4565b60408051601f1981840301815290829052620058b39162007707565b6000604051808303816000865af19150503d8060008114620058f2576040519150601f19603f3d011682016040523d82523d6000602084013e620058f7565b606091505b505050505b6000805461ff001916610100179055565b600060085560408051631e91f8cb60e01b815290513091631e91f8cb9160048083019260209291908290030181865afa1580156200594f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005975919062007725565b600980546001600160a01b0319166001600160a01b03929092169182179055301462002aae57306001600160a01b0316631e91f8cb6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620059da573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005a00919062007725565b6009546001600160a01b0390811691161462005a1e57600160085550565b801562002aae576002600855604080516390c5013b60e01b8152905160008051602062021e83833981519152916390c5013b91600480830192600092919082900301818387803b1580156200179057600080fd5b6005820180546001600160a01b0319166001600160a01b039290921691909117905590565b62002bed828262005bf8565b8015158215151462002bed577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162005b1a9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b626f6f6040820152616c5d60f01b606082015260800190565b60405180910390a160008051602062021ea38339815191528162005b5c576040518060400160405280600581526020016466616c736560d81b81525062005b7a565b604051806040016040528060048152602001637472756560e01b8152505b60405162005b89919062007be8565b60405180910390a160008051602062021ea38339815191528262005bcb576040518060400160405280600581526020016466616c736560d81b81525062005be9565b604051806040016040528060048152602001637472756560e01b8152505b60405162005750919062007c27565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b946000939092909183018282801562005c6b57602002820191906000526020600020905b81548152602001906001019080831162005c56575b5050505050905060008362005c808362005f6a565b60405160200162005c93929190620076d4565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a16835281529281209194509092909162005ce791869188910162007c52565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff1662005d225762005d20876200601e565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b031988168452825280832090519091839162005d6391879189910162007c52565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b03168460405162005daa919062007707565b600060405180830381855afa9150503d806000811462005de7576040519150601f19603f3d011682016040523d82523d6000602084013e62005dec565b606091505b50915062005e0990508162005e0388602062007776565b62006d15565b604051630667f9d760e41b81529092506000915060008051602062021e838339815191529063667f9d709062005e46908b9087906004016200722e565b6020604051808303816000875af115801562005e66573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005e8c9190620072f3565b905080821462005eb95760405162461bcd60e51b815260040162005eb09062007c8e565b60405180910390fd5b6040516370ca10bb60e01b815260008051602062021e83833981519152906370ca10bb9062005ef1908b9087908e906004016200720d565b600060405180830381600087803b15801562005f0c57600080fd5b505af115801562005f21573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff1916905562005f5660028b01600062006e8c565b896004016000905550505050505050505050565b606060008251602062005f7e919062007776565b67ffffffffffffffff81111562005f995762005f9962006f55565b6040519080825280601f01601f19166020018201604052801562005fc4576020820181803683370190505b50905060005b83518110156200601757600084828151811062005feb5762005feb62007374565b6020026020010151905080826020026020018401525080806200600e906200758a565b91505062005fca565b5092915050565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b9493879391929091908301828280156200609057602002820191906000526020600020905b8154815260200190600101908083116200607b575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a1684528252808320905195965094919350620060dc9250859187910162007c52565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16156200617b576001600160a01b0384166000908152602087815260408083206001600160e01b031987168452825280832090519092916200614b91859187910162007c52565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b600083620061898362005f6a565b6040516020016200619c929190620076d4565b604051602081830303815290604052905060008051602062021f5983398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620061fb57600080fd5b505af115801562006210573d6000803e3d6000fd5b50505050600080866001600160a01b03168360405162006231919062007707565b600060405180830381855afa9150503d80600081146200626e576040519150601f19603f3d011682016040523d82523d6000602084013e62006273565b606091505b5091506200628a90508162005e0387602062007776565b6040516365bc948160e01b81526001600160a01b03891660048201529092506000915060008051602062021e83833981519152906365bc9481906024016000604051808303816000875af1158015620062e7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262006311919081019062007d96565b5090508051600103620065da57600060008051602062021f5983398151915260001c6001600160a01b031663667f9d70898460008151811062006358576200635862007374565b60200260200101516040518363ffffffff1660e01b81526004016200637f9291906200722e565b6020604051808303816000875af11580156200639f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620063c59190620072f3565b90508062006429577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5888360008151811062006405576200640562007374565b602002602001015160001c604051620064209291906200722e565b60405180910390a15b8083146200644b5760405162461bcd60e51b815260040162005eb09062007c8e565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed888887896040516020016200648392919062007c52565b6040516020818303038152906040528051906020012085600081518110620064af57620064af62007374565b602002602001015160001c604051620064cc949392919062007e01565b60405180910390a181600081518110620064ea57620064ea62007374565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c168352845280822090519293909262006535918a918c910162007c52565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c168552825282842092519093916200659f918a918c910162007c52565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff19169115159190911790555062006b98565b60018151111562006b275760005b815181101562006b2057600060008051602062021f5983398151915260001c6001600160a01b031663667f9d708a8585815181106200662b576200662b62007374565b60200260200101516040518363ffffffff1660e01b8152600401620066529291906200722e565b6020604051808303816000875af115801562006672573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620066989190620072f3565b905080620066fb577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a589848481518110620066d757620066d762007374565b602002602001015160001c604051620066f29291906200722e565b60405180910390a15b60008051602062021f5983398151915260001c6001600160a01b03166370ca10bb8a85858151811062006732576200673262007374565b602002602001015161133760f01b6040518463ffffffff1660e01b815260040162006760939291906200720d565b600060405180830381600087803b1580156200677b57600080fd5b505af115801562006790573d6000803e3d6000fd5b50505050600060608a6001600160a01b031687604051620067b2919062007707565b600060405180830381855afa9150503d8060008114620067ef576040519150601f19603f3d011682016040523d82523d6000602084013e620067f4565b606091505b5090925090506200680c8162005e038b602062007776565b955081801562006820575061133760f01b86145b1562006a73577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c6040516020016200685e92919062007c52565b6040516020818303038152906040528051906020012088888151811062006889576200688962007374565b602002602001015160001c604051620068a6949392919062007e01565b60405180910390a1848481518110620068c357620068c362007374565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f16835284528082209051929390926200690e918d918f910162007c52565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c6040516020016200699b92919062007c52565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff02191690831515021790555060008051602062021f5983398151915260001c6001600160a01b03166370ca10bb8c87878151811062006a0d5762006a0d62007374565b6020026020010151866040518463ffffffff1660e01b815260040162006a36939291906200720d565b600060405180830381600087803b15801562006a5157600080fd5b505af115801562006a66573d6000803e3d6000fd5b5050505050505062006b20565b60008051602062021f5983398151915260001c6001600160a01b03166370ca10bb8c87878151811062006aaa5762006aaa62007374565b6020026020010151866040518463ffffffff1660e01b815260040162006ad3939291906200720d565b600060405180830381600087803b15801562006aee57600080fd5b505af115801562006b03573d6000803e3d6000fd5b50505050505050808062006b17906200758a565b915050620065e8565b5062006b98565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e606482015260840162005eb0565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a1684528252808320905190929162006bdc9188918a910162007c52565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff1662006c6b5760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201526e3a143994903737ba103337bab7321760891b606482015260840162005eb0565b6005890180546001600160a01b031916905560038901805463ffffffff1916905562006c9c60028a01600062006e8c565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a1684528252808320905190929162006ce29188918a910162007c52565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b6000806000602085511162006d2c57845162006d2f565b60205b905060005b8181101562006d955762006d4a81600862007776565b8662006d578388620073a0565b8151811062006d6a5762006d6a62007374565b01602001516001600160f81b031916901c92909217918062006d8c816200758a565b91505062006d34565b5090949350505050565b61567e8062007e3283390190565b6155e4806200d4b083390190565b82805462006dc990620077bd565b90600052602060002090601f01602090048101928262006ded576000855562006e38565b82601f1062006e0857805160ff191683800117855562006e38565b8280016001018555821562006e38579182015b8281111562006e3857825182559160200191906001019062006e1b565b50620057a492915062006ea7565b618b5f8062012a9483390190565b611206806201b5f383390190565b61206d806201c7f983390190565b611a41806201e86683390190565b611bb880620202a783390190565b508054600082559060005260206000209081019062002aae91905b5b80821115620057a4576000815560010162006ea8565b801515811462002aae57600080fd5b60006020828403121562006ee057600080fd5b813562000a848162006ebe565b6001600160a01b038116811462002aae57600080fd5b60008060006060848603121562006f1957600080fd5b833562006f268162006eed565b9250602084013562006f388162006eed565b9150604084013562006f4a8162006ebe565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171562006f915762006f9162006f55565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171562006fc35762006fc362006f55565b604052919050565b600067ffffffffffffffff82111562006fe85762006fe862006f55565b50601f01601f191660200190565b6000806000606084860312156200700c57600080fd5b8335620070198162006eed565b925060208401356200702b8162006eed565b9150604084013567ffffffffffffffff8111156200704857600080fd5b8401601f810186136200705a57600080fd5b8035620070716200706b8262006fcb565b62006f97565b8181528760208385010111156200708757600080fd5b816020840160208301376000602083830101528093505050509250925092565b600067ffffffffffffffff821115620070c457620070c462006f55565b5060051b60200190565b60006020808385031215620070e257600080fd5b823567ffffffffffffffff811115620070fa57600080fd5b8301601f810185136200710c57600080fd5b80356200711d6200706b82620070a7565b81815260059190911b820183019083810190878311156200713d57600080fd5b928401925b828410156200715d5783358252928401929084019062007142565b979650505050505050565b6000806000606084860312156200717e57600080fd5b83356200718b8162006eed565b95602085013595506040909401359392505050565b60008060408385031215620071b457600080fd5b8235620071c18162006eed565b91506020830135620071d38162006eed565b809150509250929050565b60008060408385031215620071f257600080fd5b8235620071ff8162006eed565b946020939093013593505050565b6001600160a01b039390931683526020830191909152604082015260600190565b6001600160a01b03929092168252602082015260400190565b6000602082840312156200725a57600080fd5b815162000a848162006ebe565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03958616815293909416602084015260408301919091526060820152901515608082015260a00190565b60008060008060808587031215620072d357600080fd5b505082516020840151604085015160609095015191969095509092509050565b6000602082840312156200730657600080fd5b5051919050565b6000604082840312156200732057600080fd5b82601f8301126200733057600080fd5b6200733a62006f6b565b8060408401858111156200734d57600080fd5b845b81811015620073695780518452602093840193016200734f565b509095945050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115620073b657620073b66200738a565b500190565b600081518084526020808501945080840160005b83811015620073ed57815187529582019590820190600101620073cf565b509495945050505050565b8381528215156020820152606060408201526000620050c56060830184620073bb565b60005b83811015620074385781810151838201526020016200741e565b8381111562000a625750506000910152565b60008151808452620074648160208601602086016200741b565b601f01601f19169290920160200192915050565b6001600160a01b038316815260406020820181905260009062002c18908301846200744a565b600082821015620074b357620074b36200738a565b500390565b600060208284031215620074cb57600080fd5b815167ffffffffffffffff811115620074e357600080fd5b8201601f81018413620074f557600080fd5b8051620075066200706b8262006fcb565b8181528560208385010111156200751c57600080fd5b620050c58260208301602086016200741b565b60008351620075438184602088016200741b565b835190830190620075598183602088016200741b565b01949350505050565b60008251620075768184602087016200741b565b61016160f51b920191825250600201919050565b6000600182016200759f576200759f6200738a565b5060010190565b600181815b80851115620075e7578160001904821115620075cb57620075cb6200738a565b80851615620075d957918102915b93841c9390800290620075ab565b509250929050565b600082620076005750600162003cfc565b816200760f5750600062003cfc565b8160018114620076285760028114620076335762007653565b600191505062003cfc565b60ff8411156200764757620076476200738a565b50506001821b62003cfc565b5060208310610133831016604e8410600b841016171562007678575081810a62003cfc565b620076848383620075a6565b80600019048211156200769b576200769b6200738a565b029392505050565b600062000a848383620075ef565b600082620076cf57634e487b7160e01b600052601260045260246000fd5b500490565b6001600160e01b0319831681528151600090620076f98160048501602087016200741b565b919091016004019392505050565b600082516200771b8184602087016200741b565b9190910192915050565b6000602082840312156200773857600080fd5b815162000a848162006eed565b6001600160a01b03958616815293909416602084015260408301919091526060820152608081019190915260a00190565b60008160001904831182151516156200779357620077936200738a565b500290565b600060208284031215620077ab57600080fd5b815160ff8116811462000a8457600080fd5b600181811c90821680620077d257607f821691505b602082108103620077f357634e487b7160e01b600052602260045260246000fd5b50919050565b8054600090600181811c90808316806200781457607f831692505b602080841082036200783657634e487b7160e01b600052602260045260246000fd5b83885260208801828015620078545760018114620078665762007893565b60ff1987168252828201975062007893565b60008981526020902060005b878110156200788d5781548482015290860190840162007872565b83019850505b5050505050505092915050565b6001600160a01b0385168152608060208201819052600090620078c690830186620077f9565b8281036040840152620078da8186620077f9565b91505060ff8316606083015295945050505050565b60408152600560408201526422b93937b960d91b606082015260806020820152600062000a8460808301846200744a565b600060208083850312156200793457600080fd5b825167ffffffffffffffff808211156200794d57600080fd5b8185019150601f86818401126200796357600080fd5b6200796d62006f6b565b8060408501898111156200798057600080fd5b855b8181101562007a11578051868111156200799c5760008081fd5b87018581018c13620079ae5760008081fd5b8051620079bf6200706b82620070a7565b81815260059190911b82018a01908a8101908e831115620079e05760008081fd5b928b01925b8284101562007a005783518252928b0192908b0190620079e5565b875250505092870192870162007982565b50909998505050505050505050565b7203bb937b7339037b33332b91039ba30ba3ab99606d1b81526000825162007a508160138501602087016200741b565b9190910160130192915050565b600060c0820188151583526020888185015287604085015286606085015260c060808501528182905061010085019250866000805b600281101562007aeb5787860360bf19018452825180518088529086019086880190845b8181101562007ad45783518352928801929188019160010162007ab6565b509097505050928401929184019160010162007a92565b505050505082810360a084015262007b048185620073bb565b9998505050505050505050565b60208152600062000a8460208301846200744a565b6000806040838503121562007b3a57600080fd5b505080516020909101519092909150565b60408152600062007b7660408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b60408152600062007b7660408301600a815269080808081058dd1d585b60b21b602082015260400190565b60008162007bc15762007bc16200738a565b506000190190565b6000600160ff1b820162007be15762007be16200738a565b5060000390565b60408152600062007c1360408301600a8152690808115e1c1958dd195960b21b602082015260400190565b828103602084015262002c1881856200744a565b60408152600062007c1360408301600a815269080808081058dd1d585b60b21b602082015260400190565b825160009082906020808701845b8381101562007c7e5781518552938201939082019060010162007c60565b5050948252509092019392505050565b6020808252606f908201527f73746453746f726167652066696e642853746453746f72616765293a2050616360408201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560608201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960808201526e39b713ba1039bab83837b93a32b21760891b60a082015260c00190565b600082601f83011262007d3b57600080fd5b8151602062007d4e6200706b83620070a7565b82815260059290921b8401810191818101908684111562007d6e57600080fd5b8286015b8481101562007d8b578051835291830191830162007d72565b509695505050505050565b6000806040838503121562007daa57600080fd5b825167ffffffffffffffff8082111562007dc357600080fd5b62007dd18683870162007d29565b9350602085015191508082111562007de857600080fd5b5062007df78582860162007d29565b9150509250929050565b6001600160a01b039490941684526001600160e01b0319929092166020840152604083015260608201526080019056fe60a06040523480156200001157600080fd5b506040516200567e3803806200567e83398101604081905262000034916200048c565b8282826040518060400160405280601081526020016f496e7665727465644d616e67726f766560801b815250808484847f72201d073f249840099a96530e189c4291c1852040b1e96ff1f606db656be4ff60405160405180910390a16200009b836200016d565b620000a682620001cc565b620000b1816200027f565b620000bc836200032f565b5050815160208084019190912060408051808201825260018152603160f81b9084015280517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f938101939093528201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c001905060408051601f19818403018152919052805160209091012060805250620004d19650505050505050565b62000177620003e0565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f30906020015b60405180910390a150565b620001d6620003e0565b61ffff811681146200022f5760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f31366269747300000000000060448201526064015b60405180910390fd5b6200024b816001546200045160201b62001d4e1790919060201c565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001620001c1565b62000289620003e0565b808162ffffff1614620002df5760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f3234626974730000000000000000604482015260640162000226565b620002fb816001546200046f60201b62001d711790919060201c565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001620001c1565b62000339620003e0565b6001600160a01b038116620003915760405162461bcd60e51b815260206004820152601360248201527f6d67762f636f6e6669672f676f762f6e6f743000000000000000000000000000604482015260640162000226565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001620001c1565b6003546001600160a01b0316331480620003f957503330145b806200040e57506003546001600160a01b0316155b6200044f5760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b604482015260640162000226565b565b60401b69ffff00000000000000001661ffff60401b19919091161790565b60281b67ffffff00000000001662ffffff60281b19919091161790565b600080600060608486031215620004a257600080fd5b83516001600160a01b0381168114620004ba57600080fd5b602085015160409095015190969495509392505050565b60805161518a620004f46000396000818161036401526116aa015261518a6000f3fe60806040526004361061024a5760003560e01c80636d27de6711610139578063b60d4288116100b6578063dc7e98df1161007a578063dc7e98df146108a8578063def5ddaa146108c8578063fbb66910146108e8578063fbfa77cf14610908578063fbffe5fd14610928578063fcaa7e2e1461094857600080fd5b8063b60d4288146107e4578063c7bb25d0146107ec578063cbf75c9a14610833578063d0ee509914610868578063db20266f1461088857600080fd5b8063aa4dd282116100fd578063aa4dd28214610744578063ab033ea914610764578063ad97db1b14610784578063b09d2a16146107a4578063b2b12057146107c457600080fd5b80636d27de671461061457806370a08231146106545780637ecebe00146106815780638c66715c146106ae57806395999ee31461072457600080fd5b80635722647b116101c7578063644e67031161018b578063644e6703146104cc5780636804f613146105835780636817031b146105a357806368c13d6b146105c35780636a4f76911461060157600080fd5b80635722647b146103f657806359eba454146104345780635a611f4e146104545780635aa6e675146104745780635cd82390146104ac57600080fd5b806330adf81f1161020e57806330adf81f146103105780633644e5151461035257806341c0e1b51461038657806346e142fa1461039b57806349f6d2dc146103e357600080fd5b80630b73a18f1461025f578063230244081461027f578063275074581461029257806327d097c6146102d05780632e1a7d4d146102f057600080fd5b3661025a5761025833610968565b005b600080fd5b34801561026b57600080fd5b5061025861027a3660046149b8565b61098f565b61025861028d366004614a05565b610968565b34801561029e57600080fd5b506102bb6102ad366004614a20565b6001600160601b0316151590565b60405190151581526020015b60405180910390f35b3480156102dc57600080fd5b506102586102eb366004614a39565b610a2d565b3480156102fc57600080fd5b506102bb61030b366004614a20565b610b08565b34801561031c57600080fd5b506103447fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a281565b6040519081526020016102c7565b34801561035e57600080fd5b506103447f000000000000000000000000000000000000000000000000000000000000000081565b34801561039257600080fd5b50610258610b62565b3480156103a757600080fd5b506103bb6103b6366004614ac8565b610baa565b604080519586526020860194909452928401919091526060830152608082015260a0016102c7565b6103446103f1366004614b41565b610bd6565b34801561040257600080fd5b50610344610411366004614a39565b600560209081526000938452604080852082529284528284209052825290205481565b34801561044057600080fd5b506102bb61044f366004614b9f565b610d41565b34801561046057600080fd5b5061025861046f366004614bea565b610dca565b34801561048057600080fd5b50600354610494906001600160a01b031681565b6040516001600160a01b0390911681526020016102c7565b3480156104b857600080fd5b506102586104c7366004614a05565b610e24565b3480156104d857600080fd5b506104ec6104e7366004614c07565b610e84565b6040805183516001600160a01b0316815260208085015115158183015284830151151582840152606080860151818401526080808701518185015260a0968701511515878501528551151560c0808601919091529286015160e0850152938501516101008401528401516101208301529183015115156101408201529282015161016084015201516101808201526101a0016102c7565b34801561058f57600080fd5b5061025861059e366004614bea565b610f87565b3480156105af57600080fd5b506102586105be366004614a05565b610fd1565b3480156105cf57600080fd5b506103446105de366004614a39565b600460209081526000938452604080852082529284528284209052825290205481565b61025861060f366004614c3a565b611027565b34801561062057600080fd5b5061063461062f366004614ca1565b61113a565b6040805194855260208501939093529183015260608201526080016102c7565b34801561066057600080fd5b5061034461066f366004614a05565b60066020526000908152604090205481565b34801561068d57600080fd5b5061034461069c366004614a05565b60086020526000908152604090205481565b3480156106ba57600080fd5b506106ce6106c9366004614a39565b611171565b60408051835181526020808501518183015284830151828401526060948501518583015283516001600160a01b0316608083015283015160a08201529082015160c082015291015160e0820152610100016102c7565b34801561073057600080fd5b5061025861073f366004614a20565b61124d565b34801561075057600080fd5b5061034461075f366004614d09565b6112e9565b34801561077057600080fd5b5061025861077f366004614a05565b61134a565b34801561079057600080fd5b5061034461079f366004614d3c565b6113ec565b3480156107b057600080fd5b506102586107bf366004614d8b565b6115be565b3480156107d057600080fd5b506103bb6107df366004614e21565b6118b7565b6102586118f3565b3480156107f857600080fd5b50610344610807366004614e9b565b600760209081526000948552604080862082529385528385208152918452828420909152825290205481565b34801561083f57600080fd5b5061085361084e366004614c07565b6118fe565b604080519283526020830191909152016102c7565b34801561087457600080fd5b50610258610883366004614c07565b6119fb565b34801561089457600080fd5b506102bb6108a3366004614c07565b611a6c565b3480156108b457600080fd5b506102586108c3366004614a39565b611aa7565b3480156108d457600080fd5b506103446108e3366004614c07565b611b67565b3480156108f457600080fd5b50610258610903366004614a39565b611b9f565b34801561091457600080fd5b50600054610494906001600160a01b031681565b34801561093457600080fd5b50610634610943366004614eef565b611c8c565b34801561095457600080fd5b50610258610963366004614a20565b611cb3565b60006109756000806118fe565b50905061098181611d90565b61098b8234611dd3565b5050565b610997611e2f565b6001600160a01b0385811660008181526002602090815260408083209489168084529482529182902080546001600160f81b0316600160f81b17905581516001815291517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a3610a10858585611aa7565b610a1b858584611b9f565b610a26858583610a2d565b5050505050565b610a35611e2f565b808162ffffff1614610a8e5760405162461bcd60e51b815260206004820152601f60248201527f6d67762f636f6e6669672f6f666665725f676173626173652f3234626974730060448201526064015b60405180910390fd5b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805462ffffff60601b191662ffffff60601b606088901b1617905590518481527fc5859916e5f3fc1ed4d2cfb8c7a6cf709580f228fa0c9d9e0fa468744c7e4a9191015b60405180910390a3505050565b6000610b143383611e9a565b60405133908390600081818185875af1925050503d8060008114610b54576040519150601f19603f3d011682016040523d82523d6000602084013e610b59565b606091505b50909392505050565b610b6a611e2f565b60015464ff000000001916640100000000176001556040517fbe26733c2bf6ff3ea5ba8cfe744422bd49052ff9ed5685c9e81e6f9321dbaddd90600090a1565b6000806000806000610bc08a8a8a8a8a33611f5f565b939e929d50909b50995090975095505050505050565b6000610be0614864565b610bea89896118fe565b6101208301819052610100830191909152610c04906120ac565b610c188161010001518261012001516120f8565b3415610c2857610c283334611dd3565b61012081015160181c63ffffffff166001016080820181905263ffffffff811614610c8b5760405162461bcd60e51b81526020600482015260136024820152726d67762f6f6666657249644f766572666c6f7760681b6044820152606401610a85565b6080810151610120820151610cb79160181b66ffffffff0000001666ffffffff00000019919091161790565b6101208201526001600160a01b03808a16825288166020820152604081018790526060810186905260a0810185905260c0810184905260e08101839052610cff816000612148565b61012081015181516001600160a01b03908116600090815260026020908152604080832082870151909416835292905220556080015198975050505050505050565b6001600160a01b038085166000818152600760209081526040808320888616808552908352818420338086529084528285209689168552959092528083208690555191939092917f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d91610db79188908890614f3c565b60405180910390a3506001949350505050565b610dd2611e2f565b60015460ff60501b191660ff60501b605083901b161760015560405181151581527f9b84fe4d9ffc14a6f7ec50c18884ee0d4bb8165aa718a28558df12ab4bd32b14906020015b60405180910390a150565b610e2c611e2f565b6001546001600160601b03166001600160601b0319606083901b16176001556040516001600160a01b03821681527ff592e42c32883b35bebfbf9d9b801570a25d5ccbba452310746ad2cfd20d548f90602001610e19565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152610efa6040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b600080610f0786866118fe565b91509150610f71826040805160c081018252606083811c8252605884901c60ff9081161515602080850191909152605086901c82161515848601529385901c61ffff1691830191909152602884901c62ffffff1660808301529290911c909116151560a082015290565b9350610f7c816128c5565b925050509250929050565b610f8f611e2f565b600154610f9c9082612973565b60015560405181151581527fbf39fbfab835c119637f4dbc4fb0f428c559c210200405d1ec25ddb50a93f9d490602001610e19565b610fd9611e2f565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f3090602001610e19565b61102f614864565b61103989896118fe565b6101208301819052610100830191909152611053906120ac565b6110678161010001518261012001516120f8565b3415611077576110773334611dd3565b6001600160a01b03808a16808352908916602080840182905260408085018b9052606085018a90526080850186905260a0850189905260c0850188905260e0850187905260009384526004825280842092845291815281832085845290529020546101408201526101208101516110ef826001612148565b610120820151811461112e5761012082015182516001600160a01b03908116600090815260026020908152604080832082880151909416835292905220555b50505050505050505050565b60008060008061114e8a8a8a8a8a8a61298a565b929650909450925090506111648a8a8786612c72565b9650965096509692505050565b61119c6040518060800160405280600081526020016000815260200160008152602001600081525090565b6111d0604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b6001600160a01b03808616600090815260046020908152604080832093881683529281528282208683529052205461120781612d72565b6001600160a01b038088166000908152600560209081526040808320938a1683529281528282208883529052205490935061124181612dd4565b92505050935093915050565b611255611e2f565b808162ffffff16146112a95760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f32346269747300000000000000006044820152606401610a85565b6001546112b69082611d71565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001610e19565b600033301461133a5760405162461bcd60e51b815260206004820152601f60248201527f6d67762f696e766572746564466c6173686c6f616e2f70726f746563746564006044820152606401610a85565b61134383612e43565b9392505050565b611352611e2f565b6001600160a01b03811661139e5760405162461bcd60e51b815260206004820152601360248201527206d67762f636f6e6669672f676f762f6e6f743606c1b6044820152606401610a85565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001610e19565b6000806113f986866118fe565b915050611405816120ac565b6001600160a01b038087166000818152600460209081526040808320948a16808452948252808320898452825280832054938352600582528083209483529381528382208883529052919091205461145d8160601c90565b6001600160a01b0316336001600160a01b0316146114bd5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f726574726163744f666665722f756e617574686f72697a65640000006044820152606401610a85565b6001600160601b0382161561152157826114ed89896114dc8660e01c90565b60c087901c63ffffffff1688612fc4565b935080841461151f576001600160a01b03808a166000908152600260209081526040808320938c168352929052208490555b505b61152f88888885858a6130a4565b841561156657603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca00020293506115663385611dd3565b866001600160a01b0316886001600160a01b03167fe2ce51fba856682424155a2d89b2ad1d2adde6ea0a9e3115b4b474cd6cb1798b886040516115ab91815260200190565b60405180910390a3505050949350505050565b428410156116035760405162461bcd60e51b81526020600482015260126024820152711b59dd8bdc195c9b5a5d0bd95e1c1a5c995960721b6044820152606401610a85565b6001600160a01b03878116600081815260086020908152604080832080546001810190915581517fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a2818501528f8716818401528e871660608201526080810195909552948b1660a085015260c084018a905260e084018590526101008085018a9052815180860390910181526101208501909152805191012061190160f01b6101408401527f0000000000000000000000000000000000000000000000000000000000000000610142840152610162830152906101820160408051601f198184030181528282528051602091820120600080855291840180845281905260ff89169284019290925260608301879052608083018690529092509060019060a0016020604051602081039080840390855afa158015611745573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381161580159061177b5750896001600160a01b0316816001600160a01b0316145b6117c75760405162461bcd60e51b815260206004820152601b60248201527f6d67762f7065726d69742f696e76616c69645369676e617475726500000000006044820152606401610a85565b87600760008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008b6001600160a01b03166001600160a01b03168152602001908152602001600020819055508a6001600160a01b03168c6001600160a01b03167f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d8c8c8c6040516118a193929190614f3c565b60405180910390a3505050505050505050505050565b60008060008060006118cd8b8b8b8b8b8b611f5f565b9398509196509450925090506118e58b8b8886612c72565b965096509650965096915050565b6118fc33610968565b565b6001546001600160a01b03838116600090815260026020908152604080832093861683529290522054605882901c60ff16156119f4576000806119418460601c90565b604051636968abd360e01b81526001600160a01b03888116600483015287811660248301529190911690636968abd3906044016040805180830381865afa158015611990573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119b49190614f60565b915091506119c58261ffff81161490565b156119d7576119d48483611d4e565b93505b6001600160701b03811681036119f157610f7c8382613119565b50505b9250929050565b611a03611e2f565b6001600160a01b03828116600081815260026020908152604080832094861680845294825280832080546001600160f81b031690558051928352517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a35050565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054605881901c60ff1615155b949350505050565b611aaf611e2f565b6101f4811115611af85760405162461bcd60e51b815260206004820152601460248201527306d67762f636f6e6669672f6665652f3c3d3530360641b6044820152606401610a85565b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805461ffff60e81b191661ffff60e81b60e888901b1617905590518481527f44a6d70a601a6f8a85c075467e9d7245897140cbf6dd505c9d9d764459f5fb649101610afb565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054603881901c63ffffffff16611a9f565b611ba7611e2f565b6001600160701b0381168114611bff5760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f64656e736974792f313132626974730000000000006044820152606401610a85565b6001600160a01b03808416600090815260026020908152604080832093861683529290522054611c2f9082613119565b6001600160a01b038481166000818152600260209081526040808320948816808452948252918290209490945551848152919290917f95f1a495c6d9d1a215995408f6ad898c2b33798d6eb3cf3220b4c6cc8b61b0649101610afb565b600080600080611ca089898989893361298a565b929c919b50995090975095505050505050565b611cbb611e2f565b61ffff81168114611d0e5760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f3136626974730000000000006044820152606401610a85565b600154611d1b9082611d4e565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001610e19565b60401b69ffff00000000000000001669ffff000000000000000019919091161790565b60281b67ffffff00000000001667ffffff000000000019919091161790565b602081901c60ff1615611dd05760405162461bcd60e51b81526020600482015260086024820152671b59dd8bd919585960c21b6044820152606401610a85565b50565b6001600160a01b03821660008181526006602052604090819020805484019055517f1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa09490611e239084815260200190565b60405180910390a25050565b6003546001600160a01b0316331480611e4757503330145b80611e5b57506003546001600160a01b0316155b6118fc5760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b6044820152606401610a85565b6001600160a01b03821660009081526006602052604090205481811015611f035760405162461bcd60e51b815260206004820152601960248201527f6d67762f696e73756666696369656e7450726f766973696f6e000000000000006044820152606401610a85565b6001600160a01b038316600081815260066020526040908190208484039055517f59c79d79be0fadf59fe689b6952b7ebe90201a3a1f00d4a31982377890bc604690611f529085815260200190565b60405180910390a2505050565b6000806000806000611f6f6148d0565b6001600160a01b03808d1682528b166020820152611f8d8c8c6118fe565b61010083015260e0820152611fa061492e565b6001600160a01b03881660a082015288151560c082015260e0820151610100830151611fcc91906120f8565b611fda8261010001516120ac565b6040517fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b990600090a161200f81838d8d61314a565b60808401519299509097509550612025906135d9565b602080830151835160808085015160e0860151604080518d81529687018c905286019190915260608501526001600160a01b03808d1694938116939216917ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec47910160405180910390a4806080015193508060e0015192505050965096509650965096915050565b605881901c60ff1615611dd05760405162461bcd60e51b81526020600482015260146024820152731b59dd8bdc99595b9d1c985b98de531bd8dad95960621b6044820152606401610a85565b61210182611d90565b61210d8160f81c151590565b61098b5760405162461bcd60e51b815260206004820152600c60248201526b6d67762f696e61637469766560a01b6044820152606401610a85565b60c082015161ffff81161461219f5760405162461bcd60e51b815260206004820152601e60248201527f6d67762f77726974654f666665722f67617370726963652f31366269747300006044820152606401610a85565b61010082015160401c61ffff168260c0015110156121ca5761010082015160401c61ffff1660c08301525b61010082015160281c62ffffff168260a00151111561222b5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f6761737265712f746f6f486967680000006044820152606401610a85565b600082606001511161227f5760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f746f6f4c6f7700000000006044820152606401610a85565b61012082015160781c6001600160701b031661012083015160601c62ffffff168360a001510102826060015110156122f95760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f64656e736974792f746f6f4c6f770000006044820152606401610a85565b60608201516001600160601b038116146123555760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f39366269747300000000006044820152606401610a85565b60408201516001600160601b038116146123b15760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f77616e74732f39366269747300000000006044820152606401610a85565b6000806123bd84613677565b9150915083602001516001600160a01b031684600001516001600160a01b03167f2b101f9ef8ca2761d91bea55ab50a4d051e9248088ff7314ddb8826839544c2a33876040015188606001518960c001518a60a001518b608001518a60405161246297969594939291906001600160a01b03979097168752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b60405180910390a383516001600160a01b03908116600090815260056020908152604080832082890151909416835292815282822060808801518352905290812054841561253c576124b48160601c90565b6001600160a01b0316336001600160a01b0316146125145760405162461bcd60e51b815260206004820152601c60248201527f6d67762f7570646174654f666665722f756e617574686f72697a6564000000006044820152606401610a85565b603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca00020291505b841580612556575060a0860151604882901c62ffffff1614155b8061256d575060c0860151602082901c61ffff1614155b8061258e575061012086015160601c62ffffff16603082901c62ffffff1614155b156126385761012086015160009060601c62ffffff1690506125fe338860a00151838a60c0015160201b65ffff000000001660309190911b68ffffff0000000000001660489290921b6bffffff0000000000000000001660609390931b6001600160601b03191692909217171790565b87516001600160a01b039081166000908152600560209081526040808320828d0151909416835292815282822060808c0151835290522055505b5060c08501516101208601516000919060601c62ffffff168760a001510102633b9aca00029050818111156126785761267333838303611e9a565b61268c565b8181101561268c5761268c33828403611dd3565b506101408501516001600160601b031615806126b0575061014085015160e01c8314155b1561283c57821561273657608085015185516001600160a01b039081166000908152600460209081526040808320828b01519094168352928152828220878352905220546126fd916138a3565b85516001600160a01b039081166000908152600460209081526040808320828b0151909416835292815282822087835290522055612769565b60808501516101208601516127629160381b63ffffffff60381b1663ffffffff60381b19919091161790565b6101208601525b81156127e057608085015185516001600160a01b039081166000908152600460208181526040808420828c018051871686529083528185208986528352818520548c518716865293835281852090519095168452938152838320878452905291902060e09290921b6001600160e01b039091161790555b8380156127fa57506101408501516001600160601b031615155b1561283c576128358560000151866020015161281b88610140015160e01c90565b61014089015160c01c63ffffffff16896101200151612fc4565b6101208601525b60408501516060808701516000926001600160601b03909116911b6bffffffffffffffffffffffff60601b1660c085901b63ffffffff60c01b1660e087901b17171786516001600160a01b039081166000908152600460209081526040808320828c015190941683529281528282206080909a0151825298909852909620959095555050505050565b6129096040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b60f882901c1515815260e882901c61ffff166020820152607882901c6001600160701b03166040820152606082811c62ffffff1690820152605882901c60ff1615156080820152603882901c63ffffffff90811660a083015260189290921c90911660c082015290565b60581b60ff60581b1660ff60581b19919091161790565b60008060008087886001600160a01b0316146129e85760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657257616e74732f313630626974730000006044820152606401610a85565b86876001600160a01b031614612a405760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657247697665732f313630626974730000006044820152606401610a85565b612a486148d0565b6001600160a01b03808c1682528a166020820152612a668b8b6118fe565b610100830181905260e083019190915260381c63ffffffff1660408083019182526001600160a01b03808e16600090815260046020908152838220928f1682529182528281209351815292905290205460608201526080810189905260a08101889052612ad161492e565b898152602081018990526001600160a01b03871660a082015287151560c082015260e0820151610100830151612b0791906120f8565b612b158261010001516120ac565b610100820151612b26906001612973565b82610100018181525050816101000151600260008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020819055507fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b960405160405180910390a1612bba818360016138c0565b612bc781608001516135d9565b866001600160a01b03168b6001600160a01b03168d6001600160a01b03167ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec478460400151856060015186608001518760e00151604051612c40949392919093845260208401929092526040830152606082015260800190565b60405180910390a460408101516060820151608083015160e090930151919e909d50919b509950975050505050505050565b6001600160a01b0380851660009081526007602090815260408083208785168452825280832093861683529281528282203383529052205481811015612ced5760405162461bcd60e51b815260206004820152601060248201526f6d67762f6c6f77416c6c6f77616e636560801b6044820152606401610a85565b6001600160a01b0380861660008181526007602090815260408083208986168085529083528184209589168452948252808320338085529252918290208686039081905591517f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d92612d63928992909190614f3c565b60405180910390a35050505050565b612d9d6040518060800160405280600081526020016000815260200160008152602001600081525090565b60e082901c815263ffffffff60c083901c1660208201526001600160601b03606083811c8216604084015292169181019190915290565b612e08604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b606082811c8252604883901c62ffffff908116602080850191909152603085901c90911660408401529290921c61ffff169181019190915290565b600080636c49c32c60e01b83604051602401612e5f9190614f84565b60408051808303601f190181529190526020810180516001600160e01b0319939093166001600160e01b0390931692909217909152905060c0830135604881901c62ffffff169060601c60005a9050826040820482031015612f0157604080516060810182527f6d67762f6e6f74456e6f756768476173466f724d616b65725472616465000000815260006020820181905291810191909152612f0190606081fd5b600080612f0f848688613b32565b915091505a8303965081612f5557612f5560405180606001604052806e1b59dd8bdb585ad95c94995d995c9d608a1b81526020018960001b815260200183815250606081fd5b6000612f73612f6760208b018b614a05565b86308c60800135613b60565b905080612fb857612fb86040518060600160405280741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b81526020018a60001b815260200184815250606081fd5b50505050505050919050565b60008315613037576001600160a01b03808716600090815260046020908152604080832093891683529281528282208783529052205461300490846138a3565b6001600160a01b038088166000908152600460209081526040808320938a16835292815282822088835290522055613054565b63ffffffff60381b19821663ffffffff60381b603885901b161791505b821561309b576001600160a01b038681166000908152600460209081526040808320938916835292815282822086835290522080546001600160e01b031660e086901b1790555b50949350505050565b6001600160601b03198316925080156130c45765ffff0000000019821691505b506001600160a01b039485166000818152600460209081526040808320979098168083529681528782208683528152878220949094559081526005835285812094815293825284842092845291905291902055565b60781b6dffffffffffffffffffffffffffff60781b166dffffffffffffffffffffffffffff60781b19919091161790565b60008080805b848110156135ce57600060408901819052606089015285858281811061317857613178615016565b90506080020160006004811061319057613190615016565b60209081029190910135604089810191825289516001600160a01b039081166000908152600485528281208c86018051841683529086528382208551835286528382205460608e019081528d518416835260058752848320915190931682528552828120935181529290935290205460c0890152516001600160601b0316158061325c575085858281811061322757613227615016565b90506080020160036004811061323f5761323f615016565b602002013561325a8860c0015162ffffff60489190911c1690565b115b6135c65785858281811061327257613272615016565b90506080020160016004811061328a5761328a615016565b60200201358686838181106132a1576132a1615016565b9050608002016001600481106132b9576132b9615016565b60200201356001600160601b0316146133145760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657257616e74732f393662697473000000006044820152606401610a85565b85858281811061332657613326615016565b90506080020160026004811061333e5761333e615016565b602002013586868381811061335557613355615016565b90506080020160026004811061336d5761336d615016565b60200201356001600160601b0316146133c85760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657247697665732f393662697473000000006044820152606401610a85565b8585828181106133da576133da615016565b9050608002016001600481106133f2576133f2615016565b6020020135608088015285858281811061340e5761340e615016565b90506080020160026004811061342657613426615016565b602002013560a0880152610100870151613441906001612973565b610100880181905287516001600160a01b039081166000908152600260209081526040808320828d015190941683529290529081209190915580806134868b8b613c48565b925092509250806f6d67762f74726164655375636365737360801b036134ad576001870196505b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b14613501576134fa8a600001518b602001516134e18d6060015160e01c90565b60608e015160c01c63ffffffff168e6101000151612fc4565b6101008b01525b6101008a0151613512906000612973565b8a610100018181525050896101000151600260008c600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008c602001516001600160a01b03166001600160a01b03168152602001908152602001600020819055506135808b8b614248565b61358a8b8b61434a565b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b146135b0576135b08b8b858585614436565b8a60400151860195508a60600151850194505050505b600101613150565b509450945094915050565b8015611dd057604051600090339083908381818185875af1925050503d8060008114613621576040519150601f19603f3d011682016040523d82523d6000602084013e613626565b606091505b505090508061098b5760405162461bcd60e51b815260206004820152601760248201527f6d67762f73656e6450656e616c747952657665727465640000000000000000006044820152606401610a85565b60008060008060008560e0015190506000866080015182146136cc5786516001600160a01b039081166000908152600460209081526040808320828c01519094168352928152828220858352905220546136d3565b8661014001515b90506001600160601b03811661372c5761012087015160381c63ffffffff1687516001600160a01b039081166000908152600460209081526040808320828d015190941683529281528282208483529052205490925090505b6137378782846144bc565b156137d15760005b60c082901c63ffffffff16156137b9575086516001600160a01b039081166000908152600460209081526040808320828c0151909416835292815282822063ffffffff60c086901c168084529152919020549061379d8983836144bc565b156137ad578093508192506137b3565b506137b9565b5061373f565b8260c083901c63ffffffff16909550935061385a9050565b60005b6137de8260e01c90565b156138475760006137ef8360e01c90565b89516001600160a01b039081166000908152600460209081526040808320828f0151909416835292815282822084835290522054925090506138328983836144bc565b1561383d5750613847565b92509050806137d4565b6138518260e01c90565b94509192508291505b8660800151841461386b5783613875565b61014087015160e01c5b876080015184146138865783613896565b61014088015160c01c63ffffffff165b9550955050505050915091565b60c01b63ffffffff60c01b1663ffffffff60c01b19919091161790565b8080156138e757508260c001516138de5760008260a00151116138e7565b60008260800151115b80156138f7575060008260400151115b15613ab35781516001600160a01b03908116600090815260056020908152604080832082870151909416835292815282822083860151835290529081205460c084015280806139468686613c48565b608088015160a089015160408a015160608b015160c08c015196995094975092955090939092906e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613a3d5760408b01518b51116139995760006139a2565b60408b01518b51035b60808b015260608b81015160208d01510360a08c01528a015160c01c63ffffffff168a6040018181525050600460008b600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b602001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b604001518152602001908152602001600020548a60600181815250505b613a5d8b8b886e1b59dd8bdb9bdd115e1958dd5d1959608a1b14156138c0565b60408a0183905260808a0185905260a08a0184905260608a0182905260c08a018190526e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613aa657613aa68b8b8a8a8a614436565b5050505050505050505050565b613ad28260000151836020015160008560400151866101000151612fc4565b6101008301819052613ae5906000612973565b610100830181905282516001600160a01b0390811660009081526002602090815260408083208288015190941683529290522055613b238383614248565b613b2d838361434a565b505050565b600080613b3d61497e565b60648185516020870160008a8af192508060448415020151915050935093915050565b6000806323b872dd60e01b858585604051602401613b8093929190614f3c565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509050600080876001600160a01b031683604051613bd0919061502c565b6000604051808303816000865af19150503d8060008114613c0d576040519150601f19603f3d011682016040523d82523d6000602084013e613c12565b606091505b5091509150818015613c3c575080511580613c3c575080806020019051810190613c3c9190615067565b98975050505050505050565b600080600080613c6885606001516001600160601b0360609190911c1690565b90506000613c8086606001516001600160601b031690565b608087015160a0880151919250908083028483021115613cc05750600095508594506e1b59dd8bdb9bdd115e1958dd5d1959608a1b935061424192505050565b8860c001518015613cd057508183105b80613ce757508860c00151158015613ce757508084105b15613cff576080880183905260a08801849052613d76565b8860c0015115613d4a57838202838181613d1b57613d1b615000565b0615613d28576001613d2b565b60005b60ff16848281613d3d57613d3d615000565b040160a08a015250613d76565b83600003613d5e5760808801839052613d76565b8381840281613d6f57613d6f615000565b0460808901525b50505050600080306001600160a01b031663aa4dd28260e01b878960a00151604051602401613da69291906150ea565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051613de4919061502c565b6000604051808303816000865af19150503d8060008114613e21576040519150601f19603f3d011682016040523d82523d6000602084013e613e26565b606091505b50915091508115613f805780806020019051810190613e459190615112565b94506f6d67762f74726164655375636365737360801b925085602001516001600160a01b031686600001516001600160a01b03167f1d81940ff2c3ac549c8acefd7c1b2ffb24aacc8b3cfa309c22abc3de79727f9d88604001518a60a001518a608001518b60a00151604051613edd94939291909384526001600160a01b039290921660208401526040830152606082015260800190565b60405180910390a360e086015160501c60ff1615613f5b5760e086015160a088015160405163cac1827160e01b815260609290921c9163cac1827191613f28918a91906004016150ea565b600060405180830381600087803b158015613f4257600080fd5b505af1158015613f56573d6000803e3d6000fd5b505050505b6080860151604088018051909101905260a08601516060880180519091019052614206565b602081015160408201516060830151909650945092506e1b59dd8bdb585ad95c94995d995c9d608a1b831480613fcd575082741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b145b80613fee575082731b59dd8bdb585ad95c949958d95a5d9951985a5b60621b145b156141005785602001516001600160a01b031686600001516001600160a01b03167f1d59c048edb5397821854bd12cbe02242b82101c677f949d076d14eb7bd8343688604001518a60a001518a608001518b60a001518960405161407d9594939291909485526001600160a01b0393909316602085015260408401919091526060830152608082015260a00190565b60405180910390a360e086015160501c60ff16156140fb5760e086015160a0880151604051631159507360e01b815260609290921c916311595073916140c8918a91906004016150ea565b600060405180830381600087803b1580156140e257600080fd5b505af11580156140f6573d6000803e3d6000fd5b505050505b614206565b827f6d67762f6e6f74456e6f756768476173466f724d616b657254726164650000000361416f5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6e6f74456e6f756768476173466f724d616b657254726164650000006044820152606401610a85565b82741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b036141ce5760405162461bcd60e51b81526020600482015260156024820152741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b6044820152606401610a85565b60405162461bcd60e51b815260206004820152600d60248201526c36b3bb17b9bbb0b822b93937b960991b6044820152606401610a85565b61423e86600001518760200151886040015189606001518a60c00151886f6d67762f74726164655375636365737360801b14156130a4565b50505b9250925092565b6101008101516000906127109060e81c61ffff168460400151028161426f5761426f615000565b04905080156142e557604083018051829003905260e0830181905281516000546142a391906001600160a01b031683614562565b6142e55760405162461bcd60e51b81526020600482015260136024820152721b59dd8bd99959551c985b9cd9995c91985a5b606a1b6044820152606401610a85565b604083015115613b2d5761430682600001518460a001518560400151614562565b613b2d5760405162461bcd60e51b815260206004820152601560248201527436b3bb17a6b3bb2330b4b62a37a830bcaa30b5b2b960591b6044820152606401610a85565b60a08201518151602083015160408086015160608701519151631154020b60e01b81526001600160a01b039485166004820152928416602484015260448301526064820152911690631154020b90608401600060405180830381600087803b1580156143b557600080fd5b505af11580156143c9573d6000803e3d6000fd5b5050505060006143e782602001518460a00151308660600151613b60565b905080613b2d5760405162461bcd60e51b815260206004820152601760248201527f6d67762f74616b65724661696c546f506179546f74616c0000000000000000006044820152606401610a85565b806f6d67762f74726164655375636365737360801b036144595761445984614637565b60c084015160481c62ffffff1680841115614472578093505b61448085858303858561467c565b84019350816f6d67762f74726164655375636365737360801b146144b4576144a885856147d2565b60808701805190910190525b505050505050565b6000816000036144ce57506001611343565b60408401516060858101516001600160601b039186901c82169291861691908084028284028082036145555789516001600160a01b039081166000908152600560209081526040808320828f015190941683529281528282208b835290529081205460481c62ffffff1660a08c015194029590930294909410159550611343945050505050565b1194506113439350505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839182918816906145c090859061502c565b6000604051808303816000865af19150503d80600081146145fd576040519150601f19603f3d011682016040523d82523d6000602084013e614602565b606091505b509150915081801561462c57508051158061462c57508080602001905181019061462c9190615067565b979650505050505050565b614657816020015161464d8360c0015160601c90565b8360a00151614562565b611dd057602081015160005460a083015161098b92916001600160a01b031690614562565b600080633d3d130d60e01b866040518060400160405280878152602001868152506040516024016146ae92919061512b565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319939093169290921790915260c087015190915060601c60005a90508660408204820310156147465760405162461bcd60e51b815260206004820181905260248201527f6d67762f6e6f74456e6f756768476173466f724d616b6572506f7374686f6f6b6044820152606401610a85565b600080614754848a87613b32565b915091505a83039550816147c55789602001516001600160a01b03168a600001516001600160a01b03167f51d5a3ecf332626d83c8207fe9bd22f38801f578c7eb222e2d811cd1b4c629a58c60400151846040516147bc929190918252602082015260400190565b60405180910390a35b5050505050949350505050565b60c082015160009062ffffff604882901c81169161ffff602082901c1660309190911c909116820102633b9aca00028184111561480d578193505b61010085015160009060601c62ffffff1660e08701519086019060401c61ffff16633b9aca0002029050818111156148425750805b61485b6148538760c0015160601c90565b828403611dd3565b95945050505050565b60405180610160016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60405180610120016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806101000160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001600015158152602001600081525090565b60405180608001604052806004906020820280368337509192915050565b80356001600160a01b03811681146149b357600080fd5b919050565b600080600080600060a086880312156149d057600080fd5b6149d98661499c565b94506149e76020870161499c565b94979496505050506040830135926060810135926080909101359150565b600060208284031215614a1757600080fd5b6113438261499c565b600060208284031215614a3257600080fd5b5035919050565b600080600060608486031215614a4e57600080fd5b614a578461499c565b9250614a656020850161499c565b9150604084013590509250925092565b60008083601f840112614a8757600080fd5b50813567ffffffffffffffff811115614a9f57600080fd5b6020830191508360208260071b85010111156119f457600080fd5b8015158114611dd057600080fd5b600080600080600060808688031215614ae057600080fd5b614ae98661499c565b9450614af76020870161499c565b9350604086013567ffffffffffffffff811115614b1357600080fd5b614b1f88828901614a75565b9094509250506060860135614b3381614aba565b809150509295509295909350565b600080600080600080600060e0888a031215614b5c57600080fd5b614b658861499c565b9650614b736020890161499c565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b60008060008060808587031215614bb557600080fd5b614bbe8561499c565b9350614bcc6020860161499c565b9250614bda6040860161499c565b9396929550929360600135925050565b600060208284031215614bfc57600080fd5b813561134381614aba565b60008060408385031215614c1a57600080fd5b614c238361499c565b9150614c316020840161499c565b90509250929050565b600080600080600080600080610100898b031215614c5757600080fd5b614c608961499c565b9750614c6e60208a0161499c565b979a9799505050506040860135956060810135956080820135955060a0820135945060c0820135935060e0909101359150565b60008060008060008060c08789031215614cba57600080fd5b614cc38761499c565b9550614cd16020880161499c565b945060408701359350606087013592506080870135614cef81614aba565b9150614cfd60a0880161499c565b90509295509295509295565b600080828403610140811215614d1e57600080fd5b61012080821215614d2e57600080fd5b849350610f7c81860161499c565b60008060008060808587031215614d5257600080fd5b614d5b8561499c565b9350614d696020860161499c565b9250604085013591506060850135614d8081614aba565b939692955090935050565b60008060008060008060008060006101208a8c031215614daa57600080fd5b614db38a61499c565b9850614dc160208b0161499c565b9750614dcf60408b0161499c565b9650614ddd60608b0161499c565b955060808a0135945060a08a0135935060c08a013560ff81168114614e0157600080fd5b8093505060e08a013591506101008a013590509295985092959850929598565b60008060008060008060a08789031215614e3a57600080fd5b614e438761499c565b9550614e516020880161499c565b9450604087013567ffffffffffffffff811115614e6d57600080fd5b614e7989828a01614a75565b9095509350506060870135614e8d81614aba565b9150614cfd6080880161499c565b60008060008060808587031215614eb157600080fd5b614eba8561499c565b9350614ec86020860161499c565b9250614ed66040860161499c565b9150614ee46060860161499c565b905092959194509250565b600080600080600060a08688031215614f0757600080fd5b614f108661499c565b9450614f1e6020870161499c565b935060408601359250606086013591506080860135614b3381614aba565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60008060408385031215614f7357600080fd5b505080516020909101519092909150565b61012081016001600160a01b0380614f9b8561499c565b16835280614fab6020860161499c565b1660208401525060408301356040830152606083013560608301526080830135608083015260a083013560a083015260c083013560c083015260e083013560e083015261010080840135818401525092915050565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000825160005b8181101561504d5760208186018101518583015201615033565b8181111561505c576000828501525b509190910192915050565b60006020828403121561507957600080fd5b815161134381614aba565b60018060a01b038082511683528060208301511660208401525060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152505050565b61014081016150f98285615084565b6001600160a01b03929092166101209190910152919050565b60006020828403121561512457600080fd5b5051919050565b610160810161513a8285615084565b82516101208301526020830151610140830152939250505056fea2646970667358221220f1963d9c2b3d628f1434924334993b3b07ae40980b0db947c650656b65407bf364736f6c634300080e003360a06040523480156200001157600080fd5b50604051620055e4380380620055e4833981016040819052620000349162000484565b828282604051806040016040528060088152602001674d616e67726f766560c01b815250808484847f72201d073f249840099a96530e189c4291c1852040b1e96ff1f606db656be4ff60405160405180910390a1620000938362000165565b6200009e82620001c4565b620000a98162000277565b620000b48362000327565b5050815160208084019190912060408051808201825260018152603160f81b9084015280517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f938101939093528201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c001905060408051601f19818403018152919052805160209091012060805250620004c99650505050505050565b6200016f620003d8565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f30906020015b60405180910390a150565b620001ce620003d8565b61ffff81168114620002275760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f31366269747300000000000060448201526064015b60405180910390fd5b62000243816001546200044960201b62001e221790919060201c565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001620001b9565b62000281620003d8565b808162ffffff1614620002d75760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f323462697473000000000000000060448201526064016200021e565b620002f3816001546200046760201b62001e451790919060201c565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001620001b9565b62000331620003d8565b6001600160a01b038116620003895760405162461bcd60e51b815260206004820152601360248201527f6d67762f636f6e6669672f676f762f6e6f74300000000000000000000000000060448201526064016200021e565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001620001b9565b6003546001600160a01b0316331480620003f157503330145b806200040657506003546001600160a01b0316155b620004475760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b60448201526064016200021e565b565b60401b69ffff00000000000000001661ffff60401b19919091161790565b60281b67ffffff00000000001662ffffff60281b19919091161790565b6000806000606084860312156200049a57600080fd5b83516001600160a01b0381168114620004b257600080fd5b602085015160409095015190969495509392505050565b6080516150f8620004ec60003960008181610364015261177e01526150f86000f3fe60806040526004361061024a5760003560e01c80636d27de6711610139578063b60d4288116100b6578063dc7e98df1161007a578063dc7e98df146108a8578063def5ddaa146108c8578063fbb66910146108e8578063fbfa77cf14610908578063fbffe5fd14610928578063fcaa7e2e1461094857600080fd5b8063b60d4288146107e4578063c7bb25d0146107ec578063cbf75c9a14610833578063d0ee509914610868578063db20266f1461088857600080fd5b8063aa4dd282116100fd578063aa4dd28214610744578063ab033ea914610764578063ad97db1b14610784578063b09d2a16146107a4578063b2b12057146107c457600080fd5b80636d27de671461061457806370a08231146106545780637ecebe00146106815780638c66715c146106ae57806395999ee31461072457600080fd5b80635722647b116101c7578063644e67031161018b578063644e6703146104cc5780636804f613146105835780636817031b146105a357806368c13d6b146105c35780636a4f76911461060157600080fd5b80635722647b146103f657806359eba454146104345780635a611f4e146104545780635aa6e675146104745780635cd82390146104ac57600080fd5b806330adf81f1161020e57806330adf81f146103105780633644e5151461035257806341c0e1b51461038657806346e142fa1461039b57806349f6d2dc146103e357600080fd5b80630b73a18f1461025f578063230244081461027f578063275074581461029257806327d097c6146102d05780632e1a7d4d146102f057600080fd5b3661025a5761025833610968565b005b600080fd5b34801561026b57600080fd5b5061025861027a366004614926565b61098f565b61025861028d366004614973565b610968565b34801561029e57600080fd5b506102bb6102ad36600461498e565b6001600160601b0316151590565b60405190151581526020015b60405180910390f35b3480156102dc57600080fd5b506102586102eb3660046149a7565b610a2d565b3480156102fc57600080fd5b506102bb61030b36600461498e565b610b08565b34801561031c57600080fd5b506103447fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a281565b6040519081526020016102c7565b34801561035e57600080fd5b506103447f000000000000000000000000000000000000000000000000000000000000000081565b34801561039257600080fd5b50610258610b62565b3480156103a757600080fd5b506103bb6103b6366004614a36565b610baa565b604080519586526020860194909452928401919091526060830152608082015260a0016102c7565b6103446103f1366004614aaf565b610bd6565b34801561040257600080fd5b506103446104113660046149a7565b600560209081526000938452604080852082529284528284209052825290205481565b34801561044057600080fd5b506102bb61044f366004614b0d565b610d41565b34801561046057600080fd5b5061025861046f366004614b58565b610dca565b34801561048057600080fd5b50600354610494906001600160a01b031681565b6040516001600160a01b0390911681526020016102c7565b3480156104b857600080fd5b506102586104c7366004614973565b610e24565b3480156104d857600080fd5b506104ec6104e7366004614b75565b610e84565b6040805183516001600160a01b0316815260208085015115158183015284830151151582840152606080860151818401526080808701518185015260a0968701511515878501528551151560c0808601919091529286015160e0850152938501516101008401528401516101208301529183015115156101408201529282015161016084015201516101808201526101a0016102c7565b34801561058f57600080fd5b5061025861059e366004614b58565b610f87565b3480156105af57600080fd5b506102586105be366004614973565b610fd1565b3480156105cf57600080fd5b506103446105de3660046149a7565b600460209081526000938452604080852082529284528284209052825290205481565b61025861060f366004614ba8565b611027565b34801561062057600080fd5b5061063461062f366004614c0f565b61113a565b6040805194855260208501939093529183015260608201526080016102c7565b34801561066057600080fd5b5061034461066f366004614973565b60066020526000908152604090205481565b34801561068d57600080fd5b5061034461069c366004614973565b60086020526000908152604090205481565b3480156106ba57600080fd5b506106ce6106c93660046149a7565b611171565b60408051835181526020808501518183015284830151828401526060948501518583015283516001600160a01b0316608083015283015160a08201529082015160c082015291015160e0820152610100016102c7565b34801561073057600080fd5b5061025861073f36600461498e565b61124d565b34801561075057600080fd5b5061034461075f366004614c77565b6112e9565b34801561077057600080fd5b5061025861077f366004614973565b61141e565b34801561079057600080fd5b5061034461079f366004614caa565b6114c0565b3480156107b057600080fd5b506102586107bf366004614cf9565b611692565b3480156107d057600080fd5b506103bb6107df366004614d8f565b61198b565b6102586119c7565b3480156107f857600080fd5b50610344610807366004614e09565b600760209081526000948552604080862082529385528385208152918452828420909152825290205481565b34801561083f57600080fd5b5061085361084e366004614b75565b6119d2565b604080519283526020830191909152016102c7565b34801561087457600080fd5b50610258610883366004614b75565b611acf565b34801561089457600080fd5b506102bb6108a3366004614b75565b611b40565b3480156108b457600080fd5b506102586108c33660046149a7565b611b7b565b3480156108d457600080fd5b506103446108e3366004614b75565b611c3b565b3480156108f457600080fd5b506102586109033660046149a7565b611c73565b34801561091457600080fd5b50600054610494906001600160a01b031681565b34801561093457600080fd5b50610634610943366004614e5d565b611d60565b34801561095457600080fd5b5061025861096336600461498e565b611d87565b60006109756000806119d2565b50905061098181611e64565b61098b8234611ea7565b5050565b610997611f03565b6001600160a01b0385811660008181526002602090815260408083209489168084529482529182902080546001600160f81b0316600160f81b17905581516001815291517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a3610a10858585611b7b565b610a1b858584611c73565b610a26858583610a2d565b5050505050565b610a35611f03565b808162ffffff1614610a8e5760405162461bcd60e51b815260206004820152601f60248201527f6d67762f636f6e6669672f6f666665725f676173626173652f3234626974730060448201526064015b60405180910390fd5b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805462ffffff60601b191662ffffff60601b606088901b1617905590518481527fc5859916e5f3fc1ed4d2cfb8c7a6cf709580f228fa0c9d9e0fa468744c7e4a9191015b60405180910390a3505050565b6000610b143383611f6e565b60405133908390600081818185875af1925050503d8060008114610b54576040519150601f19603f3d011682016040523d82523d6000602084013e610b59565b606091505b50909392505050565b610b6a611f03565b60015464ff000000001916640100000000176001556040517fbe26733c2bf6ff3ea5ba8cfe744422bd49052ff9ed5685c9e81e6f9321dbaddd90600090a1565b6000806000806000610bc08a8a8a8a8a33612033565b939e929d50909b50995090975095505050505050565b6000610be06147d2565b610bea89896119d2565b6101208301819052610100830191909152610c0490612180565b610c188161010001518261012001516121cc565b3415610c2857610c283334611ea7565b61012081015160181c63ffffffff166001016080820181905263ffffffff811614610c8b5760405162461bcd60e51b81526020600482015260136024820152726d67762f6f6666657249644f766572666c6f7760681b6044820152606401610a85565b6080810151610120820151610cb79160181b66ffffffff0000001666ffffffff00000019919091161790565b6101208201526001600160a01b03808a16825288166020820152604081018790526060810186905260a0810185905260c0810184905260e08101839052610cff81600061221c565b61012081015181516001600160a01b03908116600090815260026020908152604080832082870151909416835292905220556080015198975050505050505050565b6001600160a01b038085166000818152600760209081526040808320888616808552908352818420338086529084528285209689168552959092528083208690555191939092917f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d91610db79188908890614eaa565b60405180910390a3506001949350505050565b610dd2611f03565b60015460ff60501b191660ff60501b605083901b161760015560405181151581527f9b84fe4d9ffc14a6f7ec50c18884ee0d4bb8165aa718a28558df12ab4bd32b14906020015b60405180910390a150565b610e2c611f03565b6001546001600160601b03166001600160601b0319606083901b16176001556040516001600160a01b03821681527ff592e42c32883b35bebfbf9d9b801570a25d5ccbba452310746ad2cfd20d548f90602001610e19565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152610efa6040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b600080610f0786866119d2565b91509150610f71826040805160c081018252606083811c8252605884901c60ff9081161515602080850191909152605086901c82161515848601529385901c61ffff1691830191909152602884901c62ffffff1660808301529290911c909116151560a082015290565b9350610f7c81612999565b925050509250929050565b610f8f611f03565b600154610f9c9082612a47565b60015560405181151581527fbf39fbfab835c119637f4dbc4fb0f428c559c210200405d1ec25ddb50a93f9d490602001610e19565b610fd9611f03565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f3090602001610e19565b61102f6147d2565b61103989896119d2565b610120830181905261010083019190915261105390612180565b6110678161010001518261012001516121cc565b3415611077576110773334611ea7565b6001600160a01b03808a16808352908916602080840182905260408085018b9052606085018a90526080850186905260a0850189905260c0850188905260e0850187905260009384526004825280842092845291815281832085845290529020546101408201526101208101516110ef82600161221c565b610120820151811461112e5761012082015182516001600160a01b03908116600090815260026020908152604080832082880151909416835292905220555b50505050505050505050565b60008060008061114e8a8a8a8a8a8a612a5e565b929650909450925090506111648a8a8786612d46565b9650965096509692505050565b61119c6040518060800160405280600081526020016000815260200160008152602001600081525090565b6111d0604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b6001600160a01b03808616600090815260046020908152604080832093881683529281528282208683529052205461120781612e46565b6001600160a01b038088166000908152600560209081526040808320938a1683529281528282208883529052205490935061124181612ea8565b92505050935093915050565b611255611f03565b808162ffffff16146112a95760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f32346269747300000000000000006044820152606401610a85565b6001546112b69082611e45565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001610e19565b600033301461133a5760405162461bcd60e51b815260206004820152601760248201527f6d67762f666c6173686c6f616e2f70726f7465637465640000000000000000006044820152606401610a85565b61135961134d6040850160208601614973565b83308660a00135612f17565b156113da576113836113716040850160208601614973565b60c085013560601c8560a00135612fff565b1561139857611391836130d6565b9050611418565b60408051606081018252731b59dd8bdb585ad95c949958d95a5d9951985a5b60621b8152600060208201819052918101919091526113d590606081fd5b611418565b60408051606081018252741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b81526000602082018190529181019190915261141890606081fd5b92915050565b611426611f03565b6001600160a01b0381166114725760405162461bcd60e51b815260206004820152601360248201527206d67762f636f6e6669672f676f762f6e6f743606c1b6044820152606401610a85565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001610e19565b6000806114cd86866119d2565b9150506114d981612180565b6001600160a01b038087166000818152600460209081526040808320948a1680845294825280832089845282528083205493835260058252808320948352938152838220888352905291909120546115318160601c90565b6001600160a01b0316336001600160a01b0316146115915760405162461bcd60e51b815260206004820152601d60248201527f6d67762f726574726163744f666665722f756e617574686f72697a65640000006044820152606401610a85565b6001600160601b038216156115f557826115c189896115b08660e01c90565b60c087901c63ffffffff1688613257565b93508084146115f3576001600160a01b03808a166000908152600260209081526040808320938c168352929052208490555b505b61160388888885858a613337565b841561163a57603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca000202935061163a3385611ea7565b866001600160a01b0316886001600160a01b03167fe2ce51fba856682424155a2d89b2ad1d2adde6ea0a9e3115b4b474cd6cb1798b8860405161167f91815260200190565b60405180910390a3505050949350505050565b428410156116d75760405162461bcd60e51b81526020600482015260126024820152711b59dd8bdc195c9b5a5d0bd95e1c1a5c995960721b6044820152606401610a85565b6001600160a01b03878116600081815260086020908152604080832080546001810190915581517fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a2818501528f8716818401528e871660608201526080810195909552948b1660a085015260c084018a905260e084018590526101008085018a9052815180860390910181526101208501909152805191012061190160f01b6101408401527f0000000000000000000000000000000000000000000000000000000000000000610142840152610162830152906101820160408051601f198184030181528282528051602091820120600080855291840180845281905260ff89169284019290925260608301879052608083018690529092509060019060a0016020604051602081039080840390855afa158015611819573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381161580159061184f5750896001600160a01b0316816001600160a01b0316145b61189b5760405162461bcd60e51b815260206004820152601b60248201527f6d67762f7065726d69742f696e76616c69645369676e617475726500000000006044820152606401610a85565b87600760008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008b6001600160a01b03166001600160a01b03168152602001908152602001600020819055508a6001600160a01b03168c6001600160a01b03167f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d8c8c8c60405161197593929190614eaa565b60405180910390a3505050505050505050505050565b60008060008060006119a18b8b8b8b8b8b612033565b9398509196509450925090506119b98b8b8886612d46565b965096509650965096915050565b6119d033610968565b565b6001546001600160a01b03838116600090815260026020908152604080832093861683529290522054605882901c60ff1615611ac857600080611a158460601c90565b604051636968abd360e01b81526001600160a01b03888116600483015287811660248301529190911690636968abd3906044016040805180830381865afa158015611a64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a889190614ece565b91509150611a998261ffff81161490565b15611aab57611aa88483611e22565b93505b6001600160701b0381168103611ac557610f7c83826133ac565b50505b9250929050565b611ad7611f03565b6001600160a01b03828116600081815260026020908152604080832094861680845294825280832080546001600160f81b031690558051928352517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a35050565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054605881901c60ff1615155b949350505050565b611b83611f03565b6101f4811115611bcc5760405162461bcd60e51b815260206004820152601460248201527306d67762f636f6e6669672f6665652f3c3d3530360641b6044820152606401610a85565b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805461ffff60e81b191661ffff60e81b60e888901b1617905590518481527f44a6d70a601a6f8a85c075467e9d7245897140cbf6dd505c9d9d764459f5fb649101610afb565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054603881901c63ffffffff16611b73565b611c7b611f03565b6001600160701b0381168114611cd35760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f64656e736974792f313132626974730000000000006044820152606401610a85565b6001600160a01b03808416600090815260026020908152604080832093861683529290522054611d0390826133ac565b6001600160a01b038481166000818152600260209081526040808320948816808452948252918290209490945551848152919290917f95f1a495c6d9d1a215995408f6ad898c2b33798d6eb3cf3220b4c6cc8b61b0649101610afb565b600080600080611d74898989898933612a5e565b929c919b50995090975095505050505050565b611d8f611f03565b61ffff81168114611de25760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f3136626974730000000000006044820152606401610a85565b600154611def9082611e22565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001610e19565b60401b69ffff00000000000000001669ffff000000000000000019919091161790565b60281b67ffffff00000000001667ffffff000000000019919091161790565b602081901c60ff1615611ea45760405162461bcd60e51b81526020600482015260086024820152671b59dd8bd919585960c21b6044820152606401610a85565b50565b6001600160a01b03821660008181526006602052604090819020805484019055517f1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa09490611ef79084815260200190565b60405180910390a25050565b6003546001600160a01b0316331480611f1b57503330145b80611f2f57506003546001600160a01b0316155b6119d05760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b6044820152606401610a85565b6001600160a01b03821660009081526006602052604090205481811015611fd75760405162461bcd60e51b815260206004820152601960248201527f6d67762f696e73756666696369656e7450726f766973696f6e000000000000006044820152606401610a85565b6001600160a01b038316600081815260066020526040908190208484039055517f59c79d79be0fadf59fe689b6952b7ebe90201a3a1f00d4a31982377890bc6046906120269085815260200190565b60405180910390a2505050565b600080600080600061204361483e565b6001600160a01b03808d1682528b1660208201526120618c8c6119d2565b61010083015260e082015261207461489c565b6001600160a01b03881660a082015288151560c082015260e08201516101008301516120a091906121cc565b6120ae826101000151612180565b6040517fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b990600090a16120e381838d8d6133dd565b608084015192995090975095506120f990613862565b602080830151835160808085015160e0860151604080518d81529687018c905286019190915260608501526001600160a01b03808d1694938116939216917ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec47910160405180910390a4806080015193508060e0015192505050965096509650965096915050565b605881901c60ff1615611ea45760405162461bcd60e51b81526020600482015260146024820152731b59dd8bdc99595b9d1c985b98de531bd8dad95960621b6044820152606401610a85565b6121d582611e64565b6121e18160f81c151590565b61098b5760405162461bcd60e51b815260206004820152600c60248201526b6d67762f696e61637469766560a01b6044820152606401610a85565b60c082015161ffff8116146122735760405162461bcd60e51b815260206004820152601e60248201527f6d67762f77726974654f666665722f67617370726963652f31366269747300006044820152606401610a85565b61010082015160401c61ffff168260c00151101561229e5761010082015160401c61ffff1660c08301525b61010082015160281c62ffffff168260a0015111156122ff5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f6761737265712f746f6f486967680000006044820152606401610a85565b60008260600151116123535760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f746f6f4c6f7700000000006044820152606401610a85565b61012082015160781c6001600160701b031661012083015160601c62ffffff168360a001510102826060015110156123cd5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f64656e736974792f746f6f4c6f770000006044820152606401610a85565b60608201516001600160601b038116146124295760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f39366269747300000000006044820152606401610a85565b60408201516001600160601b038116146124855760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f77616e74732f39366269747300000000006044820152606401610a85565b60008061249184613900565b9150915083602001516001600160a01b031684600001516001600160a01b03167f2b101f9ef8ca2761d91bea55ab50a4d051e9248088ff7314ddb8826839544c2a33876040015188606001518960c001518a60a001518b608001518a60405161253697969594939291906001600160a01b03979097168752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b60405180910390a383516001600160a01b039081166000908152600560209081526040808320828901519094168352928152828220608088015183529052908120548415612610576125888160601c90565b6001600160a01b0316336001600160a01b0316146125e85760405162461bcd60e51b815260206004820152601c60248201527f6d67762f7570646174654f666665722f756e617574686f72697a6564000000006044820152606401610a85565b603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca00020291505b84158061262a575060a0860151604882901c62ffffff1614155b80612641575060c0860151602082901c61ffff1614155b80612662575061012086015160601c62ffffff16603082901c62ffffff1614155b1561270c5761012086015160009060601c62ffffff1690506126d2338860a00151838a60c0015160201b65ffff000000001660309190911b68ffffff0000000000001660489290921b6bffffff0000000000000000001660609390931b6001600160601b03191692909217171790565b87516001600160a01b039081166000908152600560209081526040808320828d0151909416835292815282822060808c0151835290522055505b5060c08501516101208601516000919060601c62ffffff168760a001510102633b9aca000290508181111561274c5761274733838303611f6e565b612760565b818110156127605761276033828403611ea7565b506101408501516001600160601b03161580612784575061014085015160e01c8314155b1561291057821561280a57608085015185516001600160a01b039081166000908152600460209081526040808320828b01519094168352928152828220878352905220546127d191613b2c565b85516001600160a01b039081166000908152600460209081526040808320828b015190941683529281528282208783529052205561283d565b60808501516101208601516128369160381b63ffffffff60381b1663ffffffff60381b19919091161790565b6101208601525b81156128b457608085015185516001600160a01b039081166000908152600460208181526040808420828c018051871686529083528185208986528352818520548c518716865293835281852090519095168452938152838320878452905291902060e09290921b6001600160e01b039091161790555b8380156128ce57506101408501516001600160601b031615155b1561291057612909856000015186602001516128ef88610140015160e01c90565b61014089015160c01c63ffffffff16896101200151613257565b6101208601525b60408501516060808701516000926001600160601b03909116911b6bffffffffffffffffffffffff60601b1660c085901b63ffffffff60c01b1660e087901b17171786516001600160a01b039081166000908152600460209081526040808320828c015190941683529281528282206080909a0151825298909852909620959095555050505050565b6129dd6040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b60f882901c1515815260e882901c61ffff166020820152607882901c6001600160701b03166040820152606082811c62ffffff1690820152605882901c60ff1615156080820152603882901c63ffffffff90811660a083015260189290921c90911660c082015290565b60581b60ff60581b1660ff60581b19919091161790565b60008060008087886001600160a01b031614612abc5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657257616e74732f313630626974730000006044820152606401610a85565b86876001600160a01b031614612b145760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657247697665732f313630626974730000006044820152606401610a85565b612b1c61483e565b6001600160a01b03808c1682528a166020820152612b3a8b8b6119d2565b610100830181905260e083019190915260381c63ffffffff1660408083019182526001600160a01b03808e16600090815260046020908152838220928f1682529182528281209351815292905290205460608201526080810189905260a08101889052612ba561489c565b898152602081018990526001600160a01b03871660a082015287151560c082015260e0820151610100830151612bdb91906121cc565b612be9826101000151612180565b610100820151612bfa906001612a47565b82610100018181525050816101000151600260008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020819055507fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b960405160405180910390a1612c8e81836001613b49565b612c9b8160800151613862565b866001600160a01b03168b6001600160a01b03168d6001600160a01b03167ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec478460400151856060015186608001518760e00151604051612d14949392919093845260208401929092526040830152606082015260800190565b60405180910390a460408101516060820151608083015160e090930151919e909d50919b509950975050505050505050565b6001600160a01b0380851660009081526007602090815260408083208785168452825280832093861683529281528282203383529052205481811015612dc15760405162461bcd60e51b815260206004820152601060248201526f6d67762f6c6f77416c6c6f77616e636560801b6044820152606401610a85565b6001600160a01b0380861660008181526007602090815260408083208986168085529083528184209589168452948252808320338085529252918290208686039081905591517f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d92612e37928992909190614eaa565b60405180910390a35050505050565b612e716040518060800160405280600081526020016000815260200160008152602001600081525090565b60e082901c815263ffffffff60c083901c1660208201526001600160601b03606083811c8216604084015292169181019190915290565b612edc604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b606082811c8252604883901c62ffffff908116602080850191909152603085901c90911660408401529290921c61ffff169181019190915290565b6000806323b872dd60e01b858585604051602401612f3793929190614eaa565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509050600080876001600160a01b031683604051612f879190614ef2565b6000604051808303816000865af19150503d8060008114612fc4576040519150601f19603f3d011682016040523d82523d6000602084013e612fc9565b606091505b5091509150818015612ff3575080511580612ff3575080806020019051810190612ff39190614f2d565b98975050505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928391829188169061305d908590614ef2565b6000604051808303816000865af19150503d806000811461309a576040519150601f19603f3d011682016040523d82523d6000602084013e61309f565b606091505b50915091508180156130c95750805115806130c95750808060200190518101906130c99190614f2d565b93505050505b9392505050565b600080636c49c32c60e01b836040516024016130f29190614f4a565b60408051808303601f190181529190526020810180516001600160e01b0319939093166001600160e01b0390931692909217909152905060c0830135604881901c62ffffff169060601c60005a905082604082048203101561319457604080516060810182527f6d67762f6e6f74456e6f756768476173466f724d616b6572547261646500000081526000602082018190529181019190915261319490606081fd5b6000806131a2848688613db1565b915091505a83039650816131e8576131e860405180606001604052806e1b59dd8bdb585ad95c94995d995c9d608a1b81526020018960001b815260200183815250606081fd5b60006132066131fa60208b018b614973565b86308c60800135612f17565b90508061324b5761324b6040518060600160405280741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b81526020018a60001b815260200184815250606081fd5b50505050505050919050565b600083156132ca576001600160a01b0380871660009081526004602090815260408083209389168352928152828220878352905220546132979084613b2c565b6001600160a01b038088166000908152600460209081526040808320938a168352928152828220888352905220556132e7565b63ffffffff60381b19821663ffffffff60381b603885901b161791505b821561332e576001600160a01b038681166000908152600460209081526040808320938916835292815282822086835290522080546001600160e01b031660e086901b1790555b50949350505050565b6001600160601b03198316925080156133575765ffff0000000019821691505b506001600160a01b039485166000818152600460209081526040808320979098168083529681528782208683528152878220949094559081526005835285812094815293825284842092845291905291902055565b60781b6dffffffffffffffffffffffffffff60781b166dffffffffffffffffffffffffffff60781b19919091161790565b60008080805b8481101561385757600060408901819052606089015285858281811061340b5761340b614fdc565b90506080020160006004811061342357613423614fdc565b60209081029190910135604089810191825289516001600160a01b039081166000908152600485528281208c86018051841683529086528382208551835286528382205460608e019081528d518416835260058752848320915190931682528552828120935181529290935290205460c0890152516001600160601b031615806134ef57508585828181106134ba576134ba614fdc565b9050608002016003600481106134d2576134d2614fdc565b60200201356134ed8860c0015162ffffff60489190911c1690565b115b61384f5785858281811061350557613505614fdc565b90506080020160016004811061351d5761351d614fdc565b602002013586868381811061353457613534614fdc565b90506080020160016004811061354c5761354c614fdc565b60200201356001600160601b0316146135a75760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657257616e74732f393662697473000000006044820152606401610a85565b8585828181106135b9576135b9614fdc565b9050608002016002600481106135d1576135d1614fdc565b60200201358686838181106135e8576135e8614fdc565b90506080020160026004811061360057613600614fdc565b60200201356001600160601b03161461365b5760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657247697665732f393662697473000000006044820152606401610a85565b85858281811061366d5761366d614fdc565b90506080020160016004811061368557613685614fdc565b602002013560808801528585828181106136a1576136a1614fdc565b9050608002016002600481106136b9576136b9614fdc565b602002013560a08801526101008701516136d4906001612a47565b610100880181905287516001600160a01b039081166000908152600260209081526040808320828d015190941683529290529081209190915580806137198b8b613ddf565b925092509250806f6d67762f74726164655375636365737360801b03613740576001870196505b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b146137945761378d8a600001518b602001516137748d6060015160e01c90565b60608e015160c01c63ffffffff168e6101000151613257565b6101008b01525b6101008a01516137a5906000612a47565b8a610100018181525050896101000151600260008c600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008c602001516001600160a01b03166001600160a01b03168152602001908152602001600020819055506138138b8b6143df565b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b14613839576138398b8b8585856144e1565b8a60400151860195508a60600151850194505050505b6001016133e3565b509450945094915050565b8015611ea457604051600090339083908381818185875af1925050503d80600081146138aa576040519150601f19603f3d011682016040523d82523d6000602084013e6138af565b606091505b505090508061098b5760405162461bcd60e51b815260206004820152601760248201527f6d67762f73656e6450656e616c747952657665727465640000000000000000006044820152606401610a85565b60008060008060008560e0015190506000866080015182146139555786516001600160a01b039081166000908152600460209081526040808320828c015190941683529281528282208583529052205461395c565b8661014001515b90506001600160601b0381166139b55761012087015160381c63ffffffff1687516001600160a01b039081166000908152600460209081526040808320828d015190941683529281528282208483529052205490925090505b6139c0878284614544565b15613a5a5760005b60c082901c63ffffffff1615613a42575086516001600160a01b039081166000908152600460209081526040808320828c0151909416835292815282822063ffffffff60c086901c1680845291529190205490613a26898383614544565b15613a3657809350819250613a3c565b50613a42565b506139c8565b8260c083901c63ffffffff169095509350613ae39050565b60005b613a678260e01c90565b15613ad0576000613a788360e01c90565b89516001600160a01b039081166000908152600460209081526040808320828f015190941683529281528282208483529052205492509050613abb898383614544565b15613ac65750613ad0565b9250905080613a5d565b613ada8260e01c90565b94509192508291505b86608001518414613af45783613afe565b61014087015160e01c5b87608001518414613b0f5783613b1f565b61014088015160c01c63ffffffff165b9550955050505050915091565b60c01b63ffffffff60c01b1663ffffffff60c01b19919091161790565b808015613b7057508260c00151613b675760008260a0015111613b70565b60008260800151115b8015613b80575060008260400151115b15613d3c5781516001600160a01b03908116600090815260056020908152604080832082870151909416835292815282822083860151835290529081205460c08401528080613bcf8686613ddf565b608088015160a089015160408a015160608b015160c08c015196995094975092955090939092906e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613cc65760408b01518b5111613c22576000613c2b565b60408b01518b51035b60808b015260608b81015160208d01510360a08c01528a015160c01c63ffffffff168a6040018181525050600460008b600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b602001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b604001518152602001908152602001600020548a60600181815250505b613ce68b8b886e1b59dd8bdb9bdd115e1958dd5d1959608a1b1415613b49565b60408a0183905260808a0185905260a08a0184905260608a0182905260c08a018190526e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613d2f57613d2f8b8b8a8a8a6144e1565b5050505050505050505050565b613d5b8260000151836020015160008560400151866101000151613257565b6101008301819052613d6e906000612a47565b610100830181905282516001600160a01b0390811660009081526002602090815260408083208288015190941683529290522055613dac83836143df565b505050565b600080613dbc6148ec565b60648185516020870160008a8af192508060448415020151915050935093915050565b600080600080613dff85606001516001600160601b0360609190911c1690565b90506000613e1786606001516001600160601b031690565b608087015160a0880151919250908083028483021115613e575750600095508594506e1b59dd8bdb9bdd115e1958dd5d1959608a1b93506143d892505050565b8860c001518015613e6757508183105b80613e7e57508860c00151158015613e7e57508084105b15613e96576080880183905260a08801849052613f0d565b8860c0015115613ee157838202838181613eb257613eb2614fc6565b0615613ebf576001613ec2565b60005b60ff16848281613ed457613ed4614fc6565b040160a08a015250613f0d565b83600003613ef55760808801839052613f0d565b8381840281613f0657613f06614fc6565b0460808901525b50505050600080306001600160a01b031663aa4dd28260e01b878960a00151604051602401613f3d929190615058565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051613f7b9190614ef2565b6000604051808303816000865af19150503d8060008114613fb8576040519150601f19603f3d011682016040523d82523d6000602084013e613fbd565b606091505b509150915081156141175780806020019051810190613fdc9190615080565b94506f6d67762f74726164655375636365737360801b925085602001516001600160a01b031686600001516001600160a01b03167f1d81940ff2c3ac549c8acefd7c1b2ffb24aacc8b3cfa309c22abc3de79727f9d88604001518a60a001518a608001518b60a0015160405161407494939291909384526001600160a01b039290921660208401526040830152606082015260800190565b60405180910390a360e086015160501c60ff16156140f25760e086015160a088015160405163cac1827160e01b815260609290921c9163cac18271916140bf918a9190600401615058565b600060405180830381600087803b1580156140d957600080fd5b505af11580156140ed573d6000803e3d6000fd5b505050505b6080860151604088018051909101905260a0860151606088018051909101905261439d565b602081015160408201516060830151909650945092506e1b59dd8bdb585ad95c94995d995c9d608a1b831480614164575082741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b145b80614185575082731b59dd8bdb585ad95c949958d95a5d9951985a5b60621b145b156142975785602001516001600160a01b031686600001516001600160a01b03167f1d59c048edb5397821854bd12cbe02242b82101c677f949d076d14eb7bd8343688604001518a60a001518a608001518b60a00151896040516142149594939291909485526001600160a01b0393909316602085015260408401919091526060830152608082015260a00190565b60405180910390a360e086015160501c60ff16156142925760e086015160a0880151604051631159507360e01b815260609290921c9163115950739161425f918a9190600401615058565b600060405180830381600087803b15801561427957600080fd5b505af115801561428d573d6000803e3d6000fd5b505050505b61439d565b827f6d67762f6e6f74456e6f756768476173466f724d616b65725472616465000000036143065760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6e6f74456e6f756768476173466f724d616b657254726164650000006044820152606401610a85565b82741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b036143655760405162461bcd60e51b81526020600482015260156024820152741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b6044820152606401610a85565b60405162461bcd60e51b815260206004820152600d60248201526c36b3bb17b9bbb0b822b93937b960991b6044820152606401610a85565b6143d586600001518760200151886040015189606001518a60c00151886f6d67762f74726164655375636365737360801b1415613337565b50505b9250925092565b6101008101516000906127109060e81c61ffff168460400151028161440657614406614fc6565b049050801561447c57604083018051829003905260e08301819052815160005461443a91906001600160a01b031683612fff565b61447c5760405162461bcd60e51b81526020600482015260136024820152721b59dd8bd99959551c985b9cd9995c91985a5b606a1b6044820152606401610a85565b604083015115613dac5761449d82600001518460a001518560400151612fff565b613dac5760405162461bcd60e51b815260206004820152601560248201527436b3bb17a6b3bb2330b4b62a37a830bcaa30b5b2b960591b6044820152606401610a85565b60c084015160481c62ffffff16808411156144fa578093505b6145088585830385856145ea565b84019350816f6d67762f74726164655375636365737360801b1461453c576145308585614740565b60808701805190910190525b505050505050565b600081600003614556575060016130cf565b60408401516060858101516001600160601b039186901c82169291861691908084028284028082036145dd5789516001600160a01b039081166000908152600560209081526040808320828f015190941683529281528282208b835290529081205460481c62ffffff1660a08c0151940295909302949094101595506130cf945050505050565b1194506130cf9350505050565b600080633d3d130d60e01b8660405180604001604052808781526020018681525060405160240161461c929190615099565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319939093169290921790915260c087015190915060601c60005a90508660408204820310156146b45760405162461bcd60e51b815260206004820181905260248201527f6d67762f6e6f74456e6f756768476173466f724d616b6572506f7374686f6f6b6044820152606401610a85565b6000806146c2848a87613db1565b915091505a83039550816147335789602001516001600160a01b03168a600001516001600160a01b03167f51d5a3ecf332626d83c8207fe9bd22f38801f578c7eb222e2d811cd1b4c629a58c604001518460405161472a929190918252602082015260400190565b60405180910390a35b5050505050949350505050565b60c082015160009062ffffff604882901c81169161ffff602082901c1660309190911c909116820102633b9aca00028184111561477b578193505b61010085015160009060601c62ffffff1660e08701519086019060401c61ffff16633b9aca0002029050818111156147b05750805b6147c96147c18760c0015160601c90565b828403611ea7565b95945050505050565b60405180610160016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60405180610120016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806101000160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001600015158152602001600081525090565b60405180608001604052806004906020820280368337509192915050565b80356001600160a01b038116811461492157600080fd5b919050565b600080600080600060a0868803121561493e57600080fd5b6149478661490a565b94506149556020870161490a565b94979496505050506040830135926060810135926080909101359150565b60006020828403121561498557600080fd5b6130cf8261490a565b6000602082840312156149a057600080fd5b5035919050565b6000806000606084860312156149bc57600080fd5b6149c58461490a565b92506149d36020850161490a565b9150604084013590509250925092565b60008083601f8401126149f557600080fd5b50813567ffffffffffffffff811115614a0d57600080fd5b6020830191508360208260071b8501011115611ac857600080fd5b8015158114611ea457600080fd5b600080600080600060808688031215614a4e57600080fd5b614a578661490a565b9450614a656020870161490a565b9350604086013567ffffffffffffffff811115614a8157600080fd5b614a8d888289016149e3565b9094509250506060860135614aa181614a28565b809150509295509295909350565b600080600080600080600060e0888a031215614aca57600080fd5b614ad38861490a565b9650614ae16020890161490a565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b60008060008060808587031215614b2357600080fd5b614b2c8561490a565b9350614b3a6020860161490a565b9250614b486040860161490a565b9396929550929360600135925050565b600060208284031215614b6a57600080fd5b81356130cf81614a28565b60008060408385031215614b8857600080fd5b614b918361490a565b9150614b9f6020840161490a565b90509250929050565b600080600080600080600080610100898b031215614bc557600080fd5b614bce8961490a565b9750614bdc60208a0161490a565b979a9799505050506040860135956060810135956080820135955060a0820135945060c0820135935060e0909101359150565b60008060008060008060c08789031215614c2857600080fd5b614c318761490a565b9550614c3f6020880161490a565b945060408701359350606087013592506080870135614c5d81614a28565b9150614c6b60a0880161490a565b90509295509295509295565b600080828403610140811215614c8c57600080fd5b61012080821215614c9c57600080fd5b849350610f7c81860161490a565b60008060008060808587031215614cc057600080fd5b614cc98561490a565b9350614cd76020860161490a565b9250604085013591506060850135614cee81614a28565b939692955090935050565b60008060008060008060008060006101208a8c031215614d1857600080fd5b614d218a61490a565b9850614d2f60208b0161490a565b9750614d3d60408b0161490a565b9650614d4b60608b0161490a565b955060808a0135945060a08a0135935060c08a013560ff81168114614d6f57600080fd5b8093505060e08a013591506101008a013590509295985092959850929598565b60008060008060008060a08789031215614da857600080fd5b614db18761490a565b9550614dbf6020880161490a565b9450604087013567ffffffffffffffff811115614ddb57600080fd5b614de789828a016149e3565b9095509350506060870135614dfb81614a28565b9150614c6b6080880161490a565b60008060008060808587031215614e1f57600080fd5b614e288561490a565b9350614e366020860161490a565b9250614e446040860161490a565b9150614e526060860161490a565b905092959194509250565b600080600080600060a08688031215614e7557600080fd5b614e7e8661490a565b9450614e8c6020870161490a565b935060408601359250606086013591506080860135614aa181614a28565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60008060408385031215614ee157600080fd5b505080516020909101519092909150565b6000825160005b81811015614f135760208186018101518583015201614ef9565b81811115614f22576000828501525b509190910192915050565b600060208284031215614f3f57600080fd5b81516130cf81614a28565b61012081016001600160a01b0380614f618561490a565b16835280614f716020860161490a565b1660208401525060408301356040830152606083013560608301526080830135608083015260a083013560a083015260c083013560c083015260e083013560e083015261010080840135818401525092915050565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60018060a01b038082511683528060208301511660208401525060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152505050565b61014081016150678285614ff2565b6001600160a01b03929092166101209190910152919050565b60006020828403121561509257600080fd5b5051919050565b61016081016150a88285614ff2565b82516101208301526020830151610140830152939250505056fea2646970667358221220606ee9d9815e4c17941d70526d6fb9577a74084308c36927d5d3f4357268a87964736f6c634300080e00336101206040523480156200001257600080fd5b5060405162008b5f38038062008b5f833981016040819052620000359162000c18565b876203d090604051620000489062000b7f565b604051809103906000f08015801562000065573d6000803e3d6000fd5b5082828282823380620000bf5760405162461bcd60e51b815260206004820152601860248201527f616363657373436f6e74726f6c6c65642f307841646d696e000000000000000060448201526064015b60405180910390fd5b80620000d56200048360201b620027911760201c565b80546001600160a01b0319166001600160a01b03929092169190911790555062ffffff811681146200014a5760405162461bcd60e51b815260206004820152601b60248201527f4d616e67726f76654f666665722f676173726571546f6f4869676800000000006044820152606401620000b6565b6001600160a01b038216608052806200016e620004a7602090811b620027b517901c565b5550506001600160a01b03811662000191576200018b30620004cb565b620001a7565b6200019c81620004cb565b620001a78162000535565b5050505050506000620001c4620006ce60201b620027d91760201c565b9050600084118015620001df57506001600160a01b03891615155b8015620001ef5750838461ffff16145b801562000204575085866001600160601b0316145b801562000219575084856001600160601b0316145b620002725760405162461bcd60e51b815260206004820152602260248201527f4d616e676f2f636f6e7374727563746f722f696e76616c6964417267756d656e604482015261747360f01b6064820152608401620000b6565b8360c081815250508888888888886040516200028e9062000b8d565b6001600160a01b03968716815294861660208601529490921660408401526001600160601b03908116606084015216608082015260a081019190915260c001604051809103906000f080158015620002ea573d6000803e3d6000fd5b506001600160a01b0390811660a05288811660e052871661010052836001600160401b0381111562000320576200032062000caa565b6040519080825280602002602001820160405280156200034a578160200160208202803683370190505b5080516200036091839160209091019062000b9b565b50836001600160401b038111156200037c576200037c62000caa565b604051908082528060200260200182016040528015620003a6578160200160208202803683370190505b508051620003bf91600184019160209091019062000b9b565b506007810183905560016008820155620003d988620006f2565b620003e487620006f2565b620003ef82620004cb565b620003f962000784565b60405163e9333fab60e01b81526001600160a01b038481166004830152919091169063e9333fab90602401600060405180830381600087803b1580156200043f57600080fd5b505af115801562000454573d6000803e3d6000fd5b505050506001600160a01b038216331462000474576200047482620007f3565b50505050505050505062000ceb565b7f7d382ebca3e46505071795e192d28166a3d4bd0685585591bc6c5b8df6769fd290565b7fae7e31c3220e851db9f204a28b279dfe52b973600b0a456991089c220ae7222490565b620004d5620008dd565b6001600160a01b0316336001600160a01b031614620005265760405162461bcd60e51b8152602060048201526018602482015260008051602062008b3f8339815191526044820152606401620000b6565b62000532308262000903565b50565b6200053f620008dd565b6001600160a01b0316336001600160a01b031614806200057257506080516001600160a01b0316336001600160a01b0316145b620005af5760405162461bcd60e51b8152602060048201526018602482015260008051602062008b3f8339815191526044820152606401620000b6565b6001600160a01b038116620006075760405162461bcd60e51b815260206004820152601c60248201527f6d67764f666665722f7365745f726f757465722f3078526f75746572000000006044820152606401620000b6565b806200061d620004a760201b620027b51760201c565b60010180546001600160a01b0319166001600160a01b039283161790556040516381bac14f60e01b8152306004820152908216906381bac14f90602401600060405180830381600087803b1580156200067557600080fd5b505af11580156200068a573d6000803e3d6000fd5b50506040516001600160a01b03841681527f6de4326a8b9054d72d9dbab97d27bc4edffadee7d966f5af9cc4eafdaf8e54559250602001905060405180910390a150565b7f416b48c48a967c2245e6ba6bc6efa281932950b502fea671117e4dfd7d3dfb8190565b620006fd81620009a5565b6200070762000a6e565b156200053257620007188162000aa3565b6200072262000784565b604051630716a76760e21b81526001600160a01b0383811660048301529190911690631c5a9d9c90602401600060405180830381600087803b1580156200076857600080fd5b505af11580156200077d573d6000803e3d6000fd5b5050505050565b6000806200079c620004a760201b620027b51760201c565b600101546001600160a01b0316905080620007ee5760405162461bcd60e51b815260206004820152601160248201527036b3bb27b33332b917983c2937baba32b960791b6044820152606401620000b6565b919050565b620007fd620008dd565b6001600160a01b0316336001600160a01b0316146200084e5760405162461bcd60e51b8152602060048201526018602482015260008051602062008b3f8339815191526044820152606401620000b6565b6001600160a01b038116620008a65760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f307841646d696e00000000000000006044820152606401620000b6565b80620008bc6200048360201b620027911760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b6000620008f46200048360201b620027911760201c565b546001600160a01b0316919050565b6001600160a01b0381166200095b5760405162461bcd60e51b815260206004820152601460248201527f53696e676c65557365722f3078526573657276650000000000000000000000006044820152606401620000b6565b8062000971620004a760201b620027b51760201c565b6001600160a01b0393841660009081526002919091016020526040902080546001600160a01b031916919093161790915550565b60805160405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529082169063095ea7b3906044016020604051808303816000875af1158015620009fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a20919062000cc0565b620005325760405162461bcd60e51b815260206004820152601d60248201527f6d67764f666665722f617070726f76654d616e67726f76652f4661696c0000006044820152606401620000b6565b6000806001600160a01b031662000a8f620004a760201b620027b51760201c565b600101546001600160a01b03161415919050565b6001600160a01b03811663095ea7b362000abc62000784565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260001960248201526044016020604051808303816000875af115801562000b0b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b31919062000cc0565b620005325760405162461bcd60e51b815260206004820152601b60248201527f6d67764f666665722f617070726f7665526f757465722f4661696c00000000006044820152606401620000b6565b6110048062004e2283390190565b612d198062005e2683390190565b82805482825590600052602060002090810192821562000bd9579160200282015b8281111562000bd957825182559160200191906001019062000bbc565b5062000be792915062000beb565b5090565b5b8082111562000be7576000815560010162000bec565b6001600160a01b03811681146200053257600080fd5b600080600080600080600080610100898b03121562000c3657600080fd5b885162000c438162000c02565b60208a015190985062000c568162000c02565b60408a015190975062000c698162000c02565b80965050606089015194506080890151935060a0890151925060c0890151915060e089015162000c998162000c02565b809150509295985092959890939650565b634e487b7160e01b600052604160045260246000fd5b60006020828403121562000cd357600080fd5b8151801515811462000ce457600080fd5b9392505050565b60805160a05160c05160e0516101005161400462000e1e600039600081816104ca01528181611cb10152611d490152600081816106a801528181611c9001528181611d6a01528181612a0401526130ef015260006105dd015260008181611027015281816111860152818161160e01528181612a9001526132ee01526000818161047e0152818161094901528181610c1b01528181610cd901528181610e3f01528181610f7c0152818161121c0152818161137d0152818161140f015281816115c301528181611714015281816117a8015281816118230152818161191b0152818161198f01528181611a1a01528181611bb901528181611ef0015281816120b701528181612154015281816122ca015281816126c501528181612dd001528181612ee4015261305901526140046000f3fe60806040526004361061023f5760003560e01c80639d4ddea21161012e578063db11851e116100ab578063eedc966a1161006f578063eedc966a146106ca578063f259cd27146106ea578063f851a4401461070a578063f887ea401461071f578063fc488a381461073457600080fd5b8063db11851e14610614578063e20ccec314610634578063e4c34f8414610656578063e9333fab14610676578063ec342ad01461069657600080fd5b8063ccbbcfc2116100f2578063ccbbcfc214610581578063cd3293de146105a1578063d1baa1ef146105b6578063d4a1da08146105cb578063d5c39721146105ff57600080fd5b80639d4ddea2146104ec5780639d4f8aa91461050c5780639f2211cb14610521578063ad97db1b14610541578063c5dbec381461056157600080fd5b80635486c95f116101bc578063815502671161018057806381550267146104225780638456cb591461044257806384b627f91461045757806399fa5e2d1461046c5780639c579839146104b857600080fd5b80635486c95f1461038f578063553e9f32146103a25780635a3e9618146103c25780636c49c32c146103e25780637144df241461040257600080fd5b80631ef3755d116102035780631ef3755d146102ed5780631efa880b146103025780633d3d130d1461032f5780633d77fcde1461034f5780635293840d1461036f57600080fd5b806301e336671461024b57806303eb17e21461028057806310aded60146102a257806312b495a8146102b557806312fc41ca146102d857600080fd5b3661024657005b600080fd5b34801561025757600080fd5b5061026b6102663660046134e4565b610754565b60405190151581526020015b60405180910390f35b34801561028c57600080fd5b506102a061029b366004613571565b6108be565b005b6102a06102b0366004613623565b61090f565b3480156102c157600080fd5b506102ca610a15565b604051908152602001610277565b3480156102e457600080fd5b506102ca610a60565b3480156102f957600080fd5b506102a0610aab565b34801561030e57600080fd5b5061032261031d3660046136d4565b610b01565b60405161027791906136f1565b34801561033b57600080fd5b506102a061034a366004613779565b610c19565b34801561035b57600080fd5b506102a061036a3660046137bc565b610d3d565b34801561037b57600080fd5b506102a061038a366004613571565b610d7f565b6102ca61039d366004613623565b610e03565b3480156103ae57600080fd5b506102a06103bd3660046137d9565b610f4f565b3480156103ce57600080fd5b506102a06103dd36600461387c565b61114f565b3480156103ee57600080fd5b506102ca6103fd3660046138ee565b611218565b34801561040e57600080fd5b506102a061041d36600461390b565b611327565b34801561042e57600080fd5b506102a061043d36600461393b565b611596565b34801561044e57600080fd5b506102a06116e7565b34801561046357600080fd5b5061026b61175c565b34801561047857600080fd5b506104a07f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610277565b3480156104c457600080fd5b506104a07f000000000000000000000000000000000000000000000000000000000000000081565b3480156104f857600080fd5b506102a0610507366004613997565b61177b565b34801561051857600080fd5b5061026b6117f6565b34801561052d57600080fd5b506102a061053c3660046137bc565b61180c565b34801561054d57600080fd5b506102ca61055c3660046139b0565b6118ec565b34801561056d57600080fd5b506102a061057c366004613997565b611b8c565b34801561058d57600080fd5b506102ca61059c366004613a03565b611c07565b3480156105ad57600080fd5b506104a0611dc6565b3480156105c257600080fd5b506102ca611dd6565b3480156105d757600080fd5b506102ca7f000000000000000000000000000000000000000000000000000000000000000081565b34801561060b57600080fd5b506102a0611e6f565b34801561062057600080fd5b506102a061062f3660046137bc565b611ec3565b34801561064057600080fd5b5061064961203d565b6040516102779190613a2f565b34801561066257600080fd5b506102ca610671366004613a60565b6120a9565b34801561068257600080fd5b506102a06106913660046137bc565b61236c565b3480156106a257600080fd5b506104a07f000000000000000000000000000000000000000000000000000000000000000081565b3480156106d657600080fd5b506102ca6106e53660046137bc565b612424565b3480156106f657600080fd5b506102a06107053660046137bc565b61254f565b34801561071657600080fd5b506104a0612624565b34801561072b57600080fd5b506104a061263d565b34801561074057600080fd5b506102a061074f366004613997565b612698565b600061075e612624565b6001600160a01b0316336001600160a01b0316146107975760405162461bcd60e51b815260040161078e90613ab1565b60405180910390fd5b6001600160a01b0383166107f95760405162461bcd60e51b815260206004820152602360248201527f53696e676c65557365722f7769746864726177546f6b656e2f307852656365696044820152623b32b960e91b606482015260840161078e565b61080161175c565b610817576108108484846127fd565b90506108b7565b61081f61263d565b6001600160a01b03166321754d9e85610836611dc6565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015290821660248201529086166044820152606481018590526084016020604051808303816000875af1158015610893573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108109190613ae8565b9392505050565b60005b8181101561090a576108f88383838181106108de576108de613b05565b90506020020160208101906108f391906137bc565b6128f3565b8061090281613b31565b9150506108c1565b505050565b610917612624565b6001600160a01b0316336001600160a01b0316146109475760405162461bcd60e51b815260040161078e90613ab1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636a4f769134836000015184602001518560400151866060015162ffffff80168860800151116109a55787608001516109ad565b6109ad611dd6565b8860a001518960c001518a60e001516040518a63ffffffff1660e01b81526004016109df989796959493929190613b4a565b6000604051808303818588803b1580156109f857600080fd5b505af1158015610a0c573d6000803e3d6000fd5b50505050505b50565b6000610a1f612624565b6001600160a01b0316336001600160a01b031614610a4f5760405162461bcd60e51b815260040161078e90613ab1565b610a576127d9565b60070154905090565b6000610a6a612624565b6001600160a01b0316336001600160a01b031614610a9a5760405162461bcd60e51b815260040161078e90613ab1565b610aa26127d9565b60060154905090565b610ab3612624565b6001600160a01b0316336001600160a01b031614610ae35760405162461bcd60e51b815260040161078e90613ab1565b6000610aed6127d9565b600901805460ff1916911515919091179055565b610b0961347f565b60408051831515602480830191909152825180830382018152604490920183526020820180516001600160e01b031663198f4b8360e21b179052915160009283923092630b47d2c360e31b92610b60929101613bba565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610b9e9190613bed565b600060405180830381855afa9150503d8060008114610bd9576040519150601f19603f3d011682016040523d82523d6000602084013e610bde565b606091505b509150915081610bf657610bf181612987565b610c12565b80806020019051810190610c0a9190613c09565b949350505050565b5050919050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0381161580610c585750336001600160a01b038216145b610c745760405162461bcd60e51b815260040161078e90613ab1565b81602001356f6d67762f74726164655375636365737360801b03610ca157610c9b836129e0565b50505050565b60408301803590610cb590602086016137bc565b6001600160a01b0316610ccb60208601866137bc565b604080516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811682528735602083015292909216917f736a3993b9f8b1c5603896c76376792887f376b1fe7fc981e09a16530bf1e4e0910160405180910390a4610c9b8383612b85565b610d45612624565b6001600160a01b0316336001600160a01b031614610d755760405162461bcd60e51b815260040161078e90613ab1565b610a123082612b8e565b610d87612624565b6001600160a01b0316336001600160a01b031614610db75760405162461bcd60e51b815260040161078e90613ab1565b60005b8181101561090a57610df1838383818110610dd757610dd7613b05565b9050602002016020810190610dec91906137bc565b612c18565b80610dfb81613b31565b915050610dba565b6000610e0d612624565b6001600160a01b0316336001600160a01b031614610e3d5760405162461bcd60e51b815260040161078e90613ab1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166349f6d2dc34846000015185602001518660400151876060015162ffffff801689608001511015610e9c578860800151610ea4565b610ea4611dd6565b60a08a015160c08b01516040516001600160e01b031960e08b901b1681526001600160a01b03978816600482015296909516602487015260448601939093526064850191909152608484015260a483015260c482015260e40160206040518083038185885af1158015610f1b573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610f409190613d0a565b60e0830181905290505b919050565b610f57612624565b6001600160a01b0316336001600160a01b03161480610f9e5750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b610fba5760405162461bcd60e51b815260040161078e90613ab1565b6000610fc461263d565b6001600160a01b03160361101a5760405162461bcd60e51b815260206004820152601960248201527f4d616e676f2f696e697469616c697a652f3078526f7574657200000000000000604482015260640161078e565b6000806001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001662c8d3f760e61b8a8a8a8a8a8a8a61105d611dd6565b604051602401611074989796959493929190613d59565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516110b29190613bed565b600060405180830381855af49150503d80600081146110ed576040519150601f19603f3d011682016040523d82523d6000602084013e6110f2565b606091505b50915091508161110a5761110581612987565b611144565b60408051888152602081018890527f997896709b4e932ee42750e2e14ed1f7ab6c60bd911ff567aa2485cf0b20051b910160405180910390a15b505050505050505050565b308015806111655750336001600160a01b038216145b6111815760405162461bcd60e51b815260040161078e90613ab1565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031685856040516111be929190613e2e565b600060405180830381855af49150503d80600081146111f9576040519150601f19603f3d011682016040523d82523d6000602084013e6111fe565b606091505b5091509150816112115761121181612987565b3d60208201f35b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03811615806112595750336001600160a01b038216145b6112755760405162461bcd60e51b815260040161078e90613ab1565b61127e83612c9f565b6112c35760405162461bcd60e51b81526020600482015260166024820152751b59dd93d999995c8bd8589bdc9d0bdc995b9959d95960521b604482015260640161078e565b60006112d3846080013585612cb7565b11156113215760405162461bcd60e51b815260206004820152601860248201527f6d67764f666665722f61626f72742f6765744661696c65640000000000000000604482015260640161078e565b50919050565b61132f612624565b6001600160a01b0316336001600160a01b03161461135f5760405162461bcd60e51b815260040161078e90613ab1565b60001982036113f9576040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156113cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113f09190613d0a565b91508115611592575b604051632e1a7d4d60e01b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d906024016020604051808303816000875af1158015611460573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114849190613ae8565b6114de5760405162461bcd60e51b815260206004820152602560248201527f6d67764f666665722f776974686472617746726f6d4d67762f776974686472616044820152641dd1985a5b60da1b606482015260840161078e565b6000816001600160a01b03168360405160006040518083038185875af1925050503d806000811461152b576040519150601f19603f3d011682016040523d82523d6000602084013e611530565b606091505b505090508061090a5760405162461bcd60e51b815260206004820152602860248201527f6d67764f666665722f776974686472617746726f6d4d67762f70617961626c6560448201526710d85b1b11985a5b60c21b606482015260840161078e565b5050565b61159e612624565b6001600160a01b0316336001600160a01b031614806115e55750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b6116015760405162461bcd60e51b815260040161078e90613ab1565b6000806001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663b61dce5960e01b87878787611642611dd6565b604051602401611656959493929190613e3e565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516116949190613bed565b600060405180830381855af49150503d80600081146116cf576040519150601f19603f3d011682016040523d82523d6000602084013e6116d4565b606091505b509150915081610a0c57610a0c81612987565b6116ef612624565b6001600160a01b0316336001600160a01b031614806117365750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b6117525760405162461bcd60e51b815260040161078e90613ab1565b6001610aed6127d9565b6000806117676127b5565b600101546001600160a01b03161415919050565b611783612624565b6001600160a01b0316336001600160a01b031614806117ca5750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b6117e65760405162461bcd60e51b815260040161078e90613ab1565b806117ef6127d9565b6008015550565b60006118006127d9565b6009015460ff16919050565b60405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152600019602483015282169063095ea7b3906044016020604051808303816000875af115801561187c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118a09190613ae8565b610a125760405162461bcd60e51b815260206004820152601d60248201527f6d67764f666665722f617070726f76654d616e67726f76652f4661696c000000604482015260640161078e565b60006118f6612624565b6001600160a01b0316336001600160a01b0316148061193d5750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b6119595760405162461bcd60e51b815260040161078e90613ab1565b60405163ad97db1b60e01b81526001600160a01b03868116600483015285811660248301526044820185905283151560648301527f0000000000000000000000000000000000000000000000000000000000000000169063ad97db1b906084016020604051808303816000875af11580156119d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119fc9190613d0a565b90508015610c0a57604051632e1a7d4d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d906024016020604051808303816000875af1158015611a6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a8f9190613ae8565b611aeb5760405162461bcd60e51b815260206004820152602760248201527f53696e676c65557365722f776974686472617746726f6d4d67762f77697468646044820152661c985dd1985a5b60ca1b606482015260840161078e565b604051600090339083908381818185875af1925050503d8060008114611b2d576040519150601f19603f3d011682016040523d82523d6000602084013e611b32565b606091505b5050905080611b835760405162461bcd60e51b815260206004820152601a60248201527f53696e676c65557365722f7765695472616e736665724661696c000000000000604482015260640161078e565b50949350505050565b611b94612624565b6001600160a01b0316336001600160a01b03161480611bdb5750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b611bf75760405162461bcd60e51b815260040161078e90613ab1565b80611c006127d9565b6007015550565b6000611c11612624565b6001600160a01b0316336001600160a01b031614611c415760405162461bcd60e51b815260040161078e90613ab1565b6000611c4b6127d9565b9050835b83811015611dbd578515611d04576000826000018281548110611c7457611c74613b05565b906000526020600020015411611c8b576000611cf7565b611cf77f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000846000018481548110611ce557611ce5613b05565b906000526020600020015460016118ec565b611d019084613e72565b92505b851580611d115750600186115b15611dab576000826001018281548110611d2d57611d2d613b05565b906000526020600020015411611d44576000611d9e565b611d9e7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000846001018481548110611ce557611ce5613b05565b611da89084613e72565b92505b80611db581613b31565b915050611c4f565b50509392505050565b6000611dd130612d83565b905090565b6000611de061175c565b15611e6157611ded61263d565b6001600160a01b0316630417ffda6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611e2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e4e9190613d0a565b611e566127b5565b54611dd19190613e72565b611e696127b5565b54919050565b611e77612624565b6001600160a01b0316336001600160a01b031614611ea75760405162461bcd60e51b815260040161078e90613ab1565b6000611eb16127d9565b60006002820181905560039091015550565b611ecb612624565b6001600160a01b0316336001600160a01b03161480611f125750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b611f2e5760405162461bcd60e51b815260040161078e90613ab1565b6001600160a01b038116611f845760405162461bcd60e51b815260206004820152601c60248201527f6d67764f666665722f7365745f726f757465722f3078526f7574657200000000604482015260640161078e565b80611f8d6127b5565b60010180546001600160a01b0319166001600160a01b039283161790556040516381bac14f60e01b8152306004820152908216906381bac14f90602401600060405180830381600087803b158015611fe457600080fd5b505af1158015611ff8573d6000803e3d6000fd5b50506040516001600160a01b03841681527f6de4326a8b9054d72d9dbab97d27bc4edffadee7d966f5af9cc4eafdaf8e5455925060200190505b60405180910390a150565b6120456134a6565b61204d612624565b6001600160a01b0316336001600160a01b03161461207d5760405162461bcd60e51b815260040161078e90613ab1565b60006120876127d9565b6040805180820190915260028201548152600390910154602082015291505090565b600080806001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663cbf75c9a89896040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016040805180830381865afa158015612128573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061214c9190613e8a565b9150915060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635722647b6121888b90565b8a6040516001600160e01b031960e085901b1681526001600160a01b0392831660048201529116602482015260448101889052606401602060405180830381865afa1580156121db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121ff9190613d0a565b9050600086604085901c61ffff161115612222575061ffff604084901c16612225565b50855b62ffffff881061223a57612237611dd6565b97505b60008161225062ffffff606087901c168b613e72565b61225a9190613eae565b61226890633b9aca00613eae565b9050600061ffff602085901c1661228f62ffffff603087901c811690604888901c16613e72565b6122999190613eae565b6122a790633b9aca00613eae565b6040516370a0823160e01b81523060048201529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015612311573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123359190613d0a565b61233f9083613e72565b905082811015612358576123538184613ecd565b61235b565b60005b9d9c50505050505050505050505050565b612374612624565b6001600160a01b0316336001600160a01b0316146123a45760405162461bcd60e51b815260040161078e90613ab1565b6001600160a01b0381166123fa5760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f307841646d696e0000000000000000604482015260640161078e565b80612403612791565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60008061242f6127b5565b600101546001600160a01b0316905080156124d057806001600160a01b03166305684fde8461245c611dc6565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa1580156124a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124cb9190613d0a565b6108b7565b826001600160a01b03166370a082316124e7611dc6565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801561252b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b79190613d0a565b806001600160a01b031663095ea7b361256661263d565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260001960248201526044016020604051808303816000875af11580156125b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125d89190613ae8565b610a125760405162461bcd60e51b815260206004820152601b60248201527f6d67764f666665722f617070726f7665526f757465722f4661696c0000000000604482015260640161078e565b600061262e612791565b546001600160a01b0316919050565b6000806126486127b5565b600101546001600160a01b0316905080610f4a5760405162461bcd60e51b815260206004820152601160248201527036b3bb27b33332b917983c2937baba32b960791b604482015260640161078e565b6126a0612624565b6001600160a01b0316336001600160a01b031614806126e75750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b6127035760405162461bcd60e51b815260040161078e90613ab1565b808162ffffff16146127575760405162461bcd60e51b815260206004820152601860248201527f6d67764f666665722f6761737265712f6f766572666c6f770000000000000000604482015260640161078e565b806127606127b5565b556040518181527fafef3ad374c0b972e3c793be825735801fa05cc4c67157d98d9a111b4027988d90602001612032565b7f7d382ebca3e46505071795e192d28166a3d4bd0685585591bc6c5b8df6769fd290565b7fae7e31c3220e851db9f204a28b279dfe52b973600b0a456991089c220ae7222490565b7f416b48c48a967c2245e6ba6bc6efa281932950b502fea671117e4dfd7d3dfb8190565b600081158061281457506001600160a01b03831630145b15612821575060016108b7565b604080516001600160a01b038581166024830152604480830186905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b179052915160009283929088169161287d9190613bed565b6000604051808303816000865af19150503d80600081146128ba576040519150601f19603f3d011682016040523d82523d6000602084013e6128bf565b606091505b50915091508180156128e95750805115806128e95750808060200190518101906128e99190613ae8565b9695505050505050565b6128fb61175c565b1561297e5761290861263d565b6001600160a01b031663a01dccd88261291f611dc6565b6040516001600160e01b031960e085901b1681526001600160a01b0392831660048201529116602482015260440160006040518083038186803b15801561296557600080fd5b505afa158015612979573d6000803e3d6000fd5b505050505b610a1281612db3565b80516000036129d85760405162461bcd60e51b815260206004820152601b60248201527f4d616e676f53746f726167652f7265766572744e6f526561736f6e0000000000604482015260640161078e565b805160208201fd5b6000806129eb6127d9565b905060006129f884612ea3565b90506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016612a3160208601866137bc565b6001600160a01b031603612a635780612a5757612a4d846130d8565b6002830155612a83565b60006002830155612a83565b80612a7b57612a71846130d8565b6003830155612a83565b600060038301555b6000806001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166311b1025960e01b87612ac1611dd6565b604051602401612ad2929190613ee4565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051612b109190613bed565b600060405180830381855af49150503d8060008114612b4b576040519150601f19603f3d011682016040523d82523d6000602084013e612b50565b606091505b509150915081612b6857612b6381612987565b612b7c565b808060200190518101906128e99190613ae8565b50505050919050565b60015b92915050565b6001600160a01b038116612bdb5760405162461bcd60e51b815260206004820152601460248201527353696e676c65557365722f30785265736572766560601b604482015260640161078e565b80612be46127b5565b6001600160a01b0393841660009081526002919091016020526040902080546001600160a01b031916919093161790915550565b612c218161180c565b612c2961175c565b15610a1257612c378161254f565b612c3f61263d565b604051630716a76760e21b81526001600160a01b0383811660048301529190911690631c5a9d9c90602401600060405180830381600087803b158015612c8457600080fd5b505af1158015612c98573d6000803e3d6000fd5b5050505050565b6000612ca96127d9565b6009015460ff161592915050565b600080612cd2612cca60208501856137bc565b856000613150565b9050838110612ce5576000915050612b88565b6000612cf460208501856137bc565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015612d3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d5e9190613d0a565b905084811015612d7757612d728186613ecd565b612d7a565b60005b92505050612b88565b6000612d8d6127b5565b6001600160a01b0392831660009081526002919091016020526040902054909116919050565b604051636eb1769f60e11b81523060048201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660248301526000919083169063dd62ed3e90604401602060405180830381865afa158015612e23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e479190613d0a565b11610a125760405162461bcd60e51b815260206004820152602660248201527f4d616e67726f76654f666665722f41646d696e4d757374417070726f76654d616044820152656e67726f766560d01b606482015260840161078e565b6000612eae82613219565b506000612eba836130d8565b905080600003612ecd5750600192915050565b6000612ed8846132ca565b90506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016636a4f7691612f1660208701876137bc565b612f2660408801602089016137bc565b848660c08a013560481c62ffffff1660c08b013560201c61ffff1660608c013560c01c63ffffffff168c604001356040518963ffffffff1660e01b8152600401612f77989796959493929190613b4a565b600060405180830381600087803b158015612f9157600080fd5b505af1925050508015612fa2575060015b6130ce573d808015612fd0576040519150601f19603f3d011682016040523d82523d6000602084013e612fd5565b606091505b50805160208201207fc5fc8c2459087ad4f0e957e465df485864a3b1a379c2653ffe7c554981ede670016130c3576040850180359061301790602088016137bc565b6001600160a01b031661302d60208801886137bc565b6001600160a01b03167f736a3993b9f8b1c5603896c76376792887f376b1fe7fc981e09a16530bf1e4e07f00000000000000000000000000000000000000000000000000000000000000006040516130ba91906001600160a01b039190911681527f50657273697374656e742f686f6f6b2f6f75744f6650726f766973696f6e0000602082015260400190565b60405180910390a45b506000949350505050565b5060019392505050565b6000806130e36127d9565b90506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001661311c60208501856137bc565b6001600160a01b031603613142578060020154613138846133ec565b6108b79190613e72565b8060030154613138846133ec565b60008061315b6127b5565b600101546001600160a01b03169050806131795760009150506108b7565b806001600160a01b031663333dbb0d86613191611dc6565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044810187905285151560648201526084016020604051808303816000875af11580156131ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132119190613d0a565b9150506108b7565b6040805160028082526060820183526000928392919060208301908036833701905050905061324b60208401846137bc565b8160008151811061325e5761325e613b05565b6001600160a01b0390921660209283029190910182015261328590604085019085016137bc565b8160018151811061329857613298613b05565b60200260200101906001600160a01b031690816001600160a01b0316815250506132c18161340e565b50600192915050565b6000806132d6836130d8565b9050806000036132e95750600092915050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631f92a31960e01b8685604051602401613331929190613ee4565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161336f9190613bed565b600060405180830381855af49150503d80600081146133aa576040519150601f19603f3d011682016040523d82523d6000602084013e6133af565b606091505b5091509150816133c7576133c281612987565b6133e4565b808060200190518101906133db9190613d0a565b95945050505050565b505050919050565b6000612b88608083013560608401356bffffffffffffffffffffffff16613ecd565b60006134186127b5565b600101546001600160a01b0316905080613430575050565b806001600160a01b031663f850a81c83613448611dc6565b6040518363ffffffff1660e01b8152600401613465929190613f71565b600060405180830381600087803b1580156109f857600080fd5b60405180604001604052806002905b606081526020019060019003908161348e5790505090565b60405180604001604052806002906020820280368337509192915050565b6001600160a01b0381168114610a1257600080fd5b8035610f4a816134c4565b6000806000606084860312156134f957600080fd5b8335613504816134c4565b92506020840135613514816134c4565b929592945050506040919091013590565b60008083601f84011261353757600080fd5b50813567ffffffffffffffff81111561354f57600080fd5b6020830191508360208260051b850101111561356a57600080fd5b9250929050565b6000806020838503121561358457600080fd5b823567ffffffffffffffff81111561359b57600080fd5b6135a785828601613525565b90969095509350505050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156135ec576135ec6135b3565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561361b5761361b6135b3565b604052919050565b600061010080838503121561363757600080fd5b6040519081019067ffffffffffffffff8211818310171561365a5761365a6135b3565b816040528335915061366b826134c4565b81815261367a602085016134d9565b602082015260408401356040820152606084013560608201526080840135608082015260a084013560a082015260c084013560c082015260e084013560e0820152809250505092915050565b8015158114610a1257600080fd5b6000602082840312156136e657600080fd5b81356108b7816136c6565b6020808252600090606083018382018584805b600281101561375957878503601f19018452825180518087529087019087870190845b8181101561374357835183529289019291890191600101613727565b5090965050509285019291850191600101613704565b5092979650505050505050565b6000610120828403121561132157600080fd5b60008082840361016081121561378e57600080fd5b6137988585613766565b9250604061011f19820112156137ad57600080fd5b50610120830190509250929050565b6000602082840312156137ce57600080fd5b81356108b7816134c4565b600080600080600080600060c0888a0312156137f457600080fd5b87356137ff816136c6565b9650602088013595506040880135945060608801359350608088013567ffffffffffffffff8082111561383157600080fd5b818a0191508a60408301111561384657600080fd5b90935060a0890135908082111561385c57600080fd5b506138698a828b01613525565b989b979a50959850939692959293505050565b6000806020838503121561388f57600080fd5b823567ffffffffffffffff808211156138a757600080fd5b818501915085601f8301126138bb57600080fd5b8135818111156138ca57600080fd5b8660208285010111156138dc57600080fd5b60209290920196919550909350505050565b6000610120828403121561390157600080fd5b6108b78383613766565b6000806040838503121561391e57600080fd5b823591506020830135613930816134c4565b809150509250929050565b6000806000806060858703121561395157600080fd5b843593506020850135613963816136c6565b9250604085013567ffffffffffffffff81111561397f57600080fd5b61398b87828801613525565b95989497509550505050565b6000602082840312156139a957600080fd5b5035919050565b600080600080608085870312156139c657600080fd5b84356139d1816134c4565b935060208501356139e1816134c4565b92506040850135915060608501356139f8816136c6565b939692955090935050565b600080600060608486031215613a1857600080fd5b505081359360208301359350604090920135919050565b60408101818360005b6002811015613a57578151835260209283019290910190600101613a38565b50505092915050565b600080600080600060a08688031215613a7857600080fd5b8535613a83816134c4565b94506020860135613a93816134c4565b94979496505050506040830135926060810135926080909101359150565b60208082526018908201527f416363657373436f6e74726f6c6c65642f496e76616c69640000000000000000604082015260600190565b600060208284031215613afa57600080fd5b81516108b7816136c6565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201613b4357613b43613b1b565b5060010190565b6001600160a01b03988916815296909716602087015260408601949094526060850192909252608084015260a083015260c082015260e08101919091526101000190565b60005b83811015613ba9578181015183820152602001613b91565b83811115610c9b5750506000910152565b6020815260008251806020840152613bd9816040850160208701613b8e565b601f01601f19169190910160400192915050565b60008251613bff818460208701613b8e565b9190910192915050565b60006020808385031215613c1c57600080fd5b825167ffffffffffffffff80821115613c3457600080fd5b8185019150601f8681840112613c4957600080fd5b613c516135c9565b806040850189811115613c6357600080fd5b855b81811015613cfb57805186811115613c7d5760008081fd5b87018581018c13613c8e5760008081fd5b805187811115613ca057613ca06135b3565b8060051b613caf8b82016135f2565b9182528281018b01918b8101908f841115613ccc57600092508283fd5b938c01935b83851015613cea5784518252938c0193908c0190613cd1565b885250505093880193508701613c65565b50909998505050505050505050565b600060208284031215613d1c57600080fd5b5051919050565b81835260006001600160fb1b03831115613d3c57600080fd5b8260051b8083602087013760009401602001938452509192915050565b600060e082018a1515835260208a8185015289604085015288606085015260e0608085015281829050610120850192508860005b6002811015613e015786850360df190183528135368c9003601e19018112613db457600080fd5b8b01848101903567ffffffffffffffff811115613dd057600080fd5b8060051b3603821315613de257600080fd5b613ded878284613d23565b965050509183019190830190600101613d8d565b5050505082810360a0840152613e18818688613d23565b9150508260c08301529998505050505050505050565b8183823760009101908152919050565b8581528415156020820152608060408201526000613e60608083018587613d23565b90508260608301529695505050505050565b60008219821115613e8557613e85613b1b565b500190565b60008060408385031215613e9d57600080fd5b505080516020909101519092909150565b6000816000190483118215151615613ec857613ec8613b1b565b500290565b600082821015613edf57613edf613b1b565b500390565b61014081018335613ef4816134c4565b6001600160a01b03168252613f0b602085016134d9565b6001600160a01b03811660208401525060408401356040830152606084013560608301526080840135608083015260a084013560a083015260c084013560c083015260e084013560e0830152610100808501358184015250826101208301529392505050565b604080825283519082018190526000906020906060840190828701845b82811015613fb35781516001600160a01b031684529284019290840190600101613f8e565b5050506001600160a01b03949094169201919091525091905056fea2646970667358221220458bf1c8dbdb4649dd34d87893cf2631819c3d1d6a8ab1bafb4cbf084f6aa40864736f6c634300080e0033608060405234801561001057600080fd5b5061c35033806100675760405162461bcd60e51b815260206004820152601860248201527f616363657373436f6e74726f6c6c65642f307841646d696e000000000000000060448201526064015b60405180910390fd5b8061007a61010a60201b6107e51760201c565b80546001600160a01b0319166001600160a01b03929092169190911790555062ffffff811681146100ed5760405162461bcd60e51b815260206004820152601660248201527f526f757465722f6f76657268656164546f6f4869676800000000000000000000604482015260640161005e565b8061010061012e60201b6108091760201c565b6001015550610152565b7f7d382ebca3e46505071795e192d28166a3d4bd0685585591bc6c5b8df6769fd290565b7ff2910982afb88211fa9894801aaf0314409ca240a0a8904897b9f5ba323ca53390565b610ea3806101616000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063362aecb11161008c578063cf5e7bd311610066578063cf5e7bd314610199578063e9333fab146101ac578063f850a81c146101bf578063f851a440146101d257600080fd5b8063362aecb11461016057806381bac14f14610173578063a01dccd81461018657600080fd5b80630417ffda146100d457806305684fde146100ef5780631c5a9d9c1461010257806321754d9e1461011757806326e8eda21461013a578063333dbb0d1461014d575b600080fd5b6100dc6101f2565b6040519081526020015b60405180910390f35b6100dc6100fd366004610bc3565b610205565b610115610110366004610bfc565b61027a565b005b61012a610125366004610c19565b6102cd565b60405190151581526020016100e6565b610115610148366004610c6a565b61030b565b6100dc61015b366004610cb9565b610341565b61012a61016e366004610bfc565b6103fd565b610115610181366004610bfc565b610429565b610115610194366004610bc3565b6104a7565b6101156101a7366004610bfc565b61057d565b6101156101ba366004610bfc565b6105ce565b6101156101cd366004610d0c565b6106b6565b6101da6107cc565b6040516001600160a01b0390911681526020016100e6565b60006101fc610809565b60010154905090565b6040516370a0823160e01b81526001600160a01b038281166004830152600091908416906370a0823190602401602060405180830381865afa15801561024f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102739190610d92565b9392505050565b6102826107cc565b6001600160a01b0316336001600160a01b031614806102a557506102a5336103fd565b6102ca5760405162461bcd60e51b81526004016102c190610dab565b60405180910390fd5b50565b60006102d8336103fd565b6102f45760405162461bcd60e51b81526004016102c190610dab565b6103008585858561082d565b90505b949350505050565b610314336103fd565b6103305760405162461bcd60e51b81526004016102c190610dab565b61033c8383338461083b565b505050565b600061034c336103fd565b6103685760405162461bcd60e51b81526004016102c190610dab565b6040516370a0823160e01b81523360048201526000906001600160a01b038716906370a0823190602401602060405180830381865afa1580156103af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d39190610d92565b90508381106103e6576000915050610303565b6103f38686338787610893565b9695505050505050565b6000610407610809565b6001600160a01b03909216600090815260209290925250604090205460ff1690565b6104316107cc565b6001600160a01b0316336001600160a01b031614806104545750610454336103fd565b6104705760405162461bcd60e51b81526004016102c190610dab565b600161047a610809565b6001600160a01b039290921660009081526020929092526040909120805460ff1916911515919091179055565b604051636eb1769f60e11b81523360048201523060248201526000906001600160a01b0384169063dd62ed3e90604401602060405180830381865afa1580156104f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105189190610d92565b1161056f5760405162461bcd60e51b815260206004820152602160248201527f526f757465722f4e6f74417070726f76656442794d616b6572436f6e747261636044820152601d60fa1b60648201526084016102c1565b61057982826108ba565b5050565b6105856107cc565b6001600160a01b0316336001600160a01b031614806105a857506105a8336103fd565b6105c45760405162461bcd60e51b81526004016102c190610dab565b600061047a610809565b6105d66107cc565b6001600160a01b0316336001600160a01b0316146106365760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f496e76616c6964000000000000000060448201526064016102c1565b6001600160a01b03811661068c5760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f307841646d696e000000000000000060448201526064016102c1565b806106956107e5565b80546001600160a01b0319166001600160a01b039290921691909117905550565b6106bf336103fd565b6106db5760405162461bcd60e51b81526004016102c190610dab565b60005b828110156107c65760008484838181106106fa576106fa610dd8565b905060200201602081019061070f9190610bfc565b6040516370a0823160e01b81523360048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610755573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107799190610d92565b905080156107b3576107b385858481811061079657610796610dd8565b90506020020160208101906107ab9190610bfc565b84338461083b565b50806107be81610dee565b9150506106de565b50505050565b60006107d66107e5565b546001600160a01b0316919050565b7f7d382ebca3e46505071795e192d28166a3d4bd0685585591bc6c5b8df6769fd290565b7ff2910982afb88211fa9894801aaf0314409ca240a0a8904897b9f5ba323ca53390565b600061030085858585610998565b61084784838584610998565b6107c65760405162461bcd60e51b815260206004820152601e60248201527f53696d706c65526f757465722f707573682f7472616e736665724661696c000060448201526064016102c1565b60006108a186868686610998565b156108ad5750816108b1565b5060005b95945050505050565b6001600160a01b0381163014806109425750604051636eb1769f60e11b81526001600160a01b0382811660048301523060248301526000919084169063dd62ed3e90604401602060405180830381865afa15801561091c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109409190610d92565b115b6105795760405162461bcd60e51b815260206004820152602160248201527f53696d706c65526f757465722f4e6f74417070726f76656442795265736572766044820152606560f81b60648201526084016102c1565b60008115806109b85750826001600160a01b0316846001600160a01b0316145b156109c557506001610303565b306001600160a01b038516036109e7576109e0858484610ac2565b9050610303565b604080516001600160a01b0386811660248301528581166044830152606480830186905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b1790529151600092839290891691610a4b9190610e15565b6000604051808303816000865af19150503d8060008114610a88576040519150601f19603f3d011682016040523d82523d6000602084013e610a8d565b606091505b5091509150818015610ab7575080511580610ab7575080806020019051810190610ab79190610e50565b979650505050505050565b6000811580610ad957506001600160a01b03831630145b15610ae657506001610273565b604080516001600160a01b038581166024830152604480830186905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839290881691610b429190610e15565b6000604051808303816000865af19150503d8060008114610b7f576040519150601f19603f3d011682016040523d82523d6000602084013e610b84565b606091505b50915091508180156103f35750805115806103f35750808060200190518101906103f39190610e50565b6001600160a01b03811681146102ca57600080fd5b60008060408385031215610bd657600080fd5b8235610be181610bae565b91506020830135610bf181610bae565b809150509250929050565b600060208284031215610c0e57600080fd5b813561027381610bae565b60008060008060808587031215610c2f57600080fd5b8435610c3a81610bae565b93506020850135610c4a81610bae565b92506040850135610c5a81610bae565b9396929550929360600135925050565b600080600060608486031215610c7f57600080fd5b8335610c8a81610bae565b92506020840135610c9a81610bae565b929592945050506040919091013590565b80151581146102ca57600080fd5b60008060008060808587031215610ccf57600080fd5b8435610cda81610bae565b93506020850135610cea81610bae565b9250604085013591506060850135610d0181610cab565b939692955090935050565b600080600060408486031215610d2157600080fd5b833567ffffffffffffffff80821115610d3957600080fd5b818601915086601f830112610d4d57600080fd5b813581811115610d5c57600080fd5b8760208260051b8501011115610d7157600080fd5b60209283019550935050840135610d8781610bae565b809150509250925092565b600060208284031215610da457600080fd5b5051919050565b602080825260139082015272149bdd5d195c8bdd5b985d5d1a1bdc9a5e9959606a1b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600060018201610e0e57634e487b7160e01b600052601160045260246000fd5b5060010190565b6000825160005b81811015610e365760208186018101518583015201610e1c565b81811115610e45576000828501525b509190910192915050565b600060208284031215610e6257600080fd5b815161027381610cab56fea26469706673582212201a5909cf162cba146fb1ddb06cb563c76c816c7430eb8e8f45d62b5cb8ea878a64736f6c634300080e00336101606040523480156200001257600080fd5b5060405162002d1938038062002d198339810160408190526200003591620000ab565b6001600160a01b039586166101405293851660e05291909316610100526080919091526001600160601b0391821660a0521660c05233610120526200012b565b6001600160a01b03811681146200008b57600080fd5b50565b80516001600160601b0381168114620000a657600080fd5b919050565b60008060008060008060c08789031215620000c557600080fd5b8651620000d28162000075565b6020880151909650620000e58162000075565b6040880151909550620000f88162000075565b935062000108606088016200008e565b925062000118608088016200008e565b915060a087015190509295509295509295565b60805160a05160c05160e0516101005161012051610140516129d46200034560003960008181610735015281816108f101528181610b7201528181610cb201528181610f1f01528181611140015281816114cf0152818161180201528181611c1701528181611d7101528181611e7301528181611fb7015281816120f401526121f601526000818160fa0152818161044c0152610dc50152600081816107850152818161092001528181610ba101528181610d0201528181610f4e015281816110f2015281816111900152818161151f015281816116640152818161183101528181611c6701528181611dc101528181611ec301528181611fe6015281816121230152612225015260008181610151015281816103a9015281816107640152818161094101528181610bc201528181610ce101528181610f6f0152818161116f0152818161130e015281816114fe015281816118520152818161197f01528181611a2701528181611c4601528181611da001528181611ea201528181612007015281816121440152612246015260006122ee01526000818161133c01526113a1015260008181610293015281816102e9015281816104e90152818161051d01528181610553015281816105e201528181610a2001528181610a8501528181610af001528181610ec2015281816113d80152818161145b0152818161168f0152818161172f01528181611b710152611ba901526129d46000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806311b102591461005c5780631f92a319146100845780633234fdc0146100a5578063663d2e0c146100ba578063b61dce59146100da575b600080fd5b61006f61006a3660046123a3565b6100ed565b60405190151581526020015b60405180910390f35b6100976100923660046123a3565b610396565b60405190815260200161007b565b6100b86100b3366004612436565b610441565b005b6100cd6100c83660046124de565b610a07565b60405161007b91906124f9565b6100b86100e836600461256e565b610dba565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101405760405162461bcd60e51b8152600401610137906125d0565b60405180910390fd5b60008051602061297f8339815191527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166101866020860186612607565b6001600160a01b03160361026a5760408085013560009081526005830160205290812054906101b482610e9e565b9050801561022c576101e16101d26101cd600184612646565b610ee6565b60008860a00135600089610f08565b60088301546101f1600183612646565b11610220576040517f5ac608c951fb4eeda3d62e6a244a32d697d994fdcdf2ff4ca1ff1b5dde368a0d90600090a15b60019350505050610390565b60405162461bcd60e51b81526020600482015260136024820152724d616e676f2f4269644f75744f6652616e676560681b6044820152606401610137565b604080850135600090815260048301602052908120549061028a82610e9e565b90506102b760017f0000000000000000000000000000000000000000000000000000000000000000612646565b811015610352576102de6102cf6101cd83600161265d565b60008860a00135600089611129565b600883015461030d907f0000000000000000000000000000000000000000000000000000000000000000612646565b61031882600161265d565b10610220576040517f3c8e6c8b637216f202e5b335b54c0abfc6c1b6952a8a2511de149d2f3e5e7e9290600090a160019350505050610390565b60405162461bcd60e51b81526020600482015260136024820152724d616e676f2f41736b4f75744f6652616e676560681b6044820152606401610137565b92915050565b600060008051602061297f8339815191527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166103de6020860186612607565b6001600160a01b03160361041b57604080850135600090815260058301602052205461041261040c82610e9e565b85611338565b92505050610390565b604080850135600090815260048301602052205461041261043b82610e9e565b85611389565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104895760405162461bcd60e51b8152600401610137906125d0565b60008051602061297f8339815191528686116104e75760405162461bcd60e51b815260206004820152601d60248201527f4d616e676f2f696e697469616c697a652f696e76616c6964536c6963650000006044820152606401610137565b7f000000000000000000000000000000000000000000000000000000000000000083148015610514575060015b801561054a57507f0000000000000000000000000000000000000000000000000000000000000000610546868061268b565b9050145b801561058357507f000000000000000000000000000000000000000000000000000000000000000061057f602087018761268b565b9050145b6105db5760405162461bcd60e51b815260206004820152602360248201527f4d616e676f2f696e697469616c697a652f696e76616c696441727261794c656e6044820152620cee8d60eb1b6064820152608401610137565b61060660017f0000000000000000000000000000000000000000000000000000000000000000612646565b88106106545760405162461bcd60e51b815260206004820152601e60248201527f4d616e676f2f696e697469616c697a652f4e6f536c6f74466f7241736b7300006044820152606401610137565b865b868110156109fb57600061066982610ee6565b905089821161083057600061067e888061268b565b8481811061068e5761068e612675565b905060200201359050600081116106e257600083116106ae5760006106e4565b836001016106c26001856101cd9190612646565b815481106106d2576106d2612675565b90600052602060002001546106e4565b805b905061070b828d8989878181106106fd576106fd612675565b905060200201358489610f08565b600084600001838154811061072257610722612675565b9060005260206000200154111561082a577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad97db1b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000008760000186815481106107b9576107b9612675565b906000526020600020015460006040518563ffffffff1660e01b81526004016107e594939291906126d5565b6020604051808303816000875af1158015610804573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082891906126fe565b505b506109e8565b600061083f602089018961268b565b8481811061084f5761084f612675565b9050602002013590506000811161089e576000831161086f5760006108a0565b8361087e6101cd600186612646565b8154811061088e5761088e612675565b90600052602060002001546108a0565b805b90506108c7828d8989878181106108b9576108b9612675565b905060200201358489611129565b60008460010183815481106108de576108de612675565b906000526020600020015411156109e6577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad97db1b7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000087600101868154811061097557610975612675565b906000526020600020015460006040518563ffffffff1660e01b81526004016109a194939291906126d5565b6020604051808303816000875af11580156109c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e491906126fe565b505b505b50806109f381612717565b915050610656565b50505050505050505050565b610a0f61237c565b60008051602061297f8339815191527f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff811115610a5757610a57612730565b604051908082528060200260200182016040528015610a80578160200160208202803683370190505b5082527f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff811115610abc57610abc612730565b604051908082528060200260200182016040528015610ae5578160200160208202803683370190505b50602083015260005b7f0000000000000000000000000000000000000000000000000000000000000000811015610db357600082610b2283610ee6565b81548110610b3257610b32612675565b90600052602060002001549050600083600101610b4e84610ee6565b81548110610b5e57610b5e612675565b906000526020600020015490506000610c4d7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166368c13d6b7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000866040518463ffffffff1660e01b8152600401610c0093929190612746565b602060405180830381865afa158015610c1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4191906126fe565b6001600160601b031690565b1180610c57575085155b610c62576000610c8b565b83600101610c6f84610ee6565b81548110610c7f57610c7f612675565b90600052602060002001545b8551805185908110610c9f57610c9f612675565b6020026020010181815250506000610d407f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166368c13d6b7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000876040518463ffffffff1660e01b8152600401610c0093929190612746565b1180610d4a575085155b610d55576000610d7b565b83610d5f84610ee6565b81548110610d6f57610d6f612675565b90600052602060002001545b6020860151805185908110610d9257610d92612675565b60200260200101818152505050508080610dab90612717565b915050610aee565b5050919050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610e025760405162461bcd60e51b8152600401610137906125d0565b60008512610e105784610e19565b610e198561276a565b8214610e675760405162461bcd60e51b815260206004820181905260248201527f4d616e676f2f7365745f73686966742f6e6f74456e6f756768416d6f756e74736044820152606401610137565b6000851215610e8a57610e85610e7c8661276a565b858585856113c7565b610e97565b610e97858585858561171e565b5050505050565b600061039060008051602061297f83398151915260060154610ec09084612786565b7f00000000000000000000000000000000000000000000000000000000000000006119e0565b600061039060008051602061297f83398151915260060154610ec090846127c5565b600060008051602061297f833981519152905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166368c13d6b7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000856001018b81548110610fa357610fa3612675565b90600052602060002001546040518463ffffffff1660e01b8152600401610fcc93929190612746565b602060405180830381865afa158015610fe9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100d91906126fe565b9050600061101a88610e9e565b905060008761104a57600384015461103b6001600160601b0385168961265d565b611045919061265d565b61104c565b865b9050600061105a8383611389565b905060006001600160601b0385166000036110c957871561107c5750866110ec565b83156110b857856001016110966001866101cd9190612646565b815481106110a6576110a6612675565b906000526020600020015490506110ec565b6110c28560e01c90565b90506110ec565b856001018b815481106110de576110de612675565b906000526020600020015490505b61111c8b7f000000000000000000000000000000000000000000000000000000000000000084868b8f1587611a0e565b5050505050505050505050565b600060008051602061297f833981519152905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166368c13d6b7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000856000018b815481106111c4576111c4612675565b90600052602060002001546040518463ffffffff1660e01b81526004016111ed93929190612746565b602060405180830381865afa15801561120a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061122e91906126fe565b9050600061123b88610e9e565b905060008761126b57600284015461125c6001600160601b0385168961265d565b611266919061265d565b61126d565b865b9050600061127b8383611338565b905060006001600160601b0385166000036112e557871561129d575086611308565b83156112d457856112b26101cd600187612646565b815481106112c2576112c2612675565b90600052602060002001549050611308565b6112de8560e01c90565b9050611308565b856000018b815481106112fa576112fa612675565b906000526020600020015490505b61111c8b7f000000000000000000000000000000000000000000000000000000000000000084868b8f1587611a0e565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160601b03168261136e85611b3b565b6113789190612806565b611382919061283b565b9392505050565b600061139483611b3b565b6113786001600160601b037f00000000000000000000000000000000000000000000000000000000000000001684612806565b60008051602061297f8339815191527f0000000000000000000000000000000000000000000000000000000000000000861061144f5760405162461bcd60e51b815260206004820152602160248201527f4d616e676f2f73686966742f4e656761746976655368696674546f6f4c6172676044820152606560f81b6064820152608401610137565b600061147f6101cd60017f0000000000000000000000000000000000000000000000000000000000000000612646565b9050868260060160008282546114959190612786565b90915550600090505b87811015611714578260000182815481106114bb576114bb612675565b90600052602060002001546000146115c4577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad97db1b7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000086600001868154811061155357611553612675565b906000526020600020015460006040518563ffffffff1660e01b815260040161157f94939291906126d5565b6020604051808303816000875af115801561159e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c291906126fe565b505b60006115cf83610e9e565b9050600080891561161e578888858181106115ec576115ec612675565b905060200201359050611617838a8a8781811061160b5761160b612675565b90506020020135611338565b915061165e565b611640838a8a8781811061163457611634612675565b90506020020135611389565b905088888581811061165457611654612675565b9050602002013591505b6116f4857f000000000000000000000000000000000000000000000000000000000000000083858b60006116b360017f0000000000000000000000000000000000000000000000000000000000000000612646565b8a106116c0576000611a0e565b8c6001016116d48b60016101cd919061265d565b815481106116e4576116e4612675565b9060005260206000200154611a0e565b836116fe81612717565b94505061170a85611b61565b945050505061149e565b5050505050505050565b60008051602061297f8339815191527f000000000000000000000000000000000000000000000000000000000000000086106117a65760405162461bcd60e51b815260206004820152602160248201527f4d616e676f2f73686966742f706f7369746976655368696674546f6f4c6172676044820152606560f81b6064820152608401610137565b60006117b26000610ee6565b9050868260060160008282546117c891906127c5565b90915550600090505b87811015611714578260010182815481106117ee576117ee612675565b90600052602060002001546000146118f7577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad97db1b7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000086600101868154811061188657611886612675565b906000526020600020015460006040518563ffffffff1660e01b81526004016118b294939291906126d5565b6020604051808303816000875af11580156118d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118f591906126fe565b505b600061190283610e9e565b905060008089156119455788888581811061191f5761191f612675565b90506020020135915061193e838a8a8781811061160b5761160b612675565b9050611979565b88888581811061195757611957612675565b905060200201359050611976838a8a8781811061163457611634612675565b91505b6119c0857f000000000000000000000000000000000000000000000000000000000000000083858b6000808a116119b1576000611a0e565b8c6116d46101cd60018d612646565b836119ca81612717565b9450506119d685611ba5565b94505050506117d1565b60008083126119fa576119f3828461284f565b9050610390565b611a048284612863565b6119f390836127c5565b60008051602061297f8339815191526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811690881603611ac3576000611a816040518060a001604052808b815260200189815260200188815260200187815260200185815250611bdd565b90508015611aaf5783611aa357808260020154611a9e919061265d565b611aa5565b805b6002830155611abd565b8315611abd57600060028301555b50611714565b6000611af46040518060a001604052808b815260200189815260200188815260200187815260200185815250611f5c565b90508015611b225783611b1657808260030154611b11919061265d565b611b18565b805b6003830155611b30565b8315611b3057600060038301555b505050505050505050565b600061039060008051602061297f8339815191526007015483611b5c61227e565b612365565b6000808211611b9a57611b9560017f0000000000000000000000000000000000000000000000000000000000000000612646565b610390565b610390600183612646565b60007f0000000000000000000000000000000000000000000000000000000000000000611bd383600161265d565b610390919061284f565b805160008051602061297f833981519152805460009282918110611c0357611c03612675565b9060005260206000200154600003611d6f577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166349f6d2dc7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000086602001518760400151886060015160008a608001516040518863ffffffff1660e01b8152600401611cbe9796959493929190612877565b6020604051808303816000875af1925050508015611cf9575060408051601f3d908101601f19168201909252611cf6918101906126fe565b60015b611d065750506040015190565b83518254829184918110611d1c57611d1c612675565b60009182526020822001919091558451835490916005850191859084908110611d4757611d47612675565b9060005260206000200154815260200190815260200160002081905550600092505050919050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636a4f76917f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000086602001518760400151886060015160008a60800151896000018c6000015181548110611e0f57611e0f612675565b90600052602060002001546040518963ffffffff1660e01b8152600401611e3d9897969594939291906128b5565b600060405180830381600087803b158015611e5757600080fd5b505af1925050508015611e68575060015b611f53576000611f247f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166368c13d6b7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000086600001896000015181548110611efb57611efb612675565b90600052602060002001546040518463ffffffff1660e01b8152600401610c0093929190612746565b905080846040015111611f3b578360400151611f4b565b808460400151611f4b9190612646565b949350505050565b50600092915050565b80517f416b48c48a967c2245e6ba6bc6efa281932950b502fea671117e4dfd7d3dfb82805460009260008051602061297f83398151915292918110611fa357611fa3612675565b90600052602060002001546000036120f2577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166349f6d2dc7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000086602001518760400151886060015160008a608001516040518863ffffffff1660e01b815260040161205e9796959493929190612877565b6020604051808303816000875af1925050508015612099575060408051601f3d908101601f19168201909252612096918101906126fe565b60015b6120a65750506040015190565b80826001018560000151815481106120c0576120c0612675565b9060005260206000200181905550836000015182600401600084600101876000015181548110611d4757611d47612675565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636a4f76917f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000086602001518760400151886060015160008a60800151896001018c600001518154811061219257612192612675565b90600052602060002001546040518963ffffffff1660e01b81526004016121c09897969594939291906128b5565b600060405180830381600087803b1580156121da57600080fd5b505af19250505080156121eb575060015b611f53576000611f247f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166368c13d6b7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000086600101896000015181548110611efb57611efb612675565b7f416b48c48a967c2245e6ba6bc6efa281932950b502fea671117e4dfd7d3dfb88547f416b48c48a967c2245e6ba6bc6efa281932950b502fea671117e4dfd7d3dfb875460009160008051602061297f8339815191529183916122e0916128f9565b612313906001600160601b037f0000000000000000000000000000000000000000000000000000000000000000166127c5565b9050600081136103905760405162461bcd60e51b815260206004820152601e60248201527f4d616e676f2f71756f74655f6d696e2f5368696674556e646572666c6f7700006044820152606401610137565b6000816123728486612806565b611f4b919061265d565b60405180604001604052806002905b606081526020019060019003908161238b5790505090565b6000808284036101408112156123b857600080fd5b610120808212156123c857600080fd5b9395938601359450505050565b803580151581146123e557600080fd5b919050565b60008083601f8401126123fc57600080fd5b50813567ffffffffffffffff81111561241457600080fd5b6020830191508360208260051b850101111561242f57600080fd5b9250929050565b60008060008060008060008060e0898b03121561245257600080fd5b61245b896123d5565b9750602089013596506040890135955060608901359450608089013567ffffffffffffffff8082111561248d57600080fd5b818b0191508b6040830111156124a257600080fd5b90945060a08a013590808211156124b857600080fd5b506124c58b828c016123ea565b999c989b50969995989497949560c00135949350505050565b6000602082840312156124f057600080fd5b611382826123d5565b6020808252600090606083018382018584805b600281101561256157878503601f19018452825180518087529087019087870190845b8181101561254b5783518352928901929189019160010161252f565b509096505050928501929185019160010161250c565b5092979650505050505050565b60008060008060006080868803121561258657600080fd5b85359450612596602087016123d5565b9350604086013567ffffffffffffffff8111156125b257600080fd5b6125be888289016123ea565b96999598509660600135949350505050565b6020808252601f908201527f4d616e676f496d706c656d656e746174696f6e2f696e76616c696443616c6c00604082015260600190565b60006020828403121561261957600080fd5b81356001600160a01b038116811461138257600080fd5b634e487b7160e01b600052601160045260246000fd5b60008282101561265857612658612630565b500390565b6000821982111561267057612670612630565b500190565b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126126a257600080fd5b83018035915067ffffffffffffffff8211156126bd57600080fd5b6020019150600581901b360382131561242f57600080fd5b6001600160a01b0394851681529290931660208301526040820152901515606082015260800190565b60006020828403121561271057600080fd5b5051919050565b60006001820161272957612729612630565b5060010190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b039384168152919092166020820152604081019190915260600190565b6000600160ff1b820161277f5761277f612630565b5060000390565b60008083128015600160ff1b8501841216156127a4576127a4612630565b6001600160ff1b03840183138116156127bf576127bf612630565b50500390565b600080821280156001600160ff1b03849003851316156127e7576127e7612630565b600160ff1b839003841281161561280057612800612630565b50500190565b600081600019048311821515161561282057612820612630565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261284a5761284a612825565b500490565b60008261285e5761285e612825565b500690565b60008261287257612872612825565b500790565b6001600160a01b03978816815295909616602086015260408501939093526060840191909152608083015260a082015260c081019190915260e00190565b6001600160a01b03988916815296909716602087015260408601949094526060850192909252608084015260a083015260c082015260e08101919091526101000190565b60006001600160ff1b038184138284138082168684048611161561291f5761291f612630565b600160ff1b600087128281168783058912161561293e5761293e612630565b6000871292508782058712848416161561295a5761295a612630565b8785058712818416161561297057612970612630565b50505092909302939250505056fe416b48c48a967c2245e6ba6bc6efa281932950b502fea671117e4dfd7d3dfb81a26469706673582212204805650d72dd5d373acfe22a70c407af43e35403f616d987c257084ef74b618b64736f6c634300080e0033416363657373436f6e74726f6c6c65642f496e76616c6964000000000000000060806040526000805460ff1916600117905534801561001d57600080fd5b5060405161120638038061120683398101604081905261003c9161009f565b600080546001600160a01b0394851661010002610100600160a81b0319909116179055600180549284166001600160a01b0319938416179055600280549190931691161790556100ec565b6001600160a01b038116811461009c57600080fd5b50565b6000806000606084860312156100b457600080fd5b83516100bf81610087565b60208501519093506100d081610087565b60408501519092506100e181610087565b809150509250925092565b61110b806100fb6000396000f3fe6080604052600436106100e15760003560e01c8063a3cfe14d1161007f578063b84e3eda11610059578063b84e3eda14610284578063e1f21c67146102a4578063f8ccbf47146102c4578063ff2e2d33146102de57600080fd5b8063a3cfe14d14610244578063aa2cc08b14610264578063b04220dd1461013057600080fd5b80633a768463116100bb5780633a7684631461016a5780634d1d2b66146101aa578063521606d2146101f4578063978b7c021461021457600080fd5b8063080d7c4d146100ed5780631154020b1461010f5780632d24c42f1461013057600080fd5b366100e857005b600080fd5b3480156100f957600080fd5b5061010d610108366004610b09565b6102fe565b005b34801561011b57600080fd5b5061010d61012a366004610b35565b50505050565b34801561013c57600080fd5b5061015061014b366004610b7b565b610395565b604080519283526020830191909152015b60405180910390f35b34801561017657600080fd5b50610192737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b039091168152602001610161565b3480156101b657600080fd5b506101ca6101c5366004610b7b565b61043d565b6040805195151586526020860194909452928401919091526060830152608082015260a001610161565b34801561020057600080fd5b5061010d61020f366004610c08565b610539565b34801561022057600080fd5b5061023461022f366004610b7b565b61066a565b6040519015158152602001610161565b34801561025057600080fd5b5061010d61025f366004610b09565b6106e2565b34801561027057600080fd5b5061015061027f366004610c9e565b610720565b34801561029057600080fd5b5061010d61029f366004610c08565b6107be565b3480156102b057600080fd5b5061010d6102bf366004610cf9565b6108e1565b3480156102d057600080fd5b506000546102349060ff1681565b3480156102ea57600080fd5b506102346102f9366004610d3a565b610954565b60005460015460025460405163167ae91560e21b81526001600160a01b039283166004820152908216602482015284821660448201526064810184905261010090920416906359eba454906084015b6020604051808303816000875af115801561036c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103909190610dbd565b505050565b600080546001805460025460405163fbffe5fd60e01b81526001600160a01b03928316600482015290821660248201526044810187905260648101869052608481019290925283926101009004169063fbffe5fd9060a4016080604051808303816000875af115801561040c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104309190610ddf565b5091969095509350505050565b60008060008060008061048560405180608001604052808a81526020018981526020016bffffffffffffffffffffffff8016815260200165ffffffffffff8016815250610a12565b6000805460018054600254604051632370a17d60e11b8152959650939485948594859485946001600160a01b036101009093048316946346e142fa946104d694928316939216918c91600401610e15565b60a0604051808303816000875af11580156104f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105199190610eaa565b60019094149e50919c509a50985096505050505050509295509295909350565b604080516020810190915260008082525b825181101561065c5782518290737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae9086908590811061058557610585610eea565b60200260200101516040518263ffffffff1660e01b81526004016105ab91815260200190565b600060405180830381865afa1580156105c8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105f09190810190610f2c565b604051602001610601929190610fc0565b6040516020818303038152906040529150600183516106209190611005565b81101561064a5781604051602001610638919061101c565b60405160208183030381529060405291505b8061065481611042565b91505061054a565b5061066681610a6f565b5050565b60405163268e95b360e11b815260048101839052602481018290526000903090634d1d2b669060440160a0604051808303816000875af11580156106b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d6919061105b565b50929695505050505050565b60005460405163095ea7b360e01b81526101009091046001600160a01b0390811660048301526024820183905283169063095ea7b39060440161034d565b60405163fbffe5fd60e01b81526001600160a01b0385811660048301528481166024830152604482018490526064820183905260016084830152600091829188169063fbffe5fd9060a4016080604051808303816000875af115801561078a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ae9190610ddf565b5091999098509650505050505050565b604080516020810190915260008082525b825181101561065c5782518290737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae9086908590811061080a5761080a610eea565b60200260200101516040518263ffffffff1660e01b815260040161083091815260200190565b600060405180830381865afa15801561084d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108759190810190610f2c565b604051602001610886929190610fc0565b6040516020818303038152906040529150600183516108a59190611005565b8110156108cf57816040516020016108bd919061101c565b60405160208183030381529060405291505b806108d981611042565b9150506107cf565b60405163095ea7b360e01b81526001600160a01b0383811660048301526024820183905284169063095ea7b3906044016020604051808303816000875af1158015610930573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012a9190610dbd565b600080610980604051806080016040528088815260200187815260200186815260200185815250610a12565b90506000896001600160a01b03166346e142fa8a8a8560016040518563ffffffff1660e01b81526004016109b79493929190610e15565b60a0604051808303816000875af11580156109d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fa9190610eaa565b50506001909214945050505050979650505050505050565b60408051600180825281830190925260609160009190816020015b610a35610ad6565b815260200190600190039081610a2d5790505090508281600081518110610a5e57610a5e610eea565b602090810291909101015292915050565b610ab281604051602401610a8391906110a2565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052610ab5565b50565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60405180608001604052806004906020820280368337509192915050565b6001600160a01b0381168114610ab257600080fd5b60008060408385031215610b1c57600080fd5b8235610b2781610af4565b946020939093013593505050565b60008060008060808587031215610b4b57600080fd5b8435610b5681610af4565b93506020850135610b6681610af4565b93969395505050506040820135916060013590565b60008060408385031215610b8e57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610bdc57610bdc610b9d565b604052919050565b600067ffffffffffffffff821115610bfe57610bfe610b9d565b5060051b60200190565b60006020808385031215610c1b57600080fd5b823567ffffffffffffffff811115610c3257600080fd5b8301601f81018513610c4357600080fd5b8035610c56610c5182610be4565b610bb3565b81815260059190911b82018301908381019087831115610c7557600080fd5b928401925b82841015610c9357833582529284019290840190610c7a565b979650505050505050565b600080600080600060a08688031215610cb657600080fd5b8535610cc181610af4565b94506020860135610cd181610af4565b93506040860135610ce181610af4565b94979396509394606081013594506080013592915050565b600080600060608486031215610d0e57600080fd5b8335610d1981610af4565b92506020840135610d2981610af4565b929592945050506040919091013590565b600080600080600080600060e0888a031215610d5557600080fd5b8735610d6081610af4565b96506020880135610d7081610af4565b95506040880135610d8081610af4565b969995985095966060810135965060808101359560a0820135955060c0909101359350915050565b80518015158114610db857600080fd5b919050565b600060208284031215610dcf57600080fd5b610dd882610da8565b9392505050565b60008060008060808587031215610df557600080fd5b505082516020840151604085015160609095015191969095509092509050565b6001600160a01b038581168252841660208083019190915260806040830181905284518382018190526000928681019160a08601919085805b82811015610e8b57855185835b6004811015610e7857825182529186019190860190600101610e5b565b5050509483019493860193600101610e4e565b5050505085151560608601529250610ea1915050565b95945050505050565b600080600080600060a08688031215610ec257600080fd5b5050835160208501516040860151606087015160809097015192989197509594509092509050565b634e487b7160e01b600052603260045260246000fd5b60005b83811015610f1b578181015183820152602001610f03565b8381111561012a5750506000910152565b600060208284031215610f3e57600080fd5b815167ffffffffffffffff80821115610f5657600080fd5b818401915084601f830112610f6a57600080fd5b815181811115610f7c57610f7c610b9d565b610f8f601f8201601f1916602001610bb3565b9150808252856020828501011115610fa657600080fd5b610fb7816020840160208601610f00565b50949350505050565b60008351610fd2818460208801610f00565b835190830190610fe6818360208801610f00565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b60008282101561101757611017610fef565b500390565b6000825161102e818460208701610f00565b61016160f51b920191825250600201919050565b60006001820161105457611054610fef565b5060010190565b600080600080600060a0868803121561107357600080fd5b61107c86610da8565b602087015160408801516060890151608090990151929a91995097965090945092505050565b60208152600082518060208401526110c1816040850160208701610f00565b601f01601f1916919091016040019291505056fea2646970667358221220fe05e77654585728cf63d927b792919a9b4528889d07a63176801add83a0055b64736f6c634300080e0033608060405234801561001057600080fd5b5060405161206d38038061206d83398101604081905261002f91610092565b600180546001600160a01b0394851661010002610100600160a81b0319909116179055600280549284166001600160a01b0319938416179055600380549190931691161790556100df565b6001600160a01b038116811461008f57600080fd5b50565b6000806000606084860312156100a757600080fd5b83516100b28161007a565b60208501519093506100c38161007a565b60408501519092506100d48161007a565b809150509250925092565b611f7f806100ee6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631f7b6d32146100515780635686153214610067578063a5e3875114610092578063e9c4a3ac146100a7575b600080fd5b6000546040519081526020015b60405180910390f35b61007a61007536600461047a565b6100af565b6040516001600160a01b03909116815260200161005e565b6100a56100a036600461047a565b6100de565b005b6100a5610320565b60008082815481106100c3576100c3610493565b6000918252602090912001546001600160a01b031692915050565b60015460ff16610311578067ffffffffffffffff811115610101576101016104a9565b60405190808252806020026020018201604052801561012a578160200160208202803683370190505b50805161013f916000916020909101906103f3565b5060005b8181101561030f576001546002546003546040516101009093046001600160a01b03908116939281169291169061017990610458565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f0801580156101b5573d6000803e3d6000fd5b50600082815481106101c9576101c9610493565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506000818154811061020a5761020a610493565b60009182526020909120015460025460405163a3cfe14d60e01b81526001600160a01b039182166004820152678ac7230489e80000602482015291169063a3cfe14d90604401600060405180830381600087803b15801561026a57600080fd5b505af115801561027e573d6000803e3d6000fd5b505050506000818154811061029557610295610493565b600091825260209091200154604051635239cafb60e11b8152821560048201526001600160a01b039091169063a47395f690602401600060405180830381600087803b1580156102e457600080fd5b505af11580156102f8573d6000803e3d6000fd5b505050508080610307906104bf565b915050610143565b505b506001805460ff191681179055565b600080549061032f82476104e6565b90506000811161037b5760405162461bcd60e51b8152602060048201526013602482015272181032ba3432b9103a37903a3930b739b332b960691b604482015260640160405180910390fd5b60005b828110156103ee57600080828154811061039a5761039a610493565b60009182526020822001546040516001600160a01b039091169250829085156108fc0290869084818181858888f193505050509050806103d957600080fd5b505080806103e6906104bf565b91505061037e565b505050565b828054828255906000526020600020908101928215610448579160200282015b8281111561044857825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610413565b50610454929150610465565b5090565b611a418061050983390190565b5b808211156104545760008155600101610466565b60006020828403121561048c57600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6000600182016104df57634e487b7160e01b600052601160045260246000fd5b5060010190565b60008261050357634e487b7160e01b600052601260045260246000fd5b50049056fe60806040526004805463ff00ff00191663010001001790553480156200002457600080fd5b5060405162001a4138038062001a418339810160408190526200004791620000a3565b600080546001600160a01b039485166001600160a01b031991821617909155600180549385169382169390931790925560028054919093169116179055620000f7565b6001600160a01b0381168114620000a057600080fd5b50565b600080600060608486031215620000b957600080fd5b8351620000c6816200008a565b6020850151909350620000d9816200008a565b6040850151909250620000ec816200008a565b809150509250925092565b61193a80620001076000396000f3fe6080604052600436106101bb5760003560e01c8063ba414fa6116100ec578063e923c6511161008a578063fa7626d411610064578063fa7626d414610550578063fc3816c81461056f578063fc8349f21461058f578063ffae399e146105af57600080fd5b8063e923c651146104ef578063f5537ede1461050f578063f8ccbf471461052f57600080fd5b8063ccfbf94d116100c6578063ccfbf94d1461046f578063cda30c3b1461048f578063d3845fea146104af578063e67ecda1146104cf57600080fd5b8063ba414fa61461040a578063c4c6c87d1461042f578063cafffca81461044f57600080fd5b80635a4924e8116101595780637ec95ff3116101335780637ec95ff31461037c5780638b0af9bb1461039c578063a3cfe14d146103b1578063a47395f6146103d157600080fd5b80635a4924e8146102f55780636c49c32c146103235780637a943a371461034357600080fd5b80633a768463116101955780633a768463146102295780633d3d130d1461026e57806353e575ac1461028e578063557f49c3146102bc57600080fd5b80630cc9d656146101c75780632644c05c146101e957806333ac5efd1461020957600080fd5b366101c257005b600080fd5b3480156101d357600080fd5b506101e76101e236600461142d565b6105e8565b005b3480156101f557600080fd5b506101e7610204366004611492565b610631565b34801561021557600080fd5b506101e76102243660046114cd565b6106af565b34801561023557600080fd5b50610251737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561027a57600080fd5b506101e7610289366004611529565b610731565b34801561029a57600080fd5b506102ae6102a9366004611492565b61078d565b604051908152602001610265565b3480156102c857600080fd5b506101e76102d736600461157a565b60028054911515600160a81b0260ff60a81b19909216919091179055565b34801561030157600080fd5b506101e761031036600461157a565b6004805460ff1916911515919091179055565b34801561032f57600080fd5b506102ae61033e36600461159e565b610821565b34801561034f57600080fd5b506101e761035e36600461157a565b60028054911515600160b81b0260ff60b81b19909216919091179055565b34801561038857600080fd5b506102ae6103973660046114cd565b610988565b3480156103a857600080fd5b506102ae610a1d565b3480156103bd57600080fd5b506101e76103cc3660046115bb565b610a8f565b3480156103dd57600080fd5b506101e76103ec36600461157a565b60028054911515600160a01b0260ff60a01b19909216919091179055565b34801561041657600080fd5b5061041f610b0b565b6040519015158152602001610265565b34801561043b57600080fd5b506102ae61044a3660046115e7565b610c3a565b34801561045b57600080fd5b506102ae61046a3660046115e7565b610ccd565b34801561047b57600080fd5b506102ae61048a366004611600565b610d1e565b34801561049b57600080fd5b506102ae6104aa366004611659565b610d9e565b3480156104bb57600080fd5b506101e76104ca3660046115e7565b610e30565b3480156104db57600080fd5b506101e76104ea3660046115e7565b600355565b3480156104fb57600080fd5b506102ae61050a366004611492565b610e92565b34801561051b57600080fd5b506101e761052a36600461168b565b610f1b565b34801561053b57600080fd5b5060045461041f906301000000900460ff1681565b34801561055c57600080fd5b5060045461041f90610100900460ff1681565b34801561057b57600080fd5b506102ae61058a3660046116cc565b610f94565b34801561059b57600080fd5b5061041f6105aa3660046115e7565b611022565b3480156105bb57600080fd5b506101e76105ca36600461157a565b60028054911515600160b01b0260ff60b01b19909216919091179055565b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c28686868686866040516106219695949392919061172e565b60405180910390a1505050505050565b60008054600154600254604051636a4f769160e01b81526001600160a01b0393841694636a4f7691946106769481169316918b918b918b91908b908b90600401611767565b600060405180830381600087803b15801561069057600080fd5b505af11580156106a4573d6000803e3d6000fd5b505050505050505050565b60008054600154600254604051636a4f769160e01b81526001600160a01b0393841694636a4f76919487946106f794908216939116918d918d918d918d908d90600401611767565b6000604051808303818588803b15801561071057600080fd5b505af1158015610724573d6000803e3d6000fd5b5050505050505050505050565b6003541561077f5761077f81602001356003546040518060400160405280601881526020017f496e636f727265637420737461747573206d6573736167650000000000000000815250611092565b61078982826110da565b5050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc9387936107d4939183169216908c908c908c908a908d906004016117ab565b60206040518083038185885af11580156107f2573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061081791906117e9565b9695505050505050565b600254600090600160b01b900460ff161561085c576040805160208082019092526f1d195cdd13585ad95c8bdc995d995c9d60821b81529081fd5b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c23361088b6020850185611802565b61089b6040860160208701611802565b856040013586608001358760a001356040516108bc9695949392919061172e565b60405180910390a1600254600160a01b900460ff161561095f576108e36020830183611802565b6000805460405163095ea7b360e01b81526001600160a01b0391821660048201526024810192909252919091169063095ea7b3906044016020604051808303816000875af1158015610939573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095d919061181f565b505b600254600160a81b900460ff161561098057506418589bdc9d60da1b919050565b506000919050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc9387936109cf939183169216908d908d908d908d908d906004016117ab565b60206040518083038185885af11580156109ed573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610a1291906117e9565b979650505050505050565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610a66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8a91906117e9565b905090565b60005460405163095ea7b360e01b81526001600160a01b039182166004820152602481018390529083169063095ea7b3906044016020604051808303816000875af1158015610ae2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b06919061181f565b505050565b60045460009062010000900460ff1615610b2f575060045462010000900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610c355760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610bbd917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611868565b60408051601f1981840301815290829052610bd791611899565b6000604051808303816000865af19150503d8060008114610c14576040519150601f19603f3d011682016040523d82523d6000602084013e610c19565b606091505b5091505080806020019051810190610c31919061181f565b9150505b919050565b6000805460015460025460405163ad97db1b60e01b81526001600160a01b0392831660048201529082166024820152604481018590526064810184905291169063ad97db1b906084015b6020604051808303816000875af1158015610ca3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc791906117e9565b92915050565b600080546001805460025460405163ad97db1b60e01b81526001600160a01b03928316600482015290821660248201526044810186905260648101929092529091169063ad97db1b90608401610c84565b6000805460405163127db4b760e21b81526001600160a01b03909116906349f6d2dc90610d5b908a908a908a908a908a9089908b906004016117ab565b6020604051808303816000875af1158015610d7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1291906117e9565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc93610de493908216929116908a908a908a9089908b906004016117ab565b6020604051808303816000875af1158015610e03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2791906117e9565b95945050505050565b600054604051630460488160e31b81523060048201526001600160a01b039091169063230244089083906024016000604051808303818588803b158015610e7657600080fd5b505af1158015610e8a573d6000803e3d6000fd5b505050505050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc93610ed893908216929116908b908b908b908b908b906004016117ab565b6020604051808303816000875af1158015610ef7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081791906117e9565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af1158015610f6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8e919061181f565b50505050565b6000805460405163127db4b760e21b81526001600160a01b03909116906349f6d2dc908490610fd3908c908c908c908c908c908a908d906004016117ab565b60206040518083038185885af1158015610ff1573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061101691906117e9565b98975050505050505050565b60008054604051632e1a7d4d60e01b8152600481018490526001600160a01b0390911690632e1a7d4d906024016020604051808303816000875af115801561106e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc7919061181f565b818314610b06577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583816040516110c891906118b5565b60405180910390a1610b0683836111e2565b60045460ff16156111205760405162461bcd60e51b815260206004820152600c60248201526b1c1bdcdd1a1bdbdad1985a5b60a21b604482015260640160405180910390fd5b600254600160b81b900460ff1615610789576000546001600160a01b0316636a4f76916111506020850185611802565b6111606040860160208701611802565b606080870135901c6bffffffffffffffffffffffff166bffffffffffffffffffffffff60608801351660c088013560481c62ffffff16600060608a013560e01c8a604001356040518963ffffffff1660e01b81526004016111c8989796959493929190611767565b600060405180830381600087803b158015610e7657600080fd5b808214610789577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516112569060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974604082015264657333325d60d81b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a1610789737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156114025760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526113a19291602001611868565b60408051601f19818403018152908290526113bb91611899565b6000604051808303816000865af19150503d80600081146113f8576040519150601f19603f3d011682016040523d82523d6000602084013e6113fd565b606091505b505050505b6004805462ff0000191662010000179055565b6001600160a01b038116811461142a57600080fd5b50565b60008060008060008060c0878903121561144657600080fd5b863561145181611415565b9550602087013561146181611415565b9450604087013561147181611415565b959894975094956060810135955060808101359460a0909101359350915050565b600080600080600060a086880312156114aa57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b60008060008060008060c087890312156114e657600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b6000610120828403121561152357600080fd5b50919050565b60008082840361016081121561153e57600080fd5b6115488585611510565b9250604061011f198201121561155d57600080fd5b50610120830190509250929050565b801515811461142a57600080fd5b60006020828403121561158c57600080fd5b81356115978161156c565b9392505050565b600061012082840312156115b157600080fd5b6115978383611510565b600080604083850312156115ce57600080fd5b82356115d981611415565b946020939093013593505050565b6000602082840312156115f957600080fd5b5035919050565b60008060008060008060c0878903121561161957600080fd5b863561162481611415565b9550602087013561163481611415565b95989597505050506040840135936060810135936080820135935060a0909101359150565b6000806000806080858703121561166f57600080fd5b5050823594602084013594506040840135936060013592509050565b6000806000606084860312156116a057600080fd5b83356116ab81611415565b925060208401356116bb81611415565b929592945050506040919091013590565b600080600080600080600060e0888a0312156116e757600080fd5b87356116f281611415565b9650602088013561170281611415565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b6001600160a01b03968716815294861660208601529290941660408401526060830152608082019290925260a081019190915260c00190565b6001600160a01b03988916815296909716602087015260408601949094526060850192909252608084015260a083015260c082015260e08101919091526101000190565b6001600160a01b03978816815295909616602086015260408501939093526060840191909152608083015260a082015260c081019190915260e00190565b6000602082840312156117fb57600080fd5b5051919050565b60006020828403121561181457600080fd5b813561159781611415565b60006020828403121561183157600080fd5b81516115978161156c565b60005b8381101561185757818101518382015260200161183f565b83811115610f8e5750506000910152565b6001600160e01b031983168152815160009061188b81600485016020870161183c565b919091016004019392505050565b600082516118ab81846020870161183c565b9190910192915050565b60408152600560408201526422b93937b960d91b606082015260806020820152600082518060808401526118f08160a085016020870161183c565b601f01601f19169190910160a0019291505056fea2646970667358221220363d825a62e7711a222b729367aea22c71c496027732c66afce572665829ed6264736f6c634300080e0033a2646970667358221220bc7d9d438cd5627bd00d066b2f3b1acd90318af6a7a9515bd2a5d7aaffa9dcd064736f6c634300080e003360806040526004805463ff00ff00191663010001001790553480156200002457600080fd5b5060405162001a4138038062001a418339810160408190526200004791620000a3565b600080546001600160a01b039485166001600160a01b031991821617909155600180549385169382169390931790925560028054919093169116179055620000f7565b6001600160a01b0381168114620000a057600080fd5b50565b600080600060608486031215620000b957600080fd5b8351620000c6816200008a565b6020850151909350620000d9816200008a565b6040850151909250620000ec816200008a565b809150509250925092565b61193a80620001076000396000f3fe6080604052600436106101bb5760003560e01c8063ba414fa6116100ec578063e923c6511161008a578063fa7626d411610064578063fa7626d414610550578063fc3816c81461056f578063fc8349f21461058f578063ffae399e146105af57600080fd5b8063e923c651146104ef578063f5537ede1461050f578063f8ccbf471461052f57600080fd5b8063ccfbf94d116100c6578063ccfbf94d1461046f578063cda30c3b1461048f578063d3845fea146104af578063e67ecda1146104cf57600080fd5b8063ba414fa61461040a578063c4c6c87d1461042f578063cafffca81461044f57600080fd5b80635a4924e8116101595780637ec95ff3116101335780637ec95ff31461037c5780638b0af9bb1461039c578063a3cfe14d146103b1578063a47395f6146103d157600080fd5b80635a4924e8146102f55780636c49c32c146103235780637a943a371461034357600080fd5b80633a768463116101955780633a768463146102295780633d3d130d1461026e57806353e575ac1461028e578063557f49c3146102bc57600080fd5b80630cc9d656146101c75780632644c05c146101e957806333ac5efd1461020957600080fd5b366101c257005b600080fd5b3480156101d357600080fd5b506101e76101e236600461142d565b6105e8565b005b3480156101f557600080fd5b506101e7610204366004611492565b610631565b34801561021557600080fd5b506101e76102243660046114cd565b6106af565b34801561023557600080fd5b50610251737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561027a57600080fd5b506101e7610289366004611529565b610731565b34801561029a57600080fd5b506102ae6102a9366004611492565b61078d565b604051908152602001610265565b3480156102c857600080fd5b506101e76102d736600461157a565b60028054911515600160a81b0260ff60a81b19909216919091179055565b34801561030157600080fd5b506101e761031036600461157a565b6004805460ff1916911515919091179055565b34801561032f57600080fd5b506102ae61033e36600461159e565b610821565b34801561034f57600080fd5b506101e761035e36600461157a565b60028054911515600160b81b0260ff60b81b19909216919091179055565b34801561038857600080fd5b506102ae6103973660046114cd565b610988565b3480156103a857600080fd5b506102ae610a1d565b3480156103bd57600080fd5b506101e76103cc3660046115bb565b610a8f565b3480156103dd57600080fd5b506101e76103ec36600461157a565b60028054911515600160a01b0260ff60a01b19909216919091179055565b34801561041657600080fd5b5061041f610b0b565b6040519015158152602001610265565b34801561043b57600080fd5b506102ae61044a3660046115e7565b610c3a565b34801561045b57600080fd5b506102ae61046a3660046115e7565b610ccd565b34801561047b57600080fd5b506102ae61048a366004611600565b610d1e565b34801561049b57600080fd5b506102ae6104aa366004611659565b610d9e565b3480156104bb57600080fd5b506101e76104ca3660046115e7565b610e30565b3480156104db57600080fd5b506101e76104ea3660046115e7565b600355565b3480156104fb57600080fd5b506102ae61050a366004611492565b610e92565b34801561051b57600080fd5b506101e761052a36600461168b565b610f1b565b34801561053b57600080fd5b5060045461041f906301000000900460ff1681565b34801561055c57600080fd5b5060045461041f90610100900460ff1681565b34801561057b57600080fd5b506102ae61058a3660046116cc565b610f94565b34801561059b57600080fd5b5061041f6105aa3660046115e7565b611022565b3480156105bb57600080fd5b506101e76105ca36600461157a565b60028054911515600160b01b0260ff60b01b19909216919091179055565b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c28686868686866040516106219695949392919061172e565b60405180910390a1505050505050565b60008054600154600254604051636a4f769160e01b81526001600160a01b0393841694636a4f7691946106769481169316918b918b918b91908b908b90600401611767565b600060405180830381600087803b15801561069057600080fd5b505af11580156106a4573d6000803e3d6000fd5b505050505050505050565b60008054600154600254604051636a4f769160e01b81526001600160a01b0393841694636a4f76919487946106f794908216939116918d918d918d918d908d90600401611767565b6000604051808303818588803b15801561071057600080fd5b505af1158015610724573d6000803e3d6000fd5b5050505050505050505050565b6003541561077f5761077f81602001356003546040518060400160405280601881526020017f496e636f727265637420737461747573206d6573736167650000000000000000815250611092565b61078982826110da565b5050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc9387936107d4939183169216908c908c908c908a908d906004016117ab565b60206040518083038185885af11580156107f2573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061081791906117e9565b9695505050505050565b600254600090600160b01b900460ff161561085c576040805160208082019092526f1d195cdd13585ad95c8bdc995d995c9d60821b81529081fd5b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c23361088b6020850185611802565b61089b6040860160208701611802565b856040013586608001358760a001356040516108bc9695949392919061172e565b60405180910390a1600254600160a01b900460ff161561095f576108e36020830183611802565b6000805460405163095ea7b360e01b81526001600160a01b0391821660048201526024810192909252919091169063095ea7b3906044016020604051808303816000875af1158015610939573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095d919061181f565b505b600254600160a81b900460ff161561098057506418589bdc9d60da1b919050565b506000919050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc9387936109cf939183169216908d908d908d908d908d906004016117ab565b60206040518083038185885af11580156109ed573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610a1291906117e9565b979650505050505050565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610a66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8a91906117e9565b905090565b60005460405163095ea7b360e01b81526001600160a01b039182166004820152602481018390529083169063095ea7b3906044016020604051808303816000875af1158015610ae2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b06919061181f565b505050565b60045460009062010000900460ff1615610b2f575060045462010000900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610c355760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610bbd917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611868565b60408051601f1981840301815290829052610bd791611899565b6000604051808303816000865af19150503d8060008114610c14576040519150601f19603f3d011682016040523d82523d6000602084013e610c19565b606091505b5091505080806020019051810190610c31919061181f565b9150505b919050565b6000805460015460025460405163ad97db1b60e01b81526001600160a01b0392831660048201529082166024820152604481018590526064810184905291169063ad97db1b906084015b6020604051808303816000875af1158015610ca3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc791906117e9565b92915050565b600080546001805460025460405163ad97db1b60e01b81526001600160a01b03928316600482015290821660248201526044810186905260648101929092529091169063ad97db1b90608401610c84565b6000805460405163127db4b760e21b81526001600160a01b03909116906349f6d2dc90610d5b908a908a908a908a908a9089908b906004016117ab565b6020604051808303816000875af1158015610d7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1291906117e9565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc93610de493908216929116908a908a908a9089908b906004016117ab565b6020604051808303816000875af1158015610e03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2791906117e9565b95945050505050565b600054604051630460488160e31b81523060048201526001600160a01b039091169063230244089083906024016000604051808303818588803b158015610e7657600080fd5b505af1158015610e8a573d6000803e3d6000fd5b505050505050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc93610ed893908216929116908b908b908b908b908b906004016117ab565b6020604051808303816000875af1158015610ef7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081791906117e9565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af1158015610f6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8e919061181f565b50505050565b6000805460405163127db4b760e21b81526001600160a01b03909116906349f6d2dc908490610fd3908c908c908c908c908c908a908d906004016117ab565b60206040518083038185885af1158015610ff1573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061101691906117e9565b98975050505050505050565b60008054604051632e1a7d4d60e01b8152600481018490526001600160a01b0390911690632e1a7d4d906024016020604051808303816000875af115801561106e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc7919061181f565b818314610b06577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583816040516110c891906118b5565b60405180910390a1610b0683836111e2565b60045460ff16156111205760405162461bcd60e51b815260206004820152600c60248201526b1c1bdcdd1a1bdbdad1985a5b60a21b604482015260640160405180910390fd5b600254600160b81b900460ff1615610789576000546001600160a01b0316636a4f76916111506020850185611802565b6111606040860160208701611802565b606080870135901c6bffffffffffffffffffffffff166bffffffffffffffffffffffff60608801351660c088013560481c62ffffff16600060608a013560e01c8a604001356040518963ffffffff1660e01b81526004016111c8989796959493929190611767565b600060405180830381600087803b158015610e7657600080fd5b808214610789577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516112569060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974604082015264657333325d60d81b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a1610789737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156114025760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526113a19291602001611868565b60408051601f19818403018152908290526113bb91611899565b6000604051808303816000865af19150503d80600081146113f8576040519150601f19603f3d011682016040523d82523d6000602084013e6113fd565b606091505b505050505b6004805462ff0000191662010000179055565b6001600160a01b038116811461142a57600080fd5b50565b60008060008060008060c0878903121561144657600080fd5b863561145181611415565b9550602087013561146181611415565b9450604087013561147181611415565b959894975094956060810135955060808101359460a0909101359350915050565b600080600080600060a086880312156114aa57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b60008060008060008060c087890312156114e657600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b6000610120828403121561152357600080fd5b50919050565b60008082840361016081121561153e57600080fd5b6115488585611510565b9250604061011f198201121561155d57600080fd5b50610120830190509250929050565b801515811461142a57600080fd5b60006020828403121561158c57600080fd5b81356115978161156c565b9392505050565b600061012082840312156115b157600080fd5b6115978383611510565b600080604083850312156115ce57600080fd5b82356115d981611415565b946020939093013593505050565b6000602082840312156115f957600080fd5b5035919050565b60008060008060008060c0878903121561161957600080fd5b863561162481611415565b9550602087013561163481611415565b95989597505050506040840135936060810135936080820135935060a0909101359150565b6000806000806080858703121561166f57600080fd5b5050823594602084013594506040840135936060013592509050565b6000806000606084860312156116a057600080fd5b83356116ab81611415565b925060208401356116bb81611415565b929592945050506040919091013590565b600080600080600080600060e0888a0312156116e757600080fd5b87356116f281611415565b9650602088013561170281611415565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b6001600160a01b03968716815294861660208601529290941660408401526060830152608082019290925260a081019190915260c00190565b6001600160a01b03988916815296909716602087015260408601949094526060850192909252608084015260a083015260c082015260e08101919091526101000190565b6001600160a01b03978816815295909616602086015260408501939093526060840191909152608083015260a082015260c081019190915260e00190565b6000602082840312156117fb57600080fd5b5051919050565b60006020828403121561181457600080fd5b813561159781611415565b60006020828403121561183157600080fd5b81516115978161156c565b60005b8381101561185757818101518382015260200161183f565b83811115610f8e5750506000910152565b6001600160e01b031983168152815160009061188b81600485016020870161183c565b919091016004019392505050565b600082516118ab81846020870161183c565b9190910192915050565b60408152600560408201526422b93937b960d91b606082015260806020820152600082518060808401526118f08160a085016020870161183c565b601f01601f19169190910160a0019291505056fea2646970667358221220363d825a62e7711a222b729367aea22c71c496027732c66afce572665829ed6264736f6c634300080e00336101406040523480156200001257600080fd5b5060405162001bb838038062001bb88339810160408190526200003591620002c1565b82828180604051806040016040528060018152602001603160f81b815250848481600390805190602001906200006d9291906200014e565b508051620000839060049060208401906200014e565b5050825160208085019190912083518483012060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81880181905281830187905260608201869052608082019490945230818401528151808203909301835260c0019052805194019390932091935091906080523060c05261012052505050506001600160a01b03969096166000908152600860205260409020805460ff19166001179055505060ff1660095550620003a1915050565b8280546200015c9062000365565b90600052602060002090601f016020900481019282620001805760008555620001cb565b82601f106200019b57805160ff1916838001178555620001cb565b82800160010185558215620001cb579182015b82811115620001cb578251825591602001919060010190620001ae565b50620001d9929150620001dd565b5090565b5b80821115620001d95760008155600101620001de565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200021c57600080fd5b81516001600160401b0380821115620002395762000239620001f4565b604051601f8301601f19908116603f01168101908282118183101715620002645762000264620001f4565b816040528381526020925086838588010111156200028157600080fd5b600091505b83821015620002a5578582018301518183018401529082019062000286565b83821115620002b75760008385830101525b9695505050505050565b60008060008060808587031215620002d857600080fd5b84516001600160a01b0381168114620002f057600080fd5b60208601519094506001600160401b03808211156200030e57600080fd5b6200031c888389016200020a565b945060408701519150808211156200033357600080fd5b5062000342878288016200020a565b925050606085015160ff811681146200035a57600080fd5b939692955090935050565b600181811c908216806200037a57607f821691505b6020821081036200039b57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e05161010051610120516117c7620003f160003960006109290152600061097801526000610953015260006108ac015260006108d60152600061090001526117c76000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806340c10f19116100c357806395d89b411161007c57806395d89b41146102c45780639dc29fac146102cc578063a457c2d7146102df578063a9059cbb146102f2578063d505accf14610305578063dd62ed3e1461031857600080fd5b806340c10f1914610236578063704802751461024957806370a082311461025c5780637a6d69b4146102855780637ecebe00146102a85780638ea2da7d146102bb57600080fd5b80631e7be210116101155780631e7be210146101cd57806323b872dd146101e057806325db769e146101f3578063313ce567146102065780633644e5151461021b578063395093511461022357600080fd5b806306fdde0314610152578063095ea7b31461017057806316c02129146101935780631785f53c146101a857806318160ddd146101bb575b600080fd5b61015a61032b565b604051610167919061140b565b60405180910390f35b61018361017e36600461147c565b6103bd565b6040519015158152602001610167565b6101a66101a13660046114a6565b610444565b005b6101a66101b63660046114a6565b610477565b6002545b604051908152602001610167565b6101a66101db3660046114a6565b6104a0565b6101836101ee3660046114c8565b6104cd565b6101bf610201366004611504565b610589565b60095460405160ff9091168152602001610167565b6101bf6105af565b61018361023136600461147c565b6105be565b6101a661024436600461147c565b6105ea565b6101a66102573660046114a6565b610600565b6101bf61026a3660046114a6565b6001600160a01b031660009081526020819052604090205490565b6101836102933660046114a6565b60076020526000908152604090205460ff1681565b6101bf6102b63660046114a6565b61062c565b6101bf60095481565b61015a61064a565b6101a66102da36600461147c565b610659565b6101836102ed36600461147c565b61066b565b61018361030036600461147c565b6106f1565b6101a661031336600461151d565b610766565b6101bf610326366004611590565b6107f6565b60606003805461033a906115c3565b80601f0160208091040260200160405190810160405280929190818152602001828054610366906115c3565b80156103b35780601f10610388576101008083540402835291602001916103b3565b820191906000526020600020905b81548152906001019060200180831161039657829003601f168201915b5050505050905090565b6001600160a01b038216600090815260076020526040812054839060ff16156104015760405162461bcd60e51b81526004016103f8906115f7565b60405180910390fd5b3360008181526007602052604090205460ff16156104315760405162461bcd60e51b81526004016103f8906115f7565b61043b8585610821565b95945050505050565b61044c61082f565b610474816001600160a01b03166000908152600760205260409020805460ff19166001179055565b50565b61047f61082f565b6001600160a01b03166000908152600860205260409020805460ff19169055565b6104a861082f565b610474816001600160a01b03166000908152600760205260409020805460ff19169055565b6001600160a01b038316600090815260076020526040812054849060ff16156105085760405162461bcd60e51b81526004016103f8906115f7565b6001600160a01b038416600090815260076020526040902054849060ff16156105435760405162461bcd60e51b81526004016103f8906115f7565b3360008181526007602052604090205460ff16156105735760405162461bcd60e51b81526004016103f8906115f7565b61057e878787610886565b979650505050505050565b600061059460095490565b61059f90600a61171e565b6105a9908361172d565b92915050565b60006105b961089f565b905090565b6000336105e08185856105d183836107f6565b6105db919061174c565b6109c6565b5060019392505050565b6105f261082f565b6105fc8282610aeb565b5050565b61060861082f565b6001600160a01b03166000908152600860205260409020805460ff19166001179055565b6001600160a01b0381166000908152600560205260408120546105a9565b60606004805461033a906115c3565b61066161082f565b6105fc8282610bca565b6000338161067982866107f6565b9050838110156106d95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103f8565b6106e682868684036109c6565b506001949350505050565b6001600160a01b038216600090815260076020526040812054839060ff161561072c5760405162461bcd60e51b81526004016103f8906115f7565b3360008181526007602052604090205460ff161561075c5760405162461bcd60e51b81526004016103f8906115f7565b61043b8585610d10565b6001600160a01b038716600090815260076020526040902054879060ff16156107a15760405162461bcd60e51b81526004016103f8906115f7565b6001600160a01b038716600090815260076020526040902054879060ff16156107dc5760405162461bcd60e51b81526004016103f8906115f7565b6107eb89898989898989610d1e565b505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6000336105e08185856109c6565b3360009081526008602052604090205460ff166108845760405162461bcd60e51b815260206004820152601360248201527254657374546f6b656e2f61646d696e4f6e6c7960681b60448201526064016103f8565b565b600033610894858285610e82565b6106e6858585610efc565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156108f857507f000000000000000000000000000000000000000000000000000000000000000046145b1561092257507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6001600160a01b038316610a285760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103f8565b6001600160a01b038216610a895760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103f8565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038216610b415760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103f8565b8060026000828254610b53919061174c565b90915550506001600160a01b03821660009081526020819052604081208054839290610b8090849061174c565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610c2a5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103f8565b6001600160a01b03821660009081526020819052604090205481811015610c9e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103f8565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610ccd908490611764565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610ade565b6000336105e0818585610efc565b83421115610d6e5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016103f8565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610d9d8c6110ca565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610df8826110f2565b90506000610e0882878787611140565b9050896001600160a01b0316816001600160a01b031614610e6b5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016103f8565b610e768a8a8a6109c6565b50505050505050505050565b6000610e8e84846107f6565b90506000198114610ef65781811015610ee95760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103f8565b610ef684848484036109c6565b50505050565b6001600160a01b038316610f605760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103f8565b6001600160a01b038216610fc25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103f8565b6001600160a01b0383166000908152602081905260409020548181101561103a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103f8565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061107190849061174c565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110bd91815260200190565b60405180910390a3610ef6565b6001600160a01b03811660009081526005602052604090208054600181018255905b50919050565b60006105a96110ff61089f565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061115187878787611168565b9150915061115e81611255565b5095945050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561119f575060009050600361124c565b8460ff16601b141580156111b757508460ff16601c14155b156111c8575060009050600461124c565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561121c573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166112455760006001925092505061124c565b9150600090505b94509492505050565b60008160048111156112695761126961177b565b036112715750565b60018160048111156112855761128561177b565b036112d25760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016103f8565b60028160048111156112e6576112e661177b565b036113335760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016103f8565b60038160048111156113475761134761177b565b0361139f5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016103f8565b60048160048111156113b3576113b361177b565b036104745760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016103f8565b600060208083528351808285015260005b818110156114385785810183015185820160400152820161141c565b8181111561144a576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461147757600080fd5b919050565b6000806040838503121561148f57600080fd5b61149883611460565b946020939093013593505050565b6000602082840312156114b857600080fd5b6114c182611460565b9392505050565b6000806000606084860312156114dd57600080fd5b6114e684611460565b92506114f460208501611460565b9150604084013590509250925092565b60006020828403121561151657600080fd5b5035919050565b600080600080600080600060e0888a03121561153857600080fd5b61154188611460565b965061154f60208901611460565b95506040880135945060608801359350608088013560ff8116811461157357600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156115a357600080fd5b6115ac83611460565b91506115ba60208401611460565b90509250929050565b600181811c908216806115d757607f821691505b6020821081036110ec57634e487b7160e01b600052602260045260246000fd5b602080825260139082015272115490cc8c10930bd09b1858dadb1a5cdd1959606a1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561167557816000190482111561165b5761165b611624565b8085161561166857918102915b93841c939080029061163f565b509250929050565b60008261168c575060016105a9565b81611699575060006105a9565b81600181146116af57600281146116b9576116d5565b60019150506105a9565b60ff8411156116ca576116ca611624565b50506001821b6105a9565b5060208310610133831016604e8410600b84101617156116f8575081810a6105a9565b611702838361163a565b806000190482111561171657611716611624565b029392505050565b60006114c160ff84168361167d565b600081600019048311821515161561174757611747611624565b500290565b6000821982111561175f5761175f611624565b500190565b60008282101561177657611776611624565b500390565b634e487b7160e01b600052602160045260246000fdfea26469706673582212204d0d7db92a47baa4b3863a7c3d90bb9ff2f03be8b62d59c0eeec4def4486554564736f6c634300080e003354686572652073686f756c64206265206e6f206d6f72652070656e64696e6720626173650000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358354616b6572206c69717569646974792073686f756c642062652070656e64696e676761766520776173206e6f7420616464656420746f2070656e64696e67206261736520706f6f6c50656e64696e672071756f746520706f6f6c2073686f756c6420626520656d707479526573696475616c20776173206e6f7420616464656420746f2070656e64696e672071756f746520706f6f6c885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d50656e64696e67206261736520706f6f6c2073686f756c6420626520656d70747942657374206f66666572206f6e20574554482c55534443206f66666572206c6973742073686f756c64206265202338a2646970667358221220991880fcfe9c7d89d6fe8121530775dae3226e395f2a5e67fc27d0e861664e5864736f6c634300080e0033",
    "sourceMap": "1368:26:0:-:0;;;-1:-1:-1;;163:28:1;;;;;-1:-1:-1;2152:20:100;;;;3904:34;;;;229:13360:116;1728:237:99;;;1793:64;;;;-1:-1:-1;;;1793:64:99;;;;1368:26:0;1793:64:99;;;;;;;;-1:-1:-1;;;1793:64:99;;;;1853:2;-1:-1:-1;1793:64:99;;;-1:-1:-1;1728:237:99;;;1872:65;;;;-1:-1:-1;;;1872:65:99;;1793:64;1872:65;;;;-1:-1:-1;1872:65:99;;;;;-1:-1:-1;;;1872:65:99;;-1:-1:-1;1872:65:99;;;;-1:-1:-1;1872:65:99;-1:-1:-1;1728:237:99;;;;-1:-1:-1;1728:237:99;;;;1694:271;;;-1:-1:-1;;1694:271:99;;;229:13360:116;;1694:271:99;;1368:26:0;;1694:271:99;;;;;;1793:64;1694:271;:::i;:::-;-1:-1:-1;1694:271:99;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1694:271:99;;;;;;;;;;;;-1:-1:-1;;1694:271:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1694:271:99;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1694:271:99;;;;;;;;;;;;-1:-1:-1;;1694:271:99;;;;;;;;;;;;;;;;;;;;;;229:13360:116;;;;;;;;;-1:-1:-1;2020:32:99;;;-1:-1:-1;;;2020:32:99;;2029:9;2020:32;;;226:51:125;293:18;;;286:30;;;;352:1;332:18;;;325:29;-1:-1:-1;;;370:18:125;;;363:39;237:61:1;;2020:8:99;;419:19:125;;2020:32:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2058:32:99;;;-1:-1:-1;;;2058:32:99;;2069:4;2058:32;;;669:51:125;736:18;;;729:30;;;795:2;775:18;;;768:30;-1:-1:-1;;;814:18:125;;;807:41;2058:32:99;;237:61:1;;-1:-1:-1;2058:8:99;;-1:-1:-1;865:19:125;;;;;-1:-1:-1;;2058:32:99;;;;;;;-1:-1:-1;237:61:1;2058:32:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;229:13360:116;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;229:13360:116;;;-1:-1:-1;229:13360:116;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;895:380:125;974:1;970:12;;;;1017;;;1038:61;;1092:4;1084:6;1080:17;1070:27;;1038:61;1145:2;1137:6;1134:14;1114:18;1111:38;1108:161;;1191:10;1186:3;1182:20;1179:1;1172:31;1226:4;1223:1;1216:15;1254:4;1251:1;1244:15;1108:161;;895:380;;;:::o;:::-;229:13360:116;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620001cc5760003560e01c80638c004832116200010d578063bfdc358811620000a3578063d56a22f0116200007a578063d56a22f01462000368578063ea14b5c3146200037f578063f8ccbf471462000396578063fa7626d414620003aa57600080fd5b8063bfdc3588146200033d578063c002f5ee1462000354578063c8e617c2146200035e57600080fd5b8063b23ae37c11620000e4578063b23ae37c14620002ea578063b84e3eda14620002f4578063ba414fa6146200030b578063bbab0fac146200032657600080fd5b80638c00483214620002cc578063a7465fca14620002d6578063a9b0690b14620002e057600080fd5b80633336a63f1162000183578063423c0f1e116200015a578063423c0f1e146200027b57806348980f641462000285578063521606d2146200028f5780636cc12a2414620002a657600080fd5b80633336a63f146200024357806335d75d3b146200025a5780633a768463146200026457600080fd5b80630645f2be14620001d15780630a9254e414620002055780630b3d8c4214620002115780631dff359114620002285780631e91f8cb14620002325780632d552ef61462000239575b600080fd5b620001e8620001e236600462006ecd565b620003b8565b6040516001600160a01b0390911681526020015b60405180910390f35b6200020f620004e2565b005b620001e86200022236600462006f03565b62000a68565b6200020f62000a8b565b33620001e8565b6200020f620014df565b620001e86200025436600462006ff6565b620017ac565b6200020f620018fc565b620001e860008051602062021e8383398151915281565b6200020f620024a1565b6200020f62002826565b6200020f620002a0366004620070ce565b62002ab1565b620002bd620002b736600462007168565b62002bf1565b604051908152602001620001fc565b620001e862002c20565b6200020f62002c33565b6200020f62002c8f565b6200020f620034aa565b6200020f62000305366004620070ce565b62003a1e565b6200031562003b4e565b6040519015158152602001620001fc565b620001e862000337366004620071a0565b62003c7f565b620001e86200034e36600462006ff6565b62003d02565b6200020f62003d2b565b6200020f62003f68565b620002bd62000379366004620071de565b620044df565b620001e862000390366004620071a0565b6200457a565b600054620003159062010000900460ff1681565b600054620003159060ff1681565b600081156200040a57306028621e8480604051620003d69062006d9f565b620003e4939291906200720d565b604051809103906000f08015801562000401573d6000803e3d6000fd5b5090506200044e565b306028621e84806040516200041f9062006dad565b6200042d939291906200720d565b604051809103906000f0801580156200044a573d6000803e3d6000fd5b5090505b60008051602062021e8383398151915263c657c71882604080516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260086044820152674d616e67726f766560c01b6064820152608401600060405180830381600087803b158015620004c457600080fd5b505af1158015620004d9573d6000803e3d6000fd5b50505050919050565b604080518082019091526004808252630ae8aa8960e31b60209092019182526200050f9160129162006dbb565b50604080518082019091526004808252635553444360e01b60209092019182526200053d9160159162006dbb565b506016805460ff19166006179055601e6017556200055a6200458a565b600e54601880546001600160a01b039283166001600160a01b031991821617909155600f546019805491909316911617905560408051808201909152600581526436b0b5b2b960d91b6020820152620005b390620047f3565b601a80546001600160a01b0319166001600160a01b0392909216918217905560405163c88a5e6d60e01b815260008051602062021e838339815191529163c88a5e6d916200060f9190678ac7230489e80000906004016200722e565b600060405180830381600087803b1580156200062a57600080fd5b505af11580156200063f573d6000803e3d6000fd5b505050506200066b604051806040016040528060058152602001643a30b5b2b960d91b815250620047f3565b601b80546001600160a01b0319166001600160a01b03928316908117909155601854620006a7921690620006a1826032620044df565b62004800565b601954601b54620006ce916001600160a01b039081169116620006a182620186a0620044df565b601b546040516303223eab60e11b81526001600160a01b03909116600482015260008051602062021e83833981519152906306447d5690602401600060405180830381600087803b1580156200072357600080fd5b505af115801562000738573d6000803e3d6000fd5b5050601854600d5460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b39350620007779290911690600019906004016200722e565b6020604051808303816000875af115801562000797573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007bd919062007247565b50601954600d5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b392620007f892911690600019906004016200722e565b6020604051808303816000875af115801562000818573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200083e919062007247565b50604080516390c5013b60e01b8152905160008051602062021e83833981519152916390c5013b91600480830192600092919082900301818387803b1580156200088757600080fd5b505af11580156200089c573d6000803e3d6000fd5b5050601a546040516303223eab60e11b81526001600160a01b03909116600482015260008051602062021e8383398151915292506306447d569150602401600060405180830381600087803b158015620008f557600080fd5b505af11580156200090a573d6000803e3d6000fd5b5050600d546001600160a01b03169150620009229050565b6018546019546001600160a01b03918216911662000944826022600262002bf1565b6019546200095e906001600160a01b03166103e8620044df565b601a54604051600a91630206cc80916001600160a01b0390911690620009849062006e46565b6001600160a01b039889168152968816602088015294871660408701526060860193909352608085019190915260a084015260c083015290911660e082015261010001604051809103906000f080158015620009e4573d6000803e3d6000fd5b50601c80546001600160a01b0319166001600160a01b0392909216919091179055604080516390c5013b60e01b8152905160008051602062021e83833981519152916390c5013b91600480830192600092919082900301818387803b15801562000a4d57600080fd5b505af115801562000a62573d6000803e3d6000fd5b50505050565b600062000a7582620003b8565b905062000a848484836200480f565b9392505050565b600d546018546019546001600160a01b039283169263fbb66910928116911662000ab7826001620044df565b6040518463ffffffff1660e01b815260040162000ad79392919062007267565b600060405180830381600087803b15801562000af257600080fd5b505af115801562000b07573d6000803e3d6000fd5b5050601b5460405163ca669fa760e01b81526001600160a01b03909116600482015260008051602062021e83833981519152925063ca669fa79150602401600060405180830381600087803b15801562000b6057600080fd5b505af115801562000b75573d6000803e3d6000fd5b5050600d546019546018546000945084935083926001600160a01b039081169263fbffe5fd92908216911662000baf826001600262002bf1565b60185462000bc8906001600160a01b03166001620044df565b60016040518663ffffffff1660e01b815260040162000bec9594939291906200728b565b6080604051808303816000875af115801562000c0c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c329190620072bc565b50600d5460185460195460408051636f7aeed560e11b81526001600160a01b03938416600482015291831660248301525195985093965091945060009391169163def5ddaa9160448083019260209291908290030181865afa15801562000c9d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000cc39190620072f3565b600d546018546019546040516368c13d6b60e01b81529394506000936001600160a01b03938416936368c13d6b9362000d089390821692911690879060040162007267565b602060405180830381865afa15801562000d26573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d4c9190620072f3565b905060006001600160601b038216601a5460405163ca669fa760e01b81526001600160a01b03909116600482015290915060008051602062021e838339815191529063ca669fa790602401600060405180830381600087803b15801562000db257600080fd5b505af115801562000dc7573d6000803e3d6000fd5b5050601c546040805163e20ccec360e01b81528151600095506001600160a01b03909316935063e20ccec392600480830193928290030181865afa15801562000e14573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e3a91906200730d565b60006020020151905062000e69818760405180606001604052806021815260200162021ec36021913962004ad2565b601b5460405163ca669fa760e01b81526001600160a01b03909116600482015260008051602062021e838339815191529063ca669fa790602401600060405180830381600087803b15801562000ebe57600080fd5b505af115801562000ed3573d6000803e3d6000fd5b5050600d546019546018546001600160a01b03928316945063fbffe5fd9350908216911662000f06826001600262002bf1565b60185462000f1f906001600160a01b03166001620044df565b60016040518663ffffffff1660e01b815260040162000f439594939291906200728b565b6080604051808303816000875af115801562000f63573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000f899190620072bc565b50601a5460405163ca669fa760e01b81526001600160a01b039091166004820152929950909750955060008051602062021e838339815191529063ca669fa790602401600060405180830381600087803b15801562000fe757600080fd5b505af115801562000ffc573d6000803e3d6000fd5b5050601c546040805163e20ccec360e01b81528151600095506001600160a01b03909316935063e20ccec392600480830193928290030181865afa15801562001049573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200106f91906200730d565b519050620010b681620010838985620073a0565b604051806040016040528060148152602001734d697373696e672070656e64696e67206261736560601b81525062004ad2565b600d54601854601954604051630fbb669160e41b81526001600160a01b039384169363fbb6691093620010f6939082169291169060649060040162007267565b600060405180830381600087803b1580156200111157600080fd5b505af115801562001126573d6000803e3d6000fd5b5050601b5460405163ca669fa760e01b81526001600160a01b03909116600482015260008051602062021e83833981519152925063ca669fa79150602401600060405180830381600087803b1580156200117f57600080fd5b505af115801562001194573d6000803e3d6000fd5b5050600d546019546018546001600160a01b03928316945063fbffe5fd93509082169116620011c7826001600262002bf1565b601854620011e0906001600160a01b03166001620044df565b60016040518663ffffffff1660e01b8152600401620012049594939291906200728b565b6080604051808303816000875af115801562001224573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200124a9190620072bc565b5050601a5460405163ca669fa760e01b81526001600160a01b03909116600482015260008051602062021e83833981519152925063ca669fa79150602401600060405180830381600087803b158015620012a357600080fd5b505af1158015620012b8573d6000803e3d6000fd5b5050601c546040805163e20ccec360e01b81528151600095506001600160a01b03909316935063e20ccec392600480830193928290030181865afa15801562001305573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200132b91906200730d565b6000602002015190506200135b81600060405180606001604052806024815260200162021e5f6024913962004ad2565b600d546018546001600160a01b039182169163def5ddaa91166019546001600160a01b03166040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015620013cc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620013f29190620072f3565b600d546018546019546040516368c13d6b60e01b81529399506001600160a01b03928316936368c13d6b93620014329381169216908b9060040162007267565b602060405180830381865afa15801562001450573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620014769190620072f3565b9450620014d46001600160601b03861689620014938588620073a0565b6200149f9190620073a0565b60405180604001604052806016815260200175125b98dbdc9c9958dd0819da5d995b88185b5bdd5b9d60521b81525062004ad2565b505050505050505050565b601a546040516303223eab60e11b81526001600160a01b03909116600482018190529060008051602062021e83833981519152906306447d5690602401600060405180830381600087803b1580156200153757600080fd5b505af11580156200154c573d6000803e3d6000fd5b5050601c5460408051606081019091526018546001600160a01b03928316945063815502679350600392600192620015de9290918291620015909116868662002bf1565b8152601854602090910190620015b3906001600160a01b03166003600162002bf1565b8152601854602090910190620015d6906001600160a01b03166003600162002bf1565b905262004b0e565b6040518463ffffffff1660e01b8152600401620015fe93929190620073f8565b600060405180830381600087803b1580156200161957600080fd5b505af11580156200162e573d6000803e3d6000fd5b50505050600062001640600062004b4a565b601954909150620016ca906001600160a01b03166018546001600160a01b03168360000151620016c46040518061014001604052806002815260200160038152602001600481526020016004198152602001600519815260200160008152602001600081526020016007198152602001600619815260200160001981525062004c25565b62004c5d565b60185462001747906001600160a01b03165b6019546001600160a01b03168360200151620016c4604051806101400160405280600081526020016000815260200160008152602001600681526020016001815260200160028152602001600381526020016004815260200160058152602001600781525062004c25565b50604080516390c5013b60e01b8152905160008051602062021e83833981519152916390c5013b91600480830192600092919082900301818387803b1580156200179057600080fd5b505af1158015620017a5573d6000803e3d6000fd5b5050505050565b600080600d60009054906101000a90046001600160a01b03168585604051620017d59062006e54565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f08015801562001812573d6000803e3d6000fd5b5060405163c88a5e6d60e01b815290915060008051602062021e838339815191529063c88a5e6d906200185590849068056bc75e2d63100000906004016200722e565b600060405180830381600087803b1580156200187057600080fd5b505af115801562001885573d6000803e3d6000fd5b50506040516318caf8e360e31b815260008051602062021e83833981519152925063c657c7189150620018bf908490879060040162007478565b600060405180830381600087803b158015620018da57600080fd5b505af1158015620018ef573d6000803e3d6000fd5b5092979650505050505050565b600d546019546018546001600160a01b039283169263fbb66910928116911662001928826001620044df565b6040518463ffffffff1660e01b8152600401620019489392919062007267565b600060405180830381600087803b1580156200196357600080fd5b505af115801562001978573d6000803e3d6000fd5b5050600d546018546019546001600160a01b03928316945063fbb6691093509082169116620019a9826001620044df565b6040518463ffffffff1660e01b8152600401620019c99392919062007267565b600060405180830381600087803b158015620019e457600080fd5b505af1158015620019f9573d6000803e3d6000fd5b5050600d54601954600093506001600160a01b03918216925063def5ddaa91166018546001600160a01b03166040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa15801562001a71573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a979190620072f3565b600d546019546018546040516368c13d6b60e01b81529394506000936001600160a01b03938416936368c13d6b9362001adc9390821692911690879060040162007267565b602060405180830381865afa15801562001afa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001b209190620072f3565b601b5460405163ca669fa760e01b81526001600160a01b03909116600482015290915060008051602062021e838339815191529063ca669fa790602401600060405180830381600087803b15801562001b7857600080fd5b505af115801562001b8d573d6000803e3d6000fd5b5050600d546019546018546000945084935083926001600160a01b039081169263fbffe5fd92908216911662001bc5826064620044df565b60185462001bde906001600160a01b03166001620044df565b60016040518663ffffffff1660e01b815260040162001c029594939291906200728b565b6080604051808303816000875af115801562001c22573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001c489190620072bc565b50601a546040516303223eab60e11b81526001600160a01b039091166004820152929550909350915060008051602062021e83833981519152906306447d5690602401600060405180830381600087803b15801562001ca657600080fd5b505af115801562001cbb573d6000803e3d6000fd5b5050601c546040805163e20ccec360e01b81528151600095506001600160a01b03909316935063e20ccec392600480830193928290030181865afa15801562001d08573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001d2e91906200730d565b51601c546040805163e20ccec360e01b815281519394506000936001600160a01b039093169263e20ccec3926004808401939192918290030181865afa15801562001d7d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001da391906200730d565b60200151604080516390c5013b60e01b8152905191925060008051602062021e83833981519152916390c5013b9160048082019260009290919082900301818387803b15801562001df357600080fd5b505af115801562001e08573d6000803e3d6000fd5b5050505062001e32848360405180606001604052806027815260200162021ee46027913962004ad2565b60195462001e869062001e50906001600160a01b03166064620044df565b62001e65906001600160601b0389166200749e565b826040518060600160405280602c815260200162021f2d602c913962004ad2565b600d546019546001600160a01b039182169163def5ddaa91166018546001600160a01b03166040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa15801562001ef7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001f1d9190620072f3565b600d546019546018546040516368c13d6b60e01b8152939a506001600160a01b03928316936368c13d6b9362001f5d9381169216908c9060040162007267565b602060405180830381865afa15801562001f7b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001fa19190620072f3565b601b5460405163ca669fa760e01b81526001600160a01b03909116600482015290965060008051602062021e838339815191529063ca669fa790602401600060405180830381600087803b15801562001ff957600080fd5b505af11580156200200e573d6000803e3d6000fd5b5050600d546019546018546001600160a01b03928316945063fbffe5fd935090821691166200203f826064620044df565b60185462002058906001600160a01b03166001620044df565b60016040518663ffffffff1660e01b81526004016200207c9594939291906200728b565b6080604051808303816000875af11580156200209c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620020c29190620072bc565b50601a546040516303223eab60e11b81526001600160a01b039091166004820152929750909550935060008051602062021e83833981519152906306447d5690602401600060405180830381600087803b1580156200212057600080fd5b505af115801562002135573d6000803e3d6000fd5b5050601c546040805163e20ccec360e01b81528151600095506001600160a01b03909316935063e20ccec392600480830193928290030181865afa15801562002182573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620021a891906200730d565b51601c546040805163e20ccec360e01b815281519394506000936001600160a01b039093169263e20ccec3926004808401939192918290030181865afa158015620021f7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200221d91906200730d565b60200151604080516390c5013b60e01b8152905191925060008051602062021e83833981519152916390c5013b9160048082019260009290919082900301818387803b1580156200226d57600080fd5b505af115801562002282573d6000803e3d6000fd5b50505050620022b98685620022989190620073a0565b8360405180606001604052806027815260200162021ee46027913962004ad2565b601954620022fa908490620022d9906001600160a01b03166064620044df565b620022ee906001600160601b038c166200749e565b62001e659190620073a0565b600d54601954601854604051630fbb669160e41b81526001600160a01b039384169363fbb66910936200233a939082169291169060649060040162007267565b600060405180830381600087803b1580156200235557600080fd5b505af11580156200236a573d6000803e3d6000fd5b5050600d546018546001600160a01b03918216935063fbb669109250166019546001600160a01b031660646040518463ffffffff1660e01b8152600401620023b59392919062007267565b600060405180830381600087803b158015620023d057600080fd5b505af1158015620023e5573d6000803e3d6000fd5b505050506000620023f7600062004b4a565b6019549091506200247e906001600160a01b03165b6018546001600160a01b03168360000151620016c460405180610140016040528060028152602001600219815260200160031981526020016004198152602001600519815260200160008152602001600081526020016007198152602001600619815260200160001981525062004c25565b60185462002495906001600160a01b0316620016dc565b50505050505050505050565b601a5460405163ca669fa760e01b81526001600160a01b03909116600482015260008051602062021e838339815191529063ca669fa790602401600060405180830381600087803b158015620024f657600080fd5b505af11580156200250b573d6000803e3d6000fd5b50505050601c60009054906101000a90046001600160a01b03166001600160a01b0316638456cb596040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200256057600080fd5b505af115801562002575573d6000803e3d6000fd5b5050601b5460405163ca669fa760e01b81526001600160a01b03909116600482015260008051602062021e83833981519152925063ca669fa79150602401600060405180830381600087803b158015620025ce57600080fd5b505af1158015620025e3573d6000803e3d6000fd5b5050600d54601954601854600094508493506001600160a01b039283169263fbffe5fd928116911662002619826109c4620044df565b60185462002634906001600160a01b0316600f600162002bf1565b60016040518663ffffffff1660e01b8152600401620026589594939291906200728b565b6080604051808303816000875af115801562002678573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200269e9190620072bc565b505091509150620026d98260006040518060400160405280600f81526020016e0676f742073686f756c64206265203608c1b81525062004ad2565b6200270f8160006040518060400160405280601081526020016f0676176652073686f756c6420626520360841b81525062004ad2565b60006200271d600062004b4a565b601954909150620027a4906001600160a01b03166018546001600160a01b03168360000151620016c46040518061014001604052806001198152602001600219815260200160031981526020016004198152602001600519815260200160008152602001600081526020016007198152602001600619815260200160001981525062004c25565b60185462002821906001600160a01b03165b6019546001600160a01b03168360200151620016c4604051806101400160405280600081526020016008815260200160008152602001600681526020016001815260200160028152602001600381526020016004815260200160058152602001600781525062004c25565b505050565b601a546040516303223eab60e11b81526001600160a01b03909116600482015260008051602062021e83833981519152906306447d5690602401600060405180830381600087803b1580156200287b57600080fd5b505af115801562002890573d6000803e3d6000fd5b50505050601c60009054906101000a90046001600160a01b03166001600160a01b0316631ef3755d6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620028e557600080fd5b505af1158015620028fa573d6000803e3d6000fd5b50506019546200293e92506200291d91506001600160a01b03166101f4620044df565b60185462002938906001600160a01b0316600f600262002bf1565b62004e45565b604080516390c5013b60e01b8152905160008051602062021e83833981519152916390c5013b91600480830192600092919082900301818387803b1580156200298657600080fd5b505af11580156200299b573d6000803e3d6000fd5b505050506000620029ad600062004b4a565b60195490915062002a2f906001600160a01b03166018546001600160a01b03168360000151620016c4604051806101400160405280600281526020016003815260200160048152602001600581526020016006815260200160008152602001600081526020016007198152602001600619815260200160001981525062004c25565b60185462002aae906001600160a01b03166019546001600160a01b03168360200151620016c4604051806101400160405280600081526020016007198152602001600081526020016005198152602001600019815260200160028152602001600381526020016004815260200160058152602001600781525062004c25565b50565b604080516020810190915260008082525b825181101562002be1578251829060008051602062021e8383398151915290636900a3ae9086908590811062002afc5762002afc62007374565b60200260200101516040518263ffffffff1660e01b815260040162002b2391815260200190565b600060405180830381865afa15801562002b41573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262002b6b9190810190620074b8565b60405160200162002b7e9291906200752f565b60405160208183030381529060405291506001835162002b9f91906200749e565b81101562002bcc578160405160200162002bba919062007562565b60405160208183030381529060405291505b8062002bd8816200758a565b91505062002ac2565b5062002bed8162004fcf565b5050565b600062002c0082600a620076a3565b62002c0c8585620044df565b62002c189190620076b1565b949350505050565b600062002c2e6000620003b8565b905090565b62002c3d62003f68565b62002c47620034aa565b62002c5162003d2b565b62002c5b620014df565b62002c6562000a8b565b62002c6f620018fc565b62002c7962002c8f565b62002c83620024a1565b62002c8d62002826565b565b601a546040516303223eab60e11b81526001600160a01b03909116600482015260008051602062021e83833981519152906306447d5690602401600060405180830381600087803b15801562002ce457600080fd5b505af115801562002cf9573d6000803e3d6000fd5b5050601c546040805163e20ccec360e01b81528151600095506001600160a01b03909316935063e20ccec392600480830193928290030181865afa15801562002d46573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002d6c91906200730d565b51601c546040805163e20ccec360e01b815281519394506000936001600160a01b039093169263e20ccec3926004808401939192918290030181865afa15801562002dbb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002de191906200730d565b60200151604080516390c5013b60e01b8152905191925060008051602062021e83833981519152916390c5013b9160048082019260009290919082900301818387803b15801562002e3157600080fd5b505af115801562002e46573d6000803e3d6000fd5b5050600d546019546018546040516368c13d6b60e01b8152600095506001600160a01b0393841694506368c13d6b9362002e8b93811692169060029060040162007267565b602060405180830381865afa15801562002ea9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002ecf9190620072f3565b601b5460405163ca669fa760e01b81526001600160a01b03909116600482015290915060008051602062021e838339815191529063ca669fa790602401600060405180830381600087803b15801562002f2757600080fd5b505af115801562002f3c573d6000803e3d6000fd5b5050600d54601954601854600094506001600160a01b03928316935063fbffe5fd92918216911662002f70826064620044df565b60185462002f89906001600160a01b03166001620044df565b60016040518663ffffffff1660e01b815260040162002fad9594939291906200728b565b6080604051808303816000875af115801562002fcd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002ff39190620072bc565b5050915050600062003006600062004b4a565b60195490915062003020906001600160a01b03166200240c565b60185462003037906001600160a01b0316620027b6565b601a546040516303223eab60e11b81526001600160a01b03909116600482015260008051602062021e83833981519152906306447d5690602401600060405180830381600087803b1580156200308c57600080fd5b505af1158015620030a1573d6000803e3d6000fd5b5050601c546040805163e20ccec360e01b81528151600095506001600160a01b03909316935063e20ccec392600480830193928290030181865afa158015620030ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200311491906200730d565b51601c546040805163e20ccec360e01b815281519394506000936001600160a01b039093169263e20ccec3926004808401939192918290030181865afa15801562003163573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200318991906200730d565b60200151604080516390c5013b60e01b8152905191925060008051602062021e83833981519152916390c5013b9160048082019260009290919082900301818387803b158015620031d957600080fd5b505af1158015620031ee573d6000803e3d6000fd5b505050506200321982600060405180606001604052806021815260200162021f796021913962004ad2565b6200324081600060405180606001604052806022815260200162021f0b6022913962004ad2565b600d546018546000916001600160a01b039081169163def5ddaa91166019546001600160a01b03166040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015620032b4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620032da9190620072f3565b600d546018546019546040516368c13d6b60e01b81529394506000936001600160a01b03938416936368c13d6b936200331f9390821692911690879060040162007267565b602060405180830381865afa1580156200333d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620033639190620072f3565b90506200338c8260086040518060600160405280602f815260200162021f9a602f913962004ad2565b620033da6001600160601b038216620033a68b89620073a0565b60405180604001604052806015815260200174496e636f7272656374206f6666657220676976657360581b81525062004ad2565b600d546019546018546040516368c13d6b60e01b81526000936001600160a01b03908116936368c13d6b936200341c9391831692169060029060040162007267565b602060405180830381865afa1580156200343a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620034609190620072f3565b9050620024956001600160601b03821660195462003489906001600160a01b03166064620044df565b6200349e6001600160601b038c168d620073a0565b620033a691906200749e565b601b546040516303223eab60e11b81526001600160a01b03909116600482018190529060008051602062021e83833981519152906306447d5690602401600060405180830381600087803b1580156200350257600080fd5b505af115801562003517573d6000803e3d6000fd5b5050600d546018546019546000945084935083926001600160a01b039081169263fbffe5fd92908216911662003551826005600162002bf1565b6019546200356b906001600160a01b0316610bb8620044df565b60016040518663ffffffff1660e01b81526004016200358f9594939291906200728b565b6080604051808303816000875af1158015620035af573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620035d59190620072bc565b509250925092506000620035ea600062004b4a565b6018549091506200365c90859062003620906001600160a01b03166019546001600160a01b03166706f05b59d3b2000062005016565b6040518060400160405280601981526020017f696e636f727265637420726563656976656420616d6f756e740000000000000081525062004ad2565b6200369f8260006040518060400160405280601f81526020017f74616b65722073686f756c64206e6f74207265636569766520626f756e74790081525062004ad2565b6019546200371b906001600160a01b03166018546001600160a01b03168360000151620016c4604051806101400160405280600181526020016002815260200160038152602001600481526020016005815260200160068152602001600081526020016000815260200160008152602001600081525062004c25565b60185462003798906001600160a01b03166019546001600160a01b03168360200151620016c460405180610140016040528060008152602001600081526020016000815260200160008152602001600081526020016000198152602001600281526020016003815260200160048152602001600581525062004c25565b600d546019546018546001600160a01b039283169263fbffe5fd9281169116620037c582610dac620044df565b601854620037e0906001600160a01b0316600f600162002bf1565b60016040518663ffffffff1660e01b8152600401620038049594939291906200728b565b6080604051808303816000875af115801562003824573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200384a9190620072bc565b5060195460185493975091955093506200388691869162003620916001600160a01b0391821691166200388082610dac620044df565b62005016565b620038c98260006040518060400160405280601f81526020017f74616b65722073686f756c64206e6f74207265636569766520626f756e74790081525062004ad2565b620038d5600062004b4a565b60195490915062003956906001600160a01b03166018546001600160a01b03168360000151620016c46040518061014001604052806001815260200160028152602001600381526020016004815260200160041981526020016005198152602001600081526020016000815260200160008152602001600081525062004c25565b601854620039d2906001600160a01b03166019546001600160a01b03168360200151620016c4604051806101400160405280600081526020016000815260200160008152602001600081526020016006815260200160018152602001600281526020016003815260200160048152602001600581525062004c25565b5050604080516390c5013b60e01b8152905160008051602062021e8383398151915293506390c5013b9250600480830192600092919082900301818387803b1580156200179057600080fd5b604080516020810190915260008082525b825181101562002be1578251829060008051602062021e8383398151915290636900a3ae9086908590811062003a695762003a6962007374565b60200260200101516040518263ffffffff1660e01b815260040162003a9091815260200190565b600060405180830381865afa15801562003aae573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262003ad89190810190620074b8565b60405160200162003aeb9291906200752f565b60405160208183030381529060405291506001835162003b0c91906200749e565b81101562003b39578160405160200162003b27919062007562565b60405160208183030381529060405291505b8062003b45816200758a565b91505062003a2f565b60008054610100900460ff161562003b6f5750600054610100900460ff1690565b600060008051602062021e838339815191523b1562003c7a5760405160009060008051602062021e83833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49062003bdc9083906519985a5b195960d21b906020016200722e565b60408051601f198184030181529082905262003bfc9291602001620076d4565b60408051601f198184030181529082905262003c189162007707565b6000604051808303816000865af19150503d806000811462003c57576040519150601f19603f3d011682016040523d82523d6000602084013e62003c5c565b606091505b509150508080602001905181019062003c76919062007247565b9150505b919050565b600d5460009062003c99906001600160a01b0316620050ce565b50600d546040516001600160a01b03909116908490849062003cbb9062006e62565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f08015801562003cf8573d6000803e3d6000fd5b5090505b92915050565b600080600d60009054906101000a90046001600160a01b03168585604051620017d59062006e70565b601a546040516303223eab60e11b81526001600160a01b03909116600482018190529060008051602062021e83833981519152906306447d5690602401600060405180830381600087803b15801562003d8357600080fd5b505af115801562003d98573d6000803e3d6000fd5b5050601c54604080518082019091526019546001600160a01b039283169450638155026793506001199260009262003e07929091829162003ddd91166103e8620044df565b815260195460209091019062003dff906001600160a01b03166103e8620044df565b9052620051b8565b6040518463ffffffff1660e01b815260040162003e2793929190620073f8565b600060405180830381600087803b15801562003e4257600080fd5b505af115801562003e57573d6000803e3d6000fd5b50505050600062003e69600062004b4a565b60195490915062003eea906001600160a01b03166018546001600160a01b03168360000151620016c46040518061014001604052806008815260200160078152602001600181526020016002815260200160038152602001600481526020016004198152602001600519815260200160008152602001600081525062004c25565b60185462001747906001600160a01b03166019546001600160a01b03168360200151620016c46040518061014001604052806003198152602001600419815260200160008152602001600081526020016000815260200160008152602001600681526020016001815260200160028152602001600381525062004c25565b601a546040516303223eab60e11b81526001600160a01b03909116600482018190529060008051602062021e83833981519152906306447d5690602401600060405180830381600087803b15801562003fc057600080fd5b505af115801562003fd5573d6000803e3d6000fd5b5050601954601c54604080516303e21fa960e61b815290516001600160a01b03938416955063095ea7b394506200405f939092169163f887ea40916004808201926020929091908290030181865afa15801562004036573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200405c919062007725565b90565b6000196040518363ffffffff1660e01b8152600401620040819291906200722e565b6020604051808303816000875af1158015620040a1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620040c7919062007247565b50601854601c54604080516303e21fa960e61b815290516001600160a01b039384169363095ea7b393620041249391169163f887ea40916004808201926020929091908290030181865afa15801562004036573d6000803e3d6000fd5b6000196040518363ffffffff1660e01b8152600401620041469291906200722e565b6020604051808303816000875af115801562004166573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200418c919062007247565b50601854601a54620041b2916001600160a01b039081169116620006a1826011620044df565b601954601a54620041d8916001600160a01b039081169116620006a18261c350620044df565b601c546018546019546040805163d1baa1ef60e01b815290516000946001600160a01b039081169463e4c34f849490821693911691859163d1baa1ef9160048083019260209291908290030181865afa1580156200423a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620042609190620072f3565b6000806040518663ffffffff1660e01b81526004016200428595949392919062007745565b602060405180830381865afa158015620042a3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620042c99190620072f3565b600d549091506001600160a01b03166323024408620042ea83601462007776565b601c546001600160a01b03166040516001600160e01b031960e085901b1681526001600160a01b0390911660048201526024016000604051808303818588803b1580156200433757600080fd5b505af11580156200434c573d6000803e3d6000fd5b50506019546200438c93506200437192506001600160a01b031690506103e8620044df565b60185462002938906001600160a01b03166003600162002bf1565b60006200439a600062004b4a565b60195490915062004419906001600160a01b03166018546001600160a01b03168360000151620016c4604051806101400160405280600181526020016002815260200160038152602001600481526020016005815260200160008152602001600081526020016000815260200160008152602001600081525062004c25565b60185462004495906001600160a01b03166019546001600160a01b03168360200151620016c4604051806101400160405280600081526020016000815260200160008152602001600081526020016000815260200160018152602001600281526020016003815260200160048152602001600581525062004c25565b5050604080516390c5013b60e01b8152905160008051602062021e83833981519152916390c5013b91600480830192600092919082900301818387803b1580156200179057600080fd5b6000620044eb620051eb565b6000836001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200452c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004552919062007798565b60ff16905062004561620051f7565b6200456e81600a620076a3565b62002c18908462007776565b600062000a848383600062000a68565b601354604051309160119160129160ff1690620045a79062006e7e565b620045b69493929190620078a0565b604051809103906000f080158015620045d3573d6000803e3d6000fd5b50600e80546001600160a01b0319166001600160a01b03929092169190911790553060165460405160149160159160ff90911690620046129062006e7e565b620046219493929190620078a0565b604051809103906000f0801580156200463e573d6000803e3d6000fd5b50600f80546001600160a01b0319166001600160a01b03928316908117909155600e54601054620046789391909116919060ff1662000a68565b600d80546001600160a01b0319166001600160a01b03929092169182179055604080516316c1a85160e31b8152905163b60d428891678ac7230489e8000091600480830192600092919082900301818588803b158015620046d857600080fd5b505af1158015620046ed573d6000803e3d6000fd5b5050600e54600d5460405163095ea7b360e01b81526001600160a01b03928316955063095ea7b394506200472c9350911690600019906004016200722e565b6020604051808303816000875af11580156200474c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004772919062007247565b50600f54600d5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b392620047ad92911690600019906004016200722e565b6020604051808303816000875af1158015620047cd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002aae919062007247565b600062000a8482620052a3565b6200282183838360006200542a565b6200481a83620050ce565b506200482682620050ce565b50601754604051630b73a18f60e01b81526001600160a01b03831691630b73a18f9162004862918791879190600090614e209060040162007745565b600060405180830381600087803b1580156200487d57600080fd5b505af115801562004892573d6000803e3d6000fd5b5050601754604051630b73a18f60e01b81526001600160a01b0385169350630b73a18f9250620048d1918691889190600090614e209060040162007745565b600060405180830381600087803b158015620048ec57600080fd5b505af115801562004901573d6000803e3d6000fd5b5050505060008051602062021f5983398151915260001c60601b60601c6001600160a01b031663c657c71884856001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156200496c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620049969190810190620074b8565b6040518363ffffffff1660e01b8152600401620049b592919062007478565b600060405180830381600087803b158015620049d057600080fd5b505af1158015620049e5573d6000803e3d6000fd5b5050505060008051602062021f5983398151915260001c60601b60601c6001600160a01b031663c657c71883846001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801562004a50573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262004a7a9190810190620074b8565b6040518363ffffffff1660e01b815260040162004a9992919062007478565b600060405180830381600087803b15801562004ab457600080fd5b505af115801562004ac9573d6000803e3d6000fd5b50505050505050565b818314620028215760008051602062021ea38339815191528160405162004afa9190620078ef565b60405180910390a16200282183836200566b565b60408051600380825260808201909252606091602082018380368337019050509050816020820162004b438260038362005762565b5050919050565b6040805180820190915260608082526020820152601c54604051631efa880b60e01b815283151560048201526000916001600160a01b031690631efa880b90602401600060405180830381865afa15801562004baa573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262004bd4919081019062007920565b905060405180604001604052808260006002811062004bf75762004bf762007374565b602002015181526020018260016002811062004c175762004c1762007374565b602002015190529392505050565b60408051600a80825261016082019092526060916020820161014080368337019050509050816020820162004b4382600a8362005762565b6000805b825181101562004e3d5782818151811062004c805762004c8062007374565b6020908102919091010151600d5490925062004dce9060009062004d29906001600160a01b03166368c13d6b8a8a62004cb9896200578e565b6040518463ffffffff1660e01b815260040162004cd99392919062007267565b602060405180830381865afa15801562004cf7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004d1d9190620072f3565b6001600160601b031690565b604051635191620760e11b815260048101869052911090600085139060008051602062021e838339815191529063a322c40e90602401600060405180830381865afa15801562004d7d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262004da79190810190620074b8565b60405160200162004db9919062007a20565b604051602081830303815290604052620057a8565b62004e2884828151811062004de75762004de762007374565b602002602001015162004dfa846200578e565b6040518060400160405280600f81526020016e13d999995c881b5a5cdc1b1858d959608a1b81525062004ad2565b8062004e34816200758a565b91505062004c61565b505050505050565b600062004e556002600a620076b1565b60408051600a8082526101608201909252919250600091906020820161014080368337505060408051600a80825261016082019092529293506000929150602082016101408036833701905050905060005b600a81101562004f045762004ebf6002600a620076b1565b811062004ecd578462004ecf565b855b82828151811062004ee45762004ee462007374565b60209081029190910101528062004efb816200758a565b91505062004ea7565b5060005b600281101562004e3d57601c546001600160a01b031663553e9f326001600462004f33858962007776565b62004f40866001620073a0565b62004f4c908a62007776565b60405180604001604052808a81526020018a815250886040518763ffffffff1660e01b815260040162004f859695949392919062007a5d565b600060405180830381600087803b15801562004fa057600080fd5b505af115801562004fb5573d6000803e3d6000fd5b50505050808062004fc6906200758a565b91505062004f08565b62002aae8160405160240162004fe6919062007b11565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052620057e8565b600d546040516365fbae4d60e11b81526001600160a01b0385811660048301528481166024830152600092839291169063cbf75c9a906044016040805180830381865afa1580156200506c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005092919062007b26565b91506127109050620050ad61ffff60e884901c16826200749e565b620050b9908562007776565b620050c59190620076b1565b95945050505050565b60006001600160a01b038216620051a9577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516200513f906020808252601e908201527f4572726f723a20616464726573732073686f756c64206e6f7420626520300000604082015260600190565b60405180910390a160408051818152600781830152664164647265737360c81b60608201526001600160a01b038416602082015290517f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f9181900360800190a1620051a962005809565b506001600160a01b0316151590565b6040805160028082526060808301845292602083019080368337019050509050816020820162004b438260028362005762565b62002c8d60006200590d565b600854600103620052585760095460405163ca669fa760e01b81526001600160a01b03909116600482015260008051602062021e838339815191529063ca669fa7906024015b600060405180830381600087803b15801562000a4d57600080fd5b60085460020362002c8d576009546040516303223eab60e11b81526001600160a01b03909116600482015260008051602062021e83833981519152906306447d56906024016200523d565b80516020820120600a8054600181019091556040516001625e79b760e01b031981529101600482018190529060009060008051602062021e838339815191529063ffa18649906024016020604051808303816000875af11580156200530c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005332919062007725565b60408051808201825260088152676e6f74207a65726f60c01b60208201529051635a6b63c160e11b815291925060008051602062021e838339815191529163b4d6c78291620053879185919060040162007478565b600060405180830381600087803b158015620053a257600080fd5b505af1158015620053b7573d6000803e3d6000fd5b50506040516318caf8e360e31b815260008051602062021e83833981519152925063c657c7189150620053f1908490879060040162007478565b600060405180830381600087803b1580156200540c57600080fd5b505af115801562005421573d6000803e3d6000fd5b50505050915091565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b1790529151600092871691620054809162007707565b6000604051808303816000865af19150503d8060008114620054bf576040519150601f19603f3d011682016040523d82523d6000602084013e620054c4565b606091505b50915050600081806020019051810190620054e09190620072f3565b905062005552846200554b87620055226370a0823160e01b6200550560018d62005a72565b9060038201805463ffffffff191660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b9062005a97565b821562004e3d5760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b038916916200559d919062007707565b6000604051808303816000865af19150503d8060008114620055dc576040519150601f19603f3d011682016040523d82523d6000602084013e620055e1565b606091505b50915050600081806020019051810190620055fd9190620072f3565b90508286101562005628576200561486846200749e565b6200562090826200749e565b905062005643565b6200563483876200749e565b620056409082620073a0565b90505b62005661816200554b6318160ddd60e01b6200550560018d62005a72565b5050505050505050565b80821462002bed577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620056de9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88160405162005717919062007b4b565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88260405162005750919062007b84565b60405180910390a162002bed62005809565b811562002821576000198201602002838101519082015281620057858162007baf565b92505062005762565b600080821215620057a45762003cfc8262007bc9565b5090565b81151583151514620028215760008051602062021ea383398151915281604051620057d49190620078ef565b60405180910390a162002821838362005aa3565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60008051602062021e838339815191523b15620058fc5760405160009060008051602062021e83833981519152907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490620058779083906519985a5b195960d21b906001906020016200720d565b60408051601f1981840301815290829052620058979291602001620076d4565b60408051601f1981840301815290829052620058b39162007707565b6000604051808303816000865af19150503d8060008114620058f2576040519150601f19603f3d011682016040523d82523d6000602084013e620058f7565b606091505b505050505b6000805461ff001916610100179055565b600060085560408051631e91f8cb60e01b815290513091631e91f8cb9160048083019260209291908290030181865afa1580156200594f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005975919062007725565b600980546001600160a01b0319166001600160a01b03929092169182179055301462002aae57306001600160a01b0316631e91f8cb6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620059da573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005a00919062007725565b6009546001600160a01b0390811691161462005a1e57600160085550565b801562002aae576002600855604080516390c5013b60e01b8152905160008051602062021e83833981519152916390c5013b91600480830192600092919082900301818387803b1580156200179057600080fd5b6005820180546001600160a01b0319166001600160a01b039290921691909117905590565b62002bed828262005bf8565b8015158215151462002bed577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162005b1a9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b626f6f6040820152616c5d60f01b606082015260800190565b60405180910390a160008051602062021ea38339815191528162005b5c576040518060400160405280600581526020016466616c736560d81b81525062005b7a565b604051806040016040528060048152602001637472756560e01b8152505b60405162005b89919062007be8565b60405180910390a160008051602062021ea38339815191528262005bcb576040518060400160405280600581526020016466616c736560d81b81525062005be9565b604051806040016040528060048152602001637472756560e01b8152505b60405162005750919062007c27565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b946000939092909183018282801562005c6b57602002820191906000526020600020905b81548152602001906001019080831162005c56575b5050505050905060008362005c808362005f6a565b60405160200162005c93929190620076d4565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a16835281529281209194509092909162005ce791869188910162007c52565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff1662005d225762005d20876200601e565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b031988168452825280832090519091839162005d6391879189910162007c52565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b03168460405162005daa919062007707565b600060405180830381855afa9150503d806000811462005de7576040519150601f19603f3d011682016040523d82523d6000602084013e62005dec565b606091505b50915062005e0990508162005e0388602062007776565b62006d15565b604051630667f9d760e41b81529092506000915060008051602062021e838339815191529063667f9d709062005e46908b9087906004016200722e565b6020604051808303816000875af115801562005e66573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005e8c9190620072f3565b905080821462005eb95760405162461bcd60e51b815260040162005eb09062007c8e565b60405180910390fd5b6040516370ca10bb60e01b815260008051602062021e83833981519152906370ca10bb9062005ef1908b9087908e906004016200720d565b600060405180830381600087803b15801562005f0c57600080fd5b505af115801562005f21573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff1916905562005f5660028b01600062006e8c565b896004016000905550505050505050505050565b606060008251602062005f7e919062007776565b67ffffffffffffffff81111562005f995762005f9962006f55565b6040519080825280601f01601f19166020018201604052801562005fc4576020820181803683370190505b50905060005b83518110156200601757600084828151811062005feb5762005feb62007374565b6020026020010151905080826020026020018401525080806200600e906200758a565b91505062005fca565b5092915050565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b9493879391929091908301828280156200609057602002820191906000526020600020905b8154815260200190600101908083116200607b575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a1684528252808320905195965094919350620060dc9250859187910162007c52565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16156200617b576001600160a01b0384166000908152602087815260408083206001600160e01b031987168452825280832090519092916200614b91859187910162007c52565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b600083620061898362005f6a565b6040516020016200619c929190620076d4565b604051602081830303815290604052905060008051602062021f5983398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620061fb57600080fd5b505af115801562006210573d6000803e3d6000fd5b50505050600080866001600160a01b03168360405162006231919062007707565b600060405180830381855afa9150503d80600081146200626e576040519150601f19603f3d011682016040523d82523d6000602084013e62006273565b606091505b5091506200628a90508162005e0387602062007776565b6040516365bc948160e01b81526001600160a01b03891660048201529092506000915060008051602062021e83833981519152906365bc9481906024016000604051808303816000875af1158015620062e7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262006311919081019062007d96565b5090508051600103620065da57600060008051602062021f5983398151915260001c6001600160a01b031663667f9d70898460008151811062006358576200635862007374565b60200260200101516040518363ffffffff1660e01b81526004016200637f9291906200722e565b6020604051808303816000875af11580156200639f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620063c59190620072f3565b90508062006429577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5888360008151811062006405576200640562007374565b602002602001015160001c604051620064209291906200722e565b60405180910390a15b8083146200644b5760405162461bcd60e51b815260040162005eb09062007c8e565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed888887896040516020016200648392919062007c52565b6040516020818303038152906040528051906020012085600081518110620064af57620064af62007374565b602002602001015160001c604051620064cc949392919062007e01565b60405180910390a181600081518110620064ea57620064ea62007374565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c168352845280822090519293909262006535918a918c910162007c52565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c168552825282842092519093916200659f918a918c910162007c52565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff19169115159190911790555062006b98565b60018151111562006b275760005b815181101562006b2057600060008051602062021f5983398151915260001c6001600160a01b031663667f9d708a8585815181106200662b576200662b62007374565b60200260200101516040518363ffffffff1660e01b8152600401620066529291906200722e565b6020604051808303816000875af115801562006672573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620066989190620072f3565b905080620066fb577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a589848481518110620066d757620066d762007374565b602002602001015160001c604051620066f29291906200722e565b60405180910390a15b60008051602062021f5983398151915260001c6001600160a01b03166370ca10bb8a85858151811062006732576200673262007374565b602002602001015161133760f01b6040518463ffffffff1660e01b815260040162006760939291906200720d565b600060405180830381600087803b1580156200677b57600080fd5b505af115801562006790573d6000803e3d6000fd5b50505050600060608a6001600160a01b031687604051620067b2919062007707565b600060405180830381855afa9150503d8060008114620067ef576040519150601f19603f3d011682016040523d82523d6000602084013e620067f4565b606091505b5090925090506200680c8162005e038b602062007776565b955081801562006820575061133760f01b86145b1562006a73577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c6040516020016200685e92919062007c52565b6040516020818303038152906040528051906020012088888151811062006889576200688962007374565b602002602001015160001c604051620068a6949392919062007e01565b60405180910390a1848481518110620068c357620068c362007374565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f16835284528082209051929390926200690e918d918f910162007c52565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c6040516020016200699b92919062007c52565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff02191690831515021790555060008051602062021f5983398151915260001c6001600160a01b03166370ca10bb8c87878151811062006a0d5762006a0d62007374565b6020026020010151866040518463ffffffff1660e01b815260040162006a36939291906200720d565b600060405180830381600087803b15801562006a5157600080fd5b505af115801562006a66573d6000803e3d6000fd5b5050505050505062006b20565b60008051602062021f5983398151915260001c6001600160a01b03166370ca10bb8c87878151811062006aaa5762006aaa62007374565b6020026020010151866040518463ffffffff1660e01b815260040162006ad3939291906200720d565b600060405180830381600087803b15801562006aee57600080fd5b505af115801562006b03573d6000803e3d6000fd5b50505050505050808062006b17906200758a565b915050620065e8565b5062006b98565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e606482015260840162005eb0565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a1684528252808320905190929162006bdc9188918a910162007c52565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff1662006c6b5760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201526e3a143994903737ba103337bab7321760891b606482015260840162005eb0565b6005890180546001600160a01b031916905560038901805463ffffffff1916905562006c9c60028a01600062006e8c565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a1684528252808320905190929162006ce29188918a910162007c52565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b6000806000602085511162006d2c57845162006d2f565b60205b905060005b8181101562006d955762006d4a81600862007776565b8662006d578388620073a0565b8151811062006d6a5762006d6a62007374565b01602001516001600160f81b031916901c92909217918062006d8c816200758a565b91505062006d34565b5090949350505050565b61567e8062007e3283390190565b6155e4806200d4b083390190565b82805462006dc990620077bd565b90600052602060002090601f01602090048101928262006ded576000855562006e38565b82601f1062006e0857805160ff191683800117855562006e38565b8280016001018555821562006e38579182015b8281111562006e3857825182559160200191906001019062006e1b565b50620057a492915062006ea7565b618b5f8062012a9483390190565b611206806201b5f383390190565b61206d806201c7f983390190565b611a41806201e86683390190565b611bb880620202a783390190565b508054600082559060005260206000209081019062002aae91905b5b80821115620057a4576000815560010162006ea8565b801515811462002aae57600080fd5b60006020828403121562006ee057600080fd5b813562000a848162006ebe565b6001600160a01b038116811462002aae57600080fd5b60008060006060848603121562006f1957600080fd5b833562006f268162006eed565b9250602084013562006f388162006eed565b9150604084013562006f4a8162006ebe565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171562006f915762006f9162006f55565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171562006fc35762006fc362006f55565b604052919050565b600067ffffffffffffffff82111562006fe85762006fe862006f55565b50601f01601f191660200190565b6000806000606084860312156200700c57600080fd5b8335620070198162006eed565b925060208401356200702b8162006eed565b9150604084013567ffffffffffffffff8111156200704857600080fd5b8401601f810186136200705a57600080fd5b8035620070716200706b8262006fcb565b62006f97565b8181528760208385010111156200708757600080fd5b816020840160208301376000602083830101528093505050509250925092565b600067ffffffffffffffff821115620070c457620070c462006f55565b5060051b60200190565b60006020808385031215620070e257600080fd5b823567ffffffffffffffff811115620070fa57600080fd5b8301601f810185136200710c57600080fd5b80356200711d6200706b82620070a7565b81815260059190911b820183019083810190878311156200713d57600080fd5b928401925b828410156200715d5783358252928401929084019062007142565b979650505050505050565b6000806000606084860312156200717e57600080fd5b83356200718b8162006eed565b95602085013595506040909401359392505050565b60008060408385031215620071b457600080fd5b8235620071c18162006eed565b91506020830135620071d38162006eed565b809150509250929050565b60008060408385031215620071f257600080fd5b8235620071ff8162006eed565b946020939093013593505050565b6001600160a01b039390931683526020830191909152604082015260600190565b6001600160a01b03929092168252602082015260400190565b6000602082840312156200725a57600080fd5b815162000a848162006ebe565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03958616815293909416602084015260408301919091526060820152901515608082015260a00190565b60008060008060808587031215620072d357600080fd5b505082516020840151604085015160609095015191969095509092509050565b6000602082840312156200730657600080fd5b5051919050565b6000604082840312156200732057600080fd5b82601f8301126200733057600080fd5b6200733a62006f6b565b8060408401858111156200734d57600080fd5b845b81811015620073695780518452602093840193016200734f565b509095945050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115620073b657620073b66200738a565b500190565b600081518084526020808501945080840160005b83811015620073ed57815187529582019590820190600101620073cf565b509495945050505050565b8381528215156020820152606060408201526000620050c56060830184620073bb565b60005b83811015620074385781810151838201526020016200741e565b8381111562000a625750506000910152565b60008151808452620074648160208601602086016200741b565b601f01601f19169290920160200192915050565b6001600160a01b038316815260406020820181905260009062002c18908301846200744a565b600082821015620074b357620074b36200738a565b500390565b600060208284031215620074cb57600080fd5b815167ffffffffffffffff811115620074e357600080fd5b8201601f81018413620074f557600080fd5b8051620075066200706b8262006fcb565b8181528560208385010111156200751c57600080fd5b620050c58260208301602086016200741b565b60008351620075438184602088016200741b565b835190830190620075598183602088016200741b565b01949350505050565b60008251620075768184602087016200741b565b61016160f51b920191825250600201919050565b6000600182016200759f576200759f6200738a565b5060010190565b600181815b80851115620075e7578160001904821115620075cb57620075cb6200738a565b80851615620075d957918102915b93841c9390800290620075ab565b509250929050565b600082620076005750600162003cfc565b816200760f5750600062003cfc565b8160018114620076285760028114620076335762007653565b600191505062003cfc565b60ff8411156200764757620076476200738a565b50506001821b62003cfc565b5060208310610133831016604e8410600b841016171562007678575081810a62003cfc565b620076848383620075a6565b80600019048211156200769b576200769b6200738a565b029392505050565b600062000a848383620075ef565b600082620076cf57634e487b7160e01b600052601260045260246000fd5b500490565b6001600160e01b0319831681528151600090620076f98160048501602087016200741b565b919091016004019392505050565b600082516200771b8184602087016200741b565b9190910192915050565b6000602082840312156200773857600080fd5b815162000a848162006eed565b6001600160a01b03958616815293909416602084015260408301919091526060820152608081019190915260a00190565b60008160001904831182151516156200779357620077936200738a565b500290565b600060208284031215620077ab57600080fd5b815160ff8116811462000a8457600080fd5b600181811c90821680620077d257607f821691505b602082108103620077f357634e487b7160e01b600052602260045260246000fd5b50919050565b8054600090600181811c90808316806200781457607f831692505b602080841082036200783657634e487b7160e01b600052602260045260246000fd5b83885260208801828015620078545760018114620078665762007893565b60ff1987168252828201975062007893565b60008981526020902060005b878110156200788d5781548482015290860190840162007872565b83019850505b5050505050505092915050565b6001600160a01b0385168152608060208201819052600090620078c690830186620077f9565b8281036040840152620078da8186620077f9565b91505060ff8316606083015295945050505050565b60408152600560408201526422b93937b960d91b606082015260806020820152600062000a8460808301846200744a565b600060208083850312156200793457600080fd5b825167ffffffffffffffff808211156200794d57600080fd5b8185019150601f86818401126200796357600080fd5b6200796d62006f6b565b8060408501898111156200798057600080fd5b855b8181101562007a11578051868111156200799c5760008081fd5b87018581018c13620079ae5760008081fd5b8051620079bf6200706b82620070a7565b81815260059190911b82018a01908a8101908e831115620079e05760008081fd5b928b01925b8284101562007a005783518252928b0192908b0190620079e5565b875250505092870192870162007982565b50909998505050505050505050565b7203bb937b7339037b33332b91039ba30ba3ab99606d1b81526000825162007a508160138501602087016200741b565b9190910160130192915050565b600060c0820188151583526020888185015287604085015286606085015260c060808501528182905061010085019250866000805b600281101562007aeb5787860360bf19018452825180518088529086019086880190845b8181101562007ad45783518352928801929188019160010162007ab6565b509097505050928401929184019160010162007a92565b505050505082810360a084015262007b048185620073bb565b9998505050505050505050565b60208152600062000a8460208301846200744a565b6000806040838503121562007b3a57600080fd5b505080516020909101519092909150565b60408152600062007b7660408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b60408152600062007b7660408301600a815269080808081058dd1d585b60b21b602082015260400190565b60008162007bc15762007bc16200738a565b506000190190565b6000600160ff1b820162007be15762007be16200738a565b5060000390565b60408152600062007c1360408301600a8152690808115e1c1958dd195960b21b602082015260400190565b828103602084015262002c1881856200744a565b60408152600062007c1360408301600a815269080808081058dd1d585b60b21b602082015260400190565b825160009082906020808701845b8381101562007c7e5781518552938201939082019060010162007c60565b5050948252509092019392505050565b6020808252606f908201527f73746453746f726167652066696e642853746453746f72616765293a2050616360408201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560608201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960808201526e39b713ba1039bab83837b93a32b21760891b60a082015260c00190565b600082601f83011262007d3b57600080fd5b8151602062007d4e6200706b83620070a7565b82815260059290921b8401810191818101908684111562007d6e57600080fd5b8286015b8481101562007d8b578051835291830191830162007d72565b509695505050505050565b6000806040838503121562007daa57600080fd5b825167ffffffffffffffff8082111562007dc357600080fd5b62007dd18683870162007d29565b9350602085015191508082111562007de857600080fd5b5062007df78582860162007d29565b9150509250929050565b6001600160a01b039490941684526001600160e01b0319929092166020840152604083015260608201526080019056fe60a06040523480156200001157600080fd5b506040516200567e3803806200567e83398101604081905262000034916200048c565b8282826040518060400160405280601081526020016f496e7665727465644d616e67726f766560801b815250808484847f72201d073f249840099a96530e189c4291c1852040b1e96ff1f606db656be4ff60405160405180910390a16200009b836200016d565b620000a682620001cc565b620000b1816200027f565b620000bc836200032f565b5050815160208084019190912060408051808201825260018152603160f81b9084015280517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f938101939093528201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c001905060408051601f19818403018152919052805160209091012060805250620004d19650505050505050565b62000177620003e0565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f30906020015b60405180910390a150565b620001d6620003e0565b61ffff811681146200022f5760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f31366269747300000000000060448201526064015b60405180910390fd5b6200024b816001546200045160201b62001d4e1790919060201c565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001620001c1565b62000289620003e0565b808162ffffff1614620002df5760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f3234626974730000000000000000604482015260640162000226565b620002fb816001546200046f60201b62001d711790919060201c565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001620001c1565b62000339620003e0565b6001600160a01b038116620003915760405162461bcd60e51b815260206004820152601360248201527f6d67762f636f6e6669672f676f762f6e6f743000000000000000000000000000604482015260640162000226565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001620001c1565b6003546001600160a01b0316331480620003f957503330145b806200040e57506003546001600160a01b0316155b6200044f5760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b604482015260640162000226565b565b60401b69ffff00000000000000001661ffff60401b19919091161790565b60281b67ffffff00000000001662ffffff60281b19919091161790565b600080600060608486031215620004a257600080fd5b83516001600160a01b0381168114620004ba57600080fd5b602085015160409095015190969495509392505050565b60805161518a620004f46000396000818161036401526116aa015261518a6000f3fe60806040526004361061024a5760003560e01c80636d27de6711610139578063b60d4288116100b6578063dc7e98df1161007a578063dc7e98df146108a8578063def5ddaa146108c8578063fbb66910146108e8578063fbfa77cf14610908578063fbffe5fd14610928578063fcaa7e2e1461094857600080fd5b8063b60d4288146107e4578063c7bb25d0146107ec578063cbf75c9a14610833578063d0ee509914610868578063db20266f1461088857600080fd5b8063aa4dd282116100fd578063aa4dd28214610744578063ab033ea914610764578063ad97db1b14610784578063b09d2a16146107a4578063b2b12057146107c457600080fd5b80636d27de671461061457806370a08231146106545780637ecebe00146106815780638c66715c146106ae57806395999ee31461072457600080fd5b80635722647b116101c7578063644e67031161018b578063644e6703146104cc5780636804f613146105835780636817031b146105a357806368c13d6b146105c35780636a4f76911461060157600080fd5b80635722647b146103f657806359eba454146104345780635a611f4e146104545780635aa6e675146104745780635cd82390146104ac57600080fd5b806330adf81f1161020e57806330adf81f146103105780633644e5151461035257806341c0e1b51461038657806346e142fa1461039b57806349f6d2dc146103e357600080fd5b80630b73a18f1461025f578063230244081461027f578063275074581461029257806327d097c6146102d05780632e1a7d4d146102f057600080fd5b3661025a5761025833610968565b005b600080fd5b34801561026b57600080fd5b5061025861027a3660046149b8565b61098f565b61025861028d366004614a05565b610968565b34801561029e57600080fd5b506102bb6102ad366004614a20565b6001600160601b0316151590565b60405190151581526020015b60405180910390f35b3480156102dc57600080fd5b506102586102eb366004614a39565b610a2d565b3480156102fc57600080fd5b506102bb61030b366004614a20565b610b08565b34801561031c57600080fd5b506103447fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a281565b6040519081526020016102c7565b34801561035e57600080fd5b506103447f000000000000000000000000000000000000000000000000000000000000000081565b34801561039257600080fd5b50610258610b62565b3480156103a757600080fd5b506103bb6103b6366004614ac8565b610baa565b604080519586526020860194909452928401919091526060830152608082015260a0016102c7565b6103446103f1366004614b41565b610bd6565b34801561040257600080fd5b50610344610411366004614a39565b600560209081526000938452604080852082529284528284209052825290205481565b34801561044057600080fd5b506102bb61044f366004614b9f565b610d41565b34801561046057600080fd5b5061025861046f366004614bea565b610dca565b34801561048057600080fd5b50600354610494906001600160a01b031681565b6040516001600160a01b0390911681526020016102c7565b3480156104b857600080fd5b506102586104c7366004614a05565b610e24565b3480156104d857600080fd5b506104ec6104e7366004614c07565b610e84565b6040805183516001600160a01b0316815260208085015115158183015284830151151582840152606080860151818401526080808701518185015260a0968701511515878501528551151560c0808601919091529286015160e0850152938501516101008401528401516101208301529183015115156101408201529282015161016084015201516101808201526101a0016102c7565b34801561058f57600080fd5b5061025861059e366004614bea565b610f87565b3480156105af57600080fd5b506102586105be366004614a05565b610fd1565b3480156105cf57600080fd5b506103446105de366004614a39565b600460209081526000938452604080852082529284528284209052825290205481565b61025861060f366004614c3a565b611027565b34801561062057600080fd5b5061063461062f366004614ca1565b61113a565b6040805194855260208501939093529183015260608201526080016102c7565b34801561066057600080fd5b5061034461066f366004614a05565b60066020526000908152604090205481565b34801561068d57600080fd5b5061034461069c366004614a05565b60086020526000908152604090205481565b3480156106ba57600080fd5b506106ce6106c9366004614a39565b611171565b60408051835181526020808501518183015284830151828401526060948501518583015283516001600160a01b0316608083015283015160a08201529082015160c082015291015160e0820152610100016102c7565b34801561073057600080fd5b5061025861073f366004614a20565b61124d565b34801561075057600080fd5b5061034461075f366004614d09565b6112e9565b34801561077057600080fd5b5061025861077f366004614a05565b61134a565b34801561079057600080fd5b5061034461079f366004614d3c565b6113ec565b3480156107b057600080fd5b506102586107bf366004614d8b565b6115be565b3480156107d057600080fd5b506103bb6107df366004614e21565b6118b7565b6102586118f3565b3480156107f857600080fd5b50610344610807366004614e9b565b600760209081526000948552604080862082529385528385208152918452828420909152825290205481565b34801561083f57600080fd5b5061085361084e366004614c07565b6118fe565b604080519283526020830191909152016102c7565b34801561087457600080fd5b50610258610883366004614c07565b6119fb565b34801561089457600080fd5b506102bb6108a3366004614c07565b611a6c565b3480156108b457600080fd5b506102586108c3366004614a39565b611aa7565b3480156108d457600080fd5b506103446108e3366004614c07565b611b67565b3480156108f457600080fd5b50610258610903366004614a39565b611b9f565b34801561091457600080fd5b50600054610494906001600160a01b031681565b34801561093457600080fd5b50610634610943366004614eef565b611c8c565b34801561095457600080fd5b50610258610963366004614a20565b611cb3565b60006109756000806118fe565b50905061098181611d90565b61098b8234611dd3565b5050565b610997611e2f565b6001600160a01b0385811660008181526002602090815260408083209489168084529482529182902080546001600160f81b0316600160f81b17905581516001815291517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a3610a10858585611aa7565b610a1b858584611b9f565b610a26858583610a2d565b5050505050565b610a35611e2f565b808162ffffff1614610a8e5760405162461bcd60e51b815260206004820152601f60248201527f6d67762f636f6e6669672f6f666665725f676173626173652f3234626974730060448201526064015b60405180910390fd5b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805462ffffff60601b191662ffffff60601b606088901b1617905590518481527fc5859916e5f3fc1ed4d2cfb8c7a6cf709580f228fa0c9d9e0fa468744c7e4a9191015b60405180910390a3505050565b6000610b143383611e9a565b60405133908390600081818185875af1925050503d8060008114610b54576040519150601f19603f3d011682016040523d82523d6000602084013e610b59565b606091505b50909392505050565b610b6a611e2f565b60015464ff000000001916640100000000176001556040517fbe26733c2bf6ff3ea5ba8cfe744422bd49052ff9ed5685c9e81e6f9321dbaddd90600090a1565b6000806000806000610bc08a8a8a8a8a33611f5f565b939e929d50909b50995090975095505050505050565b6000610be0614864565b610bea89896118fe565b6101208301819052610100830191909152610c04906120ac565b610c188161010001518261012001516120f8565b3415610c2857610c283334611dd3565b61012081015160181c63ffffffff166001016080820181905263ffffffff811614610c8b5760405162461bcd60e51b81526020600482015260136024820152726d67762f6f6666657249644f766572666c6f7760681b6044820152606401610a85565b6080810151610120820151610cb79160181b66ffffffff0000001666ffffffff00000019919091161790565b6101208201526001600160a01b03808a16825288166020820152604081018790526060810186905260a0810185905260c0810184905260e08101839052610cff816000612148565b61012081015181516001600160a01b03908116600090815260026020908152604080832082870151909416835292905220556080015198975050505050505050565b6001600160a01b038085166000818152600760209081526040808320888616808552908352818420338086529084528285209689168552959092528083208690555191939092917f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d91610db79188908890614f3c565b60405180910390a3506001949350505050565b610dd2611e2f565b60015460ff60501b191660ff60501b605083901b161760015560405181151581527f9b84fe4d9ffc14a6f7ec50c18884ee0d4bb8165aa718a28558df12ab4bd32b14906020015b60405180910390a150565b610e2c611e2f565b6001546001600160601b03166001600160601b0319606083901b16176001556040516001600160a01b03821681527ff592e42c32883b35bebfbf9d9b801570a25d5ccbba452310746ad2cfd20d548f90602001610e19565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152610efa6040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b600080610f0786866118fe565b91509150610f71826040805160c081018252606083811c8252605884901c60ff9081161515602080850191909152605086901c82161515848601529385901c61ffff1691830191909152602884901c62ffffff1660808301529290911c909116151560a082015290565b9350610f7c816128c5565b925050509250929050565b610f8f611e2f565b600154610f9c9082612973565b60015560405181151581527fbf39fbfab835c119637f4dbc4fb0f428c559c210200405d1ec25ddb50a93f9d490602001610e19565b610fd9611e2f565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f3090602001610e19565b61102f614864565b61103989896118fe565b6101208301819052610100830191909152611053906120ac565b6110678161010001518261012001516120f8565b3415611077576110773334611dd3565b6001600160a01b03808a16808352908916602080840182905260408085018b9052606085018a90526080850186905260a0850189905260c0850188905260e0850187905260009384526004825280842092845291815281832085845290529020546101408201526101208101516110ef826001612148565b610120820151811461112e5761012082015182516001600160a01b03908116600090815260026020908152604080832082880151909416835292905220555b50505050505050505050565b60008060008061114e8a8a8a8a8a8a61298a565b929650909450925090506111648a8a8786612c72565b9650965096509692505050565b61119c6040518060800160405280600081526020016000815260200160008152602001600081525090565b6111d0604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b6001600160a01b03808616600090815260046020908152604080832093881683529281528282208683529052205461120781612d72565b6001600160a01b038088166000908152600560209081526040808320938a1683529281528282208883529052205490935061124181612dd4565b92505050935093915050565b611255611e2f565b808162ffffff16146112a95760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f32346269747300000000000000006044820152606401610a85565b6001546112b69082611d71565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001610e19565b600033301461133a5760405162461bcd60e51b815260206004820152601f60248201527f6d67762f696e766572746564466c6173686c6f616e2f70726f746563746564006044820152606401610a85565b61134383612e43565b9392505050565b611352611e2f565b6001600160a01b03811661139e5760405162461bcd60e51b815260206004820152601360248201527206d67762f636f6e6669672f676f762f6e6f743606c1b6044820152606401610a85565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001610e19565b6000806113f986866118fe565b915050611405816120ac565b6001600160a01b038087166000818152600460209081526040808320948a16808452948252808320898452825280832054938352600582528083209483529381528382208883529052919091205461145d8160601c90565b6001600160a01b0316336001600160a01b0316146114bd5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f726574726163744f666665722f756e617574686f72697a65640000006044820152606401610a85565b6001600160601b0382161561152157826114ed89896114dc8660e01c90565b60c087901c63ffffffff1688612fc4565b935080841461151f576001600160a01b03808a166000908152600260209081526040808320938c168352929052208490555b505b61152f88888885858a6130a4565b841561156657603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca00020293506115663385611dd3565b866001600160a01b0316886001600160a01b03167fe2ce51fba856682424155a2d89b2ad1d2adde6ea0a9e3115b4b474cd6cb1798b886040516115ab91815260200190565b60405180910390a3505050949350505050565b428410156116035760405162461bcd60e51b81526020600482015260126024820152711b59dd8bdc195c9b5a5d0bd95e1c1a5c995960721b6044820152606401610a85565b6001600160a01b03878116600081815260086020908152604080832080546001810190915581517fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a2818501528f8716818401528e871660608201526080810195909552948b1660a085015260c084018a905260e084018590526101008085018a9052815180860390910181526101208501909152805191012061190160f01b6101408401527f0000000000000000000000000000000000000000000000000000000000000000610142840152610162830152906101820160408051601f198184030181528282528051602091820120600080855291840180845281905260ff89169284019290925260608301879052608083018690529092509060019060a0016020604051602081039080840390855afa158015611745573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381161580159061177b5750896001600160a01b0316816001600160a01b0316145b6117c75760405162461bcd60e51b815260206004820152601b60248201527f6d67762f7065726d69742f696e76616c69645369676e617475726500000000006044820152606401610a85565b87600760008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008b6001600160a01b03166001600160a01b03168152602001908152602001600020819055508a6001600160a01b03168c6001600160a01b03167f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d8c8c8c6040516118a193929190614f3c565b60405180910390a3505050505050505050505050565b60008060008060006118cd8b8b8b8b8b8b611f5f565b9398509196509450925090506118e58b8b8886612c72565b965096509650965096915050565b6118fc33610968565b565b6001546001600160a01b03838116600090815260026020908152604080832093861683529290522054605882901c60ff16156119f4576000806119418460601c90565b604051636968abd360e01b81526001600160a01b03888116600483015287811660248301529190911690636968abd3906044016040805180830381865afa158015611990573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119b49190614f60565b915091506119c58261ffff81161490565b156119d7576119d48483611d4e565b93505b6001600160701b03811681036119f157610f7c8382613119565b50505b9250929050565b611a03611e2f565b6001600160a01b03828116600081815260026020908152604080832094861680845294825280832080546001600160f81b031690558051928352517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a35050565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054605881901c60ff1615155b949350505050565b611aaf611e2f565b6101f4811115611af85760405162461bcd60e51b815260206004820152601460248201527306d67762f636f6e6669672f6665652f3c3d3530360641b6044820152606401610a85565b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805461ffff60e81b191661ffff60e81b60e888901b1617905590518481527f44a6d70a601a6f8a85c075467e9d7245897140cbf6dd505c9d9d764459f5fb649101610afb565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054603881901c63ffffffff16611a9f565b611ba7611e2f565b6001600160701b0381168114611bff5760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f64656e736974792f313132626974730000000000006044820152606401610a85565b6001600160a01b03808416600090815260026020908152604080832093861683529290522054611c2f9082613119565b6001600160a01b038481166000818152600260209081526040808320948816808452948252918290209490945551848152919290917f95f1a495c6d9d1a215995408f6ad898c2b33798d6eb3cf3220b4c6cc8b61b0649101610afb565b600080600080611ca089898989893361298a565b929c919b50995090975095505050505050565b611cbb611e2f565b61ffff81168114611d0e5760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f3136626974730000000000006044820152606401610a85565b600154611d1b9082611d4e565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001610e19565b60401b69ffff00000000000000001669ffff000000000000000019919091161790565b60281b67ffffff00000000001667ffffff000000000019919091161790565b602081901c60ff1615611dd05760405162461bcd60e51b81526020600482015260086024820152671b59dd8bd919585960c21b6044820152606401610a85565b50565b6001600160a01b03821660008181526006602052604090819020805484019055517f1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa09490611e239084815260200190565b60405180910390a25050565b6003546001600160a01b0316331480611e4757503330145b80611e5b57506003546001600160a01b0316155b6118fc5760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b6044820152606401610a85565b6001600160a01b03821660009081526006602052604090205481811015611f035760405162461bcd60e51b815260206004820152601960248201527f6d67762f696e73756666696369656e7450726f766973696f6e000000000000006044820152606401610a85565b6001600160a01b038316600081815260066020526040908190208484039055517f59c79d79be0fadf59fe689b6952b7ebe90201a3a1f00d4a31982377890bc604690611f529085815260200190565b60405180910390a2505050565b6000806000806000611f6f6148d0565b6001600160a01b03808d1682528b166020820152611f8d8c8c6118fe565b61010083015260e0820152611fa061492e565b6001600160a01b03881660a082015288151560c082015260e0820151610100830151611fcc91906120f8565b611fda8261010001516120ac565b6040517fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b990600090a161200f81838d8d61314a565b60808401519299509097509550612025906135d9565b602080830151835160808085015160e0860151604080518d81529687018c905286019190915260608501526001600160a01b03808d1694938116939216917ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec47910160405180910390a4806080015193508060e0015192505050965096509650965096915050565b605881901c60ff1615611dd05760405162461bcd60e51b81526020600482015260146024820152731b59dd8bdc99595b9d1c985b98de531bd8dad95960621b6044820152606401610a85565b61210182611d90565b61210d8160f81c151590565b61098b5760405162461bcd60e51b815260206004820152600c60248201526b6d67762f696e61637469766560a01b6044820152606401610a85565b60c082015161ffff81161461219f5760405162461bcd60e51b815260206004820152601e60248201527f6d67762f77726974654f666665722f67617370726963652f31366269747300006044820152606401610a85565b61010082015160401c61ffff168260c0015110156121ca5761010082015160401c61ffff1660c08301525b61010082015160281c62ffffff168260a00151111561222b5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f6761737265712f746f6f486967680000006044820152606401610a85565b600082606001511161227f5760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f746f6f4c6f7700000000006044820152606401610a85565b61012082015160781c6001600160701b031661012083015160601c62ffffff168360a001510102826060015110156122f95760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f64656e736974792f746f6f4c6f770000006044820152606401610a85565b60608201516001600160601b038116146123555760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f39366269747300000000006044820152606401610a85565b60408201516001600160601b038116146123b15760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f77616e74732f39366269747300000000006044820152606401610a85565b6000806123bd84613677565b9150915083602001516001600160a01b031684600001516001600160a01b03167f2b101f9ef8ca2761d91bea55ab50a4d051e9248088ff7314ddb8826839544c2a33876040015188606001518960c001518a60a001518b608001518a60405161246297969594939291906001600160a01b03979097168752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b60405180910390a383516001600160a01b03908116600090815260056020908152604080832082890151909416835292815282822060808801518352905290812054841561253c576124b48160601c90565b6001600160a01b0316336001600160a01b0316146125145760405162461bcd60e51b815260206004820152601c60248201527f6d67762f7570646174654f666665722f756e617574686f72697a6564000000006044820152606401610a85565b603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca00020291505b841580612556575060a0860151604882901c62ffffff1614155b8061256d575060c0860151602082901c61ffff1614155b8061258e575061012086015160601c62ffffff16603082901c62ffffff1614155b156126385761012086015160009060601c62ffffff1690506125fe338860a00151838a60c0015160201b65ffff000000001660309190911b68ffffff0000000000001660489290921b6bffffff0000000000000000001660609390931b6001600160601b03191692909217171790565b87516001600160a01b039081166000908152600560209081526040808320828d0151909416835292815282822060808c0151835290522055505b5060c08501516101208601516000919060601c62ffffff168760a001510102633b9aca00029050818111156126785761267333838303611e9a565b61268c565b8181101561268c5761268c33828403611dd3565b506101408501516001600160601b031615806126b0575061014085015160e01c8314155b1561283c57821561273657608085015185516001600160a01b039081166000908152600460209081526040808320828b01519094168352928152828220878352905220546126fd916138a3565b85516001600160a01b039081166000908152600460209081526040808320828b0151909416835292815282822087835290522055612769565b60808501516101208601516127629160381b63ffffffff60381b1663ffffffff60381b19919091161790565b6101208601525b81156127e057608085015185516001600160a01b039081166000908152600460208181526040808420828c018051871686529083528185208986528352818520548c518716865293835281852090519095168452938152838320878452905291902060e09290921b6001600160e01b039091161790555b8380156127fa57506101408501516001600160601b031615155b1561283c576128358560000151866020015161281b88610140015160e01c90565b61014089015160c01c63ffffffff16896101200151612fc4565b6101208601525b60408501516060808701516000926001600160601b03909116911b6bffffffffffffffffffffffff60601b1660c085901b63ffffffff60c01b1660e087901b17171786516001600160a01b039081166000908152600460209081526040808320828c015190941683529281528282206080909a0151825298909852909620959095555050505050565b6129096040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b60f882901c1515815260e882901c61ffff166020820152607882901c6001600160701b03166040820152606082811c62ffffff1690820152605882901c60ff1615156080820152603882901c63ffffffff90811660a083015260189290921c90911660c082015290565b60581b60ff60581b1660ff60581b19919091161790565b60008060008087886001600160a01b0316146129e85760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657257616e74732f313630626974730000006044820152606401610a85565b86876001600160a01b031614612a405760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657247697665732f313630626974730000006044820152606401610a85565b612a486148d0565b6001600160a01b03808c1682528a166020820152612a668b8b6118fe565b610100830181905260e083019190915260381c63ffffffff1660408083019182526001600160a01b03808e16600090815260046020908152838220928f1682529182528281209351815292905290205460608201526080810189905260a08101889052612ad161492e565b898152602081018990526001600160a01b03871660a082015287151560c082015260e0820151610100830151612b0791906120f8565b612b158261010001516120ac565b610100820151612b26906001612973565b82610100018181525050816101000151600260008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020819055507fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b960405160405180910390a1612bba818360016138c0565b612bc781608001516135d9565b866001600160a01b03168b6001600160a01b03168d6001600160a01b03167ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec478460400151856060015186608001518760e00151604051612c40949392919093845260208401929092526040830152606082015260800190565b60405180910390a460408101516060820151608083015160e090930151919e909d50919b509950975050505050505050565b6001600160a01b0380851660009081526007602090815260408083208785168452825280832093861683529281528282203383529052205481811015612ced5760405162461bcd60e51b815260206004820152601060248201526f6d67762f6c6f77416c6c6f77616e636560801b6044820152606401610a85565b6001600160a01b0380861660008181526007602090815260408083208986168085529083528184209589168452948252808320338085529252918290208686039081905591517f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d92612d63928992909190614f3c565b60405180910390a35050505050565b612d9d6040518060800160405280600081526020016000815260200160008152602001600081525090565b60e082901c815263ffffffff60c083901c1660208201526001600160601b03606083811c8216604084015292169181019190915290565b612e08604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b606082811c8252604883901c62ffffff908116602080850191909152603085901c90911660408401529290921c61ffff169181019190915290565b600080636c49c32c60e01b83604051602401612e5f9190614f84565b60408051808303601f190181529190526020810180516001600160e01b0319939093166001600160e01b0390931692909217909152905060c0830135604881901c62ffffff169060601c60005a9050826040820482031015612f0157604080516060810182527f6d67762f6e6f74456e6f756768476173466f724d616b65725472616465000000815260006020820181905291810191909152612f0190606081fd5b600080612f0f848688613b32565b915091505a8303965081612f5557612f5560405180606001604052806e1b59dd8bdb585ad95c94995d995c9d608a1b81526020018960001b815260200183815250606081fd5b6000612f73612f6760208b018b614a05565b86308c60800135613b60565b905080612fb857612fb86040518060600160405280741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b81526020018a60001b815260200184815250606081fd5b50505050505050919050565b60008315613037576001600160a01b03808716600090815260046020908152604080832093891683529281528282208783529052205461300490846138a3565b6001600160a01b038088166000908152600460209081526040808320938a16835292815282822088835290522055613054565b63ffffffff60381b19821663ffffffff60381b603885901b161791505b821561309b576001600160a01b038681166000908152600460209081526040808320938916835292815282822086835290522080546001600160e01b031660e086901b1790555b50949350505050565b6001600160601b03198316925080156130c45765ffff0000000019821691505b506001600160a01b039485166000818152600460209081526040808320979098168083529681528782208683528152878220949094559081526005835285812094815293825284842092845291905291902055565b60781b6dffffffffffffffffffffffffffff60781b166dffffffffffffffffffffffffffff60781b19919091161790565b60008080805b848110156135ce57600060408901819052606089015285858281811061317857613178615016565b90506080020160006004811061319057613190615016565b60209081029190910135604089810191825289516001600160a01b039081166000908152600485528281208c86018051841683529086528382208551835286528382205460608e019081528d518416835260058752848320915190931682528552828120935181529290935290205460c0890152516001600160601b0316158061325c575085858281811061322757613227615016565b90506080020160036004811061323f5761323f615016565b602002013561325a8860c0015162ffffff60489190911c1690565b115b6135c65785858281811061327257613272615016565b90506080020160016004811061328a5761328a615016565b60200201358686838181106132a1576132a1615016565b9050608002016001600481106132b9576132b9615016565b60200201356001600160601b0316146133145760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657257616e74732f393662697473000000006044820152606401610a85565b85858281811061332657613326615016565b90506080020160026004811061333e5761333e615016565b602002013586868381811061335557613355615016565b90506080020160026004811061336d5761336d615016565b60200201356001600160601b0316146133c85760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657247697665732f393662697473000000006044820152606401610a85565b8585828181106133da576133da615016565b9050608002016001600481106133f2576133f2615016565b6020020135608088015285858281811061340e5761340e615016565b90506080020160026004811061342657613426615016565b602002013560a0880152610100870151613441906001612973565b610100880181905287516001600160a01b039081166000908152600260209081526040808320828d015190941683529290529081209190915580806134868b8b613c48565b925092509250806f6d67762f74726164655375636365737360801b036134ad576001870196505b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b14613501576134fa8a600001518b602001516134e18d6060015160e01c90565b60608e015160c01c63ffffffff168e6101000151612fc4565b6101008b01525b6101008a0151613512906000612973565b8a610100018181525050896101000151600260008c600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008c602001516001600160a01b03166001600160a01b03168152602001908152602001600020819055506135808b8b614248565b61358a8b8b61434a565b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b146135b0576135b08b8b858585614436565b8a60400151860195508a60600151850194505050505b600101613150565b509450945094915050565b8015611dd057604051600090339083908381818185875af1925050503d8060008114613621576040519150601f19603f3d011682016040523d82523d6000602084013e613626565b606091505b505090508061098b5760405162461bcd60e51b815260206004820152601760248201527f6d67762f73656e6450656e616c747952657665727465640000000000000000006044820152606401610a85565b60008060008060008560e0015190506000866080015182146136cc5786516001600160a01b039081166000908152600460209081526040808320828c01519094168352928152828220858352905220546136d3565b8661014001515b90506001600160601b03811661372c5761012087015160381c63ffffffff1687516001600160a01b039081166000908152600460209081526040808320828d015190941683529281528282208483529052205490925090505b6137378782846144bc565b156137d15760005b60c082901c63ffffffff16156137b9575086516001600160a01b039081166000908152600460209081526040808320828c0151909416835292815282822063ffffffff60c086901c168084529152919020549061379d8983836144bc565b156137ad578093508192506137b3565b506137b9565b5061373f565b8260c083901c63ffffffff16909550935061385a9050565b60005b6137de8260e01c90565b156138475760006137ef8360e01c90565b89516001600160a01b039081166000908152600460209081526040808320828f0151909416835292815282822084835290522054925090506138328983836144bc565b1561383d5750613847565b92509050806137d4565b6138518260e01c90565b94509192508291505b8660800151841461386b5783613875565b61014087015160e01c5b876080015184146138865783613896565b61014088015160c01c63ffffffff165b9550955050505050915091565b60c01b63ffffffff60c01b1663ffffffff60c01b19919091161790565b8080156138e757508260c001516138de5760008260a00151116138e7565b60008260800151115b80156138f7575060008260400151115b15613ab35781516001600160a01b03908116600090815260056020908152604080832082870151909416835292815282822083860151835290529081205460c084015280806139468686613c48565b608088015160a089015160408a015160608b015160c08c015196995094975092955090939092906e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613a3d5760408b01518b51116139995760006139a2565b60408b01518b51035b60808b015260608b81015160208d01510360a08c01528a015160c01c63ffffffff168a6040018181525050600460008b600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b602001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b604001518152602001908152602001600020548a60600181815250505b613a5d8b8b886e1b59dd8bdb9bdd115e1958dd5d1959608a1b14156138c0565b60408a0183905260808a0185905260a08a0184905260608a0182905260c08a018190526e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613aa657613aa68b8b8a8a8a614436565b5050505050505050505050565b613ad28260000151836020015160008560400151866101000151612fc4565b6101008301819052613ae5906000612973565b610100830181905282516001600160a01b0390811660009081526002602090815260408083208288015190941683529290522055613b238383614248565b613b2d838361434a565b505050565b600080613b3d61497e565b60648185516020870160008a8af192508060448415020151915050935093915050565b6000806323b872dd60e01b858585604051602401613b8093929190614f3c565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509050600080876001600160a01b031683604051613bd0919061502c565b6000604051808303816000865af19150503d8060008114613c0d576040519150601f19603f3d011682016040523d82523d6000602084013e613c12565b606091505b5091509150818015613c3c575080511580613c3c575080806020019051810190613c3c9190615067565b98975050505050505050565b600080600080613c6885606001516001600160601b0360609190911c1690565b90506000613c8086606001516001600160601b031690565b608087015160a0880151919250908083028483021115613cc05750600095508594506e1b59dd8bdb9bdd115e1958dd5d1959608a1b935061424192505050565b8860c001518015613cd057508183105b80613ce757508860c00151158015613ce757508084105b15613cff576080880183905260a08801849052613d76565b8860c0015115613d4a57838202838181613d1b57613d1b615000565b0615613d28576001613d2b565b60005b60ff16848281613d3d57613d3d615000565b040160a08a015250613d76565b83600003613d5e5760808801839052613d76565b8381840281613d6f57613d6f615000565b0460808901525b50505050600080306001600160a01b031663aa4dd28260e01b878960a00151604051602401613da69291906150ea565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051613de4919061502c565b6000604051808303816000865af19150503d8060008114613e21576040519150601f19603f3d011682016040523d82523d6000602084013e613e26565b606091505b50915091508115613f805780806020019051810190613e459190615112565b94506f6d67762f74726164655375636365737360801b925085602001516001600160a01b031686600001516001600160a01b03167f1d81940ff2c3ac549c8acefd7c1b2ffb24aacc8b3cfa309c22abc3de79727f9d88604001518a60a001518a608001518b60a00151604051613edd94939291909384526001600160a01b039290921660208401526040830152606082015260800190565b60405180910390a360e086015160501c60ff1615613f5b5760e086015160a088015160405163cac1827160e01b815260609290921c9163cac1827191613f28918a91906004016150ea565b600060405180830381600087803b158015613f4257600080fd5b505af1158015613f56573d6000803e3d6000fd5b505050505b6080860151604088018051909101905260a08601516060880180519091019052614206565b602081015160408201516060830151909650945092506e1b59dd8bdb585ad95c94995d995c9d608a1b831480613fcd575082741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b145b80613fee575082731b59dd8bdb585ad95c949958d95a5d9951985a5b60621b145b156141005785602001516001600160a01b031686600001516001600160a01b03167f1d59c048edb5397821854bd12cbe02242b82101c677f949d076d14eb7bd8343688604001518a60a001518a608001518b60a001518960405161407d9594939291909485526001600160a01b0393909316602085015260408401919091526060830152608082015260a00190565b60405180910390a360e086015160501c60ff16156140fb5760e086015160a0880151604051631159507360e01b815260609290921c916311595073916140c8918a91906004016150ea565b600060405180830381600087803b1580156140e257600080fd5b505af11580156140f6573d6000803e3d6000fd5b505050505b614206565b827f6d67762f6e6f74456e6f756768476173466f724d616b657254726164650000000361416f5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6e6f74456e6f756768476173466f724d616b657254726164650000006044820152606401610a85565b82741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b036141ce5760405162461bcd60e51b81526020600482015260156024820152741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b6044820152606401610a85565b60405162461bcd60e51b815260206004820152600d60248201526c36b3bb17b9bbb0b822b93937b960991b6044820152606401610a85565b61423e86600001518760200151886040015189606001518a60c00151886f6d67762f74726164655375636365737360801b14156130a4565b50505b9250925092565b6101008101516000906127109060e81c61ffff168460400151028161426f5761426f615000565b04905080156142e557604083018051829003905260e0830181905281516000546142a391906001600160a01b031683614562565b6142e55760405162461bcd60e51b81526020600482015260136024820152721b59dd8bd99959551c985b9cd9995c91985a5b606a1b6044820152606401610a85565b604083015115613b2d5761430682600001518460a001518560400151614562565b613b2d5760405162461bcd60e51b815260206004820152601560248201527436b3bb17a6b3bb2330b4b62a37a830bcaa30b5b2b960591b6044820152606401610a85565b60a08201518151602083015160408086015160608701519151631154020b60e01b81526001600160a01b039485166004820152928416602484015260448301526064820152911690631154020b90608401600060405180830381600087803b1580156143b557600080fd5b505af11580156143c9573d6000803e3d6000fd5b5050505060006143e782602001518460a00151308660600151613b60565b905080613b2d5760405162461bcd60e51b815260206004820152601760248201527f6d67762f74616b65724661696c546f506179546f74616c0000000000000000006044820152606401610a85565b806f6d67762f74726164655375636365737360801b036144595761445984614637565b60c084015160481c62ffffff1680841115614472578093505b61448085858303858561467c565b84019350816f6d67762f74726164655375636365737360801b146144b4576144a885856147d2565b60808701805190910190525b505050505050565b6000816000036144ce57506001611343565b60408401516060858101516001600160601b039186901c82169291861691908084028284028082036145555789516001600160a01b039081166000908152600560209081526040808320828f015190941683529281528282208b835290529081205460481c62ffffff1660a08c015194029590930294909410159550611343945050505050565b1194506113439350505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839182918816906145c090859061502c565b6000604051808303816000865af19150503d80600081146145fd576040519150601f19603f3d011682016040523d82523d6000602084013e614602565b606091505b509150915081801561462c57508051158061462c57508080602001905181019061462c9190615067565b979650505050505050565b614657816020015161464d8360c0015160601c90565b8360a00151614562565b611dd057602081015160005460a083015161098b92916001600160a01b031690614562565b600080633d3d130d60e01b866040518060400160405280878152602001868152506040516024016146ae92919061512b565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319939093169290921790915260c087015190915060601c60005a90508660408204820310156147465760405162461bcd60e51b815260206004820181905260248201527f6d67762f6e6f74456e6f756768476173466f724d616b6572506f7374686f6f6b6044820152606401610a85565b600080614754848a87613b32565b915091505a83039550816147c55789602001516001600160a01b03168a600001516001600160a01b03167f51d5a3ecf332626d83c8207fe9bd22f38801f578c7eb222e2d811cd1b4c629a58c60400151846040516147bc929190918252602082015260400190565b60405180910390a35b5050505050949350505050565b60c082015160009062ffffff604882901c81169161ffff602082901c1660309190911c909116820102633b9aca00028184111561480d578193505b61010085015160009060601c62ffffff1660e08701519086019060401c61ffff16633b9aca0002029050818111156148425750805b61485b6148538760c0015160601c90565b828403611dd3565b95945050505050565b60405180610160016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60405180610120016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806101000160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001600015158152602001600081525090565b60405180608001604052806004906020820280368337509192915050565b80356001600160a01b03811681146149b357600080fd5b919050565b600080600080600060a086880312156149d057600080fd5b6149d98661499c565b94506149e76020870161499c565b94979496505050506040830135926060810135926080909101359150565b600060208284031215614a1757600080fd5b6113438261499c565b600060208284031215614a3257600080fd5b5035919050565b600080600060608486031215614a4e57600080fd5b614a578461499c565b9250614a656020850161499c565b9150604084013590509250925092565b60008083601f840112614a8757600080fd5b50813567ffffffffffffffff811115614a9f57600080fd5b6020830191508360208260071b85010111156119f457600080fd5b8015158114611dd057600080fd5b600080600080600060808688031215614ae057600080fd5b614ae98661499c565b9450614af76020870161499c565b9350604086013567ffffffffffffffff811115614b1357600080fd5b614b1f88828901614a75565b9094509250506060860135614b3381614aba565b809150509295509295909350565b600080600080600080600060e0888a031215614b5c57600080fd5b614b658861499c565b9650614b736020890161499c565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b60008060008060808587031215614bb557600080fd5b614bbe8561499c565b9350614bcc6020860161499c565b9250614bda6040860161499c565b9396929550929360600135925050565b600060208284031215614bfc57600080fd5b813561134381614aba565b60008060408385031215614c1a57600080fd5b614c238361499c565b9150614c316020840161499c565b90509250929050565b600080600080600080600080610100898b031215614c5757600080fd5b614c608961499c565b9750614c6e60208a0161499c565b979a9799505050506040860135956060810135956080820135955060a0820135945060c0820135935060e0909101359150565b60008060008060008060c08789031215614cba57600080fd5b614cc38761499c565b9550614cd16020880161499c565b945060408701359350606087013592506080870135614cef81614aba565b9150614cfd60a0880161499c565b90509295509295509295565b600080828403610140811215614d1e57600080fd5b61012080821215614d2e57600080fd5b849350610f7c81860161499c565b60008060008060808587031215614d5257600080fd5b614d5b8561499c565b9350614d696020860161499c565b9250604085013591506060850135614d8081614aba565b939692955090935050565b60008060008060008060008060006101208a8c031215614daa57600080fd5b614db38a61499c565b9850614dc160208b0161499c565b9750614dcf60408b0161499c565b9650614ddd60608b0161499c565b955060808a0135945060a08a0135935060c08a013560ff81168114614e0157600080fd5b8093505060e08a013591506101008a013590509295985092959850929598565b60008060008060008060a08789031215614e3a57600080fd5b614e438761499c565b9550614e516020880161499c565b9450604087013567ffffffffffffffff811115614e6d57600080fd5b614e7989828a01614a75565b9095509350506060870135614e8d81614aba565b9150614cfd6080880161499c565b60008060008060808587031215614eb157600080fd5b614eba8561499c565b9350614ec86020860161499c565b9250614ed66040860161499c565b9150614ee46060860161499c565b905092959194509250565b600080600080600060a08688031215614f0757600080fd5b614f108661499c565b9450614f1e6020870161499c565b935060408601359250606086013591506080860135614b3381614aba565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60008060408385031215614f7357600080fd5b505080516020909101519092909150565b61012081016001600160a01b0380614f9b8561499c565b16835280614fab6020860161499c565b1660208401525060408301356040830152606083013560608301526080830135608083015260a083013560a083015260c083013560c083015260e083013560e083015261010080840135818401525092915050565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000825160005b8181101561504d5760208186018101518583015201615033565b8181111561505c576000828501525b509190910192915050565b60006020828403121561507957600080fd5b815161134381614aba565b60018060a01b038082511683528060208301511660208401525060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152505050565b61014081016150f98285615084565b6001600160a01b03929092166101209190910152919050565b60006020828403121561512457600080fd5b5051919050565b610160810161513a8285615084565b82516101208301526020830151610140830152939250505056fea2646970667358221220f1963d9c2b3d628f1434924334993b3b07ae40980b0db947c650656b65407bf364736f6c634300080e003360a06040523480156200001157600080fd5b50604051620055e4380380620055e4833981016040819052620000349162000484565b828282604051806040016040528060088152602001674d616e67726f766560c01b815250808484847f72201d073f249840099a96530e189c4291c1852040b1e96ff1f606db656be4ff60405160405180910390a1620000938362000165565b6200009e82620001c4565b620000a98162000277565b620000b48362000327565b5050815160208084019190912060408051808201825260018152603160f81b9084015280517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f938101939093528201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c001905060408051601f19818403018152919052805160209091012060805250620004c99650505050505050565b6200016f620003d8565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f30906020015b60405180910390a150565b620001ce620003d8565b61ffff81168114620002275760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f31366269747300000000000060448201526064015b60405180910390fd5b62000243816001546200044960201b62001e221790919060201c565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001620001b9565b62000281620003d8565b808162ffffff1614620002d75760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f323462697473000000000000000060448201526064016200021e565b620002f3816001546200046760201b62001e451790919060201c565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001620001b9565b62000331620003d8565b6001600160a01b038116620003895760405162461bcd60e51b815260206004820152601360248201527f6d67762f636f6e6669672f676f762f6e6f74300000000000000000000000000060448201526064016200021e565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001620001b9565b6003546001600160a01b0316331480620003f157503330145b806200040657506003546001600160a01b0316155b620004475760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b60448201526064016200021e565b565b60401b69ffff00000000000000001661ffff60401b19919091161790565b60281b67ffffff00000000001662ffffff60281b19919091161790565b6000806000606084860312156200049a57600080fd5b83516001600160a01b0381168114620004b257600080fd5b602085015160409095015190969495509392505050565b6080516150f8620004ec60003960008181610364015261177e01526150f86000f3fe60806040526004361061024a5760003560e01c80636d27de6711610139578063b60d4288116100b6578063dc7e98df1161007a578063dc7e98df146108a8578063def5ddaa146108c8578063fbb66910146108e8578063fbfa77cf14610908578063fbffe5fd14610928578063fcaa7e2e1461094857600080fd5b8063b60d4288146107e4578063c7bb25d0146107ec578063cbf75c9a14610833578063d0ee509914610868578063db20266f1461088857600080fd5b8063aa4dd282116100fd578063aa4dd28214610744578063ab033ea914610764578063ad97db1b14610784578063b09d2a16146107a4578063b2b12057146107c457600080fd5b80636d27de671461061457806370a08231146106545780637ecebe00146106815780638c66715c146106ae57806395999ee31461072457600080fd5b80635722647b116101c7578063644e67031161018b578063644e6703146104cc5780636804f613146105835780636817031b146105a357806368c13d6b146105c35780636a4f76911461060157600080fd5b80635722647b146103f657806359eba454146104345780635a611f4e146104545780635aa6e675146104745780635cd82390146104ac57600080fd5b806330adf81f1161020e57806330adf81f146103105780633644e5151461035257806341c0e1b51461038657806346e142fa1461039b57806349f6d2dc146103e357600080fd5b80630b73a18f1461025f578063230244081461027f578063275074581461029257806327d097c6146102d05780632e1a7d4d146102f057600080fd5b3661025a5761025833610968565b005b600080fd5b34801561026b57600080fd5b5061025861027a366004614926565b61098f565b61025861028d366004614973565b610968565b34801561029e57600080fd5b506102bb6102ad36600461498e565b6001600160601b0316151590565b60405190151581526020015b60405180910390f35b3480156102dc57600080fd5b506102586102eb3660046149a7565b610a2d565b3480156102fc57600080fd5b506102bb61030b36600461498e565b610b08565b34801561031c57600080fd5b506103447fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a281565b6040519081526020016102c7565b34801561035e57600080fd5b506103447f000000000000000000000000000000000000000000000000000000000000000081565b34801561039257600080fd5b50610258610b62565b3480156103a757600080fd5b506103bb6103b6366004614a36565b610baa565b604080519586526020860194909452928401919091526060830152608082015260a0016102c7565b6103446103f1366004614aaf565b610bd6565b34801561040257600080fd5b506103446104113660046149a7565b600560209081526000938452604080852082529284528284209052825290205481565b34801561044057600080fd5b506102bb61044f366004614b0d565b610d41565b34801561046057600080fd5b5061025861046f366004614b58565b610dca565b34801561048057600080fd5b50600354610494906001600160a01b031681565b6040516001600160a01b0390911681526020016102c7565b3480156104b857600080fd5b506102586104c7366004614973565b610e24565b3480156104d857600080fd5b506104ec6104e7366004614b75565b610e84565b6040805183516001600160a01b0316815260208085015115158183015284830151151582840152606080860151818401526080808701518185015260a0968701511515878501528551151560c0808601919091529286015160e0850152938501516101008401528401516101208301529183015115156101408201529282015161016084015201516101808201526101a0016102c7565b34801561058f57600080fd5b5061025861059e366004614b58565b610f87565b3480156105af57600080fd5b506102586105be366004614973565b610fd1565b3480156105cf57600080fd5b506103446105de3660046149a7565b600460209081526000938452604080852082529284528284209052825290205481565b61025861060f366004614ba8565b611027565b34801561062057600080fd5b5061063461062f366004614c0f565b61113a565b6040805194855260208501939093529183015260608201526080016102c7565b34801561066057600080fd5b5061034461066f366004614973565b60066020526000908152604090205481565b34801561068d57600080fd5b5061034461069c366004614973565b60086020526000908152604090205481565b3480156106ba57600080fd5b506106ce6106c93660046149a7565b611171565b60408051835181526020808501518183015284830151828401526060948501518583015283516001600160a01b0316608083015283015160a08201529082015160c082015291015160e0820152610100016102c7565b34801561073057600080fd5b5061025861073f36600461498e565b61124d565b34801561075057600080fd5b5061034461075f366004614c77565b6112e9565b34801561077057600080fd5b5061025861077f366004614973565b61141e565b34801561079057600080fd5b5061034461079f366004614caa565b6114c0565b3480156107b057600080fd5b506102586107bf366004614cf9565b611692565b3480156107d057600080fd5b506103bb6107df366004614d8f565b61198b565b6102586119c7565b3480156107f857600080fd5b50610344610807366004614e09565b600760209081526000948552604080862082529385528385208152918452828420909152825290205481565b34801561083f57600080fd5b5061085361084e366004614b75565b6119d2565b604080519283526020830191909152016102c7565b34801561087457600080fd5b50610258610883366004614b75565b611acf565b34801561089457600080fd5b506102bb6108a3366004614b75565b611b40565b3480156108b457600080fd5b506102586108c33660046149a7565b611b7b565b3480156108d457600080fd5b506103446108e3366004614b75565b611c3b565b3480156108f457600080fd5b506102586109033660046149a7565b611c73565b34801561091457600080fd5b50600054610494906001600160a01b031681565b34801561093457600080fd5b50610634610943366004614e5d565b611d60565b34801561095457600080fd5b5061025861096336600461498e565b611d87565b60006109756000806119d2565b50905061098181611e64565b61098b8234611ea7565b5050565b610997611f03565b6001600160a01b0385811660008181526002602090815260408083209489168084529482529182902080546001600160f81b0316600160f81b17905581516001815291517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a3610a10858585611b7b565b610a1b858584611c73565b610a26858583610a2d565b5050505050565b610a35611f03565b808162ffffff1614610a8e5760405162461bcd60e51b815260206004820152601f60248201527f6d67762f636f6e6669672f6f666665725f676173626173652f3234626974730060448201526064015b60405180910390fd5b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805462ffffff60601b191662ffffff60601b606088901b1617905590518481527fc5859916e5f3fc1ed4d2cfb8c7a6cf709580f228fa0c9d9e0fa468744c7e4a9191015b60405180910390a3505050565b6000610b143383611f6e565b60405133908390600081818185875af1925050503d8060008114610b54576040519150601f19603f3d011682016040523d82523d6000602084013e610b59565b606091505b50909392505050565b610b6a611f03565b60015464ff000000001916640100000000176001556040517fbe26733c2bf6ff3ea5ba8cfe744422bd49052ff9ed5685c9e81e6f9321dbaddd90600090a1565b6000806000806000610bc08a8a8a8a8a33612033565b939e929d50909b50995090975095505050505050565b6000610be06147d2565b610bea89896119d2565b6101208301819052610100830191909152610c0490612180565b610c188161010001518261012001516121cc565b3415610c2857610c283334611ea7565b61012081015160181c63ffffffff166001016080820181905263ffffffff811614610c8b5760405162461bcd60e51b81526020600482015260136024820152726d67762f6f6666657249644f766572666c6f7760681b6044820152606401610a85565b6080810151610120820151610cb79160181b66ffffffff0000001666ffffffff00000019919091161790565b6101208201526001600160a01b03808a16825288166020820152604081018790526060810186905260a0810185905260c0810184905260e08101839052610cff81600061221c565b61012081015181516001600160a01b03908116600090815260026020908152604080832082870151909416835292905220556080015198975050505050505050565b6001600160a01b038085166000818152600760209081526040808320888616808552908352818420338086529084528285209689168552959092528083208690555191939092917f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d91610db79188908890614eaa565b60405180910390a3506001949350505050565b610dd2611f03565b60015460ff60501b191660ff60501b605083901b161760015560405181151581527f9b84fe4d9ffc14a6f7ec50c18884ee0d4bb8165aa718a28558df12ab4bd32b14906020015b60405180910390a150565b610e2c611f03565b6001546001600160601b03166001600160601b0319606083901b16176001556040516001600160a01b03821681527ff592e42c32883b35bebfbf9d9b801570a25d5ccbba452310746ad2cfd20d548f90602001610e19565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152610efa6040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b600080610f0786866119d2565b91509150610f71826040805160c081018252606083811c8252605884901c60ff9081161515602080850191909152605086901c82161515848601529385901c61ffff1691830191909152602884901c62ffffff1660808301529290911c909116151560a082015290565b9350610f7c81612999565b925050509250929050565b610f8f611f03565b600154610f9c9082612a47565b60015560405181151581527fbf39fbfab835c119637f4dbc4fb0f428c559c210200405d1ec25ddb50a93f9d490602001610e19565b610fd9611f03565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f3090602001610e19565b61102f6147d2565b61103989896119d2565b610120830181905261010083019190915261105390612180565b6110678161010001518261012001516121cc565b3415611077576110773334611ea7565b6001600160a01b03808a16808352908916602080840182905260408085018b9052606085018a90526080850186905260a0850189905260c0850188905260e0850187905260009384526004825280842092845291815281832085845290529020546101408201526101208101516110ef82600161221c565b610120820151811461112e5761012082015182516001600160a01b03908116600090815260026020908152604080832082880151909416835292905220555b50505050505050505050565b60008060008061114e8a8a8a8a8a8a612a5e565b929650909450925090506111648a8a8786612d46565b9650965096509692505050565b61119c6040518060800160405280600081526020016000815260200160008152602001600081525090565b6111d0604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b6001600160a01b03808616600090815260046020908152604080832093881683529281528282208683529052205461120781612e46565b6001600160a01b038088166000908152600560209081526040808320938a1683529281528282208883529052205490935061124181612ea8565b92505050935093915050565b611255611f03565b808162ffffff16146112a95760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f32346269747300000000000000006044820152606401610a85565b6001546112b69082611e45565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001610e19565b600033301461133a5760405162461bcd60e51b815260206004820152601760248201527f6d67762f666c6173686c6f616e2f70726f7465637465640000000000000000006044820152606401610a85565b61135961134d6040850160208601614973565b83308660a00135612f17565b156113da576113836113716040850160208601614973565b60c085013560601c8560a00135612fff565b1561139857611391836130d6565b9050611418565b60408051606081018252731b59dd8bdb585ad95c949958d95a5d9951985a5b60621b8152600060208201819052918101919091526113d590606081fd5b611418565b60408051606081018252741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b81526000602082018190529181019190915261141890606081fd5b92915050565b611426611f03565b6001600160a01b0381166114725760405162461bcd60e51b815260206004820152601360248201527206d67762f636f6e6669672f676f762f6e6f743606c1b6044820152606401610a85565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001610e19565b6000806114cd86866119d2565b9150506114d981612180565b6001600160a01b038087166000818152600460209081526040808320948a1680845294825280832089845282528083205493835260058252808320948352938152838220888352905291909120546115318160601c90565b6001600160a01b0316336001600160a01b0316146115915760405162461bcd60e51b815260206004820152601d60248201527f6d67762f726574726163744f666665722f756e617574686f72697a65640000006044820152606401610a85565b6001600160601b038216156115f557826115c189896115b08660e01c90565b60c087901c63ffffffff1688613257565b93508084146115f3576001600160a01b03808a166000908152600260209081526040808320938c168352929052208490555b505b61160388888885858a613337565b841561163a57603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca000202935061163a3385611ea7565b866001600160a01b0316886001600160a01b03167fe2ce51fba856682424155a2d89b2ad1d2adde6ea0a9e3115b4b474cd6cb1798b8860405161167f91815260200190565b60405180910390a3505050949350505050565b428410156116d75760405162461bcd60e51b81526020600482015260126024820152711b59dd8bdc195c9b5a5d0bd95e1c1a5c995960721b6044820152606401610a85565b6001600160a01b03878116600081815260086020908152604080832080546001810190915581517fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a2818501528f8716818401528e871660608201526080810195909552948b1660a085015260c084018a905260e084018590526101008085018a9052815180860390910181526101208501909152805191012061190160f01b6101408401527f0000000000000000000000000000000000000000000000000000000000000000610142840152610162830152906101820160408051601f198184030181528282528051602091820120600080855291840180845281905260ff89169284019290925260608301879052608083018690529092509060019060a0016020604051602081039080840390855afa158015611819573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381161580159061184f5750896001600160a01b0316816001600160a01b0316145b61189b5760405162461bcd60e51b815260206004820152601b60248201527f6d67762f7065726d69742f696e76616c69645369676e617475726500000000006044820152606401610a85565b87600760008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008b6001600160a01b03166001600160a01b03168152602001908152602001600020819055508a6001600160a01b03168c6001600160a01b03167f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d8c8c8c60405161197593929190614eaa565b60405180910390a3505050505050505050505050565b60008060008060006119a18b8b8b8b8b8b612033565b9398509196509450925090506119b98b8b8886612d46565b965096509650965096915050565b6119d033610968565b565b6001546001600160a01b03838116600090815260026020908152604080832093861683529290522054605882901c60ff1615611ac857600080611a158460601c90565b604051636968abd360e01b81526001600160a01b03888116600483015287811660248301529190911690636968abd3906044016040805180830381865afa158015611a64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a889190614ece565b91509150611a998261ffff81161490565b15611aab57611aa88483611e22565b93505b6001600160701b0381168103611ac557610f7c83826133ac565b50505b9250929050565b611ad7611f03565b6001600160a01b03828116600081815260026020908152604080832094861680845294825280832080546001600160f81b031690558051928352517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a35050565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054605881901c60ff1615155b949350505050565b611b83611f03565b6101f4811115611bcc5760405162461bcd60e51b815260206004820152601460248201527306d67762f636f6e6669672f6665652f3c3d3530360641b6044820152606401610a85565b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805461ffff60e81b191661ffff60e81b60e888901b1617905590518481527f44a6d70a601a6f8a85c075467e9d7245897140cbf6dd505c9d9d764459f5fb649101610afb565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054603881901c63ffffffff16611b73565b611c7b611f03565b6001600160701b0381168114611cd35760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f64656e736974792f313132626974730000000000006044820152606401610a85565b6001600160a01b03808416600090815260026020908152604080832093861683529290522054611d0390826133ac565b6001600160a01b038481166000818152600260209081526040808320948816808452948252918290209490945551848152919290917f95f1a495c6d9d1a215995408f6ad898c2b33798d6eb3cf3220b4c6cc8b61b0649101610afb565b600080600080611d74898989898933612a5e565b929c919b50995090975095505050505050565b611d8f611f03565b61ffff81168114611de25760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f3136626974730000000000006044820152606401610a85565b600154611def9082611e22565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001610e19565b60401b69ffff00000000000000001669ffff000000000000000019919091161790565b60281b67ffffff00000000001667ffffff000000000019919091161790565b602081901c60ff1615611ea45760405162461bcd60e51b81526020600482015260086024820152671b59dd8bd919585960c21b6044820152606401610a85565b50565b6001600160a01b03821660008181526006602052604090819020805484019055517f1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa09490611ef79084815260200190565b60405180910390a25050565b6003546001600160a01b0316331480611f1b57503330145b80611f2f57506003546001600160a01b0316155b6119d05760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b6044820152606401610a85565b6001600160a01b03821660009081526006602052604090205481811015611fd75760405162461bcd60e51b815260206004820152601960248201527f6d67762f696e73756666696369656e7450726f766973696f6e000000000000006044820152606401610a85565b6001600160a01b038316600081815260066020526040908190208484039055517f59c79d79be0fadf59fe689b6952b7ebe90201a3a1f00d4a31982377890bc6046906120269085815260200190565b60405180910390a2505050565b600080600080600061204361483e565b6001600160a01b03808d1682528b1660208201526120618c8c6119d2565b61010083015260e082015261207461489c565b6001600160a01b03881660a082015288151560c082015260e08201516101008301516120a091906121cc565b6120ae826101000151612180565b6040517fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b990600090a16120e381838d8d6133dd565b608084015192995090975095506120f990613862565b602080830151835160808085015160e0860151604080518d81529687018c905286019190915260608501526001600160a01b03808d1694938116939216917ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec47910160405180910390a4806080015193508060e0015192505050965096509650965096915050565b605881901c60ff1615611ea45760405162461bcd60e51b81526020600482015260146024820152731b59dd8bdc99595b9d1c985b98de531bd8dad95960621b6044820152606401610a85565b6121d582611e64565b6121e18160f81c151590565b61098b5760405162461bcd60e51b815260206004820152600c60248201526b6d67762f696e61637469766560a01b6044820152606401610a85565b60c082015161ffff8116146122735760405162461bcd60e51b815260206004820152601e60248201527f6d67762f77726974654f666665722f67617370726963652f31366269747300006044820152606401610a85565b61010082015160401c61ffff168260c00151101561229e5761010082015160401c61ffff1660c08301525b61010082015160281c62ffffff168260a0015111156122ff5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f6761737265712f746f6f486967680000006044820152606401610a85565b60008260600151116123535760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f746f6f4c6f7700000000006044820152606401610a85565b61012082015160781c6001600160701b031661012083015160601c62ffffff168360a001510102826060015110156123cd5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f64656e736974792f746f6f4c6f770000006044820152606401610a85565b60608201516001600160601b038116146124295760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f39366269747300000000006044820152606401610a85565b60408201516001600160601b038116146124855760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f77616e74732f39366269747300000000006044820152606401610a85565b60008061249184613900565b9150915083602001516001600160a01b031684600001516001600160a01b03167f2b101f9ef8ca2761d91bea55ab50a4d051e9248088ff7314ddb8826839544c2a33876040015188606001518960c001518a60a001518b608001518a60405161253697969594939291906001600160a01b03979097168752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b60405180910390a383516001600160a01b039081166000908152600560209081526040808320828901519094168352928152828220608088015183529052908120548415612610576125888160601c90565b6001600160a01b0316336001600160a01b0316146125e85760405162461bcd60e51b815260206004820152601c60248201527f6d67762f7570646174654f666665722f756e617574686f72697a6564000000006044820152606401610a85565b603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca00020291505b84158061262a575060a0860151604882901c62ffffff1614155b80612641575060c0860151602082901c61ffff1614155b80612662575061012086015160601c62ffffff16603082901c62ffffff1614155b1561270c5761012086015160009060601c62ffffff1690506126d2338860a00151838a60c0015160201b65ffff000000001660309190911b68ffffff0000000000001660489290921b6bffffff0000000000000000001660609390931b6001600160601b03191692909217171790565b87516001600160a01b039081166000908152600560209081526040808320828d0151909416835292815282822060808c0151835290522055505b5060c08501516101208601516000919060601c62ffffff168760a001510102633b9aca000290508181111561274c5761274733838303611f6e565b612760565b818110156127605761276033828403611ea7565b506101408501516001600160601b03161580612784575061014085015160e01c8314155b1561291057821561280a57608085015185516001600160a01b039081166000908152600460209081526040808320828b01519094168352928152828220878352905220546127d191613b2c565b85516001600160a01b039081166000908152600460209081526040808320828b015190941683529281528282208783529052205561283d565b60808501516101208601516128369160381b63ffffffff60381b1663ffffffff60381b19919091161790565b6101208601525b81156128b457608085015185516001600160a01b039081166000908152600460208181526040808420828c018051871686529083528185208986528352818520548c518716865293835281852090519095168452938152838320878452905291902060e09290921b6001600160e01b039091161790555b8380156128ce57506101408501516001600160601b031615155b1561291057612909856000015186602001516128ef88610140015160e01c90565b61014089015160c01c63ffffffff16896101200151613257565b6101208601525b60408501516060808701516000926001600160601b03909116911b6bffffffffffffffffffffffff60601b1660c085901b63ffffffff60c01b1660e087901b17171786516001600160a01b039081166000908152600460209081526040808320828c015190941683529281528282206080909a0151825298909852909620959095555050505050565b6129dd6040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b60f882901c1515815260e882901c61ffff166020820152607882901c6001600160701b03166040820152606082811c62ffffff1690820152605882901c60ff1615156080820152603882901c63ffffffff90811660a083015260189290921c90911660c082015290565b60581b60ff60581b1660ff60581b19919091161790565b60008060008087886001600160a01b031614612abc5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657257616e74732f313630626974730000006044820152606401610a85565b86876001600160a01b031614612b145760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657247697665732f313630626974730000006044820152606401610a85565b612b1c61483e565b6001600160a01b03808c1682528a166020820152612b3a8b8b6119d2565b610100830181905260e083019190915260381c63ffffffff1660408083019182526001600160a01b03808e16600090815260046020908152838220928f1682529182528281209351815292905290205460608201526080810189905260a08101889052612ba561489c565b898152602081018990526001600160a01b03871660a082015287151560c082015260e0820151610100830151612bdb91906121cc565b612be9826101000151612180565b610100820151612bfa906001612a47565b82610100018181525050816101000151600260008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020819055507fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b960405160405180910390a1612c8e81836001613b49565b612c9b8160800151613862565b866001600160a01b03168b6001600160a01b03168d6001600160a01b03167ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec478460400151856060015186608001518760e00151604051612d14949392919093845260208401929092526040830152606082015260800190565b60405180910390a460408101516060820151608083015160e090930151919e909d50919b509950975050505050505050565b6001600160a01b0380851660009081526007602090815260408083208785168452825280832093861683529281528282203383529052205481811015612dc15760405162461bcd60e51b815260206004820152601060248201526f6d67762f6c6f77416c6c6f77616e636560801b6044820152606401610a85565b6001600160a01b0380861660008181526007602090815260408083208986168085529083528184209589168452948252808320338085529252918290208686039081905591517f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d92612e37928992909190614eaa565b60405180910390a35050505050565b612e716040518060800160405280600081526020016000815260200160008152602001600081525090565b60e082901c815263ffffffff60c083901c1660208201526001600160601b03606083811c8216604084015292169181019190915290565b612edc604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b606082811c8252604883901c62ffffff908116602080850191909152603085901c90911660408401529290921c61ffff169181019190915290565b6000806323b872dd60e01b858585604051602401612f3793929190614eaa565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509050600080876001600160a01b031683604051612f879190614ef2565b6000604051808303816000865af19150503d8060008114612fc4576040519150601f19603f3d011682016040523d82523d6000602084013e612fc9565b606091505b5091509150818015612ff3575080511580612ff3575080806020019051810190612ff39190614f2d565b98975050505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928391829188169061305d908590614ef2565b6000604051808303816000865af19150503d806000811461309a576040519150601f19603f3d011682016040523d82523d6000602084013e61309f565b606091505b50915091508180156130c95750805115806130c95750808060200190518101906130c99190614f2d565b93505050505b9392505050565b600080636c49c32c60e01b836040516024016130f29190614f4a565b60408051808303601f190181529190526020810180516001600160e01b0319939093166001600160e01b0390931692909217909152905060c0830135604881901c62ffffff169060601c60005a905082604082048203101561319457604080516060810182527f6d67762f6e6f74456e6f756768476173466f724d616b6572547261646500000081526000602082018190529181019190915261319490606081fd5b6000806131a2848688613db1565b915091505a83039650816131e8576131e860405180606001604052806e1b59dd8bdb585ad95c94995d995c9d608a1b81526020018960001b815260200183815250606081fd5b60006132066131fa60208b018b614973565b86308c60800135612f17565b90508061324b5761324b6040518060600160405280741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b81526020018a60001b815260200184815250606081fd5b50505050505050919050565b600083156132ca576001600160a01b0380871660009081526004602090815260408083209389168352928152828220878352905220546132979084613b2c565b6001600160a01b038088166000908152600460209081526040808320938a168352928152828220888352905220556132e7565b63ffffffff60381b19821663ffffffff60381b603885901b161791505b821561332e576001600160a01b038681166000908152600460209081526040808320938916835292815282822086835290522080546001600160e01b031660e086901b1790555b50949350505050565b6001600160601b03198316925080156133575765ffff0000000019821691505b506001600160a01b039485166000818152600460209081526040808320979098168083529681528782208683528152878220949094559081526005835285812094815293825284842092845291905291902055565b60781b6dffffffffffffffffffffffffffff60781b166dffffffffffffffffffffffffffff60781b19919091161790565b60008080805b8481101561385757600060408901819052606089015285858281811061340b5761340b614fdc565b90506080020160006004811061342357613423614fdc565b60209081029190910135604089810191825289516001600160a01b039081166000908152600485528281208c86018051841683529086528382208551835286528382205460608e019081528d518416835260058752848320915190931682528552828120935181529290935290205460c0890152516001600160601b031615806134ef57508585828181106134ba576134ba614fdc565b9050608002016003600481106134d2576134d2614fdc565b60200201356134ed8860c0015162ffffff60489190911c1690565b115b61384f5785858281811061350557613505614fdc565b90506080020160016004811061351d5761351d614fdc565b602002013586868381811061353457613534614fdc565b90506080020160016004811061354c5761354c614fdc565b60200201356001600160601b0316146135a75760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657257616e74732f393662697473000000006044820152606401610a85565b8585828181106135b9576135b9614fdc565b9050608002016002600481106135d1576135d1614fdc565b60200201358686838181106135e8576135e8614fdc565b90506080020160026004811061360057613600614fdc565b60200201356001600160601b03161461365b5760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657247697665732f393662697473000000006044820152606401610a85565b85858281811061366d5761366d614fdc565b90506080020160016004811061368557613685614fdc565b602002013560808801528585828181106136a1576136a1614fdc565b9050608002016002600481106136b9576136b9614fdc565b602002013560a08801526101008701516136d4906001612a47565b610100880181905287516001600160a01b039081166000908152600260209081526040808320828d015190941683529290529081209190915580806137198b8b613ddf565b925092509250806f6d67762f74726164655375636365737360801b03613740576001870196505b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b146137945761378d8a600001518b602001516137748d6060015160e01c90565b60608e015160c01c63ffffffff168e6101000151613257565b6101008b01525b6101008a01516137a5906000612a47565b8a610100018181525050896101000151600260008c600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008c602001516001600160a01b03166001600160a01b03168152602001908152602001600020819055506138138b8b6143df565b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b14613839576138398b8b8585856144e1565b8a60400151860195508a60600151850194505050505b6001016133e3565b509450945094915050565b8015611ea457604051600090339083908381818185875af1925050503d80600081146138aa576040519150601f19603f3d011682016040523d82523d6000602084013e6138af565b606091505b505090508061098b5760405162461bcd60e51b815260206004820152601760248201527f6d67762f73656e6450656e616c747952657665727465640000000000000000006044820152606401610a85565b60008060008060008560e0015190506000866080015182146139555786516001600160a01b039081166000908152600460209081526040808320828c015190941683529281528282208583529052205461395c565b8661014001515b90506001600160601b0381166139b55761012087015160381c63ffffffff1687516001600160a01b039081166000908152600460209081526040808320828d015190941683529281528282208483529052205490925090505b6139c0878284614544565b15613a5a5760005b60c082901c63ffffffff1615613a42575086516001600160a01b039081166000908152600460209081526040808320828c0151909416835292815282822063ffffffff60c086901c1680845291529190205490613a26898383614544565b15613a3657809350819250613a3c565b50613a42565b506139c8565b8260c083901c63ffffffff169095509350613ae39050565b60005b613a678260e01c90565b15613ad0576000613a788360e01c90565b89516001600160a01b039081166000908152600460209081526040808320828f015190941683529281528282208483529052205492509050613abb898383614544565b15613ac65750613ad0565b9250905080613a5d565b613ada8260e01c90565b94509192508291505b86608001518414613af45783613afe565b61014087015160e01c5b87608001518414613b0f5783613b1f565b61014088015160c01c63ffffffff165b9550955050505050915091565b60c01b63ffffffff60c01b1663ffffffff60c01b19919091161790565b808015613b7057508260c00151613b675760008260a0015111613b70565b60008260800151115b8015613b80575060008260400151115b15613d3c5781516001600160a01b03908116600090815260056020908152604080832082870151909416835292815282822083860151835290529081205460c08401528080613bcf8686613ddf565b608088015160a089015160408a015160608b015160c08c015196995094975092955090939092906e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613cc65760408b01518b5111613c22576000613c2b565b60408b01518b51035b60808b015260608b81015160208d01510360a08c01528a015160c01c63ffffffff168a6040018181525050600460008b600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b602001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b604001518152602001908152602001600020548a60600181815250505b613ce68b8b886e1b59dd8bdb9bdd115e1958dd5d1959608a1b1415613b49565b60408a0183905260808a0185905260a08a0184905260608a0182905260c08a018190526e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613d2f57613d2f8b8b8a8a8a6144e1565b5050505050505050505050565b613d5b8260000151836020015160008560400151866101000151613257565b6101008301819052613d6e906000612a47565b610100830181905282516001600160a01b0390811660009081526002602090815260408083208288015190941683529290522055613dac83836143df565b505050565b600080613dbc6148ec565b60648185516020870160008a8af192508060448415020151915050935093915050565b600080600080613dff85606001516001600160601b0360609190911c1690565b90506000613e1786606001516001600160601b031690565b608087015160a0880151919250908083028483021115613e575750600095508594506e1b59dd8bdb9bdd115e1958dd5d1959608a1b93506143d892505050565b8860c001518015613e6757508183105b80613e7e57508860c00151158015613e7e57508084105b15613e96576080880183905260a08801849052613f0d565b8860c0015115613ee157838202838181613eb257613eb2614fc6565b0615613ebf576001613ec2565b60005b60ff16848281613ed457613ed4614fc6565b040160a08a015250613f0d565b83600003613ef55760808801839052613f0d565b8381840281613f0657613f06614fc6565b0460808901525b50505050600080306001600160a01b031663aa4dd28260e01b878960a00151604051602401613f3d929190615058565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051613f7b9190614ef2565b6000604051808303816000865af19150503d8060008114613fb8576040519150601f19603f3d011682016040523d82523d6000602084013e613fbd565b606091505b509150915081156141175780806020019051810190613fdc9190615080565b94506f6d67762f74726164655375636365737360801b925085602001516001600160a01b031686600001516001600160a01b03167f1d81940ff2c3ac549c8acefd7c1b2ffb24aacc8b3cfa309c22abc3de79727f9d88604001518a60a001518a608001518b60a0015160405161407494939291909384526001600160a01b039290921660208401526040830152606082015260800190565b60405180910390a360e086015160501c60ff16156140f25760e086015160a088015160405163cac1827160e01b815260609290921c9163cac18271916140bf918a9190600401615058565b600060405180830381600087803b1580156140d957600080fd5b505af11580156140ed573d6000803e3d6000fd5b505050505b6080860151604088018051909101905260a0860151606088018051909101905261439d565b602081015160408201516060830151909650945092506e1b59dd8bdb585ad95c94995d995c9d608a1b831480614164575082741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b145b80614185575082731b59dd8bdb585ad95c949958d95a5d9951985a5b60621b145b156142975785602001516001600160a01b031686600001516001600160a01b03167f1d59c048edb5397821854bd12cbe02242b82101c677f949d076d14eb7bd8343688604001518a60a001518a608001518b60a00151896040516142149594939291909485526001600160a01b0393909316602085015260408401919091526060830152608082015260a00190565b60405180910390a360e086015160501c60ff16156142925760e086015160a0880151604051631159507360e01b815260609290921c9163115950739161425f918a9190600401615058565b600060405180830381600087803b15801561427957600080fd5b505af115801561428d573d6000803e3d6000fd5b505050505b61439d565b827f6d67762f6e6f74456e6f756768476173466f724d616b65725472616465000000036143065760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6e6f74456e6f756768476173466f724d616b657254726164650000006044820152606401610a85565b82741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b036143655760405162461bcd60e51b81526020600482015260156024820152741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b6044820152606401610a85565b60405162461bcd60e51b815260206004820152600d60248201526c36b3bb17b9bbb0b822b93937b960991b6044820152606401610a85565b6143d586600001518760200151886040015189606001518a60c00151886f6d67762f74726164655375636365737360801b1415613337565b50505b9250925092565b6101008101516000906127109060e81c61ffff168460400151028161440657614406614fc6565b049050801561447c57604083018051829003905260e08301819052815160005461443a91906001600160a01b031683612fff565b61447c5760405162461bcd60e51b81526020600482015260136024820152721b59dd8bd99959551c985b9cd9995c91985a5b606a1b6044820152606401610a85565b604083015115613dac5761449d82600001518460a001518560400151612fff565b613dac5760405162461bcd60e51b815260206004820152601560248201527436b3bb17a6b3bb2330b4b62a37a830bcaa30b5b2b960591b6044820152606401610a85565b60c084015160481c62ffffff16808411156144fa578093505b6145088585830385856145ea565b84019350816f6d67762f74726164655375636365737360801b1461453c576145308585614740565b60808701805190910190525b505050505050565b600081600003614556575060016130cf565b60408401516060858101516001600160601b039186901c82169291861691908084028284028082036145dd5789516001600160a01b039081166000908152600560209081526040808320828f015190941683529281528282208b835290529081205460481c62ffffff1660a08c0151940295909302949094101595506130cf945050505050565b1194506130cf9350505050565b600080633d3d130d60e01b8660405180604001604052808781526020018681525060405160240161461c929190615099565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319939093169290921790915260c087015190915060601c60005a90508660408204820310156146b45760405162461bcd60e51b815260206004820181905260248201527f6d67762f6e6f74456e6f756768476173466f724d616b6572506f7374686f6f6b6044820152606401610a85565b6000806146c2848a87613db1565b915091505a83039550816147335789602001516001600160a01b03168a600001516001600160a01b03167f51d5a3ecf332626d83c8207fe9bd22f38801f578c7eb222e2d811cd1b4c629a58c604001518460405161472a929190918252602082015260400190565b60405180910390a35b5050505050949350505050565b60c082015160009062ffffff604882901c81169161ffff602082901c1660309190911c909116820102633b9aca00028184111561477b578193505b61010085015160009060601c62ffffff1660e08701519086019060401c61ffff16633b9aca0002029050818111156147b05750805b6147c96147c18760c0015160601c90565b828403611ea7565b95945050505050565b60405180610160016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60405180610120016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806101000160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001600015158152602001600081525090565b60405180608001604052806004906020820280368337509192915050565b80356001600160a01b038116811461492157600080fd5b919050565b600080600080600060a0868803121561493e57600080fd5b6149478661490a565b94506149556020870161490a565b94979496505050506040830135926060810135926080909101359150565b60006020828403121561498557600080fd5b6130cf8261490a565b6000602082840312156149a057600080fd5b5035919050565b6000806000606084860312156149bc57600080fd5b6149c58461490a565b92506149d36020850161490a565b9150604084013590509250925092565b60008083601f8401126149f557600080fd5b50813567ffffffffffffffff811115614a0d57600080fd5b6020830191508360208260071b8501011115611ac857600080fd5b8015158114611ea457600080fd5b600080600080600060808688031215614a4e57600080fd5b614a578661490a565b9450614a656020870161490a565b9350604086013567ffffffffffffffff811115614a8157600080fd5b614a8d888289016149e3565b9094509250506060860135614aa181614a28565b809150509295509295909350565b600080600080600080600060e0888a031215614aca57600080fd5b614ad38861490a565b9650614ae16020890161490a565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b60008060008060808587031215614b2357600080fd5b614b2c8561490a565b9350614b3a6020860161490a565b9250614b486040860161490a565b9396929550929360600135925050565b600060208284031215614b6a57600080fd5b81356130cf81614a28565b60008060408385031215614b8857600080fd5b614b918361490a565b9150614b9f6020840161490a565b90509250929050565b600080600080600080600080610100898b031215614bc557600080fd5b614bce8961490a565b9750614bdc60208a0161490a565b979a9799505050506040860135956060810135956080820135955060a0820135945060c0820135935060e0909101359150565b60008060008060008060c08789031215614c2857600080fd5b614c318761490a565b9550614c3f6020880161490a565b945060408701359350606087013592506080870135614c5d81614a28565b9150614c6b60a0880161490a565b90509295509295509295565b600080828403610140811215614c8c57600080fd5b61012080821215614c9c57600080fd5b849350610f7c81860161490a565b60008060008060808587031215614cc057600080fd5b614cc98561490a565b9350614cd76020860161490a565b9250604085013591506060850135614cee81614a28565b939692955090935050565b60008060008060008060008060006101208a8c031215614d1857600080fd5b614d218a61490a565b9850614d2f60208b0161490a565b9750614d3d60408b0161490a565b9650614d4b60608b0161490a565b955060808a0135945060a08a0135935060c08a013560ff81168114614d6f57600080fd5b8093505060e08a013591506101008a013590509295985092959850929598565b60008060008060008060a08789031215614da857600080fd5b614db18761490a565b9550614dbf6020880161490a565b9450604087013567ffffffffffffffff811115614ddb57600080fd5b614de789828a016149e3565b9095509350506060870135614dfb81614a28565b9150614c6b6080880161490a565b60008060008060808587031215614e1f57600080fd5b614e288561490a565b9350614e366020860161490a565b9250614e446040860161490a565b9150614e526060860161490a565b905092959194509250565b600080600080600060a08688031215614e7557600080fd5b614e7e8661490a565b9450614e8c6020870161490a565b935060408601359250606086013591506080860135614aa181614a28565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60008060408385031215614ee157600080fd5b505080516020909101519092909150565b6000825160005b81811015614f135760208186018101518583015201614ef9565b81811115614f22576000828501525b509190910192915050565b600060208284031215614f3f57600080fd5b81516130cf81614a28565b61012081016001600160a01b0380614f618561490a565b16835280614f716020860161490a565b1660208401525060408301356040830152606083013560608301526080830135608083015260a083013560a083015260c083013560c083015260e083013560e083015261010080840135818401525092915050565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60018060a01b038082511683528060208301511660208401525060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152505050565b61014081016150678285614ff2565b6001600160a01b03929092166101209190910152919050565b60006020828403121561509257600080fd5b5051919050565b61016081016150a88285614ff2565b82516101208301526020830151610140830152939250505056fea2646970667358221220606ee9d9815e4c17941d70526d6fb9577a74084308c36927d5d3f4357268a87964736f6c634300080e00336101206040523480156200001257600080fd5b5060405162008b5f38038062008b5f833981016040819052620000359162000c18565b876203d090604051620000489062000b7f565b604051809103906000f08015801562000065573d6000803e3d6000fd5b5082828282823380620000bf5760405162461bcd60e51b815260206004820152601860248201527f616363657373436f6e74726f6c6c65642f307841646d696e000000000000000060448201526064015b60405180910390fd5b80620000d56200048360201b620027911760201c565b80546001600160a01b0319166001600160a01b03929092169190911790555062ffffff811681146200014a5760405162461bcd60e51b815260206004820152601b60248201527f4d616e67726f76654f666665722f676173726571546f6f4869676800000000006044820152606401620000b6565b6001600160a01b038216608052806200016e620004a7602090811b620027b517901c565b5550506001600160a01b03811662000191576200018b30620004cb565b620001a7565b6200019c81620004cb565b620001a78162000535565b5050505050506000620001c4620006ce60201b620027d91760201c565b9050600084118015620001df57506001600160a01b03891615155b8015620001ef5750838461ffff16145b801562000204575085866001600160601b0316145b801562000219575084856001600160601b0316145b620002725760405162461bcd60e51b815260206004820152602260248201527f4d616e676f2f636f6e7374727563746f722f696e76616c6964417267756d656e604482015261747360f01b6064820152608401620000b6565b8360c081815250508888888888886040516200028e9062000b8d565b6001600160a01b03968716815294861660208601529490921660408401526001600160601b03908116606084015216608082015260a081019190915260c001604051809103906000f080158015620002ea573d6000803e3d6000fd5b506001600160a01b0390811660a05288811660e052871661010052836001600160401b0381111562000320576200032062000caa565b6040519080825280602002602001820160405280156200034a578160200160208202803683370190505b5080516200036091839160209091019062000b9b565b50836001600160401b038111156200037c576200037c62000caa565b604051908082528060200260200182016040528015620003a6578160200160208202803683370190505b508051620003bf91600184019160209091019062000b9b565b506007810183905560016008820155620003d988620006f2565b620003e487620006f2565b620003ef82620004cb565b620003f962000784565b60405163e9333fab60e01b81526001600160a01b038481166004830152919091169063e9333fab90602401600060405180830381600087803b1580156200043f57600080fd5b505af115801562000454573d6000803e3d6000fd5b505050506001600160a01b038216331462000474576200047482620007f3565b50505050505050505062000ceb565b7f7d382ebca3e46505071795e192d28166a3d4bd0685585591bc6c5b8df6769fd290565b7fae7e31c3220e851db9f204a28b279dfe52b973600b0a456991089c220ae7222490565b620004d5620008dd565b6001600160a01b0316336001600160a01b031614620005265760405162461bcd60e51b8152602060048201526018602482015260008051602062008b3f8339815191526044820152606401620000b6565b62000532308262000903565b50565b6200053f620008dd565b6001600160a01b0316336001600160a01b031614806200057257506080516001600160a01b0316336001600160a01b0316145b620005af5760405162461bcd60e51b8152602060048201526018602482015260008051602062008b3f8339815191526044820152606401620000b6565b6001600160a01b038116620006075760405162461bcd60e51b815260206004820152601c60248201527f6d67764f666665722f7365745f726f757465722f3078526f75746572000000006044820152606401620000b6565b806200061d620004a760201b620027b51760201c565b60010180546001600160a01b0319166001600160a01b039283161790556040516381bac14f60e01b8152306004820152908216906381bac14f90602401600060405180830381600087803b1580156200067557600080fd5b505af11580156200068a573d6000803e3d6000fd5b50506040516001600160a01b03841681527f6de4326a8b9054d72d9dbab97d27bc4edffadee7d966f5af9cc4eafdaf8e54559250602001905060405180910390a150565b7f416b48c48a967c2245e6ba6bc6efa281932950b502fea671117e4dfd7d3dfb8190565b620006fd81620009a5565b6200070762000a6e565b156200053257620007188162000aa3565b6200072262000784565b604051630716a76760e21b81526001600160a01b0383811660048301529190911690631c5a9d9c90602401600060405180830381600087803b1580156200076857600080fd5b505af11580156200077d573d6000803e3d6000fd5b5050505050565b6000806200079c620004a760201b620027b51760201c565b600101546001600160a01b0316905080620007ee5760405162461bcd60e51b815260206004820152601160248201527036b3bb27b33332b917983c2937baba32b960791b6044820152606401620000b6565b919050565b620007fd620008dd565b6001600160a01b0316336001600160a01b0316146200084e5760405162461bcd60e51b8152602060048201526018602482015260008051602062008b3f8339815191526044820152606401620000b6565b6001600160a01b038116620008a65760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f307841646d696e00000000000000006044820152606401620000b6565b80620008bc6200048360201b620027911760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b6000620008f46200048360201b620027911760201c565b546001600160a01b0316919050565b6001600160a01b0381166200095b5760405162461bcd60e51b815260206004820152601460248201527f53696e676c65557365722f3078526573657276650000000000000000000000006044820152606401620000b6565b8062000971620004a760201b620027b51760201c565b6001600160a01b0393841660009081526002919091016020526040902080546001600160a01b031916919093161790915550565b60805160405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529082169063095ea7b3906044016020604051808303816000875af1158015620009fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a20919062000cc0565b620005325760405162461bcd60e51b815260206004820152601d60248201527f6d67764f666665722f617070726f76654d616e67726f76652f4661696c0000006044820152606401620000b6565b6000806001600160a01b031662000a8f620004a760201b620027b51760201c565b600101546001600160a01b03161415919050565b6001600160a01b03811663095ea7b362000abc62000784565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260001960248201526044016020604051808303816000875af115801562000b0b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b31919062000cc0565b620005325760405162461bcd60e51b815260206004820152601b60248201527f6d67764f666665722f617070726f7665526f757465722f4661696c00000000006044820152606401620000b6565b6110048062004e2283390190565b612d198062005e2683390190565b82805482825590600052602060002090810192821562000bd9579160200282015b8281111562000bd957825182559160200191906001019062000bbc565b5062000be792915062000beb565b5090565b5b8082111562000be7576000815560010162000bec565b6001600160a01b03811681146200053257600080fd5b600080600080600080600080610100898b03121562000c3657600080fd5b885162000c438162000c02565b60208a015190985062000c568162000c02565b60408a015190975062000c698162000c02565b80965050606089015194506080890151935060a0890151925060c0890151915060e089015162000c998162000c02565b809150509295985092959890939650565b634e487b7160e01b600052604160045260246000fd5b60006020828403121562000cd357600080fd5b8151801515811462000ce457600080fd5b9392505050565b60805160a05160c05160e0516101005161400462000e1e600039600081816104ca01528181611cb10152611d490152600081816106a801528181611c9001528181611d6a01528181612a0401526130ef015260006105dd015260008181611027015281816111860152818161160e01528181612a9001526132ee01526000818161047e0152818161094901528181610c1b01528181610cd901528181610e3f01528181610f7c0152818161121c0152818161137d0152818161140f015281816115c301528181611714015281816117a8015281816118230152818161191b0152818161198f01528181611a1a01528181611bb901528181611ef0015281816120b701528181612154015281816122ca015281816126c501528181612dd001528181612ee4015261305901526140046000f3fe60806040526004361061023f5760003560e01c80639d4ddea21161012e578063db11851e116100ab578063eedc966a1161006f578063eedc966a146106ca578063f259cd27146106ea578063f851a4401461070a578063f887ea401461071f578063fc488a381461073457600080fd5b8063db11851e14610614578063e20ccec314610634578063e4c34f8414610656578063e9333fab14610676578063ec342ad01461069657600080fd5b8063ccbbcfc2116100f2578063ccbbcfc214610581578063cd3293de146105a1578063d1baa1ef146105b6578063d4a1da08146105cb578063d5c39721146105ff57600080fd5b80639d4ddea2146104ec5780639d4f8aa91461050c5780639f2211cb14610521578063ad97db1b14610541578063c5dbec381461056157600080fd5b80635486c95f116101bc578063815502671161018057806381550267146104225780638456cb591461044257806384b627f91461045757806399fa5e2d1461046c5780639c579839146104b857600080fd5b80635486c95f1461038f578063553e9f32146103a25780635a3e9618146103c25780636c49c32c146103e25780637144df241461040257600080fd5b80631ef3755d116102035780631ef3755d146102ed5780631efa880b146103025780633d3d130d1461032f5780633d77fcde1461034f5780635293840d1461036f57600080fd5b806301e336671461024b57806303eb17e21461028057806310aded60146102a257806312b495a8146102b557806312fc41ca146102d857600080fd5b3661024657005b600080fd5b34801561025757600080fd5b5061026b6102663660046134e4565b610754565b60405190151581526020015b60405180910390f35b34801561028c57600080fd5b506102a061029b366004613571565b6108be565b005b6102a06102b0366004613623565b61090f565b3480156102c157600080fd5b506102ca610a15565b604051908152602001610277565b3480156102e457600080fd5b506102ca610a60565b3480156102f957600080fd5b506102a0610aab565b34801561030e57600080fd5b5061032261031d3660046136d4565b610b01565b60405161027791906136f1565b34801561033b57600080fd5b506102a061034a366004613779565b610c19565b34801561035b57600080fd5b506102a061036a3660046137bc565b610d3d565b34801561037b57600080fd5b506102a061038a366004613571565b610d7f565b6102ca61039d366004613623565b610e03565b3480156103ae57600080fd5b506102a06103bd3660046137d9565b610f4f565b3480156103ce57600080fd5b506102a06103dd36600461387c565b61114f565b3480156103ee57600080fd5b506102ca6103fd3660046138ee565b611218565b34801561040e57600080fd5b506102a061041d36600461390b565b611327565b34801561042e57600080fd5b506102a061043d36600461393b565b611596565b34801561044e57600080fd5b506102a06116e7565b34801561046357600080fd5b5061026b61175c565b34801561047857600080fd5b506104a07f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610277565b3480156104c457600080fd5b506104a07f000000000000000000000000000000000000000000000000000000000000000081565b3480156104f857600080fd5b506102a0610507366004613997565b61177b565b34801561051857600080fd5b5061026b6117f6565b34801561052d57600080fd5b506102a061053c3660046137bc565b61180c565b34801561054d57600080fd5b506102ca61055c3660046139b0565b6118ec565b34801561056d57600080fd5b506102a061057c366004613997565b611b8c565b34801561058d57600080fd5b506102ca61059c366004613a03565b611c07565b3480156105ad57600080fd5b506104a0611dc6565b3480156105c257600080fd5b506102ca611dd6565b3480156105d757600080fd5b506102ca7f000000000000000000000000000000000000000000000000000000000000000081565b34801561060b57600080fd5b506102a0611e6f565b34801561062057600080fd5b506102a061062f3660046137bc565b611ec3565b34801561064057600080fd5b5061064961203d565b6040516102779190613a2f565b34801561066257600080fd5b506102ca610671366004613a60565b6120a9565b34801561068257600080fd5b506102a06106913660046137bc565b61236c565b3480156106a257600080fd5b506104a07f000000000000000000000000000000000000000000000000000000000000000081565b3480156106d657600080fd5b506102ca6106e53660046137bc565b612424565b3480156106f657600080fd5b506102a06107053660046137bc565b61254f565b34801561071657600080fd5b506104a0612624565b34801561072b57600080fd5b506104a061263d565b34801561074057600080fd5b506102a061074f366004613997565b612698565b600061075e612624565b6001600160a01b0316336001600160a01b0316146107975760405162461bcd60e51b815260040161078e90613ab1565b60405180910390fd5b6001600160a01b0383166107f95760405162461bcd60e51b815260206004820152602360248201527f53696e676c65557365722f7769746864726177546f6b656e2f307852656365696044820152623b32b960e91b606482015260840161078e565b61080161175c565b610817576108108484846127fd565b90506108b7565b61081f61263d565b6001600160a01b03166321754d9e85610836611dc6565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015290821660248201529086166044820152606481018590526084016020604051808303816000875af1158015610893573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108109190613ae8565b9392505050565b60005b8181101561090a576108f88383838181106108de576108de613b05565b90506020020160208101906108f391906137bc565b6128f3565b8061090281613b31565b9150506108c1565b505050565b610917612624565b6001600160a01b0316336001600160a01b0316146109475760405162461bcd60e51b815260040161078e90613ab1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636a4f769134836000015184602001518560400151866060015162ffffff80168860800151116109a55787608001516109ad565b6109ad611dd6565b8860a001518960c001518a60e001516040518a63ffffffff1660e01b81526004016109df989796959493929190613b4a565b6000604051808303818588803b1580156109f857600080fd5b505af1158015610a0c573d6000803e3d6000fd5b50505050505b50565b6000610a1f612624565b6001600160a01b0316336001600160a01b031614610a4f5760405162461bcd60e51b815260040161078e90613ab1565b610a576127d9565b60070154905090565b6000610a6a612624565b6001600160a01b0316336001600160a01b031614610a9a5760405162461bcd60e51b815260040161078e90613ab1565b610aa26127d9565b60060154905090565b610ab3612624565b6001600160a01b0316336001600160a01b031614610ae35760405162461bcd60e51b815260040161078e90613ab1565b6000610aed6127d9565b600901805460ff1916911515919091179055565b610b0961347f565b60408051831515602480830191909152825180830382018152604490920183526020820180516001600160e01b031663198f4b8360e21b179052915160009283923092630b47d2c360e31b92610b60929101613bba565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610b9e9190613bed565b600060405180830381855afa9150503d8060008114610bd9576040519150601f19603f3d011682016040523d82523d6000602084013e610bde565b606091505b509150915081610bf657610bf181612987565b610c12565b80806020019051810190610c0a9190613c09565b949350505050565b5050919050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0381161580610c585750336001600160a01b038216145b610c745760405162461bcd60e51b815260040161078e90613ab1565b81602001356f6d67762f74726164655375636365737360801b03610ca157610c9b836129e0565b50505050565b60408301803590610cb590602086016137bc565b6001600160a01b0316610ccb60208601866137bc565b604080516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811682528735602083015292909216917f736a3993b9f8b1c5603896c76376792887f376b1fe7fc981e09a16530bf1e4e0910160405180910390a4610c9b8383612b85565b610d45612624565b6001600160a01b0316336001600160a01b031614610d755760405162461bcd60e51b815260040161078e90613ab1565b610a123082612b8e565b610d87612624565b6001600160a01b0316336001600160a01b031614610db75760405162461bcd60e51b815260040161078e90613ab1565b60005b8181101561090a57610df1838383818110610dd757610dd7613b05565b9050602002016020810190610dec91906137bc565b612c18565b80610dfb81613b31565b915050610dba565b6000610e0d612624565b6001600160a01b0316336001600160a01b031614610e3d5760405162461bcd60e51b815260040161078e90613ab1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166349f6d2dc34846000015185602001518660400151876060015162ffffff801689608001511015610e9c578860800151610ea4565b610ea4611dd6565b60a08a015160c08b01516040516001600160e01b031960e08b901b1681526001600160a01b03978816600482015296909516602487015260448601939093526064850191909152608484015260a483015260c482015260e40160206040518083038185885af1158015610f1b573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610f409190613d0a565b60e0830181905290505b919050565b610f57612624565b6001600160a01b0316336001600160a01b03161480610f9e5750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b610fba5760405162461bcd60e51b815260040161078e90613ab1565b6000610fc461263d565b6001600160a01b03160361101a5760405162461bcd60e51b815260206004820152601960248201527f4d616e676f2f696e697469616c697a652f3078526f7574657200000000000000604482015260640161078e565b6000806001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001662c8d3f760e61b8a8a8a8a8a8a8a61105d611dd6565b604051602401611074989796959493929190613d59565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516110b29190613bed565b600060405180830381855af49150503d80600081146110ed576040519150601f19603f3d011682016040523d82523d6000602084013e6110f2565b606091505b50915091508161110a5761110581612987565b611144565b60408051888152602081018890527f997896709b4e932ee42750e2e14ed1f7ab6c60bd911ff567aa2485cf0b20051b910160405180910390a15b505050505050505050565b308015806111655750336001600160a01b038216145b6111815760405162461bcd60e51b815260040161078e90613ab1565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031685856040516111be929190613e2e565b600060405180830381855af49150503d80600081146111f9576040519150601f19603f3d011682016040523d82523d6000602084013e6111fe565b606091505b5091509150816112115761121181612987565b3d60208201f35b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03811615806112595750336001600160a01b038216145b6112755760405162461bcd60e51b815260040161078e90613ab1565b61127e83612c9f565b6112c35760405162461bcd60e51b81526020600482015260166024820152751b59dd93d999995c8bd8589bdc9d0bdc995b9959d95960521b604482015260640161078e565b60006112d3846080013585612cb7565b11156113215760405162461bcd60e51b815260206004820152601860248201527f6d67764f666665722f61626f72742f6765744661696c65640000000000000000604482015260640161078e565b50919050565b61132f612624565b6001600160a01b0316336001600160a01b03161461135f5760405162461bcd60e51b815260040161078e90613ab1565b60001982036113f9576040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156113cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113f09190613d0a565b91508115611592575b604051632e1a7d4d60e01b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d906024016020604051808303816000875af1158015611460573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114849190613ae8565b6114de5760405162461bcd60e51b815260206004820152602560248201527f6d67764f666665722f776974686472617746726f6d4d67762f776974686472616044820152641dd1985a5b60da1b606482015260840161078e565b6000816001600160a01b03168360405160006040518083038185875af1925050503d806000811461152b576040519150601f19603f3d011682016040523d82523d6000602084013e611530565b606091505b505090508061090a5760405162461bcd60e51b815260206004820152602860248201527f6d67764f666665722f776974686472617746726f6d4d67762f70617961626c6560448201526710d85b1b11985a5b60c21b606482015260840161078e565b5050565b61159e612624565b6001600160a01b0316336001600160a01b031614806115e55750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b6116015760405162461bcd60e51b815260040161078e90613ab1565b6000806001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663b61dce5960e01b87878787611642611dd6565b604051602401611656959493929190613e3e565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516116949190613bed565b600060405180830381855af49150503d80600081146116cf576040519150601f19603f3d011682016040523d82523d6000602084013e6116d4565b606091505b509150915081610a0c57610a0c81612987565b6116ef612624565b6001600160a01b0316336001600160a01b031614806117365750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b6117525760405162461bcd60e51b815260040161078e90613ab1565b6001610aed6127d9565b6000806117676127b5565b600101546001600160a01b03161415919050565b611783612624565b6001600160a01b0316336001600160a01b031614806117ca5750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b6117e65760405162461bcd60e51b815260040161078e90613ab1565b806117ef6127d9565b6008015550565b60006118006127d9565b6009015460ff16919050565b60405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152600019602483015282169063095ea7b3906044016020604051808303816000875af115801561187c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118a09190613ae8565b610a125760405162461bcd60e51b815260206004820152601d60248201527f6d67764f666665722f617070726f76654d616e67726f76652f4661696c000000604482015260640161078e565b60006118f6612624565b6001600160a01b0316336001600160a01b0316148061193d5750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b6119595760405162461bcd60e51b815260040161078e90613ab1565b60405163ad97db1b60e01b81526001600160a01b03868116600483015285811660248301526044820185905283151560648301527f0000000000000000000000000000000000000000000000000000000000000000169063ad97db1b906084016020604051808303816000875af11580156119d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119fc9190613d0a565b90508015610c0a57604051632e1a7d4d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d906024016020604051808303816000875af1158015611a6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a8f9190613ae8565b611aeb5760405162461bcd60e51b815260206004820152602760248201527f53696e676c65557365722f776974686472617746726f6d4d67762f77697468646044820152661c985dd1985a5b60ca1b606482015260840161078e565b604051600090339083908381818185875af1925050503d8060008114611b2d576040519150601f19603f3d011682016040523d82523d6000602084013e611b32565b606091505b5050905080611b835760405162461bcd60e51b815260206004820152601a60248201527f53696e676c65557365722f7765695472616e736665724661696c000000000000604482015260640161078e565b50949350505050565b611b94612624565b6001600160a01b0316336001600160a01b03161480611bdb5750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b611bf75760405162461bcd60e51b815260040161078e90613ab1565b80611c006127d9565b6007015550565b6000611c11612624565b6001600160a01b0316336001600160a01b031614611c415760405162461bcd60e51b815260040161078e90613ab1565b6000611c4b6127d9565b9050835b83811015611dbd578515611d04576000826000018281548110611c7457611c74613b05565b906000526020600020015411611c8b576000611cf7565b611cf77f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000846000018481548110611ce557611ce5613b05565b906000526020600020015460016118ec565b611d019084613e72565b92505b851580611d115750600186115b15611dab576000826001018281548110611d2d57611d2d613b05565b906000526020600020015411611d44576000611d9e565b611d9e7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000846001018481548110611ce557611ce5613b05565b611da89084613e72565b92505b80611db581613b31565b915050611c4f565b50509392505050565b6000611dd130612d83565b905090565b6000611de061175c565b15611e6157611ded61263d565b6001600160a01b0316630417ffda6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611e2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e4e9190613d0a565b611e566127b5565b54611dd19190613e72565b611e696127b5565b54919050565b611e77612624565b6001600160a01b0316336001600160a01b031614611ea75760405162461bcd60e51b815260040161078e90613ab1565b6000611eb16127d9565b60006002820181905560039091015550565b611ecb612624565b6001600160a01b0316336001600160a01b03161480611f125750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b611f2e5760405162461bcd60e51b815260040161078e90613ab1565b6001600160a01b038116611f845760405162461bcd60e51b815260206004820152601c60248201527f6d67764f666665722f7365745f726f757465722f3078526f7574657200000000604482015260640161078e565b80611f8d6127b5565b60010180546001600160a01b0319166001600160a01b039283161790556040516381bac14f60e01b8152306004820152908216906381bac14f90602401600060405180830381600087803b158015611fe457600080fd5b505af1158015611ff8573d6000803e3d6000fd5b50506040516001600160a01b03841681527f6de4326a8b9054d72d9dbab97d27bc4edffadee7d966f5af9cc4eafdaf8e5455925060200190505b60405180910390a150565b6120456134a6565b61204d612624565b6001600160a01b0316336001600160a01b03161461207d5760405162461bcd60e51b815260040161078e90613ab1565b60006120876127d9565b6040805180820190915260028201548152600390910154602082015291505090565b600080806001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663cbf75c9a89896040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016040805180830381865afa158015612128573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061214c9190613e8a565b9150915060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635722647b6121888b90565b8a6040516001600160e01b031960e085901b1681526001600160a01b0392831660048201529116602482015260448101889052606401602060405180830381865afa1580156121db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121ff9190613d0a565b9050600086604085901c61ffff161115612222575061ffff604084901c16612225565b50855b62ffffff881061223a57612237611dd6565b97505b60008161225062ffffff606087901c168b613e72565b61225a9190613eae565b61226890633b9aca00613eae565b9050600061ffff602085901c1661228f62ffffff603087901c811690604888901c16613e72565b6122999190613eae565b6122a790633b9aca00613eae565b6040516370a0823160e01b81523060048201529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015612311573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123359190613d0a565b61233f9083613e72565b905082811015612358576123538184613ecd565b61235b565b60005b9d9c50505050505050505050505050565b612374612624565b6001600160a01b0316336001600160a01b0316146123a45760405162461bcd60e51b815260040161078e90613ab1565b6001600160a01b0381166123fa5760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f307841646d696e0000000000000000604482015260640161078e565b80612403612791565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60008061242f6127b5565b600101546001600160a01b0316905080156124d057806001600160a01b03166305684fde8461245c611dc6565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa1580156124a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124cb9190613d0a565b6108b7565b826001600160a01b03166370a082316124e7611dc6565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801561252b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b79190613d0a565b806001600160a01b031663095ea7b361256661263d565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260001960248201526044016020604051808303816000875af11580156125b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125d89190613ae8565b610a125760405162461bcd60e51b815260206004820152601b60248201527f6d67764f666665722f617070726f7665526f757465722f4661696c0000000000604482015260640161078e565b600061262e612791565b546001600160a01b0316919050565b6000806126486127b5565b600101546001600160a01b0316905080610f4a5760405162461bcd60e51b815260206004820152601160248201527036b3bb27b33332b917983c2937baba32b960791b604482015260640161078e565b6126a0612624565b6001600160a01b0316336001600160a01b031614806126e75750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b6127035760405162461bcd60e51b815260040161078e90613ab1565b808162ffffff16146127575760405162461bcd60e51b815260206004820152601860248201527f6d67764f666665722f6761737265712f6f766572666c6f770000000000000000604482015260640161078e565b806127606127b5565b556040518181527fafef3ad374c0b972e3c793be825735801fa05cc4c67157d98d9a111b4027988d90602001612032565b7f7d382ebca3e46505071795e192d28166a3d4bd0685585591bc6c5b8df6769fd290565b7fae7e31c3220e851db9f204a28b279dfe52b973600b0a456991089c220ae7222490565b7f416b48c48a967c2245e6ba6bc6efa281932950b502fea671117e4dfd7d3dfb8190565b600081158061281457506001600160a01b03831630145b15612821575060016108b7565b604080516001600160a01b038581166024830152604480830186905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b179052915160009283929088169161287d9190613bed565b6000604051808303816000865af19150503d80600081146128ba576040519150601f19603f3d011682016040523d82523d6000602084013e6128bf565b606091505b50915091508180156128e95750805115806128e95750808060200190518101906128e99190613ae8565b9695505050505050565b6128fb61175c565b1561297e5761290861263d565b6001600160a01b031663a01dccd88261291f611dc6565b6040516001600160e01b031960e085901b1681526001600160a01b0392831660048201529116602482015260440160006040518083038186803b15801561296557600080fd5b505afa158015612979573d6000803e3d6000fd5b505050505b610a1281612db3565b80516000036129d85760405162461bcd60e51b815260206004820152601b60248201527f4d616e676f53746f726167652f7265766572744e6f526561736f6e0000000000604482015260640161078e565b805160208201fd5b6000806129eb6127d9565b905060006129f884612ea3565b90506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016612a3160208601866137bc565b6001600160a01b031603612a635780612a5757612a4d846130d8565b6002830155612a83565b60006002830155612a83565b80612a7b57612a71846130d8565b6003830155612a83565b600060038301555b6000806001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166311b1025960e01b87612ac1611dd6565b604051602401612ad2929190613ee4565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051612b109190613bed565b600060405180830381855af49150503d8060008114612b4b576040519150601f19603f3d011682016040523d82523d6000602084013e612b50565b606091505b509150915081612b6857612b6381612987565b612b7c565b808060200190518101906128e99190613ae8565b50505050919050565b60015b92915050565b6001600160a01b038116612bdb5760405162461bcd60e51b815260206004820152601460248201527353696e676c65557365722f30785265736572766560601b604482015260640161078e565b80612be46127b5565b6001600160a01b0393841660009081526002919091016020526040902080546001600160a01b031916919093161790915550565b612c218161180c565b612c2961175c565b15610a1257612c378161254f565b612c3f61263d565b604051630716a76760e21b81526001600160a01b0383811660048301529190911690631c5a9d9c90602401600060405180830381600087803b158015612c8457600080fd5b505af1158015612c98573d6000803e3d6000fd5b5050505050565b6000612ca96127d9565b6009015460ff161592915050565b600080612cd2612cca60208501856137bc565b856000613150565b9050838110612ce5576000915050612b88565b6000612cf460208501856137bc565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015612d3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d5e9190613d0a565b905084811015612d7757612d728186613ecd565b612d7a565b60005b92505050612b88565b6000612d8d6127b5565b6001600160a01b0392831660009081526002919091016020526040902054909116919050565b604051636eb1769f60e11b81523060048201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660248301526000919083169063dd62ed3e90604401602060405180830381865afa158015612e23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e479190613d0a565b11610a125760405162461bcd60e51b815260206004820152602660248201527f4d616e67726f76654f666665722f41646d696e4d757374417070726f76654d616044820152656e67726f766560d01b606482015260840161078e565b6000612eae82613219565b506000612eba836130d8565b905080600003612ecd5750600192915050565b6000612ed8846132ca565b90506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016636a4f7691612f1660208701876137bc565b612f2660408801602089016137bc565b848660c08a013560481c62ffffff1660c08b013560201c61ffff1660608c013560c01c63ffffffff168c604001356040518963ffffffff1660e01b8152600401612f77989796959493929190613b4a565b600060405180830381600087803b158015612f9157600080fd5b505af1925050508015612fa2575060015b6130ce573d808015612fd0576040519150601f19603f3d011682016040523d82523d6000602084013e612fd5565b606091505b50805160208201207fc5fc8c2459087ad4f0e957e465df485864a3b1a379c2653ffe7c554981ede670016130c3576040850180359061301790602088016137bc565b6001600160a01b031661302d60208801886137bc565b6001600160a01b03167f736a3993b9f8b1c5603896c76376792887f376b1fe7fc981e09a16530bf1e4e07f00000000000000000000000000000000000000000000000000000000000000006040516130ba91906001600160a01b039190911681527f50657273697374656e742f686f6f6b2f6f75744f6650726f766973696f6e0000602082015260400190565b60405180910390a45b506000949350505050565b5060019392505050565b6000806130e36127d9565b90506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001661311c60208501856137bc565b6001600160a01b031603613142578060020154613138846133ec565b6108b79190613e72565b8060030154613138846133ec565b60008061315b6127b5565b600101546001600160a01b03169050806131795760009150506108b7565b806001600160a01b031663333dbb0d86613191611dc6565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044810187905285151560648201526084016020604051808303816000875af11580156131ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132119190613d0a565b9150506108b7565b6040805160028082526060820183526000928392919060208301908036833701905050905061324b60208401846137bc565b8160008151811061325e5761325e613b05565b6001600160a01b0390921660209283029190910182015261328590604085019085016137bc565b8160018151811061329857613298613b05565b60200260200101906001600160a01b031690816001600160a01b0316815250506132c18161340e565b50600192915050565b6000806132d6836130d8565b9050806000036132e95750600092915050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631f92a31960e01b8685604051602401613331929190613ee4565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161336f9190613bed565b600060405180830381855af49150503d80600081146133aa576040519150601f19603f3d011682016040523d82523d6000602084013e6133af565b606091505b5091509150816133c7576133c281612987565b6133e4565b808060200190518101906133db9190613d0a565b95945050505050565b505050919050565b6000612b88608083013560608401356bffffffffffffffffffffffff16613ecd565b60006134186127b5565b600101546001600160a01b0316905080613430575050565b806001600160a01b031663f850a81c83613448611dc6565b6040518363ffffffff1660e01b8152600401613465929190613f71565b600060405180830381600087803b1580156109f857600080fd5b60405180604001604052806002905b606081526020019060019003908161348e5790505090565b60405180604001604052806002906020820280368337509192915050565b6001600160a01b0381168114610a1257600080fd5b8035610f4a816134c4565b6000806000606084860312156134f957600080fd5b8335613504816134c4565b92506020840135613514816134c4565b929592945050506040919091013590565b60008083601f84011261353757600080fd5b50813567ffffffffffffffff81111561354f57600080fd5b6020830191508360208260051b850101111561356a57600080fd5b9250929050565b6000806020838503121561358457600080fd5b823567ffffffffffffffff81111561359b57600080fd5b6135a785828601613525565b90969095509350505050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156135ec576135ec6135b3565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561361b5761361b6135b3565b604052919050565b600061010080838503121561363757600080fd5b6040519081019067ffffffffffffffff8211818310171561365a5761365a6135b3565b816040528335915061366b826134c4565b81815261367a602085016134d9565b602082015260408401356040820152606084013560608201526080840135608082015260a084013560a082015260c084013560c082015260e084013560e0820152809250505092915050565b8015158114610a1257600080fd5b6000602082840312156136e657600080fd5b81356108b7816136c6565b6020808252600090606083018382018584805b600281101561375957878503601f19018452825180518087529087019087870190845b8181101561374357835183529289019291890191600101613727565b5090965050509285019291850191600101613704565b5092979650505050505050565b6000610120828403121561132157600080fd5b60008082840361016081121561378e57600080fd5b6137988585613766565b9250604061011f19820112156137ad57600080fd5b50610120830190509250929050565b6000602082840312156137ce57600080fd5b81356108b7816134c4565b600080600080600080600060c0888a0312156137f457600080fd5b87356137ff816136c6565b9650602088013595506040880135945060608801359350608088013567ffffffffffffffff8082111561383157600080fd5b818a0191508a60408301111561384657600080fd5b90935060a0890135908082111561385c57600080fd5b506138698a828b01613525565b989b979a50959850939692959293505050565b6000806020838503121561388f57600080fd5b823567ffffffffffffffff808211156138a757600080fd5b818501915085601f8301126138bb57600080fd5b8135818111156138ca57600080fd5b8660208285010111156138dc57600080fd5b60209290920196919550909350505050565b6000610120828403121561390157600080fd5b6108b78383613766565b6000806040838503121561391e57600080fd5b823591506020830135613930816134c4565b809150509250929050565b6000806000806060858703121561395157600080fd5b843593506020850135613963816136c6565b9250604085013567ffffffffffffffff81111561397f57600080fd5b61398b87828801613525565b95989497509550505050565b6000602082840312156139a957600080fd5b5035919050565b600080600080608085870312156139c657600080fd5b84356139d1816134c4565b935060208501356139e1816134c4565b92506040850135915060608501356139f8816136c6565b939692955090935050565b600080600060608486031215613a1857600080fd5b505081359360208301359350604090920135919050565b60408101818360005b6002811015613a57578151835260209283019290910190600101613a38565b50505092915050565b600080600080600060a08688031215613a7857600080fd5b8535613a83816134c4565b94506020860135613a93816134c4565b94979496505050506040830135926060810135926080909101359150565b60208082526018908201527f416363657373436f6e74726f6c6c65642f496e76616c69640000000000000000604082015260600190565b600060208284031215613afa57600080fd5b81516108b7816136c6565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201613b4357613b43613b1b565b5060010190565b6001600160a01b03988916815296909716602087015260408601949094526060850192909252608084015260a083015260c082015260e08101919091526101000190565b60005b83811015613ba9578181015183820152602001613b91565b83811115610c9b5750506000910152565b6020815260008251806020840152613bd9816040850160208701613b8e565b601f01601f19169190910160400192915050565b60008251613bff818460208701613b8e565b9190910192915050565b60006020808385031215613c1c57600080fd5b825167ffffffffffffffff80821115613c3457600080fd5b8185019150601f8681840112613c4957600080fd5b613c516135c9565b806040850189811115613c6357600080fd5b855b81811015613cfb57805186811115613c7d5760008081fd5b87018581018c13613c8e5760008081fd5b805187811115613ca057613ca06135b3565b8060051b613caf8b82016135f2565b9182528281018b01918b8101908f841115613ccc57600092508283fd5b938c01935b83851015613cea5784518252938c0193908c0190613cd1565b885250505093880193508701613c65565b50909998505050505050505050565b600060208284031215613d1c57600080fd5b5051919050565b81835260006001600160fb1b03831115613d3c57600080fd5b8260051b8083602087013760009401602001938452509192915050565b600060e082018a1515835260208a8185015289604085015288606085015260e0608085015281829050610120850192508860005b6002811015613e015786850360df190183528135368c9003601e19018112613db457600080fd5b8b01848101903567ffffffffffffffff811115613dd057600080fd5b8060051b3603821315613de257600080fd5b613ded878284613d23565b965050509183019190830190600101613d8d565b5050505082810360a0840152613e18818688613d23565b9150508260c08301529998505050505050505050565b8183823760009101908152919050565b8581528415156020820152608060408201526000613e60608083018587613d23565b90508260608301529695505050505050565b60008219821115613e8557613e85613b1b565b500190565b60008060408385031215613e9d57600080fd5b505080516020909101519092909150565b6000816000190483118215151615613ec857613ec8613b1b565b500290565b600082821015613edf57613edf613b1b565b500390565b61014081018335613ef4816134c4565b6001600160a01b03168252613f0b602085016134d9565b6001600160a01b03811660208401525060408401356040830152606084013560608301526080840135608083015260a084013560a083015260c084013560c083015260e084013560e0830152610100808501358184015250826101208301529392505050565b604080825283519082018190526000906020906060840190828701845b82811015613fb35781516001600160a01b031684529284019290840190600101613f8e565b5050506001600160a01b03949094169201919091525091905056fea2646970667358221220458bf1c8dbdb4649dd34d87893cf2631819c3d1d6a8ab1bafb4cbf084f6aa40864736f6c634300080e0033608060405234801561001057600080fd5b5061c35033806100675760405162461bcd60e51b815260206004820152601860248201527f616363657373436f6e74726f6c6c65642f307841646d696e000000000000000060448201526064015b60405180910390fd5b8061007a61010a60201b6107e51760201c565b80546001600160a01b0319166001600160a01b03929092169190911790555062ffffff811681146100ed5760405162461bcd60e51b815260206004820152601660248201527f526f757465722f6f76657268656164546f6f4869676800000000000000000000604482015260640161005e565b8061010061012e60201b6108091760201c565b6001015550610152565b7f7d382ebca3e46505071795e192d28166a3d4bd0685585591bc6c5b8df6769fd290565b7ff2910982afb88211fa9894801aaf0314409ca240a0a8904897b9f5ba323ca53390565b610ea3806101616000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063362aecb11161008c578063cf5e7bd311610066578063cf5e7bd314610199578063e9333fab146101ac578063f850a81c146101bf578063f851a440146101d257600080fd5b8063362aecb11461016057806381bac14f14610173578063a01dccd81461018657600080fd5b80630417ffda146100d457806305684fde146100ef5780631c5a9d9c1461010257806321754d9e1461011757806326e8eda21461013a578063333dbb0d1461014d575b600080fd5b6100dc6101f2565b6040519081526020015b60405180910390f35b6100dc6100fd366004610bc3565b610205565b610115610110366004610bfc565b61027a565b005b61012a610125366004610c19565b6102cd565b60405190151581526020016100e6565b610115610148366004610c6a565b61030b565b6100dc61015b366004610cb9565b610341565b61012a61016e366004610bfc565b6103fd565b610115610181366004610bfc565b610429565b610115610194366004610bc3565b6104a7565b6101156101a7366004610bfc565b61057d565b6101156101ba366004610bfc565b6105ce565b6101156101cd366004610d0c565b6106b6565b6101da6107cc565b6040516001600160a01b0390911681526020016100e6565b60006101fc610809565b60010154905090565b6040516370a0823160e01b81526001600160a01b038281166004830152600091908416906370a0823190602401602060405180830381865afa15801561024f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102739190610d92565b9392505050565b6102826107cc565b6001600160a01b0316336001600160a01b031614806102a557506102a5336103fd565b6102ca5760405162461bcd60e51b81526004016102c190610dab565b60405180910390fd5b50565b60006102d8336103fd565b6102f45760405162461bcd60e51b81526004016102c190610dab565b6103008585858561082d565b90505b949350505050565b610314336103fd565b6103305760405162461bcd60e51b81526004016102c190610dab565b61033c8383338461083b565b505050565b600061034c336103fd565b6103685760405162461bcd60e51b81526004016102c190610dab565b6040516370a0823160e01b81523360048201526000906001600160a01b038716906370a0823190602401602060405180830381865afa1580156103af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d39190610d92565b90508381106103e6576000915050610303565b6103f38686338787610893565b9695505050505050565b6000610407610809565b6001600160a01b03909216600090815260209290925250604090205460ff1690565b6104316107cc565b6001600160a01b0316336001600160a01b031614806104545750610454336103fd565b6104705760405162461bcd60e51b81526004016102c190610dab565b600161047a610809565b6001600160a01b039290921660009081526020929092526040909120805460ff1916911515919091179055565b604051636eb1769f60e11b81523360048201523060248201526000906001600160a01b0384169063dd62ed3e90604401602060405180830381865afa1580156104f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105189190610d92565b1161056f5760405162461bcd60e51b815260206004820152602160248201527f526f757465722f4e6f74417070726f76656442794d616b6572436f6e747261636044820152601d60fa1b60648201526084016102c1565b61057982826108ba565b5050565b6105856107cc565b6001600160a01b0316336001600160a01b031614806105a857506105a8336103fd565b6105c45760405162461bcd60e51b81526004016102c190610dab565b600061047a610809565b6105d66107cc565b6001600160a01b0316336001600160a01b0316146106365760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f496e76616c6964000000000000000060448201526064016102c1565b6001600160a01b03811661068c5760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f307841646d696e000000000000000060448201526064016102c1565b806106956107e5565b80546001600160a01b0319166001600160a01b039290921691909117905550565b6106bf336103fd565b6106db5760405162461bcd60e51b81526004016102c190610dab565b60005b828110156107c65760008484838181106106fa576106fa610dd8565b905060200201602081019061070f9190610bfc565b6040516370a0823160e01b81523360048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610755573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107799190610d92565b905080156107b3576107b385858481811061079657610796610dd8565b90506020020160208101906107ab9190610bfc565b84338461083b565b50806107be81610dee565b9150506106de565b50505050565b60006107d66107e5565b546001600160a01b0316919050565b7f7d382ebca3e46505071795e192d28166a3d4bd0685585591bc6c5b8df6769fd290565b7ff2910982afb88211fa9894801aaf0314409ca240a0a8904897b9f5ba323ca53390565b600061030085858585610998565b61084784838584610998565b6107c65760405162461bcd60e51b815260206004820152601e60248201527f53696d706c65526f757465722f707573682f7472616e736665724661696c000060448201526064016102c1565b60006108a186868686610998565b156108ad5750816108b1565b5060005b95945050505050565b6001600160a01b0381163014806109425750604051636eb1769f60e11b81526001600160a01b0382811660048301523060248301526000919084169063dd62ed3e90604401602060405180830381865afa15801561091c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109409190610d92565b115b6105795760405162461bcd60e51b815260206004820152602160248201527f53696d706c65526f757465722f4e6f74417070726f76656442795265736572766044820152606560f81b60648201526084016102c1565b60008115806109b85750826001600160a01b0316846001600160a01b0316145b156109c557506001610303565b306001600160a01b038516036109e7576109e0858484610ac2565b9050610303565b604080516001600160a01b0386811660248301528581166044830152606480830186905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b1790529151600092839290891691610a4b9190610e15565b6000604051808303816000865af19150503d8060008114610a88576040519150601f19603f3d011682016040523d82523d6000602084013e610a8d565b606091505b5091509150818015610ab7575080511580610ab7575080806020019051810190610ab79190610e50565b979650505050505050565b6000811580610ad957506001600160a01b03831630145b15610ae657506001610273565b604080516001600160a01b038581166024830152604480830186905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839290881691610b429190610e15565b6000604051808303816000865af19150503d8060008114610b7f576040519150601f19603f3d011682016040523d82523d6000602084013e610b84565b606091505b50915091508180156103f35750805115806103f35750808060200190518101906103f39190610e50565b6001600160a01b03811681146102ca57600080fd5b60008060408385031215610bd657600080fd5b8235610be181610bae565b91506020830135610bf181610bae565b809150509250929050565b600060208284031215610c0e57600080fd5b813561027381610bae565b60008060008060808587031215610c2f57600080fd5b8435610c3a81610bae565b93506020850135610c4a81610bae565b92506040850135610c5a81610bae565b9396929550929360600135925050565b600080600060608486031215610c7f57600080fd5b8335610c8a81610bae565b92506020840135610c9a81610bae565b929592945050506040919091013590565b80151581146102ca57600080fd5b60008060008060808587031215610ccf57600080fd5b8435610cda81610bae565b93506020850135610cea81610bae565b9250604085013591506060850135610d0181610cab565b939692955090935050565b600080600060408486031215610d2157600080fd5b833567ffffffffffffffff80821115610d3957600080fd5b818601915086601f830112610d4d57600080fd5b813581811115610d5c57600080fd5b8760208260051b8501011115610d7157600080fd5b60209283019550935050840135610d8781610bae565b809150509250925092565b600060208284031215610da457600080fd5b5051919050565b602080825260139082015272149bdd5d195c8bdd5b985d5d1a1bdc9a5e9959606a1b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600060018201610e0e57634e487b7160e01b600052601160045260246000fd5b5060010190565b6000825160005b81811015610e365760208186018101518583015201610e1c565b81811115610e45576000828501525b509190910192915050565b600060208284031215610e6257600080fd5b815161027381610cab56fea26469706673582212201a5909cf162cba146fb1ddb06cb563c76c816c7430eb8e8f45d62b5cb8ea878a64736f6c634300080e00336101606040523480156200001257600080fd5b5060405162002d1938038062002d198339810160408190526200003591620000ab565b6001600160a01b039586166101405293851660e05291909316610100526080919091526001600160601b0391821660a0521660c05233610120526200012b565b6001600160a01b03811681146200008b57600080fd5b50565b80516001600160601b0381168114620000a657600080fd5b919050565b60008060008060008060c08789031215620000c557600080fd5b8651620000d28162000075565b6020880151909650620000e58162000075565b6040880151909550620000f88162000075565b935062000108606088016200008e565b925062000118608088016200008e565b915060a087015190509295509295509295565b60805160a05160c05160e0516101005161012051610140516129d46200034560003960008181610735015281816108f101528181610b7201528181610cb201528181610f1f01528181611140015281816114cf0152818161180201528181611c1701528181611d7101528181611e7301528181611fb7015281816120f401526121f601526000818160fa0152818161044c0152610dc50152600081816107850152818161092001528181610ba101528181610d0201528181610f4e015281816110f2015281816111900152818161151f015281816116640152818161183101528181611c6701528181611dc101528181611ec301528181611fe6015281816121230152612225015260008181610151015281816103a9015281816107640152818161094101528181610bc201528181610ce101528181610f6f0152818161116f0152818161130e015281816114fe015281816118520152818161197f01528181611a2701528181611c4601528181611da001528181611ea201528181612007015281816121440152612246015260006122ee01526000818161133c01526113a1015260008181610293015281816102e9015281816104e90152818161051d01528181610553015281816105e201528181610a2001528181610a8501528181610af001528181610ec2015281816113d80152818161145b0152818161168f0152818161172f01528181611b710152611ba901526129d46000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806311b102591461005c5780631f92a319146100845780633234fdc0146100a5578063663d2e0c146100ba578063b61dce59146100da575b600080fd5b61006f61006a3660046123a3565b6100ed565b60405190151581526020015b60405180910390f35b6100976100923660046123a3565b610396565b60405190815260200161007b565b6100b86100b3366004612436565b610441565b005b6100cd6100c83660046124de565b610a07565b60405161007b91906124f9565b6100b86100e836600461256e565b610dba565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101405760405162461bcd60e51b8152600401610137906125d0565b60405180910390fd5b60008051602061297f8339815191527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166101866020860186612607565b6001600160a01b03160361026a5760408085013560009081526005830160205290812054906101b482610e9e565b9050801561022c576101e16101d26101cd600184612646565b610ee6565b60008860a00135600089610f08565b60088301546101f1600183612646565b11610220576040517f5ac608c951fb4eeda3d62e6a244a32d697d994fdcdf2ff4ca1ff1b5dde368a0d90600090a15b60019350505050610390565b60405162461bcd60e51b81526020600482015260136024820152724d616e676f2f4269644f75744f6652616e676560681b6044820152606401610137565b604080850135600090815260048301602052908120549061028a82610e9e565b90506102b760017f0000000000000000000000000000000000000000000000000000000000000000612646565b811015610352576102de6102cf6101cd83600161265d565b60008860a00135600089611129565b600883015461030d907f0000000000000000000000000000000000000000000000000000000000000000612646565b61031882600161265d565b10610220576040517f3c8e6c8b637216f202e5b335b54c0abfc6c1b6952a8a2511de149d2f3e5e7e9290600090a160019350505050610390565b60405162461bcd60e51b81526020600482015260136024820152724d616e676f2f41736b4f75744f6652616e676560681b6044820152606401610137565b92915050565b600060008051602061297f8339815191527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166103de6020860186612607565b6001600160a01b03160361041b57604080850135600090815260058301602052205461041261040c82610e9e565b85611338565b92505050610390565b604080850135600090815260048301602052205461041261043b82610e9e565b85611389565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104895760405162461bcd60e51b8152600401610137906125d0565b60008051602061297f8339815191528686116104e75760405162461bcd60e51b815260206004820152601d60248201527f4d616e676f2f696e697469616c697a652f696e76616c6964536c6963650000006044820152606401610137565b7f000000000000000000000000000000000000000000000000000000000000000083148015610514575060015b801561054a57507f0000000000000000000000000000000000000000000000000000000000000000610546868061268b565b9050145b801561058357507f000000000000000000000000000000000000000000000000000000000000000061057f602087018761268b565b9050145b6105db5760405162461bcd60e51b815260206004820152602360248201527f4d616e676f2f696e697469616c697a652f696e76616c696441727261794c656e6044820152620cee8d60eb1b6064820152608401610137565b61060660017f0000000000000000000000000000000000000000000000000000000000000000612646565b88106106545760405162461bcd60e51b815260206004820152601e60248201527f4d616e676f2f696e697469616c697a652f4e6f536c6f74466f7241736b7300006044820152606401610137565b865b868110156109fb57600061066982610ee6565b905089821161083057600061067e888061268b565b8481811061068e5761068e612675565b905060200201359050600081116106e257600083116106ae5760006106e4565b836001016106c26001856101cd9190612646565b815481106106d2576106d2612675565b90600052602060002001546106e4565b805b905061070b828d8989878181106106fd576106fd612675565b905060200201358489610f08565b600084600001838154811061072257610722612675565b9060005260206000200154111561082a577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad97db1b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000008760000186815481106107b9576107b9612675565b906000526020600020015460006040518563ffffffff1660e01b81526004016107e594939291906126d5565b6020604051808303816000875af1158015610804573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082891906126fe565b505b506109e8565b600061083f602089018961268b565b8481811061084f5761084f612675565b9050602002013590506000811161089e576000831161086f5760006108a0565b8361087e6101cd600186612646565b8154811061088e5761088e612675565b90600052602060002001546108a0565b805b90506108c7828d8989878181106108b9576108b9612675565b905060200201358489611129565b60008460010183815481106108de576108de612675565b906000526020600020015411156109e6577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad97db1b7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000087600101868154811061097557610975612675565b906000526020600020015460006040518563ffffffff1660e01b81526004016109a194939291906126d5565b6020604051808303816000875af11580156109c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e491906126fe565b505b505b50806109f381612717565b915050610656565b50505050505050505050565b610a0f61237c565b60008051602061297f8339815191527f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff811115610a5757610a57612730565b604051908082528060200260200182016040528015610a80578160200160208202803683370190505b5082527f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff811115610abc57610abc612730565b604051908082528060200260200182016040528015610ae5578160200160208202803683370190505b50602083015260005b7f0000000000000000000000000000000000000000000000000000000000000000811015610db357600082610b2283610ee6565b81548110610b3257610b32612675565b90600052602060002001549050600083600101610b4e84610ee6565b81548110610b5e57610b5e612675565b906000526020600020015490506000610c4d7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166368c13d6b7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000866040518463ffffffff1660e01b8152600401610c0093929190612746565b602060405180830381865afa158015610c1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4191906126fe565b6001600160601b031690565b1180610c57575085155b610c62576000610c8b565b83600101610c6f84610ee6565b81548110610c7f57610c7f612675565b90600052602060002001545b8551805185908110610c9f57610c9f612675565b6020026020010181815250506000610d407f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166368c13d6b7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000876040518463ffffffff1660e01b8152600401610c0093929190612746565b1180610d4a575085155b610d55576000610d7b565b83610d5f84610ee6565b81548110610d6f57610d6f612675565b90600052602060002001545b6020860151805185908110610d9257610d92612675565b60200260200101818152505050508080610dab90612717565b915050610aee565b5050919050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610e025760405162461bcd60e51b8152600401610137906125d0565b60008512610e105784610e19565b610e198561276a565b8214610e675760405162461bcd60e51b815260206004820181905260248201527f4d616e676f2f7365745f73686966742f6e6f74456e6f756768416d6f756e74736044820152606401610137565b6000851215610e8a57610e85610e7c8661276a565b858585856113c7565b610e97565b610e97858585858561171e565b5050505050565b600061039060008051602061297f83398151915260060154610ec09084612786565b7f00000000000000000000000000000000000000000000000000000000000000006119e0565b600061039060008051602061297f83398151915260060154610ec090846127c5565b600060008051602061297f833981519152905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166368c13d6b7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000856001018b81548110610fa357610fa3612675565b90600052602060002001546040518463ffffffff1660e01b8152600401610fcc93929190612746565b602060405180830381865afa158015610fe9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100d91906126fe565b9050600061101a88610e9e565b905060008761104a57600384015461103b6001600160601b0385168961265d565b611045919061265d565b61104c565b865b9050600061105a8383611389565b905060006001600160601b0385166000036110c957871561107c5750866110ec565b83156110b857856001016110966001866101cd9190612646565b815481106110a6576110a6612675565b906000526020600020015490506110ec565b6110c28560e01c90565b90506110ec565b856001018b815481106110de576110de612675565b906000526020600020015490505b61111c8b7f000000000000000000000000000000000000000000000000000000000000000084868b8f1587611a0e565b5050505050505050505050565b600060008051602061297f833981519152905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166368c13d6b7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000856000018b815481106111c4576111c4612675565b90600052602060002001546040518463ffffffff1660e01b81526004016111ed93929190612746565b602060405180830381865afa15801561120a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061122e91906126fe565b9050600061123b88610e9e565b905060008761126b57600284015461125c6001600160601b0385168961265d565b611266919061265d565b61126d565b865b9050600061127b8383611338565b905060006001600160601b0385166000036112e557871561129d575086611308565b83156112d457856112b26101cd600187612646565b815481106112c2576112c2612675565b90600052602060002001549050611308565b6112de8560e01c90565b9050611308565b856000018b815481106112fa576112fa612675565b906000526020600020015490505b61111c8b7f000000000000000000000000000000000000000000000000000000000000000084868b8f1587611a0e565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160601b03168261136e85611b3b565b6113789190612806565b611382919061283b565b9392505050565b600061139483611b3b565b6113786001600160601b037f00000000000000000000000000000000000000000000000000000000000000001684612806565b60008051602061297f8339815191527f0000000000000000000000000000000000000000000000000000000000000000861061144f5760405162461bcd60e51b815260206004820152602160248201527f4d616e676f2f73686966742f4e656761746976655368696674546f6f4c6172676044820152606560f81b6064820152608401610137565b600061147f6101cd60017f0000000000000000000000000000000000000000000000000000000000000000612646565b9050868260060160008282546114959190612786565b90915550600090505b87811015611714578260000182815481106114bb576114bb612675565b90600052602060002001546000146115c4577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad97db1b7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000086600001868154811061155357611553612675565b906000526020600020015460006040518563ffffffff1660e01b815260040161157f94939291906126d5565b6020604051808303816000875af115801561159e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c291906126fe565b505b60006115cf83610e9e565b9050600080891561161e578888858181106115ec576115ec612675565b905060200201359050611617838a8a8781811061160b5761160b612675565b90506020020135611338565b915061165e565b611640838a8a8781811061163457611634612675565b90506020020135611389565b905088888581811061165457611654612675565b9050602002013591505b6116f4857f000000000000000000000000000000000000000000000000000000000000000083858b60006116b360017f0000000000000000000000000000000000000000000000000000000000000000612646565b8a106116c0576000611a0e565b8c6001016116d48b60016101cd919061265d565b815481106116e4576116e4612675565b9060005260206000200154611a0e565b836116fe81612717565b94505061170a85611b61565b945050505061149e565b5050505050505050565b60008051602061297f8339815191527f000000000000000000000000000000000000000000000000000000000000000086106117a65760405162461bcd60e51b815260206004820152602160248201527f4d616e676f2f73686966742f706f7369746976655368696674546f6f4c6172676044820152606560f81b6064820152608401610137565b60006117b26000610ee6565b9050868260060160008282546117c891906127c5565b90915550600090505b87811015611714578260010182815481106117ee576117ee612675565b90600052602060002001546000146118f7577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad97db1b7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000086600101868154811061188657611886612675565b906000526020600020015460006040518563ffffffff1660e01b81526004016118b294939291906126d5565b6020604051808303816000875af11580156118d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118f591906126fe565b505b600061190283610e9e565b905060008089156119455788888581811061191f5761191f612675565b90506020020135915061193e838a8a8781811061160b5761160b612675565b9050611979565b88888581811061195757611957612675565b905060200201359050611976838a8a8781811061163457611634612675565b91505b6119c0857f000000000000000000000000000000000000000000000000000000000000000083858b6000808a116119b1576000611a0e565b8c6116d46101cd60018d612646565b836119ca81612717565b9450506119d685611ba5565b94505050506117d1565b60008083126119fa576119f3828461284f565b9050610390565b611a048284612863565b6119f390836127c5565b60008051602061297f8339815191526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811690881603611ac3576000611a816040518060a001604052808b815260200189815260200188815260200187815260200185815250611bdd565b90508015611aaf5783611aa357808260020154611a9e919061265d565b611aa5565b805b6002830155611abd565b8315611abd57600060028301555b50611714565b6000611af46040518060a001604052808b815260200189815260200188815260200187815260200185815250611f5c565b90508015611b225783611b1657808260030154611b11919061265d565b611b18565b805b6003830155611b30565b8315611b3057600060038301555b505050505050505050565b600061039060008051602061297f8339815191526007015483611b5c61227e565b612365565b6000808211611b9a57611b9560017f0000000000000000000000000000000000000000000000000000000000000000612646565b610390565b610390600183612646565b60007f0000000000000000000000000000000000000000000000000000000000000000611bd383600161265d565b610390919061284f565b805160008051602061297f833981519152805460009282918110611c0357611c03612675565b9060005260206000200154600003611d6f577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166349f6d2dc7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000086602001518760400151886060015160008a608001516040518863ffffffff1660e01b8152600401611cbe9796959493929190612877565b6020604051808303816000875af1925050508015611cf9575060408051601f3d908101601f19168201909252611cf6918101906126fe565b60015b611d065750506040015190565b83518254829184918110611d1c57611d1c612675565b60009182526020822001919091558451835490916005850191859084908110611d4757611d47612675565b9060005260206000200154815260200190815260200160002081905550600092505050919050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636a4f76917f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000086602001518760400151886060015160008a60800151896000018c6000015181548110611e0f57611e0f612675565b90600052602060002001546040518963ffffffff1660e01b8152600401611e3d9897969594939291906128b5565b600060405180830381600087803b158015611e5757600080fd5b505af1925050508015611e68575060015b611f53576000611f247f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166368c13d6b7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000086600001896000015181548110611efb57611efb612675565b90600052602060002001546040518463ffffffff1660e01b8152600401610c0093929190612746565b905080846040015111611f3b578360400151611f4b565b808460400151611f4b9190612646565b949350505050565b50600092915050565b80517f416b48c48a967c2245e6ba6bc6efa281932950b502fea671117e4dfd7d3dfb82805460009260008051602061297f83398151915292918110611fa357611fa3612675565b90600052602060002001546000036120f2577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166349f6d2dc7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000086602001518760400151886060015160008a608001516040518863ffffffff1660e01b815260040161205e9796959493929190612877565b6020604051808303816000875af1925050508015612099575060408051601f3d908101601f19168201909252612096918101906126fe565b60015b6120a65750506040015190565b80826001018560000151815481106120c0576120c0612675565b9060005260206000200181905550836000015182600401600084600101876000015181548110611d4757611d47612675565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636a4f76917f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000086602001518760400151886060015160008a60800151896001018c600001518154811061219257612192612675565b90600052602060002001546040518963ffffffff1660e01b81526004016121c09897969594939291906128b5565b600060405180830381600087803b1580156121da57600080fd5b505af19250505080156121eb575060015b611f53576000611f247f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166368c13d6b7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000086600101896000015181548110611efb57611efb612675565b7f416b48c48a967c2245e6ba6bc6efa281932950b502fea671117e4dfd7d3dfb88547f416b48c48a967c2245e6ba6bc6efa281932950b502fea671117e4dfd7d3dfb875460009160008051602061297f8339815191529183916122e0916128f9565b612313906001600160601b037f0000000000000000000000000000000000000000000000000000000000000000166127c5565b9050600081136103905760405162461bcd60e51b815260206004820152601e60248201527f4d616e676f2f71756f74655f6d696e2f5368696674556e646572666c6f7700006044820152606401610137565b6000816123728486612806565b611f4b919061265d565b60405180604001604052806002905b606081526020019060019003908161238b5790505090565b6000808284036101408112156123b857600080fd5b610120808212156123c857600080fd5b9395938601359450505050565b803580151581146123e557600080fd5b919050565b60008083601f8401126123fc57600080fd5b50813567ffffffffffffffff81111561241457600080fd5b6020830191508360208260051b850101111561242f57600080fd5b9250929050565b60008060008060008060008060e0898b03121561245257600080fd5b61245b896123d5565b9750602089013596506040890135955060608901359450608089013567ffffffffffffffff8082111561248d57600080fd5b818b0191508b6040830111156124a257600080fd5b90945060a08a013590808211156124b857600080fd5b506124c58b828c016123ea565b999c989b50969995989497949560c00135949350505050565b6000602082840312156124f057600080fd5b611382826123d5565b6020808252600090606083018382018584805b600281101561256157878503601f19018452825180518087529087019087870190845b8181101561254b5783518352928901929189019160010161252f565b509096505050928501929185019160010161250c565b5092979650505050505050565b60008060008060006080868803121561258657600080fd5b85359450612596602087016123d5565b9350604086013567ffffffffffffffff8111156125b257600080fd5b6125be888289016123ea565b96999598509660600135949350505050565b6020808252601f908201527f4d616e676f496d706c656d656e746174696f6e2f696e76616c696443616c6c00604082015260600190565b60006020828403121561261957600080fd5b81356001600160a01b038116811461138257600080fd5b634e487b7160e01b600052601160045260246000fd5b60008282101561265857612658612630565b500390565b6000821982111561267057612670612630565b500190565b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126126a257600080fd5b83018035915067ffffffffffffffff8211156126bd57600080fd5b6020019150600581901b360382131561242f57600080fd5b6001600160a01b0394851681529290931660208301526040820152901515606082015260800190565b60006020828403121561271057600080fd5b5051919050565b60006001820161272957612729612630565b5060010190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b039384168152919092166020820152604081019190915260600190565b6000600160ff1b820161277f5761277f612630565b5060000390565b60008083128015600160ff1b8501841216156127a4576127a4612630565b6001600160ff1b03840183138116156127bf576127bf612630565b50500390565b600080821280156001600160ff1b03849003851316156127e7576127e7612630565b600160ff1b839003841281161561280057612800612630565b50500190565b600081600019048311821515161561282057612820612630565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261284a5761284a612825565b500490565b60008261285e5761285e612825565b500690565b60008261287257612872612825565b500790565b6001600160a01b03978816815295909616602086015260408501939093526060840191909152608083015260a082015260c081019190915260e00190565b6001600160a01b03988916815296909716602087015260408601949094526060850192909252608084015260a083015260c082015260e08101919091526101000190565b60006001600160ff1b038184138284138082168684048611161561291f5761291f612630565b600160ff1b600087128281168783058912161561293e5761293e612630565b6000871292508782058712848416161561295a5761295a612630565b8785058712818416161561297057612970612630565b50505092909302939250505056fe416b48c48a967c2245e6ba6bc6efa281932950b502fea671117e4dfd7d3dfb81a26469706673582212204805650d72dd5d373acfe22a70c407af43e35403f616d987c257084ef74b618b64736f6c634300080e0033416363657373436f6e74726f6c6c65642f496e76616c6964000000000000000060806040526000805460ff1916600117905534801561001d57600080fd5b5060405161120638038061120683398101604081905261003c9161009f565b600080546001600160a01b0394851661010002610100600160a81b0319909116179055600180549284166001600160a01b0319938416179055600280549190931691161790556100ec565b6001600160a01b038116811461009c57600080fd5b50565b6000806000606084860312156100b457600080fd5b83516100bf81610087565b60208501519093506100d081610087565b60408501519092506100e181610087565b809150509250925092565b61110b806100fb6000396000f3fe6080604052600436106100e15760003560e01c8063a3cfe14d1161007f578063b84e3eda11610059578063b84e3eda14610284578063e1f21c67146102a4578063f8ccbf47146102c4578063ff2e2d33146102de57600080fd5b8063a3cfe14d14610244578063aa2cc08b14610264578063b04220dd1461013057600080fd5b80633a768463116100bb5780633a7684631461016a5780634d1d2b66146101aa578063521606d2146101f4578063978b7c021461021457600080fd5b8063080d7c4d146100ed5780631154020b1461010f5780632d24c42f1461013057600080fd5b366100e857005b600080fd5b3480156100f957600080fd5b5061010d610108366004610b09565b6102fe565b005b34801561011b57600080fd5b5061010d61012a366004610b35565b50505050565b34801561013c57600080fd5b5061015061014b366004610b7b565b610395565b604080519283526020830191909152015b60405180910390f35b34801561017657600080fd5b50610192737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b039091168152602001610161565b3480156101b657600080fd5b506101ca6101c5366004610b7b565b61043d565b6040805195151586526020860194909452928401919091526060830152608082015260a001610161565b34801561020057600080fd5b5061010d61020f366004610c08565b610539565b34801561022057600080fd5b5061023461022f366004610b7b565b61066a565b6040519015158152602001610161565b34801561025057600080fd5b5061010d61025f366004610b09565b6106e2565b34801561027057600080fd5b5061015061027f366004610c9e565b610720565b34801561029057600080fd5b5061010d61029f366004610c08565b6107be565b3480156102b057600080fd5b5061010d6102bf366004610cf9565b6108e1565b3480156102d057600080fd5b506000546102349060ff1681565b3480156102ea57600080fd5b506102346102f9366004610d3a565b610954565b60005460015460025460405163167ae91560e21b81526001600160a01b039283166004820152908216602482015284821660448201526064810184905261010090920416906359eba454906084015b6020604051808303816000875af115801561036c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103909190610dbd565b505050565b600080546001805460025460405163fbffe5fd60e01b81526001600160a01b03928316600482015290821660248201526044810187905260648101869052608481019290925283926101009004169063fbffe5fd9060a4016080604051808303816000875af115801561040c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104309190610ddf565b5091969095509350505050565b60008060008060008061048560405180608001604052808a81526020018981526020016bffffffffffffffffffffffff8016815260200165ffffffffffff8016815250610a12565b6000805460018054600254604051632370a17d60e11b8152959650939485948594859485946001600160a01b036101009093048316946346e142fa946104d694928316939216918c91600401610e15565b60a0604051808303816000875af11580156104f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105199190610eaa565b60019094149e50919c509a50985096505050505050509295509295909350565b604080516020810190915260008082525b825181101561065c5782518290737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae9086908590811061058557610585610eea565b60200260200101516040518263ffffffff1660e01b81526004016105ab91815260200190565b600060405180830381865afa1580156105c8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105f09190810190610f2c565b604051602001610601929190610fc0565b6040516020818303038152906040529150600183516106209190611005565b81101561064a5781604051602001610638919061101c565b60405160208183030381529060405291505b8061065481611042565b91505061054a565b5061066681610a6f565b5050565b60405163268e95b360e11b815260048101839052602481018290526000903090634d1d2b669060440160a0604051808303816000875af11580156106b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d6919061105b565b50929695505050505050565b60005460405163095ea7b360e01b81526101009091046001600160a01b0390811660048301526024820183905283169063095ea7b39060440161034d565b60405163fbffe5fd60e01b81526001600160a01b0385811660048301528481166024830152604482018490526064820183905260016084830152600091829188169063fbffe5fd9060a4016080604051808303816000875af115801561078a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ae9190610ddf565b5091999098509650505050505050565b604080516020810190915260008082525b825181101561065c5782518290737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae9086908590811061080a5761080a610eea565b60200260200101516040518263ffffffff1660e01b815260040161083091815260200190565b600060405180830381865afa15801561084d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108759190810190610f2c565b604051602001610886929190610fc0565b6040516020818303038152906040529150600183516108a59190611005565b8110156108cf57816040516020016108bd919061101c565b60405160208183030381529060405291505b806108d981611042565b9150506107cf565b60405163095ea7b360e01b81526001600160a01b0383811660048301526024820183905284169063095ea7b3906044016020604051808303816000875af1158015610930573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012a9190610dbd565b600080610980604051806080016040528088815260200187815260200186815260200185815250610a12565b90506000896001600160a01b03166346e142fa8a8a8560016040518563ffffffff1660e01b81526004016109b79493929190610e15565b60a0604051808303816000875af11580156109d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fa9190610eaa565b50506001909214945050505050979650505050505050565b60408051600180825281830190925260609160009190816020015b610a35610ad6565b815260200190600190039081610a2d5790505090508281600081518110610a5e57610a5e610eea565b602090810291909101015292915050565b610ab281604051602401610a8391906110a2565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052610ab5565b50565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60405180608001604052806004906020820280368337509192915050565b6001600160a01b0381168114610ab257600080fd5b60008060408385031215610b1c57600080fd5b8235610b2781610af4565b946020939093013593505050565b60008060008060808587031215610b4b57600080fd5b8435610b5681610af4565b93506020850135610b6681610af4565b93969395505050506040820135916060013590565b60008060408385031215610b8e57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610bdc57610bdc610b9d565b604052919050565b600067ffffffffffffffff821115610bfe57610bfe610b9d565b5060051b60200190565b60006020808385031215610c1b57600080fd5b823567ffffffffffffffff811115610c3257600080fd5b8301601f81018513610c4357600080fd5b8035610c56610c5182610be4565b610bb3565b81815260059190911b82018301908381019087831115610c7557600080fd5b928401925b82841015610c9357833582529284019290840190610c7a565b979650505050505050565b600080600080600060a08688031215610cb657600080fd5b8535610cc181610af4565b94506020860135610cd181610af4565b93506040860135610ce181610af4565b94979396509394606081013594506080013592915050565b600080600060608486031215610d0e57600080fd5b8335610d1981610af4565b92506020840135610d2981610af4565b929592945050506040919091013590565b600080600080600080600060e0888a031215610d5557600080fd5b8735610d6081610af4565b96506020880135610d7081610af4565b95506040880135610d8081610af4565b969995985095966060810135965060808101359560a0820135955060c0909101359350915050565b80518015158114610db857600080fd5b919050565b600060208284031215610dcf57600080fd5b610dd882610da8565b9392505050565b60008060008060808587031215610df557600080fd5b505082516020840151604085015160609095015191969095509092509050565b6001600160a01b038581168252841660208083019190915260806040830181905284518382018190526000928681019160a08601919085805b82811015610e8b57855185835b6004811015610e7857825182529186019190860190600101610e5b565b5050509483019493860193600101610e4e565b5050505085151560608601529250610ea1915050565b95945050505050565b600080600080600060a08688031215610ec257600080fd5b5050835160208501516040860151606087015160809097015192989197509594509092509050565b634e487b7160e01b600052603260045260246000fd5b60005b83811015610f1b578181015183820152602001610f03565b8381111561012a5750506000910152565b600060208284031215610f3e57600080fd5b815167ffffffffffffffff80821115610f5657600080fd5b818401915084601f830112610f6a57600080fd5b815181811115610f7c57610f7c610b9d565b610f8f601f8201601f1916602001610bb3565b9150808252856020828501011115610fa657600080fd5b610fb7816020840160208601610f00565b50949350505050565b60008351610fd2818460208801610f00565b835190830190610fe6818360208801610f00565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b60008282101561101757611017610fef565b500390565b6000825161102e818460208701610f00565b61016160f51b920191825250600201919050565b60006001820161105457611054610fef565b5060010190565b600080600080600060a0868803121561107357600080fd5b61107c86610da8565b602087015160408801516060890151608090990151929a91995097965090945092505050565b60208152600082518060208401526110c1816040850160208701610f00565b601f01601f1916919091016040019291505056fea2646970667358221220fe05e77654585728cf63d927b792919a9b4528889d07a63176801add83a0055b64736f6c634300080e0033608060405234801561001057600080fd5b5060405161206d38038061206d83398101604081905261002f91610092565b600180546001600160a01b0394851661010002610100600160a81b0319909116179055600280549284166001600160a01b0319938416179055600380549190931691161790556100df565b6001600160a01b038116811461008f57600080fd5b50565b6000806000606084860312156100a757600080fd5b83516100b28161007a565b60208501519093506100c38161007a565b60408501519092506100d48161007a565b809150509250925092565b611f7f806100ee6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631f7b6d32146100515780635686153214610067578063a5e3875114610092578063e9c4a3ac146100a7575b600080fd5b6000546040519081526020015b60405180910390f35b61007a61007536600461047a565b6100af565b6040516001600160a01b03909116815260200161005e565b6100a56100a036600461047a565b6100de565b005b6100a5610320565b60008082815481106100c3576100c3610493565b6000918252602090912001546001600160a01b031692915050565b60015460ff16610311578067ffffffffffffffff811115610101576101016104a9565b60405190808252806020026020018201604052801561012a578160200160208202803683370190505b50805161013f916000916020909101906103f3565b5060005b8181101561030f576001546002546003546040516101009093046001600160a01b03908116939281169291169061017990610458565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f0801580156101b5573d6000803e3d6000fd5b50600082815481106101c9576101c9610493565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506000818154811061020a5761020a610493565b60009182526020909120015460025460405163a3cfe14d60e01b81526001600160a01b039182166004820152678ac7230489e80000602482015291169063a3cfe14d90604401600060405180830381600087803b15801561026a57600080fd5b505af115801561027e573d6000803e3d6000fd5b505050506000818154811061029557610295610493565b600091825260209091200154604051635239cafb60e11b8152821560048201526001600160a01b039091169063a47395f690602401600060405180830381600087803b1580156102e457600080fd5b505af11580156102f8573d6000803e3d6000fd5b505050508080610307906104bf565b915050610143565b505b506001805460ff191681179055565b600080549061032f82476104e6565b90506000811161037b5760405162461bcd60e51b8152602060048201526013602482015272181032ba3432b9103a37903a3930b739b332b960691b604482015260640160405180910390fd5b60005b828110156103ee57600080828154811061039a5761039a610493565b60009182526020822001546040516001600160a01b039091169250829085156108fc0290869084818181858888f193505050509050806103d957600080fd5b505080806103e6906104bf565b91505061037e565b505050565b828054828255906000526020600020908101928215610448579160200282015b8281111561044857825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610413565b50610454929150610465565b5090565b611a418061050983390190565b5b808211156104545760008155600101610466565b60006020828403121561048c57600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6000600182016104df57634e487b7160e01b600052601160045260246000fd5b5060010190565b60008261050357634e487b7160e01b600052601260045260246000fd5b50049056fe60806040526004805463ff00ff00191663010001001790553480156200002457600080fd5b5060405162001a4138038062001a418339810160408190526200004791620000a3565b600080546001600160a01b039485166001600160a01b031991821617909155600180549385169382169390931790925560028054919093169116179055620000f7565b6001600160a01b0381168114620000a057600080fd5b50565b600080600060608486031215620000b957600080fd5b8351620000c6816200008a565b6020850151909350620000d9816200008a565b6040850151909250620000ec816200008a565b809150509250925092565b61193a80620001076000396000f3fe6080604052600436106101bb5760003560e01c8063ba414fa6116100ec578063e923c6511161008a578063fa7626d411610064578063fa7626d414610550578063fc3816c81461056f578063fc8349f21461058f578063ffae399e146105af57600080fd5b8063e923c651146104ef578063f5537ede1461050f578063f8ccbf471461052f57600080fd5b8063ccfbf94d116100c6578063ccfbf94d1461046f578063cda30c3b1461048f578063d3845fea146104af578063e67ecda1146104cf57600080fd5b8063ba414fa61461040a578063c4c6c87d1461042f578063cafffca81461044f57600080fd5b80635a4924e8116101595780637ec95ff3116101335780637ec95ff31461037c5780638b0af9bb1461039c578063a3cfe14d146103b1578063a47395f6146103d157600080fd5b80635a4924e8146102f55780636c49c32c146103235780637a943a371461034357600080fd5b80633a768463116101955780633a768463146102295780633d3d130d1461026e57806353e575ac1461028e578063557f49c3146102bc57600080fd5b80630cc9d656146101c75780632644c05c146101e957806333ac5efd1461020957600080fd5b366101c257005b600080fd5b3480156101d357600080fd5b506101e76101e236600461142d565b6105e8565b005b3480156101f557600080fd5b506101e7610204366004611492565b610631565b34801561021557600080fd5b506101e76102243660046114cd565b6106af565b34801561023557600080fd5b50610251737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561027a57600080fd5b506101e7610289366004611529565b610731565b34801561029a57600080fd5b506102ae6102a9366004611492565b61078d565b604051908152602001610265565b3480156102c857600080fd5b506101e76102d736600461157a565b60028054911515600160a81b0260ff60a81b19909216919091179055565b34801561030157600080fd5b506101e761031036600461157a565b6004805460ff1916911515919091179055565b34801561032f57600080fd5b506102ae61033e36600461159e565b610821565b34801561034f57600080fd5b506101e761035e36600461157a565b60028054911515600160b81b0260ff60b81b19909216919091179055565b34801561038857600080fd5b506102ae6103973660046114cd565b610988565b3480156103a857600080fd5b506102ae610a1d565b3480156103bd57600080fd5b506101e76103cc3660046115bb565b610a8f565b3480156103dd57600080fd5b506101e76103ec36600461157a565b60028054911515600160a01b0260ff60a01b19909216919091179055565b34801561041657600080fd5b5061041f610b0b565b6040519015158152602001610265565b34801561043b57600080fd5b506102ae61044a3660046115e7565b610c3a565b34801561045b57600080fd5b506102ae61046a3660046115e7565b610ccd565b34801561047b57600080fd5b506102ae61048a366004611600565b610d1e565b34801561049b57600080fd5b506102ae6104aa366004611659565b610d9e565b3480156104bb57600080fd5b506101e76104ca3660046115e7565b610e30565b3480156104db57600080fd5b506101e76104ea3660046115e7565b600355565b3480156104fb57600080fd5b506102ae61050a366004611492565b610e92565b34801561051b57600080fd5b506101e761052a36600461168b565b610f1b565b34801561053b57600080fd5b5060045461041f906301000000900460ff1681565b34801561055c57600080fd5b5060045461041f90610100900460ff1681565b34801561057b57600080fd5b506102ae61058a3660046116cc565b610f94565b34801561059b57600080fd5b5061041f6105aa3660046115e7565b611022565b3480156105bb57600080fd5b506101e76105ca36600461157a565b60028054911515600160b01b0260ff60b01b19909216919091179055565b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c28686868686866040516106219695949392919061172e565b60405180910390a1505050505050565b60008054600154600254604051636a4f769160e01b81526001600160a01b0393841694636a4f7691946106769481169316918b918b918b91908b908b90600401611767565b600060405180830381600087803b15801561069057600080fd5b505af11580156106a4573d6000803e3d6000fd5b505050505050505050565b60008054600154600254604051636a4f769160e01b81526001600160a01b0393841694636a4f76919487946106f794908216939116918d918d918d918d908d90600401611767565b6000604051808303818588803b15801561071057600080fd5b505af1158015610724573d6000803e3d6000fd5b5050505050505050505050565b6003541561077f5761077f81602001356003546040518060400160405280601881526020017f496e636f727265637420737461747573206d6573736167650000000000000000815250611092565b61078982826110da565b5050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc9387936107d4939183169216908c908c908c908a908d906004016117ab565b60206040518083038185885af11580156107f2573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061081791906117e9565b9695505050505050565b600254600090600160b01b900460ff161561085c576040805160208082019092526f1d195cdd13585ad95c8bdc995d995c9d60821b81529081fd5b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c23361088b6020850185611802565b61089b6040860160208701611802565b856040013586608001358760a001356040516108bc9695949392919061172e565b60405180910390a1600254600160a01b900460ff161561095f576108e36020830183611802565b6000805460405163095ea7b360e01b81526001600160a01b0391821660048201526024810192909252919091169063095ea7b3906044016020604051808303816000875af1158015610939573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095d919061181f565b505b600254600160a81b900460ff161561098057506418589bdc9d60da1b919050565b506000919050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc9387936109cf939183169216908d908d908d908d908d906004016117ab565b60206040518083038185885af11580156109ed573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610a1291906117e9565b979650505050505050565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610a66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8a91906117e9565b905090565b60005460405163095ea7b360e01b81526001600160a01b039182166004820152602481018390529083169063095ea7b3906044016020604051808303816000875af1158015610ae2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b06919061181f565b505050565b60045460009062010000900460ff1615610b2f575060045462010000900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610c355760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610bbd917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611868565b60408051601f1981840301815290829052610bd791611899565b6000604051808303816000865af19150503d8060008114610c14576040519150601f19603f3d011682016040523d82523d6000602084013e610c19565b606091505b5091505080806020019051810190610c31919061181f565b9150505b919050565b6000805460015460025460405163ad97db1b60e01b81526001600160a01b0392831660048201529082166024820152604481018590526064810184905291169063ad97db1b906084015b6020604051808303816000875af1158015610ca3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc791906117e9565b92915050565b600080546001805460025460405163ad97db1b60e01b81526001600160a01b03928316600482015290821660248201526044810186905260648101929092529091169063ad97db1b90608401610c84565b6000805460405163127db4b760e21b81526001600160a01b03909116906349f6d2dc90610d5b908a908a908a908a908a9089908b906004016117ab565b6020604051808303816000875af1158015610d7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1291906117e9565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc93610de493908216929116908a908a908a9089908b906004016117ab565b6020604051808303816000875af1158015610e03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2791906117e9565b95945050505050565b600054604051630460488160e31b81523060048201526001600160a01b039091169063230244089083906024016000604051808303818588803b158015610e7657600080fd5b505af1158015610e8a573d6000803e3d6000fd5b505050505050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc93610ed893908216929116908b908b908b908b908b906004016117ab565b6020604051808303816000875af1158015610ef7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081791906117e9565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af1158015610f6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8e919061181f565b50505050565b6000805460405163127db4b760e21b81526001600160a01b03909116906349f6d2dc908490610fd3908c908c908c908c908c908a908d906004016117ab565b60206040518083038185885af1158015610ff1573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061101691906117e9565b98975050505050505050565b60008054604051632e1a7d4d60e01b8152600481018490526001600160a01b0390911690632e1a7d4d906024016020604051808303816000875af115801561106e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc7919061181f565b818314610b06577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583816040516110c891906118b5565b60405180910390a1610b0683836111e2565b60045460ff16156111205760405162461bcd60e51b815260206004820152600c60248201526b1c1bdcdd1a1bdbdad1985a5b60a21b604482015260640160405180910390fd5b600254600160b81b900460ff1615610789576000546001600160a01b0316636a4f76916111506020850185611802565b6111606040860160208701611802565b606080870135901c6bffffffffffffffffffffffff166bffffffffffffffffffffffff60608801351660c088013560481c62ffffff16600060608a013560e01c8a604001356040518963ffffffff1660e01b81526004016111c8989796959493929190611767565b600060405180830381600087803b158015610e7657600080fd5b808214610789577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516112569060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974604082015264657333325d60d81b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a1610789737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156114025760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526113a19291602001611868565b60408051601f19818403018152908290526113bb91611899565b6000604051808303816000865af19150503d80600081146113f8576040519150601f19603f3d011682016040523d82523d6000602084013e6113fd565b606091505b505050505b6004805462ff0000191662010000179055565b6001600160a01b038116811461142a57600080fd5b50565b60008060008060008060c0878903121561144657600080fd5b863561145181611415565b9550602087013561146181611415565b9450604087013561147181611415565b959894975094956060810135955060808101359460a0909101359350915050565b600080600080600060a086880312156114aa57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b60008060008060008060c087890312156114e657600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b6000610120828403121561152357600080fd5b50919050565b60008082840361016081121561153e57600080fd5b6115488585611510565b9250604061011f198201121561155d57600080fd5b50610120830190509250929050565b801515811461142a57600080fd5b60006020828403121561158c57600080fd5b81356115978161156c565b9392505050565b600061012082840312156115b157600080fd5b6115978383611510565b600080604083850312156115ce57600080fd5b82356115d981611415565b946020939093013593505050565b6000602082840312156115f957600080fd5b5035919050565b60008060008060008060c0878903121561161957600080fd5b863561162481611415565b9550602087013561163481611415565b95989597505050506040840135936060810135936080820135935060a0909101359150565b6000806000806080858703121561166f57600080fd5b5050823594602084013594506040840135936060013592509050565b6000806000606084860312156116a057600080fd5b83356116ab81611415565b925060208401356116bb81611415565b929592945050506040919091013590565b600080600080600080600060e0888a0312156116e757600080fd5b87356116f281611415565b9650602088013561170281611415565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b6001600160a01b03968716815294861660208601529290941660408401526060830152608082019290925260a081019190915260c00190565b6001600160a01b03988916815296909716602087015260408601949094526060850192909252608084015260a083015260c082015260e08101919091526101000190565b6001600160a01b03978816815295909616602086015260408501939093526060840191909152608083015260a082015260c081019190915260e00190565b6000602082840312156117fb57600080fd5b5051919050565b60006020828403121561181457600080fd5b813561159781611415565b60006020828403121561183157600080fd5b81516115978161156c565b60005b8381101561185757818101518382015260200161183f565b83811115610f8e5750506000910152565b6001600160e01b031983168152815160009061188b81600485016020870161183c565b919091016004019392505050565b600082516118ab81846020870161183c565b9190910192915050565b60408152600560408201526422b93937b960d91b606082015260806020820152600082518060808401526118f08160a085016020870161183c565b601f01601f19169190910160a0019291505056fea2646970667358221220363d825a62e7711a222b729367aea22c71c496027732c66afce572665829ed6264736f6c634300080e0033a2646970667358221220bc7d9d438cd5627bd00d066b2f3b1acd90318af6a7a9515bd2a5d7aaffa9dcd064736f6c634300080e003360806040526004805463ff00ff00191663010001001790553480156200002457600080fd5b5060405162001a4138038062001a418339810160408190526200004791620000a3565b600080546001600160a01b039485166001600160a01b031991821617909155600180549385169382169390931790925560028054919093169116179055620000f7565b6001600160a01b0381168114620000a057600080fd5b50565b600080600060608486031215620000b957600080fd5b8351620000c6816200008a565b6020850151909350620000d9816200008a565b6040850151909250620000ec816200008a565b809150509250925092565b61193a80620001076000396000f3fe6080604052600436106101bb5760003560e01c8063ba414fa6116100ec578063e923c6511161008a578063fa7626d411610064578063fa7626d414610550578063fc3816c81461056f578063fc8349f21461058f578063ffae399e146105af57600080fd5b8063e923c651146104ef578063f5537ede1461050f578063f8ccbf471461052f57600080fd5b8063ccfbf94d116100c6578063ccfbf94d1461046f578063cda30c3b1461048f578063d3845fea146104af578063e67ecda1146104cf57600080fd5b8063ba414fa61461040a578063c4c6c87d1461042f578063cafffca81461044f57600080fd5b80635a4924e8116101595780637ec95ff3116101335780637ec95ff31461037c5780638b0af9bb1461039c578063a3cfe14d146103b1578063a47395f6146103d157600080fd5b80635a4924e8146102f55780636c49c32c146103235780637a943a371461034357600080fd5b80633a768463116101955780633a768463146102295780633d3d130d1461026e57806353e575ac1461028e578063557f49c3146102bc57600080fd5b80630cc9d656146101c75780632644c05c146101e957806333ac5efd1461020957600080fd5b366101c257005b600080fd5b3480156101d357600080fd5b506101e76101e236600461142d565b6105e8565b005b3480156101f557600080fd5b506101e7610204366004611492565b610631565b34801561021557600080fd5b506101e76102243660046114cd565b6106af565b34801561023557600080fd5b50610251737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561027a57600080fd5b506101e7610289366004611529565b610731565b34801561029a57600080fd5b506102ae6102a9366004611492565b61078d565b604051908152602001610265565b3480156102c857600080fd5b506101e76102d736600461157a565b60028054911515600160a81b0260ff60a81b19909216919091179055565b34801561030157600080fd5b506101e761031036600461157a565b6004805460ff1916911515919091179055565b34801561032f57600080fd5b506102ae61033e36600461159e565b610821565b34801561034f57600080fd5b506101e761035e36600461157a565b60028054911515600160b81b0260ff60b81b19909216919091179055565b34801561038857600080fd5b506102ae6103973660046114cd565b610988565b3480156103a857600080fd5b506102ae610a1d565b3480156103bd57600080fd5b506101e76103cc3660046115bb565b610a8f565b3480156103dd57600080fd5b506101e76103ec36600461157a565b60028054911515600160a01b0260ff60a01b19909216919091179055565b34801561041657600080fd5b5061041f610b0b565b6040519015158152602001610265565b34801561043b57600080fd5b506102ae61044a3660046115e7565b610c3a565b34801561045b57600080fd5b506102ae61046a3660046115e7565b610ccd565b34801561047b57600080fd5b506102ae61048a366004611600565b610d1e565b34801561049b57600080fd5b506102ae6104aa366004611659565b610d9e565b3480156104bb57600080fd5b506101e76104ca3660046115e7565b610e30565b3480156104db57600080fd5b506101e76104ea3660046115e7565b600355565b3480156104fb57600080fd5b506102ae61050a366004611492565b610e92565b34801561051b57600080fd5b506101e761052a36600461168b565b610f1b565b34801561053b57600080fd5b5060045461041f906301000000900460ff1681565b34801561055c57600080fd5b5060045461041f90610100900460ff1681565b34801561057b57600080fd5b506102ae61058a3660046116cc565b610f94565b34801561059b57600080fd5b5061041f6105aa3660046115e7565b611022565b3480156105bb57600080fd5b506101e76105ca36600461157a565b60028054911515600160b01b0260ff60b01b19909216919091179055565b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c28686868686866040516106219695949392919061172e565b60405180910390a1505050505050565b60008054600154600254604051636a4f769160e01b81526001600160a01b0393841694636a4f7691946106769481169316918b918b918b91908b908b90600401611767565b600060405180830381600087803b15801561069057600080fd5b505af11580156106a4573d6000803e3d6000fd5b505050505050505050565b60008054600154600254604051636a4f769160e01b81526001600160a01b0393841694636a4f76919487946106f794908216939116918d918d918d918d908d90600401611767565b6000604051808303818588803b15801561071057600080fd5b505af1158015610724573d6000803e3d6000fd5b5050505050505050505050565b6003541561077f5761077f81602001356003546040518060400160405280601881526020017f496e636f727265637420737461747573206d6573736167650000000000000000815250611092565b61078982826110da565b5050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc9387936107d4939183169216908c908c908c908a908d906004016117ab565b60206040518083038185885af11580156107f2573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061081791906117e9565b9695505050505050565b600254600090600160b01b900460ff161561085c576040805160208082019092526f1d195cdd13585ad95c8bdc995d995c9d60821b81529081fd5b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c23361088b6020850185611802565b61089b6040860160208701611802565b856040013586608001358760a001356040516108bc9695949392919061172e565b60405180910390a1600254600160a01b900460ff161561095f576108e36020830183611802565b6000805460405163095ea7b360e01b81526001600160a01b0391821660048201526024810192909252919091169063095ea7b3906044016020604051808303816000875af1158015610939573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095d919061181f565b505b600254600160a81b900460ff161561098057506418589bdc9d60da1b919050565b506000919050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc9387936109cf939183169216908d908d908d908d908d906004016117ab565b60206040518083038185885af11580156109ed573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610a1291906117e9565b979650505050505050565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610a66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8a91906117e9565b905090565b60005460405163095ea7b360e01b81526001600160a01b039182166004820152602481018390529083169063095ea7b3906044016020604051808303816000875af1158015610ae2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b06919061181f565b505050565b60045460009062010000900460ff1615610b2f575060045462010000900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610c355760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610bbd917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611868565b60408051601f1981840301815290829052610bd791611899565b6000604051808303816000865af19150503d8060008114610c14576040519150601f19603f3d011682016040523d82523d6000602084013e610c19565b606091505b5091505080806020019051810190610c31919061181f565b9150505b919050565b6000805460015460025460405163ad97db1b60e01b81526001600160a01b0392831660048201529082166024820152604481018590526064810184905291169063ad97db1b906084015b6020604051808303816000875af1158015610ca3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc791906117e9565b92915050565b600080546001805460025460405163ad97db1b60e01b81526001600160a01b03928316600482015290821660248201526044810186905260648101929092529091169063ad97db1b90608401610c84565b6000805460405163127db4b760e21b81526001600160a01b03909116906349f6d2dc90610d5b908a908a908a908a908a9089908b906004016117ab565b6020604051808303816000875af1158015610d7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1291906117e9565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc93610de493908216929116908a908a908a9089908b906004016117ab565b6020604051808303816000875af1158015610e03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2791906117e9565b95945050505050565b600054604051630460488160e31b81523060048201526001600160a01b039091169063230244089083906024016000604051808303818588803b158015610e7657600080fd5b505af1158015610e8a573d6000803e3d6000fd5b505050505050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc93610ed893908216929116908b908b908b908b908b906004016117ab565b6020604051808303816000875af1158015610ef7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081791906117e9565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af1158015610f6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8e919061181f565b50505050565b6000805460405163127db4b760e21b81526001600160a01b03909116906349f6d2dc908490610fd3908c908c908c908c908c908a908d906004016117ab565b60206040518083038185885af1158015610ff1573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061101691906117e9565b98975050505050505050565b60008054604051632e1a7d4d60e01b8152600481018490526001600160a01b0390911690632e1a7d4d906024016020604051808303816000875af115801561106e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc7919061181f565b818314610b06577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583816040516110c891906118b5565b60405180910390a1610b0683836111e2565b60045460ff16156111205760405162461bcd60e51b815260206004820152600c60248201526b1c1bdcdd1a1bdbdad1985a5b60a21b604482015260640160405180910390fd5b600254600160b81b900460ff1615610789576000546001600160a01b0316636a4f76916111506020850185611802565b6111606040860160208701611802565b606080870135901c6bffffffffffffffffffffffff166bffffffffffffffffffffffff60608801351660c088013560481c62ffffff16600060608a013560e01c8a604001356040518963ffffffff1660e01b81526004016111c8989796959493929190611767565b600060405180830381600087803b158015610e7657600080fd5b808214610789577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516112569060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974604082015264657333325d60d81b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a1610789737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156114025760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526113a19291602001611868565b60408051601f19818403018152908290526113bb91611899565b6000604051808303816000865af19150503d80600081146113f8576040519150601f19603f3d011682016040523d82523d6000602084013e6113fd565b606091505b505050505b6004805462ff0000191662010000179055565b6001600160a01b038116811461142a57600080fd5b50565b60008060008060008060c0878903121561144657600080fd5b863561145181611415565b9550602087013561146181611415565b9450604087013561147181611415565b959894975094956060810135955060808101359460a0909101359350915050565b600080600080600060a086880312156114aa57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b60008060008060008060c087890312156114e657600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b6000610120828403121561152357600080fd5b50919050565b60008082840361016081121561153e57600080fd5b6115488585611510565b9250604061011f198201121561155d57600080fd5b50610120830190509250929050565b801515811461142a57600080fd5b60006020828403121561158c57600080fd5b81356115978161156c565b9392505050565b600061012082840312156115b157600080fd5b6115978383611510565b600080604083850312156115ce57600080fd5b82356115d981611415565b946020939093013593505050565b6000602082840312156115f957600080fd5b5035919050565b60008060008060008060c0878903121561161957600080fd5b863561162481611415565b9550602087013561163481611415565b95989597505050506040840135936060810135936080820135935060a0909101359150565b6000806000806080858703121561166f57600080fd5b5050823594602084013594506040840135936060013592509050565b6000806000606084860312156116a057600080fd5b83356116ab81611415565b925060208401356116bb81611415565b929592945050506040919091013590565b600080600080600080600060e0888a0312156116e757600080fd5b87356116f281611415565b9650602088013561170281611415565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b6001600160a01b03968716815294861660208601529290941660408401526060830152608082019290925260a081019190915260c00190565b6001600160a01b03988916815296909716602087015260408601949094526060850192909252608084015260a083015260c082015260e08101919091526101000190565b6001600160a01b03978816815295909616602086015260408501939093526060840191909152608083015260a082015260c081019190915260e00190565b6000602082840312156117fb57600080fd5b5051919050565b60006020828403121561181457600080fd5b813561159781611415565b60006020828403121561183157600080fd5b81516115978161156c565b60005b8381101561185757818101518382015260200161183f565b83811115610f8e5750506000910152565b6001600160e01b031983168152815160009061188b81600485016020870161183c565b919091016004019392505050565b600082516118ab81846020870161183c565b9190910192915050565b60408152600560408201526422b93937b960d91b606082015260806020820152600082518060808401526118f08160a085016020870161183c565b601f01601f19169190910160a0019291505056fea2646970667358221220363d825a62e7711a222b729367aea22c71c496027732c66afce572665829ed6264736f6c634300080e00336101406040523480156200001257600080fd5b5060405162001bb838038062001bb88339810160408190526200003591620002c1565b82828180604051806040016040528060018152602001603160f81b815250848481600390805190602001906200006d9291906200014e565b508051620000839060049060208401906200014e565b5050825160208085019190912083518483012060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81880181905281830187905260608201869052608082019490945230818401528151808203909301835260c0019052805194019390932091935091906080523060c05261012052505050506001600160a01b03969096166000908152600860205260409020805460ff19166001179055505060ff1660095550620003a1915050565b8280546200015c9062000365565b90600052602060002090601f016020900481019282620001805760008555620001cb565b82601f106200019b57805160ff1916838001178555620001cb565b82800160010185558215620001cb579182015b82811115620001cb578251825591602001919060010190620001ae565b50620001d9929150620001dd565b5090565b5b80821115620001d95760008155600101620001de565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200021c57600080fd5b81516001600160401b0380821115620002395762000239620001f4565b604051601f8301601f19908116603f01168101908282118183101715620002645762000264620001f4565b816040528381526020925086838588010111156200028157600080fd5b600091505b83821015620002a5578582018301518183018401529082019062000286565b83821115620002b75760008385830101525b9695505050505050565b60008060008060808587031215620002d857600080fd5b84516001600160a01b0381168114620002f057600080fd5b60208601519094506001600160401b03808211156200030e57600080fd5b6200031c888389016200020a565b945060408701519150808211156200033357600080fd5b5062000342878288016200020a565b925050606085015160ff811681146200035a57600080fd5b939692955090935050565b600181811c908216806200037a57607f821691505b6020821081036200039b57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e05161010051610120516117c7620003f160003960006109290152600061097801526000610953015260006108ac015260006108d60152600061090001526117c76000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806340c10f19116100c357806395d89b411161007c57806395d89b41146102c45780639dc29fac146102cc578063a457c2d7146102df578063a9059cbb146102f2578063d505accf14610305578063dd62ed3e1461031857600080fd5b806340c10f1914610236578063704802751461024957806370a082311461025c5780637a6d69b4146102855780637ecebe00146102a85780638ea2da7d146102bb57600080fd5b80631e7be210116101155780631e7be210146101cd57806323b872dd146101e057806325db769e146101f3578063313ce567146102065780633644e5151461021b578063395093511461022357600080fd5b806306fdde0314610152578063095ea7b31461017057806316c02129146101935780631785f53c146101a857806318160ddd146101bb575b600080fd5b61015a61032b565b604051610167919061140b565b60405180910390f35b61018361017e36600461147c565b6103bd565b6040519015158152602001610167565b6101a66101a13660046114a6565b610444565b005b6101a66101b63660046114a6565b610477565b6002545b604051908152602001610167565b6101a66101db3660046114a6565b6104a0565b6101836101ee3660046114c8565b6104cd565b6101bf610201366004611504565b610589565b60095460405160ff9091168152602001610167565b6101bf6105af565b61018361023136600461147c565b6105be565b6101a661024436600461147c565b6105ea565b6101a66102573660046114a6565b610600565b6101bf61026a3660046114a6565b6001600160a01b031660009081526020819052604090205490565b6101836102933660046114a6565b60076020526000908152604090205460ff1681565b6101bf6102b63660046114a6565b61062c565b6101bf60095481565b61015a61064a565b6101a66102da36600461147c565b610659565b6101836102ed36600461147c565b61066b565b61018361030036600461147c565b6106f1565b6101a661031336600461151d565b610766565b6101bf610326366004611590565b6107f6565b60606003805461033a906115c3565b80601f0160208091040260200160405190810160405280929190818152602001828054610366906115c3565b80156103b35780601f10610388576101008083540402835291602001916103b3565b820191906000526020600020905b81548152906001019060200180831161039657829003601f168201915b5050505050905090565b6001600160a01b038216600090815260076020526040812054839060ff16156104015760405162461bcd60e51b81526004016103f8906115f7565b60405180910390fd5b3360008181526007602052604090205460ff16156104315760405162461bcd60e51b81526004016103f8906115f7565b61043b8585610821565b95945050505050565b61044c61082f565b610474816001600160a01b03166000908152600760205260409020805460ff19166001179055565b50565b61047f61082f565b6001600160a01b03166000908152600860205260409020805460ff19169055565b6104a861082f565b610474816001600160a01b03166000908152600760205260409020805460ff19169055565b6001600160a01b038316600090815260076020526040812054849060ff16156105085760405162461bcd60e51b81526004016103f8906115f7565b6001600160a01b038416600090815260076020526040902054849060ff16156105435760405162461bcd60e51b81526004016103f8906115f7565b3360008181526007602052604090205460ff16156105735760405162461bcd60e51b81526004016103f8906115f7565b61057e878787610886565b979650505050505050565b600061059460095490565b61059f90600a61171e565b6105a9908361172d565b92915050565b60006105b961089f565b905090565b6000336105e08185856105d183836107f6565b6105db919061174c565b6109c6565b5060019392505050565b6105f261082f565b6105fc8282610aeb565b5050565b61060861082f565b6001600160a01b03166000908152600860205260409020805460ff19166001179055565b6001600160a01b0381166000908152600560205260408120546105a9565b60606004805461033a906115c3565b61066161082f565b6105fc8282610bca565b6000338161067982866107f6565b9050838110156106d95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103f8565b6106e682868684036109c6565b506001949350505050565b6001600160a01b038216600090815260076020526040812054839060ff161561072c5760405162461bcd60e51b81526004016103f8906115f7565b3360008181526007602052604090205460ff161561075c5760405162461bcd60e51b81526004016103f8906115f7565b61043b8585610d10565b6001600160a01b038716600090815260076020526040902054879060ff16156107a15760405162461bcd60e51b81526004016103f8906115f7565b6001600160a01b038716600090815260076020526040902054879060ff16156107dc5760405162461bcd60e51b81526004016103f8906115f7565b6107eb89898989898989610d1e565b505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6000336105e08185856109c6565b3360009081526008602052604090205460ff166108845760405162461bcd60e51b815260206004820152601360248201527254657374546f6b656e2f61646d696e4f6e6c7960681b60448201526064016103f8565b565b600033610894858285610e82565b6106e6858585610efc565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156108f857507f000000000000000000000000000000000000000000000000000000000000000046145b1561092257507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6001600160a01b038316610a285760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103f8565b6001600160a01b038216610a895760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103f8565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038216610b415760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103f8565b8060026000828254610b53919061174c565b90915550506001600160a01b03821660009081526020819052604081208054839290610b8090849061174c565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610c2a5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103f8565b6001600160a01b03821660009081526020819052604090205481811015610c9e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103f8565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610ccd908490611764565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610ade565b6000336105e0818585610efc565b83421115610d6e5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016103f8565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610d9d8c6110ca565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610df8826110f2565b90506000610e0882878787611140565b9050896001600160a01b0316816001600160a01b031614610e6b5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016103f8565b610e768a8a8a6109c6565b50505050505050505050565b6000610e8e84846107f6565b90506000198114610ef65781811015610ee95760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103f8565b610ef684848484036109c6565b50505050565b6001600160a01b038316610f605760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103f8565b6001600160a01b038216610fc25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103f8565b6001600160a01b0383166000908152602081905260409020548181101561103a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103f8565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061107190849061174c565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110bd91815260200190565b60405180910390a3610ef6565b6001600160a01b03811660009081526005602052604090208054600181018255905b50919050565b60006105a96110ff61089f565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061115187878787611168565b9150915061115e81611255565b5095945050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561119f575060009050600361124c565b8460ff16601b141580156111b757508460ff16601c14155b156111c8575060009050600461124c565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561121c573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166112455760006001925092505061124c565b9150600090505b94509492505050565b60008160048111156112695761126961177b565b036112715750565b60018160048111156112855761128561177b565b036112d25760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016103f8565b60028160048111156112e6576112e661177b565b036113335760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016103f8565b60038160048111156113475761134761177b565b0361139f5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016103f8565b60048160048111156113b3576113b361177b565b036104745760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016103f8565b600060208083528351808285015260005b818110156114385785810183015185820160400152820161141c565b8181111561144a576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461147757600080fd5b919050565b6000806040838503121561148f57600080fd5b61149883611460565b946020939093013593505050565b6000602082840312156114b857600080fd5b6114c182611460565b9392505050565b6000806000606084860312156114dd57600080fd5b6114e684611460565b92506114f460208501611460565b9150604084013590509250925092565b60006020828403121561151657600080fd5b5035919050565b600080600080600080600060e0888a03121561153857600080fd5b61154188611460565b965061154f60208901611460565b95506040880135945060608801359350608088013560ff8116811461157357600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156115a357600080fd5b6115ac83611460565b91506115ba60208401611460565b90509250929050565b600181811c908216806115d757607f821691505b6020821081036110ec57634e487b7160e01b600052602260045260246000fd5b602080825260139082015272115490cc8c10930bd09b1858dadb1a5cdd1959606a1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561167557816000190482111561165b5761165b611624565b8085161561166857918102915b93841c939080029061163f565b509250929050565b60008261168c575060016105a9565b81611699575060006105a9565b81600181146116af57600281146116b9576116d5565b60019150506105a9565b60ff8411156116ca576116ca611624565b50506001821b6105a9565b5060208310610133831016604e8410600b84101617156116f8575081810a6105a9565b611702838361163a565b806000190482111561171657611716611624565b029392505050565b60006114c160ff84168361167d565b600081600019048311821515161561174757611747611624565b500290565b6000821982111561175f5761175f611624565b500190565b60008282101561177657611776611624565b500390565b634e487b7160e01b600052602160045260246000fdfea26469706673582212204d0d7db92a47baa4b3863a7c3d90bb9ff2f03be8b62d59c0eeec4def4486554564736f6c634300080e003354686572652073686f756c64206265206e6f206d6f72652070656e64696e6720626173650000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358354616b6572206c69717569646974792073686f756c642062652070656e64696e676761766520776173206e6f7420616464656420746f2070656e64696e67206261736520706f6f6c50656e64696e672071756f746520706f6f6c2073686f756c6420626520656d707479526573696475616c20776173206e6f7420616464656420746f2070656e64696e672071756f746520706f6f6c885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d50656e64696e67206261736520706f6f6c2073686f756c6420626520656d70747942657374206f66666572206f6e20574554482c55534443206f66666572206c6973742073686f756c64206265202338a2646970667358221220991880fcfe9c7d89d6fe8121530775dae3226e395f2a5e67fc27d0e861664e5864736f6c634300080e0033",
    "sourceMap": "229:13360:116:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7192:411:99;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;581:32:125;;;563:51;;551:2;536:18;7192:411:99;;;;;;;;650:1027:116;;;:::i;:::-;;7867:243:99;;;;;;:::i;:::-;;:::i;5270:1622:116:-;;;:::i;780:82:100:-;847:10;780:82;;4783:483:116;;;:::i;9115:268:99:-;;;;;;:::i;:::-;;:::i;6896:2376:116:-;;;:::i;303:38:1:-;;-1:-1:-1;;;;;;;;;;;303:38:1;;11043:611:116;;;:::i;11658:444::-;;;:::i;746:282:101:-;;;;;;:::i;:::-;;:::i;9928:132:99:-;;;;;;:::i;:::-;;:::i;:::-;;;5476:25:125;;;5464:2;5449:18;9928:132:99;5330:177:125;7053:97:99;;;:::i;1741:266:116:-;;;:::i;9276:1763::-;;;:::i;3054:1255::-;;;:::i;461:281:101:-;;;;;;:::i;:::-;;:::i;1610:472:0:-;;;:::i;:::-;;;6572:14:125;;6565:22;6547:41;;6535:2;6520:18;1610:472:0;6407:187:125;8937:174:99;;;;;;:::i;:::-;;:::i;8665:268::-;;;;;;:::i;:::-;;:::i;4313:466:116:-;;;:::i;2011:1039::-;;;:::i;9600:169:99:-;;;;;;:::i;:::-;;:::i;7640:173::-;;;;;;:::i;:::-;;:::i;163:28:1:-;;;;;;;;;;;;1368:26:0;;;;;;;;;7192:411:99;7246:21;7279:8;7275:272;;;7349:4;7374:2;7394:9;7304:108;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;7297:115;;7275:272;;;7477:4;7502:2;7522:9;7440:100;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;7433:107;;7275:272;-1:-1:-1;;;;;;;;;;;7552:8:99;7563:4;7552:29;;;-1:-1:-1;;;;;;7552:29:99;;;;;;;-1:-1:-1;;;;;9033:32:125;;;7552:29:99;;;9015:51:125;9082:18;;;9075:30;9141:1;9121:18;;;9114:29;-1:-1:-1;;;9159:18:125;;;9152:38;9207:19;;7552:29:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7192:411;;;:::o;650:1027:116:-;689:28;;;;;;;;;;;;;-1:-1:-1;;;689:28:116;;;;;;;;;:19;;:28;:::i;:::-;-1:-1:-1;723:29:116;;;;;;;;;;;;;-1:-1:-1;;;723:29:116;;;;;;;;;:20;;:29;:::i;:::-;-1:-1:-1;758:22:116;:26;;-1:-1:-1;;758:26:116;783:1;758:26;;;811:2;790:18;:23;876:13;:11;:13::i;:::-;932:4;;925;:11;;-1:-1:-1;;;;;932:4:116;;;-1:-1:-1;;;;;;925:11:116;;;;;;;949:5;;942:4;:12;;949:5;;;;942:12;;;;;969:21;;;;;;;;;;;;-1:-1:-1;;;969:21:116;;;;;;:12;:21::i;:::-;961:5;:29;;-1:-1:-1;;;;;;961:29:116;-1:-1:-1;;;;;961:29:116;;;;;;;;;996:24;;-1:-1:-1;;;996:24:116;;-1:-1:-1;;;;;;;;;;;237:61:1;996:7:116;;:24;;961:29;1011:8;;996:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1057:21;;;;;;;;;;;;;;-1:-1:-1;;;1057:21:116;;;:12;:21::i;:::-;1049:5;:29;;-1:-1:-1;;;;;;1049:29:116;-1:-1:-1;;;;;1049:29:116;;;;;;;;;1091:4;;1084:36;;1091:4;;1105:14;1091:4;1116:2;1105:4;:14::i;:::-;1084:4;:36::i;:::-;1133:4;;1140:5;;1126:41;;-1:-1:-1;;;;;1133:4:116;;;;1140:5;1147:19;1133:4;1158:7;1147:4;:19::i;1126:41::-;1245:5;;1231:20;;-1:-1:-1;;;1231:20:116;;-1:-1:-1;;;;;1245:5:116;;;1231:20;;;563:51:125;-1:-1:-1;;;;;;;;;;;237:61:1;1231:13:116;;536:18:125;;1231:20:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1257:4:116;;1272:3;;1257:36;;-1:-1:-1;;;1257:36:116;;-1:-1:-1;;;;;1257:4:116;;;;-1:-1:-1;1257:12:116;;-1:-1:-1;1257:36:116;;1272:3;;;;-1:-1:-1;;1278:14:116;1257:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1299:4:116;;1314:3;;1299:36;;-1:-1:-1;;;1299:36:116;;-1:-1:-1;;;;;1299:4:116;;;;:12;;:36;;1314:3;;;-1:-1:-1;;1320:14:116;1299:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1341:14:116;;;-1:-1:-1;;;1341:14:116;;;;-1:-1:-1;;;;;;;;;;;237:61:1;1341:12:116;;:14;;;;;261:34:1;;1341:14:116;;;;;;;261:34:1;237:61;1341:14:116;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1376:5:116;;1362:20;;-1:-1:-1;;;1362:20:116;;-1:-1:-1;;;;;1376:5:116;;;1362:20;;;563:51:125;-1:-1:-1;;;;;;;;;;;237:61:1;-1:-1:-1;1362:13:116;;-1:-1:-1;536:18:125;;1362:20:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1429:3:116;;-1:-1:-1;;;;;1429:3:116;;-1:-1:-1;1427:6:116;;-1:-1:-1;10435:96:99;1427:6:116;1486:4;;1505;;-1:-1:-1;;;;;1486:4:116;;;;1505;1525:17;1486:4;1536:2;1540:1;1525:4;:17::i;:::-;1564:4;;1559:16;;-1:-1:-1;;;;;1564:4:116;1570;1559;:16::i;:::-;1640:5;;1394:258;;445:2;;509:10;;-1:-1:-1;;;;;1640:5:116;;;;1394:258;;;:::i;:::-;-1:-1:-1;;;;;10776:15:125;;;10758:34;;10828:15;;;10823:2;10808:18;;10801:43;10880:15;;;10875:2;10860:18;;10853:43;10927:2;10912:18;;10905:34;;;;10970:3;10955:19;;10948:35;;;;10738:3;10999:19;;10992:35;11058:3;11043:19;;11036:35;11108:15;;;11102:3;11087:19;;11080:44;10707:3;10692:19;1394:258:116;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1388:3:116;:264;;-1:-1:-1;;;;;;1388:264:116;-1:-1:-1;;;;;1388:264:116;;;;;;;;;;1658:14;;;-1:-1:-1;;;1658:14:116;;;;-1:-1:-1;;;;;;;;;;;237:61:1;1658:12:116;;:14;;;;;-1:-1:-1;;1658:14:116;;;;;;;-1:-1:-1;237:61:1;1658:14:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;650:1027::o;7867:243:99:-;7978:21;8014:23;8028:8;8014:13;:23::i;:::-;8007:30;;8043:62;8063:12;8086:11;8100:4;8043:11;:62::i;:::-;7867:243;;;;;:::o;5270:1622:116:-;5580:3;;5597:4;;5606;;-1:-1:-1;;;;;5580:3:116;;;;:14;;5597:4;;;5606;5613:13;5597:4;5618;5613;:13::i;:::-;5580:47;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5643:5:116;;5634:15;;-1:-1:-1;;;5634:15:116;;-1:-1:-1;;;;;5643:5:116;;;5634:15;;;563:51:125;-1:-1:-1;;;;;;;;;;;237:61:1;-1:-1:-1;5634:8:116;;-1:-1:-1;536:18:125;;5634:15:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5694:3:116;;5719:4;;5734;;5656:8;;-1:-1:-1;5656:8:116;;-1:-1:-1;5656:8:116;;-1:-1:-1;;;;;5694:3:116;;;;:15;;5719:4;;;;5734;5747:16;5719:4;5752;5761:1;5747:4;:16::i;:::-;5776:4;;5771:13;;-1:-1:-1;;;;;5776:4:116;;5771;:13::i;:::-;5792:4;5694:108;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5824:3:116;;5835:4;;5844;;5824:26;;;-1:-1:-1;;;5824:26:116;;-1:-1:-1;;;;;5835:4:116;;;5824:26;;;12682:34:125;5844:4:116;;;12732:18:125;;;12725:43;5824:26:116;5655:147;;-1:-1:-1;5655:147:116;;-1:-1:-1;5655:147:116;;-1:-1:-1;5809:12:116;;5824:3;;;:8;;12617:18:125;;;;;5824:26:116;;;;;;;;;:3;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5879:3;;5892:4;;5901;;5879:37;;-1:-1:-1;;;5879:37:116;;5809:41;;-1:-1:-1;5856:20:116;;-1:-1:-1;;;;;5879:3:116;;;;:10;;:37;;5892:4;;;;5901;;;5809:41;;5879:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5856:60;-1:-1:-1;5922:14:116;-1:-1:-1;;;;;4419:56:34;;5973:5:116;;5964:15;;-1:-1:-1;;;5964:15:116;;-1:-1:-1;;;;;5973:5:116;;;5964:15;;;563:51:125;5922:35:116;;-1:-1:-1;;;;;;;;;;;;237:61:1;5964:8:116;;536:18:125;;5964:15:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6004:3:116;;:13;;;-1:-1:-1;;;6004:13:116;;;;5985:16;;-1:-1:-1;;;;;;6004:3:116;;;;-1:-1:-1;6004:11:116;;:13;;;;;;;;;;;:3;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6018:1;6004:16;;;;5985:35;;6027:64;6036:11;6049:4;6027:64;;;;;;;;;;;;;;;;;:8;:64::i;:::-;6107:5;;6098:15;;-1:-1:-1;;;6098:15:116;;-1:-1:-1;;;;;6107:5:116;;;6098:15;;;563:51:125;-1:-1:-1;;;;;;;;;;;237:61:1;6098:8:116;;536:18:125;;6098:15:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6143:3:116;;6168:4;;6183;;-1:-1:-1;;;;;6143:3:116;;;;-1:-1:-1;6143:15:116;;-1:-1:-1;6168:4:116;;;;6183;6196:16;6168:4;6201;6210:1;6196:4;:16::i;:::-;6225:4;;6220:13;;-1:-1:-1;;;;;6225:4:116;;6220;:13::i;:::-;6241:4;6143:108;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6267:5:116;;6258:15;;-1:-1:-1;;;6258:15:116;;-1:-1:-1;;;;;6267:5:116;;;6258:15;;;563:51:125;6119:132:116;;-1:-1:-1;6119:132:116;;-1:-1:-1;6119:132:116;-1:-1:-1;;;;;;;;;;;;237:61:1;6258:8:116;;536:18:125;;6258:15:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6299:3:116;;:13;;;-1:-1:-1;;;6299:13:116;;;;6279:17;;-1:-1:-1;;;;;;6299:3:116;;;;-1:-1:-1;6299:11:116;;:13;;;;;;;;;;;:3;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:16;;-1:-1:-1;6322:66:116;6299:16;6345:18;6359:4;6345:11;:18;:::i;:::-;6322:66;;;;;;;;;;;;;-1:-1:-1;;;6322:66:116;;;:8;:66::i;:::-;6395:3;;6412:4;;6421;;6395:37;;-1:-1:-1;;;6395:37:116;;-1:-1:-1;;;;;6395:3:116;;;;:14;;:37;;6412:4;;;;6421;;;6428:3;;6395:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6448:5:116;;6439:15;;-1:-1:-1;;;6439:15:116;;-1:-1:-1;;;;;6448:5:116;;;6439:15;;;563:51:125;-1:-1:-1;;;;;;;;;;;237:61:1;-1:-1:-1;6439:8:116;;-1:-1:-1;536:18:125;;6439:15:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6460:3:116;;6478:4;;6487;;-1:-1:-1;;;;;6460:3:116;;;;-1:-1:-1;6460:15:116;;-1:-1:-1;6478:4:116;;;;6487;6494:16;6478:4;6499;6508:1;6494:4;:16::i;:::-;6517:4;;6512:13;;-1:-1:-1;;;;;6517:4:116;;6512;:13::i;:::-;6527:4;6460:72;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;6548:5:116;;6539:15;;-1:-1:-1;;;6539:15:116;;-1:-1:-1;;;;;6548:5:116;;;6539:15;;;563:51:125;-1:-1:-1;;;;;;;;;;;237:61:1;-1:-1:-1;6539:8:116;;-1:-1:-1;536:18:125;;6539:15:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6581:3:116;;:13;;;-1:-1:-1;;;6581:13:116;;;;6560:18;;-1:-1:-1;;;;;;6581:3:116;;;;-1:-1:-1;6581:11:116;;:13;;;;;;;;;;;:3;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6595:1;6581:16;;;;6560:37;;6604:66;6613:13;6628:1;6604:66;;;;;;;;;;;;;;;;;:8;:66::i;:::-;6687:3;;6698:4;;-1:-1:-1;;;;;6687:3:116;;;;:8;;6698:4;6707;;-1:-1:-1;;;;;6707:4:116;6687:26;;-1:-1:-1;;;;;;6687:26:116;;;;;;;-1:-1:-1;;;;;12700:15:125;;;6687:26:116;;;12682:34:125;12752:15;;12732:18;;;12725:43;12617:18;;6687:26:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6732:3;;6745:4;;6754;;6732:37;;-1:-1:-1;;;6732:37:116;;6677:36;;-1:-1:-1;;;;;;6732:3:116;;;;:10;;:37;;6745:4;;;6754;;6677:36;;6732:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6719:50;-1:-1:-1;6776:111:116;-1:-1:-1;;;;;4419:56:34;;6845:4:116;6818:24;6830:12;6818:9;:24;:::i;:::-;:31;;;;:::i;:::-;6776:111;;;;;;;;;;;;;-1:-1:-1;;;6776:111:116;;;:8;:111::i;:::-;5306:1586;;;;;;;;;5270:1622::o;4783:483::-;4827:5;;1782:16:100;;-1:-1:-1;;;1782:16:100;;-1:-1:-1;;;;;4827:5:116;;;1782:16:100;;;563:51:125;;;4827:5:116;-1:-1:-1;;;;;;;;;;;237:61:1;1782:13:100;;536:18:125;;1782:16:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4840:3:116::1;::::0;4905:63:::1;::::0;;::::1;::::0;::::1;::::0;;;4919:4:::1;::::0;-1:-1:-1;;;;;4840:3:116;;::::1;::::0;-1:-1:-1;4840:13:116::1;::::0;-1:-1:-1;4865:1:116::1;::::0;4840:3;;4905:63:::1;::::0;;;;;4914:16:::1;::::0;4919:4:::1;4865:1:::0;4840:3;4914:4:::1;:16::i;:::-;4905:63:::0;;4937:4:::1;::::0;4905:63:::1;::::0;;::::1;::::0;4932:16:::1;::::0;-1:-1:-1;;;;;4937:4:116::1;4943:1;4937:4:::0;4932::::1;:16::i;:::-;4905:63:::0;;4955:4:::1;::::0;4905:63:::1;::::0;;::::1;::::0;4950:16:::1;::::0;-1:-1:-1;;;;;4955:4:116::1;4961:1;4955:4:::0;4950::::1;:16::i;:::-;4905:63:::0;;:7:::1;:63::i;:::-;4840:135;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4982:16;5001:17;5012:5;5001:10;:17::i;:::-;5042:4;::::0;4982:36;;-1:-1:-1;5025:117:116::1;::::0;-1:-1:-1;;;;;5042:4:116::1;5057;::::0;-1:-1:-1;;;;;5057:4:116::1;5070;:9;;;5087:49;;;;;;;;;5100:1;5087:49;;;;5104:1;5087:49;;;;5107:1;5087:49;;;;-1:-1:-1::0;;5087:49:116::1;;;;-1:-1:-1::0;;5087:49:116::1;;;;5118:1;5087:49;;;;5121:1;5087:49;;;;-1:-1:-1::0;;5087:49:116::1;;;;-1:-1:-1::0;;5087:49:116::1;;;;-1:-1:-1::0;;5087:49:116::1;;::::0;:7:::1;:49::i;:::-;5025:7;:117::i;:::-;5166:4;::::0;5149:112:::1;::::0;-1:-1:-1;;;;;5166:4:116::1;5164:7;5181:4;::::0;-1:-1:-1;;;;;5181:4:116::1;5194;:9;;;5211:44;;;;;;;;;5224:1;5211:44;;;;5228:1;5211:44;;;;5231:1;5211:44;;;;5234:1;5211:44;;;;5237:1;5211:44;;;;5240:1;5211:44;;;;5243:1;5211:44;;;;5246:1;5211:44;;;;5249:1;5211:44;;;;5252:1;5211:44;;::::0;:7:::1;:44::i;5149:112::-;-1:-1:-1::0;1811:14:100;;;-1:-1:-1;;;1811:14:100;;;;-1:-1:-1;;;;;;;;;;;237:61:1;1811:12:100;;:14;;;;;261:34:1;;1811:14:100;;;;;;;261:34:1;237:61;1811:14:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4783:483:116;:::o;9115:268:99:-;9215:9;9232:12;9261:3;;;;;;;;;-1:-1:-1;;;;;9261:3:99;9273:4;9287:3;9247:45;;;;;:::i;:::-;-1:-1:-1;;;;;15777:15:125;;;15759:34;;15829:15;;;15824:2;15809:18;;15802:43;15881:15;;;15876:2;15861:18;;15854:43;15709:2;15694:18;9247:45:99;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9298:31:99;;-1:-1:-1;;;9298:31:99;;9232:60;;-1:-1:-1;;;;;;;;;;;;237:61:1;9298:7:99;;:31;;9232:60;;9319:9;;9298:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9335:28:99;;-1:-1:-1;;;9335:28:99;;-1:-1:-1;;;;;;;;;;;237:61:1;-1:-1:-1;9335:8:99;;-1:-1:-1;9335:28:99;;9352:2;;9357:5;;9335:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9376:2:99;;9115:268;-1:-1:-1;;;;;;;9115:268:99:o;6896:2376:116:-;6941:3;;6958:4;;6967;;-1:-1:-1;;;;;6941:3:116;;;;:14;;6958:4;;;6967;6974:13;6958:4;6979;6974;:13::i;:::-;6941:47;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6994:3:116;;7011:4;;7020;;-1:-1:-1;;;;;6994:3:116;;;;-1:-1:-1;6994:14:116;;-1:-1:-1;7011:4:116;;;;7020;7027:13;7011:4;7032;7027;:13::i;:::-;6994:47;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7118:3:116;;7129:4;;7103:12;;-1:-1:-1;;;;;;7118:3:116;;;;-1:-1:-1;7118:8:116;;7129:4;7138;;-1:-1:-1;;;;;7138:4:116;7118:26;;-1:-1:-1;;;;;;7118:26:116;;;;;;;-1:-1:-1;;;;;12700:15:125;;;7118:26:116;;;12682:34:125;12752:15;;12732:18;;;12725:43;12617:18;;7118:26:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7173:3;;7186:4;;7195;;7173:37;;-1:-1:-1;;;7173:37:116;;7103:41;;-1:-1:-1;7150:20:116;;-1:-1:-1;;;;;7173:3:116;;;;:10;;:37;;7186:4;;;;7195;;;7103:41;;7173:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7226:5;;7217:15;;-1:-1:-1;;;7217:15:116;;-1:-1:-1;;;;;7226:5:116;;;7217:15;;;563:51:125;7150:60:116;;-1:-1:-1;;;;;;;;;;;;237:61:1;7217:8:116;;536:18:125;;7217:15:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7277:3:116;;7302:4;;7317;;7239:8;;-1:-1:-1;7239:8:116;;-1:-1:-1;7239:8:116;;-1:-1:-1;;;;;7277:3:116;;;;:15;;7302:4;;;;7317;7330:15;7302:4;7341:3;7330:4;:15::i;:::-;7358:4;;7353:13;;-1:-1:-1;;;;;7358:4:116;;7353;:13::i;:::-;7374:4;7277:107;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7676:5:116;;7662:20;;-1:-1:-1;;;7662:20:116;;-1:-1:-1;;;;;7676:5:116;;;7662:20;;;563:51:125;7238:146:116;;-1:-1:-1;7238:146:116;;-1:-1:-1;7238:146:116;-1:-1:-1;;;;;;;;;;;;237:61:1;7662:13:116;;536:18:125;;7662:20:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7707:3:116;;:13;;;-1:-1:-1;;;7707:13:116;;;;7688:16;;-1:-1:-1;;;;;;7707:3:116;;;;-1:-1:-1;7707:11:116;;:13;;;;;;;;;;;:3;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:16;7749:3;;:13;;;-1:-1:-1;;;7749:13:116;;;;7707:16;;-1:-1:-1;7721:1:116;;-1:-1:-1;;;;;7749:3:116;;;;:11;;:13;;;;;;;;;;;;;:3;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:16;;;7771:14;;;-1:-1:-1;;;7771:14:116;;;;7749:16;;-1:-1:-1;;;;;;;;;;;;237:61:1;7771:12:116;;:14;;;;;261:34:1;;7771:14:116;;;;;;;;261:34:1;237:61;7771:14:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7792:70;7801:4;7807:11;7792:70;;;;;;;;;;;;;;;;;:8;:70::i;:::-;7911:4;;7869:132;;7906:15;;-1:-1:-1;;;;;7911:4:116;7917:3;7906:4;:15::i;:::-;7885:36;;-1:-1:-1;;;;;4419:56:34;;7885:36:116;:::i;:::-;7929:12;7869:132;;;;;;;;;;;;;;;;;:8;:132::i;:::-;8135:3;;8146:4;;-1:-1:-1;;;;;8135:3:116;;;;:8;;8146:4;8155;;-1:-1:-1;;;;;8155:4:116;8135:26;;-1:-1:-1;;;;;;8135:26:116;;;;;;;-1:-1:-1;;;;;12700:15:125;;;8135:26:116;;;12682:34:125;12752:15;;12732:18;;;12725:43;12617:18;;8135:26:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8180:3;;8193:4;;8202;;8180:37;;-1:-1:-1;;;8180:37:116;;8125:36;;-1:-1:-1;;;;;;8180:3:116;;;;:10;;:37;;8193:4;;;8202;;8125:36;;8180:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8233:5;;8224:15;;-1:-1:-1;;;8224:15:116;;-1:-1:-1;;;;;8233:5:116;;;8224:15;;;563:51:125;8167:50:116;;-1:-1:-1;;;;;;;;;;;;237:61:1;8224:8:116;;536:18:125;;8224:15:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8269:3:116;;8294:4;;8309;;-1:-1:-1;;;;;8269:3:116;;;;-1:-1:-1;8269:15:116;;-1:-1:-1;8294:4:116;;;;8309;8322:15;8294:4;8333:3;8322:4;:15::i;:::-;8350:4;;8345:13;;-1:-1:-1;;;;;8350:4:116;;8345;:13::i;:::-;8366:4;8269:107;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8397:5:116;;8383:20;;-1:-1:-1;;;8383:20:116;;-1:-1:-1;;;;;8397:5:116;;;8383:20;;;563:51:125;8245:131:116;;-1:-1:-1;8245:131:116;;-1:-1:-1;8245:131:116;-1:-1:-1;;;;;;;;;;;;237:61:1;8383:13:116;;536:18:125;;8383:20:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8429:3:116;;:13;;;-1:-1:-1;;;8429:13:116;;;;8409:17;;-1:-1:-1;;;;;;8429:3:116;;;;-1:-1:-1;8429:11:116;;:13;;;;;;;;;;;:3;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:16;8472:3;;:13;;;-1:-1:-1;;;8472:13:116;;;;8429:16;;-1:-1:-1;8443:1:116;;-1:-1:-1;;;;;8472:3:116;;;;:11;;:13;;;;;;;;;;;;;:3;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:16;;;8494:14;;;-1:-1:-1;;;8494:14:116;;;;8472:16;;-1:-1:-1;;;;;;;;;;;;237:61:1;8494:12:116;;:14;;;;;261:34:1;;8494:14:116;;;;;;;;261:34:1;237:61;8494:14:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8515:109;8545:4;8531:11;:18;;;;:::i;:::-;8557:12;8515:109;;;;;;;;;;;;;;;;;:8;:109::i;:::-;8672:4;;8630:148;;8685:12;;8667:15;;-1:-1:-1;;;;;8672:4:116;8678:3;8667:4;:15::i;:::-;8646:36;;-1:-1:-1;;;;;4419:56:34;;8646:36:116;:::i;:::-;:51;;;;:::i;8630:148::-;8823:3;;8840:4;;8849;;8823:37;;-1:-1:-1;;;8823:37:116;;-1:-1:-1;;;;;8823:3:116;;;;:14;;:37;;8840:4;;;;8849;;;8856:3;;8823:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8866:3:116;;8883:4;;-1:-1:-1;;;;;8866:3:116;;;;-1:-1:-1;8866:14:116;;-1:-1:-1;8883:4:116;8892;;-1:-1:-1;;;;;8892:4:116;8899:3;8866:37;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8988:16;9007:17;9018:5;9007:10;:17::i;:::-;9047:4;;8988:36;;-1:-1:-1;9030:119:116;;-1:-1:-1;;;;;9047:4:116;9045:7;9062:4;;-1:-1:-1;;;;;9062:4:116;9075;:9;;;9092:51;;;;;;;;;9105:1;9092:51;;;;-1:-1:-1;;9092:51:116;;;;-1:-1:-1;;9092:51:116;;;;-1:-1:-1;;9092:51:116;;;;-1:-1:-1;;9092:51:116;;;;9125:1;9092:51;;;;9128:1;9092:51;;;;-1:-1:-1;;9092:51:116;;;;-1:-1:-1;;9092:51:116;;;;-1:-1:-1;;9092:51:116;;;:7;:51::i;9030:119::-;9172:4;;9155:112;;-1:-1:-1;;;;;9172:4:116;9170:7;10435:96:99;9155:112:116;6935:2337;;;;;;;;;;6896:2376::o;11043:611::-;11086:5;;11077:15;;-1:-1:-1;;;11077:15:116;;-1:-1:-1;;;;;11086:5:116;;;11077:15;;;563:51:125;-1:-1:-1;;;;;;;;;;;237:61:1;11077:8:116;;536:18:125;;11077:15:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11098:3;;;;;;;;;-1:-1:-1;;;;;11098:3:116;-1:-1:-1;;;;;11098:9:116;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11125:5:116;;11116:15;;-1:-1:-1;;;11116:15:116;;-1:-1:-1;;;;;11125:5:116;;;11116:15;;;563:51:125;-1:-1:-1;;;;;;;;;;;237:61:1;-1:-1:-1;11116:8:116;;-1:-1:-1;536:18:125;;11116:15:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11165:3:116;;11190:4;;11205;;11138:8;;-1:-1:-1;11138:8:116;;-1:-1:-1;;;;;;11165:3:116;;;;:15;;11190:4;;;11205;11218:16;11190:4;11229;11218;:16::i;:::-;11247:4;;11242:17;;-1:-1:-1;;;;;11247:4:116;11253:2;11247:4;11242;:17::i;:::-;11267:4;11165:112;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11137:140;;;;;;11284:35;11293:3;11298:1;11284:35;;;;;;;;;;;;;-1:-1:-1;;;11284:35:116;;;:8;:35::i;:::-;11325:37;11334:4;11340:1;11325:37;;;;;;;;;;;;;-1:-1:-1;;;11325:37:116;;;:8;:37::i;:::-;11369:16;11388:17;11399:5;11388:10;:17::i;:::-;11428:4;;11369:36;;-1:-1:-1;11411:120:116;;-1:-1:-1;;;;;11428:4:116;11443;;-1:-1:-1;;;;;11443:4:116;11456;:9;;;11473:52;;;;;;;;;-1:-1:-1;;11473:52:116;;;;-1:-1:-1;;11473:52:116;;;;-1:-1:-1;;11473:52:116;;;;-1:-1:-1;;11473:52:116;;;;-1:-1:-1;;11473:52:116;;;;11507:1;11473:52;;;;11510:1;11473:52;;;;-1:-1:-1;;11473:52:116;;;;-1:-1:-1;;11473:52:116;;;;-1:-1:-1;;11473:52:116;;;:7;:52::i;11411:120::-;11554:4;;11537:112;;-1:-1:-1;;;;;11554:4:116;11552:7;11569:4;;-1:-1:-1;;;;;11569:4:116;11582;:9;;;11599:44;;;;;;;;;11612:1;11599:44;;;;11616:1;11599:44;;;;11619:1;11599:44;;;;11622:1;11599:44;;;;11625:1;11599:44;;;;11628:1;11599:44;;;;11631:1;11599:44;;;;11634:1;11599:44;;;;11637:1;11599:44;;;;11640:1;11599:44;;;:7;:44::i;11537:112::-;11071:583;;;11043:611::o;11658:444::-;11721:5;;11707:20;;-1:-1:-1;;;11707:20:116;;-1:-1:-1;;;;;11721:5:116;;;11707:20;;;563:51:125;-1:-1:-1;;;;;;;;;;;237:61:1;11707:13:116;;536:18:125;;11707:20:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11733:3;;;;;;;;;-1:-1:-1;;;;;11733:3:116;-1:-1:-1;;;;;11733:11:116;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11762:4:116;;11752:40;;-1:-1:-1;11757:15:116;;-1:-1:-1;;;;;;11762:4:116;11768:3;11757:4;:15::i;:::-;11779:4;;11774:17;;-1:-1:-1;;;;;11779:4:116;11785:2;11789:1;11774:4;:17::i;:::-;11752:4;:40::i;:::-;11798:14;;;-1:-1:-1;;;11798:14:116;;;;-1:-1:-1;;;;;;;;;;;237:61:1;11798:12:116;;:14;;;;;261:34:1;;11798:14:116;;;;;;;261:34:1;237:61;11798:14:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11819:16;11838:17;11849:5;11838:10;:17::i;:::-;11878:4;;11819:36;;-1:-1:-1;11861:115:116;;-1:-1:-1;;;;;11878:4:116;11893;;-1:-1:-1;;;;;11893:4:116;11906;:9;;;11923:47;;;;;;;;;11936:1;11923:47;;;;11940:1;11923:47;;;;11943:1;11923:47;;;;11946:1;11923:47;;;;11949:1;11923:47;;;;11952:1;11923:47;;;;11955:1;11923:47;;;;-1:-1:-1;;11923:47:116;;;;-1:-1:-1;;11923:47:116;;;;-1:-1:-1;;11923:47:116;;;:7;:47::i;11861:115::-;11999:4;;11982:115;;-1:-1:-1;;;;;11999:4:116;12014;;-1:-1:-1;;;;;12014:4:116;12027;:9;;;12044:47;;;;;;;;;12057:1;12044:47;;;;-1:-1:-1;;12044:47:116;;;;12065:1;12044:47;;;;-1:-1:-1;;12044:47:116;;;;-1:-1:-1;;12044:47:116;;;;12076:1;12044:47;;;;12079:1;12044:47;;;;12082:1;12044:47;;;;12085:1;12044:47;;;;12088:1;12044:47;;;:7;:47::i;11982:115::-;11701:401;11658:444::o;746:282:101:-;799:20;;;;;;;;;:15;:20;;;825:179;846:4;:11;842:1;:15;825:179;;;910:7;;890:1;;-1:-1:-1;;;;;;;;;;;237:61:1;893:11:101;;910:4;;915:1;;910:7;;;;;;:::i;:::-;;;;;;;893:26;;;;;;;;;;;;;5476:25:125;;5464:2;5449:18;;5330:177;893:26:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;893:26:101;;;;;;;;;;;;:::i;:::-;876:44;;;;;;;;;:::i;:::-;;;;;;;;;;;;;872:48;;950:1;936:4;:11;:15;;;;:::i;:::-;932:1;:19;928:70;;;981:1;967:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;963:26;;928:70;859:3;;;;:::i;:::-;;;;825:179;;;;1009:14;1021:1;1009:11;:14::i;:::-;793:235;746:282;:::o;9928:132:99:-;10009:4;10046:9;10050:5;10046:2;:9;:::i;:::-;10028:15;10033:1;10036:6;10028:4;:15::i;:::-;:27;;;;:::i;:::-;10021:34;9928:132;-1:-1:-1;;;;9928:132:99:o;7053:97::-;7094:16;7125:20;7139:5;7125:13;:20::i;:::-;7118:27;;7053:97;:::o;1741:266:116:-;1774:19;:17;:19::i;:::-;1799;:17;:19::i;:::-;1824:21;:19;:21::i;:::-;1851;:19;:21::i;:::-;1878:19;:17;:19::i;:::-;1903:22;:20;:22::i;:::-;1931;:20;:22::i;:::-;1959:11;:9;:11::i;:::-;1976:26;:24;:26::i;:::-;1741:266::o;9276:1763::-;9335:5;;9321:20;;-1:-1:-1;;;9321:20:116;;-1:-1:-1;;;;;9335:5:116;;;9321:20;;;563:51:125;-1:-1:-1;;;;;;;;;;;237:61:1;9321:13:116;;536:18:125;;9321:20:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9367:3:116;;:13;;;-1:-1:-1;;;9367:13:116;;;;9347:17;;-1:-1:-1;;;;;;9367:3:116;;;;-1:-1:-1;9367:11:116;;:13;;;;;;;;;;;:3;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:16;9410:3;;:13;;;-1:-1:-1;;;9410:13:116;;;;9367:16;;-1:-1:-1;9381:1:116;;-1:-1:-1;;;;;9410:3:116;;;;:11;;:13;;;;;;;;;;;;;:3;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:16;;;9432:14;;;-1:-1:-1;;;9432:14:116;;;;9410:16;;-1:-1:-1;;;;;;;;;;;;237:61:1;9432:12:116;;:14;;;;;261:34:1;;9432:14:116;;;;;;;;261:34:1;237:61;9432:14:116;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9832:3:116;;9845:4;;9854;;9832:31;;-1:-1:-1;;;9832:31:116;;9809:20;;-1:-1:-1;;;;;;9832:3:116;;;;-1:-1:-1;9832:10:116;;:31;;9845:4;;;9854;;9861:1;;9832:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9879:5;;9870:15;;-1:-1:-1;;;9870:15:116;;-1:-1:-1;;;;;9879:5:116;;;9870:15;;;563:51:125;9809:54:116;;-1:-1:-1;;;;;;;;;;;;237:61:1;9870:8:116;;536:18:125;;9870:15:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9911:3:116;;9936:4;;9951;;9894:9;;-1:-1:-1;;;;;;9911:3:116;;;;-1:-1:-1;9911:15:116;;9936:4;;;;9951;9964:15;9936:4;9975:3;9964:4;:15::i;:::-;9992:4;;9987:13;;-1:-1:-1;;;;;9992:4:116;;9987;:13::i;:::-;10008:4;9911:107;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9891:127;;;;;10025:16;10044:17;10055:5;10044:10;:17::i;:::-;10084:4;;10025:36;;-1:-1:-1;10067:119:116;;-1:-1:-1;;;;;10084:4:116;10082:7;10435:96:99;10067:119:116;10209:4;;10192:112;;-1:-1:-1;;;;;10209:4:116;10207:7;10435:96:99;10192:112:116;10325:5;;10311:20;;-1:-1:-1;;;10311:20:116;;-1:-1:-1;;;;;10325:5:116;;;10311:20;;;563:51:125;-1:-1:-1;;;;;;;;;;;237:61:1;10311:13:116;;536:18:125;;10311:20:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10358:3:116;;:13;;;-1:-1:-1;;;10358:13:116;;;;10337:18;;-1:-1:-1;;;;;;10358:3:116;;;;-1:-1:-1;10358:11:116;;:13;;;;;;;;;;;:3;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:16;10402:3;;:13;;;-1:-1:-1;;;10402:13:116;;;;10358:16;;-1:-1:-1;10372:1:116;;-1:-1:-1;;;;;10402:3:116;;;;:11;;:13;;;;;;;;;;;;;:3;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:16;;;10424:14;;;-1:-1:-1;;;10424:14:116;;;;10402:16;;-1:-1:-1;;;;;;;;;;;;237:61:1;10424:12:116;;:14;;;;;261:34:1;;10424:14:116;;;;;;;;261:34:1;237:61;10424:14:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10445:63;10454:13;10469:1;10445:63;;;;;;;;;;;;;;;;;:8;:63::i;:::-;10514:65;10523:14;10539:1;10514:65;;;;;;;;;;;;;;;;;:8;:65::i;:::-;10601:3;;10612:4;;10586:12;;-1:-1:-1;;;;;10601:3:116;;;;:8;;10612:4;10621;;-1:-1:-1;;;;;10621:4:116;10601:26;;-1:-1:-1;;;;;;10601:26:116;;;;;;;-1:-1:-1;;;;;12700:15:125;;;10601:26:116;;;12682:34:125;12752:15;;12732:18;;;12725:43;12617:18;;10601:26:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10652:3;;10665:4;;10674;;10652:37;;-1:-1:-1;;;10652:37:116;;10586:41;;-1:-1:-1;10633:16:116;;-1:-1:-1;;;;;10652:3:116;;;;:10;;:37;;10665:4;;;;10674;;;10586:41;;10652:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10633:56;;10695:71;10704:7;10713:1;10695:71;;;;;;;;;;;;;;;;;:8;:71::i;:::-;10773:70;-1:-1:-1;;;;;4419:56:34;;10798:19:116;10805:12;10798:4;:19;:::i;:::-;10773:70;;;;;;;;;;;;;-1:-1:-1;;;10773:70:116;;;:8;:70::i;:::-;10869:3;;10882:4;;10891;;10869:31;;-1:-1:-1;;;10869:31:116;;10850:16;;-1:-1:-1;;;;;10869:3:116;;;;:10;;:31;;10882:4;;;;10891;;10898:1;;10869:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10850:50;-1:-1:-1;10907:127:116;-1:-1:-1;;;;;4419:56:34;;10987:4:116;;10982:15;;-1:-1:-1;;;;;10987:4:116;10993:3;10982:4;:15::i;:::-;10945:34;-1:-1:-1;;;;;4419:56:34;;10945:13:116;:34;:::i;:::-;:52;;;;:::i;3054:1255::-;3096:5;;1782:16:100;;-1:-1:-1;;;1782:16:100;;-1:-1:-1;;;;;3096:5:116;;;1782:16:100;;;563:51:125;;;3096:5:116;-1:-1:-1;;;;;;;;;;;237:61:1;1782:13:100;;536:18:125;;1782:16:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3148:3:116::1;::::0;3173:4:::1;::::0;3188::::1;::::0;3110:8:::1;::::0;-1:-1:-1;3110:8:116;;-1:-1:-1;3110:8:116;;-1:-1:-1;;;;;3148:3:116;;::::1;::::0;:15:::1;::::0;3173:4;;::::1;::::0;3188::::1;3201:16;3173:4:::0;3212:1:::1;3206:4:::0;3201::::1;:16::i;:::-;3230:4;::::0;3225:16:::1;::::0;-1:-1:-1;;;;;3230:4:116::1;3236;3225;:16::i;:::-;3249:4;3148:111;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3109:150;;;;;;;3266:16;3285:17;3296:5;3285:10;:17::i;:::-;3346:4;::::0;3266:36;;-1:-1:-1;3308:105:116::1;::::0;3324:3;;3335:37:::1;::::0;-1:-1:-1;;;;;3346:4:116::1;3355;::::0;-1:-1:-1;;;;;3355:4:116::1;3362:9;3335:8;:37::i;:::-;3308:105;;;;;;;;;;;;;;;;::::0;:8:::1;:105::i;:::-;3419:54;3428:6;3436:1;3419:54;;;;;;;;;;;;;;;;::::0;:8:::1;:54::i;:::-;3496:4;::::0;3479:112:::1;::::0;-1:-1:-1;;;;;3496:4:116::1;3511;::::0;-1:-1:-1;;;;;3511:4:116::1;3524;:9;;;3541:44;;;;;;;;;3554:1;3541:44;;;;3558:1;3541:44;;;;3561:1;3541:44;;;;3564:1;3541:44;;;;3567:1;3541:44;;;;3570:1;3541:44;;;;3573:1;3541:44;;;;3576:1;3541:44;;;;3579:1;3541:44;;;;3582:1;3541:44;;::::0;:7:::1;:44::i;3479:112::-;3614:4;::::0;3597:113:::1;::::0;-1:-1:-1;;;;;3614:4:116::1;3629;::::0;-1:-1:-1;;;;;3629:4:116::1;3642;:9;;;3659:45;;;;;;;;;3672:1;3659:45;;;;3676:1;3659:45;;;;3679:1;3659:45;;;;3682:1;3659:45;;;;3685:1;3659:45;;;;-1:-1:-1::0;;3659:45:116::1;;;;3692:1;3659:45;;;;3695:1;3659:45;;;;3698:1;3659:45;;;;3701:1;3659:45;;::::0;:7:::1;:45::i;3597:113::-;3741:3;::::0;3766:4:::1;::::0;3781::::1;::::0;-1:-1:-1;;;;;3741:3:116;;::::1;::::0;:15:::1;::::0;3766:4;::::1;::::0;3781::::1;3794:16;3766:4:::0;3805::::1;3794;:16::i;:::-;3823:4;::::0;3818:17:::1;::::0;-1:-1:-1;;;;;3823:4:116::1;3829:2;3823:4:::0;3818::::1;:17::i;:::-;3843:4;3741:112;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;3898:4:116::1;::::0;3907::::1;::::0;3717:136;;-1:-1:-1;3717:136:116;;-1:-1:-1;3717:136:116;-1:-1:-1;3860:112:116::1;::::0;3717:136;;3887:44:::1;::::0;-1:-1:-1;;;;;3898:4:116;;::::1;::::0;3907::::1;3914:16;3898:4:::0;3925::::1;3914;:16::i;:::-;3887:8;:44::i;3860:112::-;3979:54;3988:6;3996:1;3979:54;;;;;;;;;;;;;;;;::::0;:8:::1;:54::i;:::-;4047:17;4058:5;4047:10;:17::i;:::-;4088:4;::::0;4040:24;;-1:-1:-1;4071:114:116::1;::::0;-1:-1:-1;;;;;4088:4:116::1;4103;::::0;-1:-1:-1;;;;;4103:4:116::1;4116;:9;;;4133:46;;;;;;;;;4146:1;4133:46;;;;4150:1;4133:46;;;;4153:1;4133:46;;;;4156:1;4133:46;;;;-1:-1:-1::0;;4133:46:116::1;;;;-1:-1:-1::0;;4133:46:116::1;;;;4167:1;4133:46;;;;4170:1;4133:46;;;;4173:1;4133:46;;;;4176:1;4133:46;;::::0;:7:::1;:46::i;4071:114::-;4209:4;::::0;4192:112:::1;::::0;-1:-1:-1;;;;;4209:4:116::1;4224;::::0;-1:-1:-1;;;;;4224:4:116::1;4237;:9;;;4254:44;;;;;;;;;4267:1;4254:44;;;;4271:1;4254:44;;;;4274:1;4254:44;;;;4277:1;4254:44;;;;4280:1;4254:44;;;;4283:1;4254:44;;;;4286:1;4254:44;;;;4289:1;4254:44;;;;4292:1;4254:44;;;;4295:1;4254:44;;::::0;:7:::1;:44::i;4192:112::-;-1:-1:-1::0;;1811:14:100;;;-1:-1:-1;;;1811:14:100;;;;-1:-1:-1;;;;;;;;;;;237:61:1;-1:-1:-1;1811:12:100;;-1:-1:-1;1811:14:100;;;;;261:34:1;;1811:14:100;;;;;;;261:34:1;237:61;1811:14:100;;;;;;;;;;461:281:101;516:20;;;;;;;;;:15;:20;;;542:176;563:5;:12;559:1;:16;542:176;;;623:8;;608:1;;-1:-1:-1;;;;;;;;;;;237:61:1;611:11:101;;623:5;;629:1;;623:8;;;;;;:::i;:::-;;;;;;;611:21;;;;;;;;;;;;;5476:25:125;;5464:2;5449:18;;5330:177;611:21:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;611:21:101;;;;;;;;;;;;:::i;:::-;594:39;;;;;;;;;:::i;:::-;;;;;;;;;;;;;590:43;;664:1;649:5;:12;:16;;;;:::i;:::-;645:1;:20;641:71;;;695:1;681:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;677:26;;641:71;577:3;;;;:::i;:::-;;;;542:176;;1610:472:0;1644:4;1660:7;;;;;;;1656:422;;;-1:-1:-1;1684:7:0;;;;;;;;1610:472::o;1656:422::-;1712:17;-1:-1:-1;;;;;;;;;;;2564:55:0;2637:16;1745:300;;1919:43;;1780:20;;-1:-1:-1;;;;;;;;;;;1459:61:0;1870:34;;1919:43;;1459:61;;-1:-1:-1;;;1944:17:0;1919:43;;;:::i;:::-;;;;-1:-1:-1;;1919:43:0;;;;;;;;;;1833:141;;;1919:43;1833:141;;:::i;:::-;;;;-1:-1:-1;;1833:141:0;;;;;;;;;;1804:180;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1777:207;;;2020:7;2009:27;;;;;;;;;;;;:::i;:::-;1994:42;;1767:278;1745:300;2059:12;1610:472;-1:-1:-1;1610:472:0:o;8937:174:99:-;9053:3;;9016:13;;9039:19;;-1:-1:-1;;;;;9053:3:99;9039:11;:19::i;:::-;-1:-1:-1;9090:3:99;;9072:33;;-1:-1:-1;;;;;9090:3:99;;;;9095:4;;9101:3;;9072:33;;;:::i;:::-;-1:-1:-1;;;;;15777:15:125;;;15759:34;;15829:15;;;15824:2;15809:18;;15802:43;15881:15;;;15876:2;15861:18;;15854:43;15709:2;15694:18;9072:33:99;;;;;;;;;;;;;;;;;;;;;;;9064:42;;8937:174;;;;;:::o;8665:268::-;8765:9;8782:12;8811:3;;;;;;;;;-1:-1:-1;;;;;8811:3:99;8823:4;8837:3;8797:45;;;;;:::i;4313:466:116:-;4357:5;;1782:16:100;;-1:-1:-1;;;1782:16:100;;-1:-1:-1;;;;;4357:5:116;;;1782:16:100;;;563:51:125;;;4357:5:116;-1:-1:-1;;;;;;;;;;;237:61:1;1782:13:100;;536:18:125;;1782:16:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4370:3:116::1;::::0;4437:45:::1;::::0;;;;::::1;::::0;;;4451:4:::1;::::0;-1:-1:-1;;;;;4370:3:116;;::::1;::::0;-1:-1:-1;4370:13:116::1;::::0;-1:-1:-1;;;4395:2:116;4370:3:::1;::::0;4437:45:::1;::::0;;;;;4446:16:::1;::::0;4451:4:::1;4457;4446;:16::i;:::-;4437:45:::0;;4469:4:::1;::::0;4437:45:::1;::::0;;::::1;::::0;4464:16:::1;::::0;-1:-1:-1;;;;;4469:4:116::1;4475;4464;:16::i;:::-;4437:45:::0;;:7:::1;:45::i;:::-;4370:119;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4496:16;4515:17;4526:5;4515:10;:17::i;:::-;4556:4;::::0;4496:36;;-1:-1:-1;4539:114:116::1;::::0;-1:-1:-1;;;;;4556:4:116::1;4571;::::0;-1:-1:-1;;;;;4571:4:116::1;4584;:9;;;4601:46;;;;;;;;;4614:1;4601:46;;;;4618:1;4601:46;;;;4621:1;4601:46;;;;4624:1;4601:46;;;;4627:1;4601:46;;;;4630:1;4601:46;;;;-1:-1:-1::0;;4601:46:116::1;;;;-1:-1:-1::0;;4601:46:116::1;;;;4641:1;4601:46;;;;4644:1;4601:46;;::::0;:7:::1;:46::i;4539:114::-;4677:4;::::0;4660:114:::1;::::0;-1:-1:-1;;;;;4677:4:116::1;4692;::::0;-1:-1:-1;;;;;4692:4:116::1;4705;:9;;;4722:46;;;;;;;;;-1:-1:-1::0;;4722:46:116::1;;;;-1:-1:-1::0;;4722:46:116::1;;;;4744:1;4722:46;;;;4747:1;4722:46;;;;4750:1;4722:46;;;;4753:1;4722:46;;;;4756:1;4722:46;;;;4759:1;4722:46;;;;4762:1;4722:46;;;;4765:1;4722:46;;::::0;:7:::1;:46::i;2011:1039::-:0;2053:5;;1782:16:100;;-1:-1:-1;;;1782:16:100;;-1:-1:-1;;;;;2053:5:116;;;1782:16:100;;;563:51:125;;;2053:5:116;-1:-1:-1;;;;;;;;;;;237:61:1;1782:13:100;;536:18:125;;1782:16:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2202:4:116::1;::::0;2217:3:::1;::::0;:12:::1;::::0;;-1:-1:-1;;;2217:12:116;;;;-1:-1:-1;;;;;2202:4:116;;::::1;::::0;-1:-1:-1;2202:12:116::1;::::0;-1:-1:-1;2215:15:116::1;::::0;2217:3;;::::1;::::0;:10:::1;::::0;:12:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;:3;:12:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10523:1:99::0;10435:96;2215:15:116::1;-1:-1:-1::0;;2202:45:116::1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;2253:4:116::1;::::0;2268:3:::1;::::0;:12:::1;::::0;;-1:-1:-1;;;2268:12:116;;;;-1:-1:-1;;;;;2253:4:116;;::::1;::::0;:12:::1;::::0;2266:15:::1;::::0;2268:3;::::1;::::0;:10:::1;::::0;:12:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;:3;:12:::1;;;;;;;;;::::0;::::1;;;;2266:15;-1:-1:-1::0;;2253:45:116::1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;2433:4:116::1;::::0;2440:5:::1;::::0;2426:36:::1;::::0;-1:-1:-1;;;;;2433:4:116;;::::1;::::0;2440:5:::1;2447:14;2433:4:::0;2458:2:::1;2447:4;:14::i;2426:36::-;2475:4;::::0;2482:5:::1;::::0;2468:39:::1;::::0;-1:-1:-1;;;;;2475:4:116;;::::1;::::0;2482:5:::1;2489:17;2475:4:::0;2500:5:::1;2489:4;:17::i;2468:39::-;2526:3;::::0;2572:4:::1;::::0;2597::::1;::::0;2617:16:::1;::::0;;-1:-1:-1;;;2617:16:116;;;;2514:9:::1;::::0;-1:-1:-1;;;;;2526:3:116;;::::1;::::0;:23:::1;::::0;2572:4;;::::1;::::0;2597;::::1;::::0;2526:3;;2617:14:::1;::::0;:16:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;2526:3;2617:16:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2651:1;2669::::0;2526:151:::1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2684:3;::::0;2514:163;;-1:-1:-1;;;;;;2684:3:116::1;:8;2700:9;2514:163:::0;2707:2:::1;2700:9;:::i;:::-;2713:3;::::0;-1:-1:-1;;;;;2713:3:116::1;2684:34;::::0;-1:-1:-1;;;;;;2684:34:116::1;::::0;;;;;;-1:-1:-1;;;;;581:32:125;;;2684:34:116::1;::::0;::::1;563:51:125::0;536:18;;2684:34:116::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;2735:4:116::1;::::0;2725:40:::1;::::0;-1:-1:-1;2730:16:116::1;::::0;-1:-1:-1;;;;;;2735:4:116::1;::::0;-1:-1:-1;2741:4:116::1;2730;:16::i;:::-;2753:4;::::0;2748:16:::1;::::0;-1:-1:-1;;;;;2753:4:116::1;2759:1;2753:4:::0;2748::::1;:16::i;2725:40::-;2772:16;2791:17;2802:5;2791:10;:17::i;:::-;2832:4;::::0;2772:36;;-1:-1:-1;2815:112:116::1;::::0;-1:-1:-1;;;;;2832:4:116::1;2847;::::0;-1:-1:-1;;;;;2847:4:116::1;2860;:9;;;2877:44;;;;;;;;;2890:1;2877:44;;;;2894:1;2877:44;;;;2897:1;2877:44;;;;2900:1;2877:44;;;;2903:1;2877:44;;;;2906:1;2877:44;;;;2909:1;2877:44;;;;2912:1;2877:44;;;;2915:1;2877:44;;;;2918:1;2877:44;;::::0;:7:::1;:44::i;2815:112::-;2950:4;::::0;2933:112:::1;::::0;-1:-1:-1;;;;;2950:4:116::1;2965;::::0;-1:-1:-1;;;;;2965:4:116::1;2978;:9;;;2995:44;;;;;;;;;3008:1;2995:44;;;;3012:1;2995:44;;;;3015:1;2995:44;;;;3018:1;2995:44;;;;3021:1;2995:44;;;;3024:1;2995:44;;;;3027:1;2995:44;;;;3030:1;2995:44;;;;3033:1;2995:44;;;;3036:1;2995:44;;::::0;:7:::1;:44::i;2933:112::-;-1:-1:-1::0;;1811:14:100;;;-1:-1:-1;;;1811:14:100;;;;-1:-1:-1;;;;;;;;;;;237:61:1;1811:12:100;;:14;;;;;261:34:1;;1811:14:100;;;;;;;261:34:1;237:61;1811:14:100;;;;;;;;;;9600:169:99;9653:4;9665:11;:9;:11::i;:::-;9682:13;9698:1;-1:-1:-1;;;;;9698:10:99;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9682:28;;;;9716:14;:12;:14::i;:::-;9752:12;9756:8;9752:2;:12;:::i;:::-;9743:21;;:6;:21;:::i;7640:173::-;7728:16;7761:47;7775:12;7789:11;7802:5;7761:13;:47::i;2244:802::-;2391:21;;2303:115;;2326:4;;2339:12;;2364:19;;2391:21;;;2303:115;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2296:4:99;:122;;-1:-1:-1;;;;;;2296:122:99;-1:-1:-1;;;;;2296:122:99;;;;;;;;;;2455:4;2522:22;;2432:118;;2468:13;;2494:20;;2522:22;;;;;2432:118;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2424:5:99;:126;;-1:-1:-1;;;;;;2424:126:99;-1:-1:-1;;;;;2424:126:99;;;;;;;;;2599:4;;2612:7;:24;2585:52;;2599:4;;;;;2424:126;2612:24;;2585:13;:52::i;:::-;2579:3;:58;;-1:-1:-1;;;;;;2579:58:99;-1:-1:-1;;;;;2579:58:99;;;;;;;;;2858:27;;;-1:-1:-1;;;2858:27:99;;;;:8;;2874;;2858:27;;;;;-1:-1:-1;;2858:27:99;;;;;;;2874:8;2579:58;2858:27;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2962:4:99;;2977:3;;2962:36;;-1:-1:-1;;;2962:36:99;;-1:-1:-1;;;;;2962:4:99;;;;-1:-1:-1;2962:12:99;;-1:-1:-1;2962:36:99;;-1:-1:-1;2977:3:99;;;-1:-1:-1;;2983:14:99;2962:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3004:5:99;;3020:3;;3004:37;;-1:-1:-1;;;3004:37:99;;-1:-1:-1;;;;;3004:5:99;;;;:13;;:37;;3020:3;;;-1:-1:-1;;3026:14:99;3004:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3225:134:100:-;3294:20;3335:19;3348:5;3335:12;:19::i;3611:116:2:-;3694:28;3699:5;3706:2;3710:4;3716:5;3694:4;:28::i;8114:349:99:-;8213:15;8225:2;8213:11;:15::i;:::-;;8234;8246:2;8234:11;:15::i;:::-;-1:-1:-1;8277:18:99;;8255:52;;-1:-1:-1;;;8255:52:99;;-1:-1:-1;;;;;8255:13:99;;;;;:52;;8269:2;;8273;;8277:18;8297:1;;8300:6;;8255:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8335:18:99;;8313:52;;-1:-1:-1;;;8313:52:99;;-1:-1:-1;;;;;8313:13:99;;;-1:-1:-1;8313:13:99;;-1:-1:-1;8313:52:99;;8327:2;;8331;;8335:18;8355:1;;8358:6;;8313:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;261:34:1;;245:52;;237:61;;-1:-1:-1;;;;;8386:8:99;;8395:2;8406;-1:-1:-1;;;;;8399:17:99;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8399:19:99;;;;;;;;;;;;:::i;:::-;8386:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;261:34:1;;245:52;;237:61;;-1:-1:-1;;;;;8425:8:99;;8434:2;8445;-1:-1:-1;;;;;8438:17:99;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8438:19:99;;;;;;;;;;;;:::i;:::-;8425:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8114:349;;;:::o;4812:172:0:-;4905:1;4900;:6;4896:84;;-1:-1:-1;;;;;;;;;;;4947:3:0;4921:30;;;;;;:::i;:::-;;;;;;;;4959:14;4968:1;4971;4959:8;:14::i;4707:248:101:-;4796:20;;;4807:8;4796:20;;;;;;;;;4765:17;;4796:20;;;4765:17;;4796:20;;;;;-1:-1:-1;;4790:26:101;-1:-1:-1;4880:1:101;4906:2;4897:12;;4920:30;4880:1;4934:8;4897:12;4920:6;:30::i;:::-;4784:171;;4707:248;;;:::o;12195:176:116:-;-1:-1:-1;;;;;;;;;;;;;;;;;12295:3:116;;:24;;-1:-1:-1;;;12295:24:116;;6572:14:125;;6565:22;12295:24:116;;;6547:41:125;12272:20:116;;-1:-1:-1;;;;;12295:3:116;;:14;;6520:18:125;;12295:24:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12295:24:116;;;;;;;;;;;;:::i;:::-;12272:47;;12332:34;;;;;;;;12344:3;12348:1;12344:6;;;;;;;:::i;:::-;;;;;12332:34;;;;12358:3;12362:1;12358:6;;;;;;;:::i;:::-;;;;;12332:34;;12325:41;12195:176;-1:-1:-1;;;12195:176:116:o;8979:246:101:-;9067:19;;;9077:8;9067:19;;;;;;;;;9037:16;;9067:19;;;;;;;;;;-1:-1:-1;;9061:25:101;-1:-1:-1;9150:1:101;9176:2;9167:12;;9190:30;9150:1;9204:8;9167:12;9190:6;:30::i;12531:450:116:-;12662:7;;12676:301;12697:13;:20;12693:1;:24;12676:301;;;12738:13;12752:1;12738:16;;;;;;;;:::i;:::-;;;;;;;;;;;12780:3;;12738:16;;-1:-1:-1;12762:150:116;;12822:1;;12780:39;;-1:-1:-1;;;;;12780:3:116;:10;12791:4;12797:3;12802:8;12738:16;12802:3;:8::i;:::-;12780:31;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4419:56:34;;4339:142;12780:39:116;12887:16;;-1:-1:-1;;;12887:16:116;;;;;5476:25:125;;;-1:-1:-1;;;12839:1:116;12833:7;;;-1:-1:-1;;;;;;;;;;;237:61:1;12887:11:116;;5449:18:125;;12887:16:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12887:16:116;;;;;;;;;;;;:::i;:::-;12850:54;;;;;;;;:::i;:::-;;;;;;;;;;;;;12762:8;:150::i;:::-;12920:50;12929:8;12938:1;12929:11;;;;;;;;:::i;:::-;;;;;;;12942:8;12946:3;12942;:8::i;:::-;12920:50;;;;;;;;;;;;;-1:-1:-1;;;12920:50:116;;;:8;:50::i;:::-;12719:3;;;;:::i;:::-;;;;12676:301;;;;12656:325;12531:450;;;;:::o;13023:564::-;13084:10;13097;13106:1;445:2;13097:10;:::i;:::-;13163:18;;;445:2;13163:18;;;;;;;;;13084:23;;-1:-1:-1;13138:22:116;;13163:18;;;;;;;;;-1:-1:-1;;13211:18:116;;;445:2;13211:18;;;;;;;;;13138:43;;-1:-1:-1;13187:21:116;;13211:18;-1:-1:-1;13211:18:116;;;;;;;;;;-1:-1:-1;13211:18:116;13187:42;;13240:6;13235:100;445:2;13252:1;:10;13235:100;;;13294:10;13303:1;445:2;13294:10;:::i;:::-;13290:1;:14;:38;;13319:9;13290:38;;;13307:9;13290:38;13277:7;13285:1;13277:10;;;;;;;;:::i;:::-;;;;;;;;;;:51;13264:3;;;;:::i;:::-;;;;13235:100;;;;13346:6;13341:242;13362:1;13358;:5;13341:242;;;13378:3;;-1:-1:-1;;;;;13378:3:116;:14;:3;13441:1;13458:9;13466:1;13458:5;:9;:::i;:::-;13490:5;:1;13494;13490:5;:::i;:::-;13481:15;;:5;:15;:::i;:::-;13378:198;;;;;;;;13517:8;13378:198;;;;13527:8;13378:198;;;13560:7;13378:198;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13365:3;;;;;:::i;:::-;;;;13341:242;;5747:115:5;5798:59;5853:2;5814:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5814:42:5;;;;;;;;;;;;;;-1:-1:-1;;;;;5814:42:5;-1:-1:-1;;;5814:42:5;;;5798:15;:59::i;6137:209:99:-;6267:3;;:21;;-1:-1:-1;;;6267:21:99;;-1:-1:-1;;;;;12700:15:125;;;6267:21:99;;;12682:34:125;12752:15;;;12732:18;;;12725:43;6233:4:99;;;;6267:3;;;:10;;12617:18:125;;6267:21:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6245:43;-1:-1:-1;6336:5:99;;-1:-1:-1;6311:20:99;5147:52:33;;;;;;6336:5:99;6311:20;:::i;:::-;6302:30;;:5;:30;:::i;:::-;6301:40;;;;:::i;:::-;6294:47;6137:209;-1:-1:-1;;;;;6137:209:99:o;3638:232:100:-;3688:4;-1:-1:-1;;;;;3704:15:100;;3700:136;;3734:37;;;;;32565:2:125;32547:21;;;32604:2;32584:18;;;32577:30;32643:32;32638:2;32623:18;;32616:60;32708:2;32693:18;;32363:354;3734:37:100;;;;;;;;3784:31;;;32934:21:125;;;32991:1;32971:18;;;32964:29;-1:-1:-1;;;33024:2:125;33009:18;;33002:37;-1:-1:-1;;;;;33113:32:125;;33106:4;33091:20;;33084:62;3784:31:100;;;;;;;33071:3:125;3784:31:100;;;3823:6;:4;:6::i;:::-;-1:-1:-1;;;;;;3849:15:100;;;;3638:232::o;4455:248:101:-;4544:20;;;4555:8;4544:20;;;4513:17;4544:20;;;;;4513:17;4544:20;;;;;;;;;;-1:-1:-1;;4538:26:101;-1:-1:-1;4628:1:101;4654:2;4645:12;;4668:30;4628:1;4682:8;4645:12;4668:6;:30::i;1434:57:100:-;1470:16;1480:5;1470:9;:16::i;1517:186::-;1560:10;:15;1579:1;1560:20;1556:143;;1599:15;;1590:25;;-1:-1:-1;;;1590:25:100;;-1:-1:-1;;;;;1599:15:100;;;1590:25;;;563:51:125;-1:-1:-1;;;;;;;;;;;237:61:1;1590:8:100;;536:18:125;;1590:25:100;;;;;;;;;;;;;;;;;;;;1556:143;1632:10;:15;1651:1;1632:20;1628:71;;1676:15;;1662:30;;-1:-1:-1;;;1662:30:100;;-1:-1:-1;;;;;1676:15:100;;;1662:30;;;563:51:125;-1:-1:-1;;;;;;;;;;;237:61:1;1662:13:100;;536:18:125;;1662:30:100;383:237:125;2616:393:100;2772:23;;;;;;2750:11;:13;;;;;;;;2823:12;;-1:-1:-1;;;;;;2823:12:100;;2749:47;;2823:12;;;5476:25:125;;;2749:47:100;-1:-1:-1;;;;;;;;;;;;;237:61:1;2823:7:100;;5449:18:125;;2823:12:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2935:17;;;;;;;;;;;-1:-1:-1;;;2935:17:100;;;;2921:32;;-1:-1:-1;;;2921:32:100;;2808:28;;-1:-1:-1;;;;;;;;;;;;237:61:1;2921:7:100;;:32;;2808:28;;2935:17;2921:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2959:21:100;;-1:-1:-1;;;2959:21:100;;-1:-1:-1;;;;;;;;;;;237:61:1;-1:-1:-1;2959:8:100;;-1:-1:-1;2959:21:100;;2968:4;;2974:5;;2959:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2616:393;;;:::o;3731:764:2:-;3903:38;;;-1:-1:-1;;;;;581:32:125;;;3903:38:2;;;;563:51:125;;;;3903:38:2;;;;;;;;;;536:18:125;;;;3903:38:2;;;;;;;-1:-1:-1;;;;;3903:38:2;-1:-1:-1;;;3903:38:2;;;3885:62;;3861:20;;3885:10;;;:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3858:89;;;3953:12;3979:7;3968:27;;;;;;;;;;;;:::i;:::-;3953:42;-1:-1:-1;4024:71:2;4090:4;4024:51;4072:2;4024:38;-1:-1:-1;;;4024:22:2;:8;4040:5;4024:15;:22::i;:::-;:26;19133:9;;;:16;;-1:-1:-1;;19133:16:2;;;;;;;;;;;;:9;19028:143;4024:38;:47;19445:10;;;:44;;;;;;;-1:-1:-1;19445:44:2;;;;;;;-1:-1:-1;;;;;19469:18:2;;;;19445:44;;;:10;19335:176;4024:51;:65;;:71::i;:::-;4133:6;4129:362;;;4199:34;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4199:34:2;-1:-1:-1;;;4199:34:2;;;4179:62;;4152:23;;-1:-1:-1;;;;;4179:10:2;;;:62;;4199:34;4179:62;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4149:92;;;4249:11;4274:10;4263:30;;;;;;;;;;;;:::i;:::-;4249:44;;4312:7;4305:4;:14;4301:116;;;4342:14;4352:4;4342:7;:14;:::i;:::-;4331:26;;;;:::i;:::-;;;4301:116;;;4393:14;4400:7;4393:4;:14;:::i;:::-;4382:26;;;;:::i;:::-;;;4301:116;4424:60;4477:6;4424:38;-1:-1:-1;;;4424:22:2;:8;4440:5;4424:15;:22::i;:60::-;4141:350;;3825:670;;3731:764;;;;:::o;4580:228:0:-;4638:1;4633;:6;4629:175;;4654:41;;;;;34281:2:125;34263:21;;;34320:2;34300:18;;;34293:30;34359:34;34354:2;34339:18;;34332:62;-1:-1:-1;;;34425:2:125;34410:18;;34403:32;34467:3;34452:19;;34079:398;4654:41:0;;;;;;;;4708:31;4737:1;4708:31;;;;;;:::i;:::-;;;;;;;;4752;4781:1;4752:31;;;;;;:::i;:::-;;;;;;;;4791:6;:4;:6::i;3814:303:101:-;3909:9;;3902:211;;-1:-1:-1;;3999:9:101;;4010:2;3995:18;3988:26;;;4059:24;3988:26;;;4033:51;3999:9;4099:7;3999:9;4099:7;:::i;:::-;;;;3902:211;;11967:135;12010:4;12030:1;12026;:5;12022:76;;;12053:2;12054:1;12053:2;:::i;12022:76::-;-1:-1:-1;12089:1:101;11967:135::o;7526:172:2:-;7619:1;7614:6;;:1;:6;;;7610:84;;-1:-1:-1;;;;;;;;;;;7661:3:2;7635:30;;;;;;:::i;:::-;;;;;;;;7673:14;7682:1;7685;7673:8;:14::i;631:356:5:-;718:14;;583:42;834:2;821:16;;697:18;;718:14;821:16;583:42;873:5;853:124;844:133;;793:190;;631:356;:::o;2086:353:0:-;-1:-1:-1;;;;;;;;;;;2564:55:0;2637:16;2117:298;;2283:64;;2148:11;;-1:-1:-1;;;;;;;;;;;1459:61:0;2227:43;;2283:64;;1459:61;;-1:-1:-1;;;2308:17:0;2340:4;;2283:64;;;:::i;:::-;;;;-1:-1:-1;;2283:64:0;;;;;;;;;;2192:165;;;2283:64;2192:165;;:::i;:::-;;;;-1:-1:-1;;2192:165:0;;;;;;;;;;2165:200;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2117:298:0;2420:7;:14;;-1:-1:-1;;2420:14:0;;;;;2086:353::o;959:444:100:-;1025:1;1007:10;:19;1050:17;;;-1:-1:-1;;;1050:17:100;;;;:4;;:15;;:17;;;;;;;;;;;;;;:4;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1032:15;:35;;-1:-1:-1;;;;;;1032:35:100;-1:-1:-1;;;;;1032:35:100;;;;;;;;;1104:4;1077:32;1073:326;;1180:4;-1:-1:-1;;;;;1180:15:100;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1161:15;;-1:-1:-1;;;;;1161:15:100;;;:36;;;1157:236;;1260:1;1242:10;:19;11701:401:116;11658:444::o;1157:236:100:-;1280:7;1276:117;;;1359:1;1341:10;:19;1370:14;;;-1:-1:-1;;;1370:14:100;;;;-1:-1:-1;;;;;;;;;;;237:61:1;1370:12:100;;:14;;;;;1341:15;;1370:14;;;;;;;1341:15;237:61:1;1370:14:100;;;;;;;;;;18868:156:2;18980:12;;;:22;;-1:-1:-1;;;;;;18980:22:2;-1:-1:-1;;;;;18980:22:2;;;;;;;;;;:12;18868:156::o;20119:111::-;20192:33;20206:4;20220:3;20192:13;:33::i;7252:270::-;7310:1;7305:6;;:1;:6;;;7301:217;;7326:41;;;;;36350:2:125;36332:21;;;36389:2;36369:18;;;36362:30;36428:34;36423:2;36408:18;;36401:62;-1:-1:-1;;;36494:2:125;36479:18;;36472:32;36536:3;36521:19;;36148:398;7326:41:2;;;;;;;;-1:-1:-1;;;;;;;;;;;7411:1:2;:20;;;;;;;;;;;;;;;-1:-1:-1;;;7411:20:2;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7411:20:2;;;;7380:52;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;;;7476:1:2;:20;;;;;;;;;;;;;;;-1:-1:-1;;;7476:20:2;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7476:20:2;;;;7445:52;;;;;;:::i;20432:1000::-;20522:12;;;;20554:9;;;;20588:11;;;;20628:10;;;20605:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;20522:12:2;;;;20554:9;;;;;;20508:11;;20605:33;;20628:10;;20605:33;;20628:10;20605:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20645:17;20682:4;20688:12;20696:3;20688:7;:12::i;:::-;20665:36;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;20665:36:2;;;;;;;;;-1:-1:-1;;;;;20712:15:2;;;;;;:10;;;20665:36;20712:15;;;;;;-1:-1:-1;;;;;;20712:21:2;;;;;;;;;20665:36;;-1:-1:-1;20712:21:2;;:15;;20744:34;;20761:3;;20766:11;;20744:34;;:::i;:::-;;;;-1:-1:-1;;20744:34:2;;;;;;;;;20734:45;;20744:34;20734:45;;;;20712:68;;;;;;;;;;-1:-1:-1;20712:68:2;;;;20707:100;;20790:10;20795:4;20790;:10::i;:::-;;20707:100;-1:-1:-1;;;;;20842:15:2;;20812:12;20842:15;;;;;;;;;;;-1:-1:-1;;;;;;20842:21:2;;;;;;;;;20874:34;;20842:21;;20812:12;;20874:34;;20891:3;;20896:11;;20874:34;;:::i;:::-;;;;;;;;;;;;;20864:45;;;;;;20842:68;;;;;;;;;;;;20827:89;;20812:104;;20923:12;20952:17;20973:3;-1:-1:-1;;;;;20973:14:2;20988:4;20973:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20949:44:2;-1:-1:-1;21008:38:2;;-1:-1:-1;20949:44:2;21029:16;21034:11;21029:2;:16;:::i;:::-;21008:14;:38::i;:::-;21073:28;;-1:-1:-1;;;21073:28:2;;21001:45;;-1:-1:-1;21058:12:2;;-1:-1:-1;;;;;;;;;;;;21073:17:2;;;:28;;21091:3;;21096:4;;21073:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21058:43;;21120:4;21112;:12;21108:186;;21134:153;;-1:-1:-1;;;21134:153:2;;;;;;;:::i;:::-;;;;;;;;;21299:34;;-1:-1:-1;;;21299:34:2;;-1:-1:-1;;;;;;;;;;;21299:18:2;;;:34;;21318:3;;21323:4;;21329:3;;21299:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;21346:12:2;;;21339:19;;-1:-1:-1;;;;;;21339:19:2;;;-1:-1:-1;21371:9:2;;;21364:16;;-1:-1:-1;;21364:16:2;;;21386:17;-1:-1:-1;21393:10:2;;21346:12;21386:17;:::i;:::-;21416:4;:11;;21409:18;;;20502:930;;;;;;;;20432:1000;;:::o;22680:340::-;22739:12;22759:19;22791:1;:8;22802:2;22791:13;;;;:::i;:::-;22781:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22781:24:2;;22759:46;;22816:6;22811:185;22832:1;:8;22828:1;:12;22811:185;;;22855:9;22867:1;22869;22867:4;;;;;;;;:::i;:::-;;;;;;;22855:16;;22980:1;22974;22970:2;22966:10;22962:2;22958:19;22950:6;22946:32;22939:43;22929:61;22842:3;;;;;:::i;:::-;;;;22811:185;;;-1:-1:-1;23009:6:2;22680:340;-1:-1:-1;;22680:340:2:o;15827:3037::-;15910:12;;;;15942:9;;;;15976:11;;;;16016:10;;;15993:33;;;;;;;;;;;;;;;;;;;15884:4;;-1:-1:-1;;;;;15910:12:2;;15942:9;;;15976:11;15884:4;;15993:33;;16016:10;;15993:33;;;16016:10;15993:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;16069:15:2;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;16069:21:2;;;;;;;;;16101:34;;15993:33;;-1:-1:-1;16069:21:2;:15;;-1:-1:-1;16101:34:2;;-1:-1:-1;15993:33:2;;16123:11;;16101:34;;:::i;:::-;;;;-1:-1:-1;;16101:34:2;;;;;;;;;16091:45;;16101:34;16091:45;;;;16069:68;;;;;;;;;;-1:-1:-1;16069:68:2;;;;16065:172;;;-1:-1:-1;;;;;16162:15:2;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;16162:21:2;;;;;;;;;16194:34;;16162:21;;:10;16194:34;;16211:3;;16216:11;;16194:34;;:::i;:::-;;;;;;;;;;;;;16184:45;;;;;;16162:68;;;;;;;;;;;;16147:83;;;;;;15827:3037;;;:::o;16065:172::-;16242:17;16279:4;16285:12;16293:3;16285:7;:12::i;:::-;16262:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16242:56;;-1:-1:-1;;;;;;;;;;;15168:34:2;;-1:-1:-1;;;;;16304:19:2;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16331:12;16360:17;16381:3;-1:-1:-1;;;;;16381:14:2;16396:4;16381:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16357:44:2;-1:-1:-1;16416:38:2;;-1:-1:-1;16357:44:2;16437:16;16442:11;16437:2;:16;:::i;16416:38::-;16496:35;;-1:-1:-1;;;16496:35:2;;-1:-1:-1;;;;;581:32:125;;16496:35:2;;;563:51:125;16409:45:2;;-1:-1:-1;16468:22:2;;-1:-1:-1;;;;;;;;;;;;16496:21:2;;;536:18:125;;16496:35:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16496:35:2;;;;;;;;;;;;:::i;:::-;16467:64;;;16541:5;:12;16557:1;16541:17;16537:1993;;16568:12;-1:-1:-1;;;;;;;;;;;15168:34:2;;-1:-1:-1;;;;;16583:17:2;;16601:3;16606:5;16612:1;16606:8;;;;;;;;:::i;:::-;;;;;;;16583:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16568:47;-1:-1:-1;16568:47:2;16623:89;;16662:41;16683:3;16693:5;16699:1;16693:8;;;;;;;;:::i;:::-;;;;;;;16688:14;;16662:41;;;;;;;:::i;:::-;;;;;;;;16623:89;16731:4;16723;:12;16719:196;;16747:159;;-1:-1:-1;;;16747:159:2;;;;;;;:::i;:::-;16927:123;16946:3;16959:4;17000:3;17005:11;16983:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16973:45;;;;;;17033:5;17039:1;17033:8;;;;;;;;:::i;:::-;;;;;;;17028:14;;16927:123;;;;;;;;;:::i;:::-;;;;;;;;17150:5;17156:1;17150:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;17058:15:2;;17145:14;17058:15;;;;;;;;;;-1:-1:-1;;;;;;17058:21:2;;;;;;;;;17099:34;;17150:8;;17058:21;;17099:34;;17116:3;;17121:11;;17099:34;;:::i;:::-;;;;-1:-1:-1;;17099:34:2;;;;;;;;;17089:45;;17099:34;17089:45;;;;17058:84;;;;;;;;;;;;-1:-1:-1;17058:84:2;;;:101;;;;-1:-1:-1;;;;;17167:15:2;;;;17254:4;17167:10;;;:15;;;;;-1:-1:-1;;;;;;17167:21:2;;;;;;;;;17208:34;;17254:4;;-1:-1:-1;17208:34:2;;17225:3;;17230:11;;17208:34;;:::i;:::-;;;;;;;-1:-1:-1;;17208:34:2;;;;;;17198:45;;17208:34;17198:45;;;;17167:84;;;;;;;;;;-1:-1:-1;17167:84:2;:91;;-1:-1:-1;;17167:91:2;;;;;;;;;;-1:-1:-1;16537:1993:2;;;17290:1;17275:5;:12;:16;17271:1259;;;17306:6;17301:1096;17322:5;:12;17318:1;:16;17301:1096;;;17351:12;-1:-1:-1;;;;;;;;;;;15168:34:2;;-1:-1:-1;;;;;17366:17:2;;17384:3;17389:5;17395:1;17389:8;;;;;;;;:::i;:::-;;;;;;;17366:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17351:47;-1:-1:-1;17351:47:2;17408:93;;17449:41;17470:3;17480:5;17486:1;17480:8;;;;;;;;:::i;:::-;;;;;;;17475:14;;17449:41;;;;;;;:::i;:::-;;;;;;;;17408:93;-1:-1:-1;;;;;;;;;;;15168:34:2;;-1:-1:-1;;;;;17527:18:2;;17546:3;17551:5;17557:1;17551:8;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;17527:53:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17590:12;17612:17;17669:3;-1:-1:-1;;;;;17669:14:2;17684:4;17669:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17651:38:2;;-1:-1:-1;17651:38:2;-1:-1:-1;17708:38:2;17651;17729:16;17734:11;17729:2;:16;:::i;17708:38::-;17701:45;;17771:7;:37;;;;;-1:-1:-1;;;17782:4:2;:26;17771:37;17767:573;;;17886:143;17909:3;17926:4;17971:3;17976:11;17954:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;17944:45;;;;;;18008:5;18014:1;18008:8;;;;;;;;:::i;:::-;;;;;;;18003:14;;17886:143;;;;;;;;;:::i;:::-;;;;;;;;18141:5;18147:1;18141:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;18041:15:2;;18136:14;18041:15;;;;;;;;;;-1:-1:-1;;;;;;18041:21:2;;;;;;;;;18086:34;;18141:8;;18041:21;;18086:34;;18103:3;;18108:11;;18086:34;;:::i;:::-;;;;;;;;;;;;;18076:45;;;;;;18041:92;;;;;;;;;;;:109;;;;18257:4;18162;:10;;:15;18173:3;-1:-1:-1;;;;;18162:15:2;-1:-1:-1;;;;;18162:15:2;;;;;;;;;;;;:21;18178:4;-1:-1:-1;;;;;18162:21:2;;-1:-1:-1;;;;;18162:21:2;;;;;;;;;;;;;:92;18224:3;18229:11;18207:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;18197:45;;;;;;18162:92;;;;;;;;;;;;:99;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;15168:34:2;;-1:-1:-1;;;;;18273:18:2;;18292:3;18297:5;18303:1;18297:8;;;;;;;;:::i;:::-;;;;;;;18307:4;18273:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18324:5;;;;;17767:573;-1:-1:-1;;;;;;;;;;;15168:34:2;;-1:-1:-1;;;;;18349:18:2;;18368:3;18373:5;18379:1;18373:8;;;;;;;;:::i;:::-;;;;;;;18383:4;18349:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17341:1056;;;17336:3;;;;;:::i;:::-;;;;17301:1096;;;;17271:1259;;;18417:106;;;-1:-1:-1;;;18417:106:2;;41016:2:125;18417:106:2;;;40998:21:125;41035:18;;;41028:30;;;;41094:34;41074:18;;;41067:62;41165:34;41145:18;;;41138:62;41217:19;;18417:106:2;40814:428:125;18417:106:2;-1:-1:-1;;;;;18551:15:2;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;18551:21:2;;;;;;;;;18583:34;;18551:21;;:15;18583:34;;18600:3;;18605:11;;18583:34;;:::i;:::-;;;;-1:-1:-1;;18583:34:2;;;;;;;;;18573:45;;18583:34;18573:45;;;;18551:68;;;;;;;;;;-1:-1:-1;18551:68:2;;;;18536:146;;;;-1:-1:-1;;;18536:146:2;;41449:2:125;18536:146:2;;;41431:21:125;41488:2;41468:18;;;41461:30;41527:34;41507:18;;;41500:62;-1:-1:-1;;;41578:18:125;;;41571:45;41633:19;;18536:146:2;41247:411:125;18536:146:2;18696:12;;;18689:19;;-1:-1:-1;;;;;;18689:19:2;;;18721:9;;;18714:16;;-1:-1:-1;;18714:16:2;;;18736:17;-1:-1:-1;18743:10:2;;18696:12;18736:17;:::i;:::-;18759:18;18766:11;;;18759:18;;;-1:-1:-1;;;;;18791:15:2;;;;;;;;;;;;-1:-1:-1;;;;;;18791:21:2;;;;;;;;;18823:34;;18791:21;;18759:18;18823:34;;18840:3;;18845:11;;18823:34;;:::i;:::-;;;;;;;;;;;;;18813:45;;;;;;18791:68;;;;;;;;;;;;18784:75;;;;;;;;;15827:3037;;;:::o;22396:280::-;22482:7;22499:11;22517:8;22539:2;22528:1;:8;:13;:29;;22549:1;:8;22528:29;;;22544:2;22528:29;22517:40;;22568:6;22563:93;22584:3;22580:1;:7;22563:93;;;22643:5;:1;22647;22643:5;:::i;:::-;22617:1;22619:10;22628:1;22619:6;:10;:::i;:::-;22617:13;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;22617:13:2;22609:40;;22602:47;;;;;22589:3;;;;:::i;:::-;;;;22563:93;;;-1:-1:-1;22668:3:2;;22396:280;-1:-1:-1;;;;22396:280:2:o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:118:125;100:5;93:13;86:21;79:5;76:32;66:60;;122:1;119;112:12;137:241;193:6;246:2;234:9;225:7;221:23;217:32;214:52;;;262:1;259;252:12;214:52;301:9;288:23;320:28;342:5;320:28;:::i;625:139::-;-1:-1:-1;;;;;708:31:125;;698:42;;688:70;;754:1;751;744:12;769:571;875:6;883;891;944:2;932:9;923:7;919:23;915:32;912:52;;;960:1;957;950:12;912:52;999:9;986:23;1018:39;1051:5;1018:39;:::i;:::-;1076:5;-1:-1:-1;1133:2:125;1118:18;;1105:32;1146:41;1105:32;1146:41;:::i;:::-;1206:7;-1:-1:-1;1265:2:125;1250:18;;1237:32;1278:30;1237:32;1278:30;:::i;:::-;1327:7;1317:17;;;769:571;;;;;:::o;1553:127::-;1614:10;1609:3;1605:20;1602:1;1595:31;1645:4;1642:1;1635:15;1669:4;1666:1;1659:15;1685:251;1757:2;1751:9;;;1787:15;;1832:18;1817:34;;1853:22;;;1814:62;1811:88;;;1879:18;;:::i;:::-;1915:2;1908:22;1685:251;:::o;1941:275::-;2012:2;2006:9;2077:2;2058:13;;-1:-1:-1;;2054:27:125;2042:40;;2112:18;2097:34;;2133:22;;;2094:62;2091:88;;;2159:18;;:::i;:::-;2195:2;2188:22;1941:275;;-1:-1:-1;1941:275:125:o;2221:187::-;2270:4;2303:18;2295:6;2292:30;2289:56;;;2325:18;;:::i;:::-;-1:-1:-1;2391:2:125;2370:15;-1:-1:-1;;2366:29:125;2397:4;2362:40;;2221:187::o;2413:965::-;2500:6;2508;2516;2569:2;2557:9;2548:7;2544:23;2540:32;2537:52;;;2585:1;2582;2575:12;2537:52;2624:9;2611:23;2643:39;2676:5;2643:39;:::i;:::-;2701:5;-1:-1:-1;2758:2:125;2743:18;;2730:32;2771:41;2730:32;2771:41;:::i;:::-;2831:7;-1:-1:-1;2889:2:125;2874:18;;2861:32;2916:18;2905:30;;2902:50;;;2948:1;2945;2938:12;2902:50;2971:22;;3024:4;3016:13;;3012:27;-1:-1:-1;3002:55:125;;3053:1;3050;3043:12;3002:55;3089:2;3076:16;3114:49;3130:32;3159:2;3130:32;:::i;:::-;3114:49;:::i;:::-;3186:2;3179:5;3172:17;3226:7;3221:2;3216;3212;3208:11;3204:20;3201:33;3198:53;;;3247:1;3244;3237:12;3198:53;3302:2;3297;3293;3289:11;3284:2;3277:5;3273:14;3260:45;3346:1;3341:2;3336;3329:5;3325:14;3321:23;3314:34;3367:5;3357:15;;;;;2413:965;;;;;:::o;3837:182::-;3896:4;3929:18;3921:6;3918:30;3915:56;;;3951:18;;:::i;:::-;-1:-1:-1;3996:1:125;3992:14;4008:4;3988:25;;3837:182::o;4024:889::-;4107:6;4138:2;4181;4169:9;4160:7;4156:23;4152:32;4149:52;;;4197:1;4194;4187:12;4149:52;4237:9;4224:23;4270:18;4262:6;4259:30;4256:50;;;4302:1;4299;4292:12;4256:50;4325:22;;4378:4;4370:13;;4366:27;-1:-1:-1;4356:55:125;;4407:1;4404;4397:12;4356:55;4443:2;4430:16;4466:59;4482:42;4521:2;4482:42;:::i;4466:59::-;4559:15;;;4641:1;4637:10;;;;4629:19;;4625:28;;;4590:12;;;;4665:19;;;4662:39;;;4697:1;4694;4687:12;4662:39;4721:11;;;;4741:142;4757:6;4752:3;4749:15;4741:142;;;4823:17;;4811:30;;4774:12;;;;4861;;;;4741:142;;;4902:5;4024:889;-1:-1:-1;;;;;;;4024:889:125:o;4918:407::-;5011:6;5019;5027;5080:2;5068:9;5059:7;5055:23;5051:32;5048:52;;;5096:1;5093;5086:12;5048:52;5135:9;5122:23;5154:39;5187:5;5154:39;:::i;:::-;5212:5;5264:2;5249:18;;5236:32;;-1:-1:-1;5315:2:125;5300:18;;;5287:32;;4918:407;-1:-1:-1;;;4918:407:125:o;6599:404::-;6667:6;6675;6728:2;6716:9;6707:7;6703:23;6699:32;6696:52;;;6744:1;6741;6734:12;6696:52;6783:9;6770:23;6802:39;6835:5;6802:39;:::i;:::-;6860:5;-1:-1:-1;6917:2:125;6902:18;;6889:32;6930:41;6889:32;6930:41;:::i;:::-;6990:7;6980:17;;;6599:404;;;;;:::o;7474:339::-;7558:6;7566;7619:2;7607:9;7598:7;7594:23;7590:32;7587:52;;;7635:1;7632;7625:12;7587:52;7674:9;7661:23;7693:39;7726:5;7693:39;:::i;:::-;7751:5;7803:2;7788:18;;;;7775:32;;-1:-1:-1;;;7474:339:125:o;8259:376::-;-1:-1:-1;;;;;8510:32:125;;;;8492:51;;8574:2;8559:18;;8552:34;;;;8617:2;8602:18;;8595:34;8480:2;8465:18;;8259:376::o;9237:309::-;-1:-1:-1;;;;;9464:32:125;;;;9446:51;;9528:2;9513:18;;9506:34;9434:2;9419:18;;9237:309::o;10054:245::-;10121:6;10174:2;10162:9;10153:7;10149:23;10145:32;10142:52;;;10190:1;10187;10180:12;10142:52;10222:9;10216:16;10241:28;10263:5;10241:28;:::i;11135:391::-;-1:-1:-1;;;;;11409:15:125;;;11391:34;;11461:15;;;;11456:2;11441:18;;11434:43;11508:2;11493:18;;11486:34;;;;11341:2;11326:18;;11135:391::o;11531:545::-;-1:-1:-1;;;;;11856:15:125;;;11838:34;;11908:15;;;;11903:2;11888:18;;11881:43;11955:2;11940:18;;11933:34;;;;11998:2;11983:18;;11976:34;12054:14;;12047:22;12041:3;12026:19;;12019:51;11787:3;11772:19;;11531:545::o;12081:368::-;12178:6;12186;12194;12202;12255:3;12243:9;12234:7;12230:23;12226:33;12223:53;;;12272:1;12269;12262:12;12223:53;-1:-1:-1;;12295:16:125;;12351:2;12336:18;;12330:25;12395:2;12380:18;;12374:25;12439:2;12424:18;;;12418:25;12295:16;;12330:25;;-1:-1:-1;12418:25:125;;-1:-1:-1;12081:368:125;-1:-1:-1;12081:368:125:o;12779:184::-;12849:6;12902:2;12890:9;12881:7;12877:23;12873:32;12870:52;;;12918:1;12915;12908:12;12870:52;-1:-1:-1;12941:16:125;;12779:184;-1:-1:-1;12779:184:125:o;13180:600::-;13273:6;13326:2;13314:9;13305:7;13301:23;13297:32;13294:52;;;13342:1;13339;13332:12;13294:52;13391:7;13384:4;13373:9;13369:20;13365:34;13355:62;;13413:1;13410;13403:12;13355:62;13437:22;;:::i;:::-;13481:3;13522:2;13511:9;13507:18;13548:7;13540:6;13537:19;13534:39;;;13569:1;13566;13559:12;13534:39;13593:9;13611:139;13627:6;13622:3;13619:15;13611:139;;;13695:10;;13683:23;;13735:4;13726:14;;;;13644;13611:139;;;-1:-1:-1;13769:5:125;;13180:600;-1:-1:-1;;;;;13180:600:125:o;13785:127::-;13846:10;13841:3;13837:20;13834:1;13827:31;13877:4;13874:1;13867:15;13901:4;13898:1;13891:15;13917:127;13978:10;13973:3;13969:20;13966:1;13959:31;14009:4;14006:1;13999:15;14033:4;14030:1;14023:15;14049:128;14089:3;14120:1;14116:6;14113:1;14110:13;14107:39;;;14126:18;;:::i;:::-;-1:-1:-1;14162:9:125;;14049:128::o;14588:435::-;14641:3;14679:5;14673:12;14706:6;14701:3;14694:19;14732:4;14761:2;14756:3;14752:12;14745:19;;14798:2;14791:5;14787:14;14819:1;14829:169;14843:6;14840:1;14837:13;14829:169;;;14904:13;;14892:26;;14938:12;;;;14973:15;;;;14865:1;14858:9;14829:169;;;-1:-1:-1;15014:3:125;;14588:435;-1:-1:-1;;;;;14588:435:125:o;15028:420::-;15264:6;15253:9;15246:25;15321:6;15314:14;15307:22;15302:2;15291:9;15287:18;15280:50;15366:2;15361;15350:9;15346:18;15339:30;15227:4;15386:56;15438:2;15427:9;15423:18;15415:6;15386:56;:::i;16215:258::-;16287:1;16297:113;16311:6;16308:1;16305:13;16297:113;;;16387:11;;;16381:18;16368:11;;;16361:39;16333:2;16326:10;16297:113;;;16428:6;16425:1;16422:13;16419:48;;;-1:-1:-1;;16463:1:125;16445:16;;16438:27;16215:258::o;16478:::-;16520:3;16558:5;16552:12;16585:6;16580:3;16573:19;16601:63;16657:6;16650:4;16645:3;16641:14;16634:4;16627:5;16623:16;16601:63;:::i;:::-;16718:2;16697:15;-1:-1:-1;;16693:29:125;16684:39;;;;16725:4;16680:50;;16478:258;-1:-1:-1;;16478:258:125:o;16741:317::-;-1:-1:-1;;;;;16918:32:125;;16900:51;;16987:2;16982;16967:18;;16960:30;;;-1:-1:-1;;17007:45:125;;17033:18;;17025:6;17007:45;:::i;17063:125::-;17103:4;17131:1;17128;17125:8;17122:34;;;17136:18;;:::i;:::-;-1:-1:-1;17173:9:125;;17063:125::o;17193:636::-;17273:6;17326:2;17314:9;17305:7;17301:23;17297:32;17294:52;;;17342:1;17339;17332:12;17294:52;17375:9;17369:16;17408:18;17400:6;17397:30;17394:50;;;17440:1;17437;17430:12;17394:50;17463:22;;17516:4;17508:13;;17504:27;-1:-1:-1;17494:55:125;;17545:1;17542;17535:12;17494:55;17574:2;17568:9;17599:49;17615:32;17644:2;17615:32;:::i;17599:49::-;17671:2;17664:5;17657:17;17711:7;17706:2;17701;17697;17693:11;17689:20;17686:33;17683:53;;;17732:1;17729;17722:12;17683:53;17745:54;17796:2;17791;17784:5;17780:14;17775:2;17771;17767:11;17745:54;:::i;17834:470::-;18013:3;18051:6;18045:13;18067:53;18113:6;18108:3;18101:4;18093:6;18089:17;18067:53;:::i;:::-;18183:13;;18142:16;;;;18205:57;18183:13;18142:16;18239:4;18227:17;;18205:57;:::i;:::-;18278:20;;17834:470;-1:-1:-1;;;;17834:470:125:o;18309:429::-;18530:3;18568:6;18562:13;18584:53;18630:6;18625:3;18618:4;18610:6;18606:17;18584:53;:::i;:::-;-1:-1:-1;;;18659:16:125;;18684:19;;;-1:-1:-1;18730:1:125;18719:13;;18309:429;-1:-1:-1;18309:429:125:o;18743:135::-;18782:3;18803:17;;;18800:43;;18823:18;;:::i;:::-;-1:-1:-1;18870:1:125;18859:13;;18743:135::o;18883:422::-;18972:1;19015:5;18972:1;19029:270;19050:7;19040:8;19037:21;19029:270;;;19109:4;19105:1;19101:6;19097:17;19091:4;19088:27;19085:53;;;19118:18;;:::i;:::-;19168:7;19158:8;19154:22;19151:55;;;19188:16;;;;19151:55;19267:22;;;;19227:15;;;;19029:270;;;19033:3;18883:422;;;;;:::o;19310:806::-;19359:5;19389:8;19379:80;;-1:-1:-1;19430:1:125;19444:5;;19379:80;19478:4;19468:76;;-1:-1:-1;19515:1:125;19529:5;;19468:76;19560:4;19578:1;19573:59;;;;19646:1;19641:130;;;;19553:218;;19573:59;19603:1;19594:10;;19617:5;;;19641:130;19678:3;19668:8;19665:17;19662:43;;;19685:18;;:::i;:::-;-1:-1:-1;;19741:1:125;19727:16;;19756:5;;19553:218;;19855:2;19845:8;19842:16;19836:3;19830:4;19827:13;19823:36;19817:2;19807:8;19804:16;19799:2;19793:4;19790:12;19786:35;19783:77;19780:159;;;-1:-1:-1;19892:19:125;;;19924:5;;19780:159;19971:34;19996:8;19990:4;19971:34;:::i;:::-;20041:6;20037:1;20033:6;20029:19;20020:7;20017:32;20014:58;;;20052:18;;:::i;:::-;20090:20;;19310:806;-1:-1:-1;;;19310:806:125:o;20121:131::-;20181:5;20210:36;20237:8;20231:4;20210:36;:::i;20257:217::-;20297:1;20323;20313:132;;20367:10;20362:3;20358:20;20355:1;20348:31;20402:4;20399:1;20392:15;20430:4;20427:1;20420:15;20313:132;-1:-1:-1;20459:9:125;;20257:217::o;21162:371::-;-1:-1:-1;;;;;;21347:33:125;;21335:46;;21404:13;;21317:3;;21426:61;21404:13;21476:1;21467:11;;21460:4;21448:17;;21426:61;:::i;:::-;21507:16;;;;21525:1;21503:24;;21162:371;-1:-1:-1;;;21162:371:125:o;21538:274::-;21667:3;21705:6;21699:13;21721:53;21767:6;21762:3;21755:4;21747:6;21743:17;21721:53;:::i;:::-;21790:16;;;;;21538:274;-1:-1:-1;;21538:274:125:o;22671:283::-;22765:6;22818:2;22806:9;22797:7;22793:23;22789:32;22786:52;;;22834:1;22831;22824:12;22786:52;22866:9;22860:16;22885:39;22918:5;22885:39;:::i;22959:573::-;-1:-1:-1;;;;;23328:15:125;;;23310:34;;23380:15;;;;23375:2;23360:18;;23353:43;23427:2;23412:18;;23405:34;;;;23470:2;23455:18;;23448:34;23513:3;23498:19;;23491:35;;;;23259:3;23244:19;;22959:573::o;23537:168::-;23577:7;23643:1;23639;23635:6;23631:14;23628:1;23625:21;23620:1;23613:9;23606:17;23602:45;23599:71;;;23650:18;;:::i;:::-;-1:-1:-1;23690:9:125;;23537:168::o;23710:273::-;23778:6;23831:2;23819:9;23810:7;23806:23;23802:32;23799:52;;;23847:1;23844;23837:12;23799:52;23879:9;23873:16;23929:4;23922:5;23918:16;23911:5;23908:27;23898:55;;23949:1;23946;23939:12;23988:380;24067:1;24063:12;;;;24110;;;24131:61;;24185:4;24177:6;24173:17;24163:27;;24131:61;24238:2;24230:6;24227:14;24207:18;24204:38;24201:161;;24284:10;24279:3;24275:20;24272:1;24265:31;24319:4;24316:1;24309:15;24347:4;24344:1;24337:15;24201:161;;23988:380;;;:::o;24499:1042::-;24584:12;;24549:3;;24639:1;24659:18;;;;24712;;;;24739:61;;24793:4;24785:6;24781:17;24771:27;;24739:61;24819:2;24867;24859:6;24856:14;24836:18;24833:38;24830:161;;24913:10;24908:3;24904:20;24901:1;24894:31;24948:4;24945:1;24938:15;24976:4;24973:1;24966:15;24830:161;8727:19;;;8779:4;8770:14;;25077:18;25104:104;;;;25222:1;25217:318;;;;25070:465;;25104:104;-1:-1:-1;;25139:24:125;;25125:39;;25184:14;;;;-1:-1:-1;25104:104:125;;25217:318;24446:1;24439:14;;;24483:4;24470:18;;25311:1;25325:167;25339:6;25336:1;25333:13;25325:167;;;25419:14;;25404:13;;;25397:37;25462:16;;;;25354:10;;25325:167;;;25512:13;;;-1:-1:-1;;25070:465:125;;;;;;;;24499:1042;;;;:::o;25546:578::-;-1:-1:-1;;;;;25797:32:125;;25779:51;;25866:3;25861:2;25846:18;;25839:31;;;-1:-1:-1;;25893:54:125;;25927:19;;25919:6;25893:54;:::i;:::-;25995:9;25987:6;25983:22;25978:2;25967:9;25963:18;25956:50;26023:41;26057:6;26049;26023:41;:::i;:::-;26015:49;;;26112:4;26104:6;26100:17;26095:2;26084:9;26080:18;26073:45;25546:578;;;;;;;:::o;26673:446::-;26923:2;26912:9;26905:21;26962:1;26957:2;26946:9;26942:18;26935:29;-1:-1:-1;;;26995:2:125;26984:9;26980:18;26973:35;27046:3;27039:4;27028:9;27024:20;27017:33;26886:4;27067:46;27108:3;27097:9;27093:19;27085:6;27067:46;:::i;27124:1752::-;27242:6;27273:2;27316;27304:9;27295:7;27291:23;27287:32;27284:52;;;27332:1;27329;27322:12;27284:52;27365:9;27359:16;27394:18;27435:2;27427:6;27424:14;27421:34;;;27451:1;27448;27441:12;27421:34;27489:6;27478:9;27474:22;27464:32;;27515:4;27555:7;27550:2;27546;27542:11;27538:25;27528:53;;27577:1;27574;27567:12;27528:53;27601:22;;:::i;:::-;27645:3;27679:2;27675;27671:11;27705:7;27697:6;27694:19;27691:39;;;27726:1;27723;27716:12;27691:39;27750:2;27761:1085;27777:6;27772:3;27769:15;27761:1085;;;27856:3;27850:10;27892:2;27879:11;27876:19;27873:109;;;27936:1;27965:2;27961;27954:14;27873:109;28005:20;;28052:11;;;28048:25;-1:-1:-1;28038:123:125;;28115:1;28144:2;28140;28133:14;28038:123;28190:2;28184:9;28219:59;28235:42;28274:2;28235:42;:::i;28219:59::-;28322:17;;;28420:1;28416:10;;;;28408:19;;28404:28;;;28361:14;;;;28448:21;;;28445:111;;;28510:1;28539:2;28535;28528:14;28445:111;28582:11;;;;28606:167;28624:8;28617:5;28614:19;28606:167;;;28706:12;;28692:27;;28645:14;;;;28745;;;;28606:167;;;28786:18;;-1:-1:-1;;;28824:12:125;;;;27794;;27761:1085;;;-1:-1:-1;28865:5:125;;27124:1752;-1:-1:-1;;;;;;;;;27124:1752:125:o;29441:428::-;-1:-1:-1;;;29688:3:125;29681:34;29663:3;29744:6;29738:13;29760:62;29815:6;29810:2;29805:3;29801:12;29794:4;29786:6;29782:17;29760:62;:::i;:::-;29842:16;;;;29860:2;29838:25;;29441:428;-1:-1:-1;;29441:428:125:o;29874:1654::-;30254:4;30302:3;30291:9;30287:19;30347:6;30340:14;30333:22;30322:9;30315:41;30375:2;30413:6;30408:2;30397:9;30393:18;30386:34;30456:6;30451:2;30440:9;30436:18;30429:34;30499:6;30494:2;30483:9;30479:18;30472:34;30543:3;30537;30526:9;30522:19;30515:32;30567:6;30589;30582:13;;30633:3;30622:9;30618:19;30604:33;;30660:6;30684:1;30705;30715:686;30731:4;30726:3;30723:13;30715:686;;;30798:22;;;-1:-1:-1;;30794:37:125;30782:50;;30855:13;;30927:9;;30949:22;;;31037:11;;;;30993:15;;;;31072:1;31086:207;31102:6;31097:3;31094:15;31086:207;;;31177:15;;31163:30;;31262:17;;;;31219:14;;;;31128:1;31119:11;31086:207;;;-1:-1:-1;31316:5:125;;-1:-1:-1;;;31379:12:125;;;;31344:15;;;;30755:1;30746:11;30715:686;;;30719:3;;;;;31450:9;31442:6;31438:22;31432:3;31421:9;31417:19;31410:51;31478:44;31515:6;31507;31478:44;:::i;:::-;31470:52;29874:1654;-1:-1:-1;;;;;;;;;29874:1654:125:o;31533:220::-;31682:2;31671:9;31664:21;31645:4;31702:45;31743:2;31732:9;31728:18;31720:6;31702:45;:::i;32067:291::-;32192:6;32200;32253:2;32241:9;32232:7;32228:23;32224:32;32221:52;;;32269:1;32266;32259:12;32221:52;-1:-1:-1;;32292:16:125;;32348:2;32333:18;;;32327:25;32292:16;;32327:25;;-1:-1:-1;32067:291:125:o;34646:348::-;34876:2;34865:9;34858:21;34839:4;34896:49;34941:2;34930:9;34926:18;34559:2;34547:15;;-1:-1:-1;;;34587:4:125;34578:14;;34571:36;34632:2;34623:12;;34482:159;34896:49;34888:57;;34981:6;34976:2;34965:9;34961:18;34954:34;34646:348;;;;:::o;35163:::-;35393:2;35382:9;35375:21;35356:4;35413:49;35458:2;35447:9;35443:18;35076:2;35064:15;;-1:-1:-1;;;35104:4:125;35095:14;;35088:36;35149:2;35140:12;;34999:159;35516:136;35555:3;35583:5;35573:39;;35592:18;;:::i;:::-;-1:-1:-1;;;35628:18:125;;35516:136::o;35657:::-;35692:3;-1:-1:-1;;;35713:22:125;;35710:48;;35738:18;;:::i;:::-;-1:-1:-1;35778:1:125;35774:13;;35657:136::o;36551:440::-;36801:2;36790:9;36783:21;36764:4;36827:49;36872:2;36861:9;36857:18;34559:2;34547:15;;-1:-1:-1;;;34587:4:125;34578:14;;34571:36;34632:2;34623:12;;34482:159;36827:49;36924:9;36916:6;36912:22;36907:2;36896:9;36892:18;36885:50;36952:33;36978:6;36970;36952:33;:::i;36996:440::-;37246:2;37235:9;37228:21;37209:4;37272:49;37317:2;37306:9;37302:18;35076:2;35064:15;;-1:-1:-1;;;35104:4:125;35095:14;;35088:36;35149:2;35140:12;;34999:159;37441:610;37687:13;;37630:3;;37661;;37740:4;37767:15;;;37630:3;37810:175;37824:6;37821:1;37818:13;37810:175;;;37887:13;;37873:28;;37923:14;;;;37960:15;;;;37846:1;37839:9;37810:175;;;-1:-1:-1;;37994:21:125;;;-1:-1:-1;38031:14:125;;;;;-1:-1:-1;;;37441:610:125:o;38245:556::-;38447:2;38429:21;;;38486:3;38466:18;;;38459:31;38526:34;38521:2;38506:18;;38499:62;38597:34;38592:2;38577:18;;38570:62;38669:34;38663:3;38648:19;;38641:63;-1:-1:-1;;;38735:3:125;38720:19;;38713:46;38791:3;38776:19;;38245:556::o;38806:658::-;38871:5;38924:3;38917:4;38909:6;38905:17;38901:27;38891:55;;38942:1;38939;38932:12;38891:55;38971:6;38965:13;38997:4;39021:59;39037:42;39076:2;39037:42;:::i;39021:59::-;39114:15;;;39200:1;39196:10;;;;39184:23;;39180:32;;;39145:12;;;;39224:15;;;39221:35;;;39252:1;39249;39242:12;39221:35;39288:2;39280:6;39276:15;39300:135;39316:6;39311:3;39308:15;39300:135;;;39382:10;;39370:23;;39413:12;;;;39333;;39300:135;;;-1:-1:-1;39453:5:125;38806:658;-1:-1:-1;;;;;;38806:658:125:o;39469:614::-;39598:6;39606;39659:2;39647:9;39638:7;39634:23;39630:32;39627:52;;;39675:1;39672;39665:12;39627:52;39708:9;39702:16;39737:18;39778:2;39770:6;39767:14;39764:34;;;39794:1;39791;39784:12;39764:34;39817:72;39881:7;39872:6;39861:9;39857:22;39817:72;:::i;:::-;39807:82;;39935:2;39924:9;39920:18;39914:25;39898:41;;39964:2;39954:8;39951:16;39948:36;;;39980:1;39977;39970:12;39948:36;;40003:74;40069:7;40058:8;40047:9;40043:24;40003:74;:::i;:::-;39993:84;;;39469:614;;;;;:::o;40367:442::-;-1:-1:-1;;;;;40614:32:125;;;;40596:51;;-1:-1:-1;;;;;;40683:33:125;;;;40678:2;40663:18;;40656:61;40748:2;40733:18;;40726:34;40791:2;40776:18;;40769:34;40583:3;40568:19;;40367:442::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "cash(address,uint256)": "d56a22f0",
    "cash(address,uint256,uint256)": "6cc12a24",
    "echoSender()": "1e91f8cb",
    "failed()": "ba414fa6",
    "logary(int256[])": "521606d2",
    "logary(uint256[])": "b84e3eda",
    "part_deploy_strat()": "c8e617c2",
    "part_kill()": "423c0f1e",
    "part_market_order()": "b23ae37c",
    "part_negative_shift()": "c002f5ee",
    "part_partial_fill()": "1dff3591",
    "part_positive_shift()": "2d552ef6",
    "part_restart_fixed_shift()": "48980f64",
    "part_text_residual_1()": "35d75d3b",
    "part_text_residual_2()": "a9b0690b",
    "setUp()": "0a9254e4",
    "setupMaker(address,address,string)": "bfdc3588",
    "setupMakerDeployer(address,address)": "bbab0fac",
    "setupMangrove()": "8c004832",
    "setupMangrove(address,address)": "ea14b5c3",
    "setupMangrove(address,address,bool)": "0b3d8c42",
    "setupMangrove(bool)": "0645f2be",
    "setupTaker(address,address,string)": "3336a63f",
    "test_all()": "a7465fca",
    "vm()": "3a768463"
  },
  "ast": {
    "absolutePath": "packages/mangrove-solidity/test/strategies/Mango.t.sol",
    "id": 82055,
    "exportedSymbols": {
      "ACS": [43438],
      "ARSt": [39449],
      "AbstractMangrove": [22838],
      "AbstractRouter": [39424],
      "AccessControlled": [43417],
      "DSTest": [1786],
      "HasMgvEvents": [24715],
      "IERC20": [24851],
      "IMaker": [24733],
      "IMangrove": [23446],
      "IMgvMonitor": [24773],
      "IOfferLogic": [37078],
      "ITaker": [24745],
      "InvertedMangrove": [23581],
      "ML": [24540],
      "MOS": [34207],
      "MakerDeployer": [72689],
      "Mango": [41268],
      "MangoImplementation": [43230],
      "MangoStorage": [43316],
      "MangoTest": [82054],
      "Mangrove": [23707],
      "MangroveOffer": [34177],
      "MangroveTest": [70515],
      "MgvLib": [24540],
      "P": [24511],
      "Persistent": [39782],
      "Script": [2022],
      "SimpleRouter": [39591],
      "SingleUser": [40390],
      "StdStorage": [3553],
      "Test": [3455],
      "Test2": [70890],
      "TestMaker": [73404],
      "TestMoriartyMaker": [73653],
      "TestTaker": [73996],
      "TestToken": [76251],
      "TransferLib": [43584],
      "TrivialTestMaker": [72724],
      "Utilities": [72490],
      "Vm": [5425],
      "console": [13489],
      "console2": [21553],
      "csl": [21553],
      "stdError": [3525],
      "stdMath": [4796],
      "stdStorage": [4655]
    },
    "nodeType": "SourceUnit",
    "src": "37:13553:116",
    "nodes": [
      {
        "id": 79969,
        "nodeType": "PragmaDirective",
        "src": "37:24:116",
        "literals": ["solidity", "^", "0.8", ".10"]
      },
      {
        "id": 79970,
        "nodeType": "ImportDirective",
        "src": "63:39:116",
        "absolutePath": "packages/mangrove-solidity/test/lib/MangroveTest.sol",
        "file": "mgv_test/lib/MangroveTest.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 82055,
        "sourceUnit": 70516,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 79971,
        "nodeType": "ImportDirective",
        "src": "103:70:116",
        "absolutePath": "packages/mangrove-solidity/src/strategies/single_user/market_making/mango/Mango.sol",
        "file": "mgv_src/strategies/single_user/market_making/mango/Mango.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 82055,
        "sourceUnit": 41269,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 79972,
        "nodeType": "ImportDirective",
        "src": "174:53:116",
        "absolutePath": "packages/mangrove-solidity/src/strategies/routers/SimpleRouter.sol",
        "file": "mgv_src/strategies/routers/SimpleRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 82055,
        "sourceUnit": 39592,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 82054,
        "nodeType": "ContractDefinition",
        "src": "229:13360:116",
        "nodes": [
          {
            "id": 79981,
            "nodeType": "StructDefinition",
            "src": "268:51:116",
            "canonicalName": "MangoTest.Book",
            "members": [
              {
                "constant": false,
                "id": 79977,
                "mutability": "mutable",
                "name": "bids",
                "nameLocation": "293:4:116",
                "nodeType": "VariableDeclaration",
                "scope": 79981,
                "src": "286:11:116",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 79975,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "286:4:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 79976,
                  "nodeType": "ArrayTypeName",
                  "src": "286:6:116",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 79980,
                "mutability": "mutable",
                "name": "asks",
                "nameLocation": "310:4:116",
                "nodeType": "VariableDeclaration",
                "scope": 79981,
                "src": "303:11:116",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 79978,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "303:4:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 79979,
                  "nodeType": "ArrayTypeName",
                  "src": "303:6:116",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Book",
            "nameLocation": "275:4:116",
            "scope": 82054,
            "visibility": "public"
          },
          {
            "id": 79984,
            "nodeType": "VariableDeclaration",
            "src": "323:32:116",
            "constant": true,
            "mutability": "constant",
            "name": "BASE0",
            "nameLocation": "337:5:116",
            "scope": 82054,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 79982,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "323:4:116",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "302e3334",
              "id": 79983,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "345:10:116",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_340000000000000000_by_1",
                "typeString": "int_const 340000000000000000"
              },
              "value": "0.34"
            },
            "visibility": "internal"
          },
          {
            "id": 79991,
            "nodeType": "VariableDeclaration",
            "src": "359:34:116",
            "constant": true,
            "mutability": "constant",
            "name": "BASE1",
            "nameLocation": "373:5:116",
            "scope": 82054,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 79985,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "359:4:116",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_1000000000_by_1",
                "typeString": "int_const 1000000000"
              },
              "id": 79990,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "31303030",
                "id": 79986,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "381:4:116",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000_by_1",
                  "typeString": "int_const 1000"
                },
                "value": "1000"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_1000000_by_1",
                  "typeString": "int_const 1000000"
                },
                "id": 79989,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "3130",
                  "id": 79987,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "388:2:116",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "hexValue": "36",
                  "id": 79988,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "392:1:116",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_6_by_1",
                    "typeString": "int_const 6"
                  },
                  "value": "6"
                },
                "src": "388:5:116",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000_by_1",
                  "typeString": "int_const 1000000"
                }
              },
              "src": "381:12:116",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000_by_1",
                "typeString": "int_const 1000000000"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 79994,
            "nodeType": "VariableDeclaration",
            "src": "422:25:116",
            "constant": true,
            "mutability": "constant",
            "name": "NSLOTS",
            "nameLocation": "436:6:116",
            "scope": 82054,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 79992,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "422:4:116",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 79993,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "445:2:116",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "internal"
          },
          {
            "id": 80001,
            "nodeType": "VariableDeclaration",
            "src": "487:32:116",
            "constant": true,
            "mutability": "constant",
            "name": "DELTA",
            "nameLocation": "501:5:116",
            "scope": 82054,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 79995,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "487:4:116",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_34000000_by_1",
                "typeString": "int_const 34000000"
              },
              "id": 80000,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3334",
                "id": 79996,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "509:2:116",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_34_by_1",
                  "typeString": "int_const 34"
                },
                "value": "34"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_1000000_by_1",
                  "typeString": "int_const 1000000"
                },
                "id": 79999,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "3130",
                  "id": 79997,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "514:2:116",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "hexValue": "36",
                  "id": 79998,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "518:1:116",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_6_by_1",
                    "typeString": "int_const 6"
                  },
                  "value": "6"
                },
                "src": "514:5:116",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000_by_1",
                  "typeString": "int_const 1000000"
                }
              },
              "src": "509:10:116",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_34000000_by_1",
                "typeString": "int_const 34000000"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 80004,
            "nodeType": "VariableDeclaration",
            "src": "550:14:116",
            "constant": false,
            "mutability": "mutable",
            "name": "weth",
            "nameLocation": "560:4:116",
            "scope": 82054,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestToken_$76251",
              "typeString": "contract TestToken"
            },
            "typeName": {
              "id": 80003,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 80002,
                "name": "TestToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 76251,
                "src": "550:9:116"
              },
              "referencedDeclaration": 76251,
              "src": "550:9:116",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestToken_$76251",
                "typeString": "contract TestToken"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 80007,
            "nodeType": "VariableDeclaration",
            "src": "568:14:116",
            "constant": false,
            "mutability": "mutable",
            "name": "usdc",
            "nameLocation": "578:4:116",
            "scope": 82054,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestToken_$76251",
              "typeString": "contract TestToken"
            },
            "typeName": {
              "id": 80006,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 80005,
                "name": "TestToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 76251,
                "src": "568:9:116"
              },
              "referencedDeclaration": 76251,
              "src": "568:9:116",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestToken_$76251",
                "typeString": "contract TestToken"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 80009,
            "nodeType": "VariableDeclaration",
            "src": "586:21:116",
            "constant": false,
            "mutability": "mutable",
            "name": "maker",
            "nameLocation": "602:5:116",
            "scope": 82054,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 80008,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "586:15:116",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 80011,
            "nodeType": "VariableDeclaration",
            "src": "611:21:116",
            "constant": false,
            "mutability": "mutable",
            "name": "taker",
            "nameLocation": "627:5:116",
            "scope": 82054,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 80010,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "611:15:116",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 80014,
            "nodeType": "VariableDeclaration",
            "src": "636:9:116",
            "constant": false,
            "mutability": "mutable",
            "name": "mgo",
            "nameLocation": "642:3:116",
            "scope": 82054,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Mango_$41268",
              "typeString": "contract Mango"
            },
            "typeName": {
              "id": 80013,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 80012,
                "name": "Mango",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 41268,
                "src": "636:5:116"
              },
              "referencedDeclaration": 41268,
              "src": "636:5:116",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Mango_$41268",
                "typeString": "contract Mango"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 80177,
            "nodeType": "FunctionDefinition",
            "src": "650:1027:116",
            "body": {
              "id": 80176,
              "nodeType": "Block",
              "src": "683:994:116",
              "statements": [
                {
                  "expression": {
                    "id": 80024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 80018,
                          "name": "options",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69402,
                          "src": "689:7:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MangroveTestOptions_$69376_storage",
                            "typeString": "struct MangroveTest.MangroveTestOptions storage ref"
                          }
                        },
                        "id": 80021,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "base",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 69370,
                        "src": "689:12:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenOptions_$69365_storage",
                          "typeString": "struct MangroveTest.TokenOptions storage ref"
                        }
                      },
                      "id": 80022,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "symbol",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 69362,
                      "src": "689:19:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "57455448",
                      "id": 80023,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "711:6:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_0f8a193ff464434486c0daf7db2a895884365d2bc84ba47a68fcf89c1b14b5b8",
                        "typeString": "literal_string \"WETH\""
                      },
                      "value": "WETH"
                    },
                    "src": "689:28:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 80025,
                  "nodeType": "ExpressionStatement",
                  "src": "689:28:116"
                },
                {
                  "expression": {
                    "id": 80032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 80026,
                          "name": "options",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69402,
                          "src": "723:7:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MangroveTestOptions_$69376_storage",
                            "typeString": "struct MangroveTest.MangroveTestOptions storage ref"
                          }
                        },
                        "id": 80029,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "quote",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 69373,
                        "src": "723:13:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenOptions_$69365_storage",
                          "typeString": "struct MangroveTest.TokenOptions storage ref"
                        }
                      },
                      "id": 80030,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "symbol",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 69362,
                      "src": "723:20:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "55534443",
                      "id": 80031,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "746:6:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa",
                        "typeString": "literal_string \"USDC\""
                      },
                      "value": "USDC"
                    },
                    "src": "723:29:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 80033,
                  "nodeType": "ExpressionStatement",
                  "src": "723:29:116"
                },
                {
                  "expression": {
                    "id": 80040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 80034,
                          "name": "options",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69402,
                          "src": "758:7:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MangroveTestOptions_$69376_storage",
                            "typeString": "struct MangroveTest.MangroveTestOptions storage ref"
                          }
                        },
                        "id": 80037,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "quote",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 69373,
                        "src": "758:13:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenOptions_$69365_storage",
                          "typeString": "struct MangroveTest.TokenOptions storage ref"
                        }
                      },
                      "id": 80038,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 69364,
                      "src": "758:22:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "36",
                      "id": 80039,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "783:1:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_6_by_1",
                        "typeString": "int_const 6"
                      },
                      "value": "6"
                    },
                    "src": "758:26:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 80041,
                  "nodeType": "ExpressionStatement",
                  "src": "758:26:116"
                },
                {
                  "expression": {
                    "id": 80046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 80042,
                        "name": "options",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69402,
                        "src": "790:7:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MangroveTestOptions_$69376_storage",
                          "typeString": "struct MangroveTest.MangroveTestOptions storage ref"
                        }
                      },
                      "id": 80044,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "defaultFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 69375,
                      "src": "790:18:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3330",
                      "id": 80045,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "811:2:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_30_by_1",
                        "typeString": "int_const 30"
                      },
                      "value": "30"
                    },
                    "src": "790:23:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 80047,
                  "nodeType": "ExpressionStatement",
                  "src": "790:23:116"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 80048,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "876:5:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_MangoTest_$82054_$",
                          "typeString": "type(contract super MangoTest)"
                        }
                      },
                      "id": 80050,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setUp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 69507,
                      "src": "876:11:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 80051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "876:13:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80052,
                  "nodeType": "ExpressionStatement",
                  "src": "876:13:116"
                },
                {
                  "expression": {
                    "id": 80055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 80053,
                      "name": "weth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80004,
                      "src": "925:4:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestToken_$76251",
                        "typeString": "contract TestToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 80054,
                      "name": "base",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69382,
                      "src": "932:4:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestToken_$76251",
                        "typeString": "contract TestToken"
                      }
                    },
                    "src": "925:11:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestToken_$76251",
                      "typeString": "contract TestToken"
                    }
                  },
                  "id": 80056,
                  "nodeType": "ExpressionStatement",
                  "src": "925:11:116"
                },
                {
                  "expression": {
                    "id": 80059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 80057,
                      "name": "usdc",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80007,
                      "src": "942:4:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestToken_$76251",
                        "typeString": "contract TestToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 80058,
                      "name": "quote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69385,
                      "src": "949:5:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestToken_$76251",
                        "typeString": "contract TestToken"
                      }
                    },
                    "src": "942:12:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestToken_$76251",
                      "typeString": "contract TestToken"
                    }
                  },
                  "id": 80060,
                  "nodeType": "ExpressionStatement",
                  "src": "942:12:116"
                },
                {
                  "expression": {
                    "id": 80065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 80061,
                      "name": "maker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80009,
                      "src": "961:5:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "6d616b6572",
                          "id": 80063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "982:7:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_92f19e22fc1393ec30ea8872fc93139e9728e6d5119eab8fa503b247090ac4e0",
                            "typeString": "literal_string \"maker\""
                          },
                          "value": "maker"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_92f19e22fc1393ec30ea8872fc93139e9728e6d5119eab8fa503b247090ac4e0",
                            "typeString": "literal_string \"maker\""
                          }
                        ],
                        "id": 80062,
                        "name": "freshAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [70789, 70801],
                        "referencedDeclaration": 70789,
                        "src": "969:12:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_payable_$",
                          "typeString": "function (string memory) returns (address payable)"
                        }
                      },
                      "id": 80064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "969:21:116",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "961:29:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 80066,
                  "nodeType": "ExpressionStatement",
                  "src": "961:29:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80070,
                        "name": "maker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80009,
                        "src": "1004:5:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 80071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1011:8:116",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 80067,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "996:2:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80069,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5045,
                      "src": "996:7:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 80072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "996:24:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80073,
                  "nodeType": "ExpressionStatement",
                  "src": "996:24:116"
                },
                {
                  "expression": {
                    "id": 80078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 80074,
                      "name": "taker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80011,
                      "src": "1049:5:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "74616b6572",
                          "id": 80076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1070:7:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_dabc31545dc394527fa3167263fd61e7c7bb9eb939a344961942003782d7e47d",
                            "typeString": "literal_string \"taker\""
                          },
                          "value": "taker"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_dabc31545dc394527fa3167263fd61e7c7bb9eb939a344961942003782d7e47d",
                            "typeString": "literal_string \"taker\""
                          }
                        ],
                        "id": 80075,
                        "name": "freshAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [70789, 70801],
                        "referencedDeclaration": 70789,
                        "src": "1057:12:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_payable_$",
                          "typeString": "function (string memory) returns (address payable)"
                        }
                      },
                      "id": 80077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1057:21:116",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1049:29:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 80079,
                  "nodeType": "ExpressionStatement",
                  "src": "1049:29:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80082,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "1091:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 80081,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "1089:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 80083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1089:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 80084,
                        "name": "taker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80011,
                        "src": "1098:5:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 80086,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "1110:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          },
                          {
                            "hexValue": "3530",
                            "id": 80087,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1116:2:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_50_by_1",
                              "typeString": "int_const 50"
                            },
                            "value": "50"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            },
                            {
                              "typeIdentifier": "t_rational_50_by_1",
                              "typeString": "int_const 50"
                            }
                          ],
                          "id": 80085,
                          "name": "cash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [70407, 70429],
                          "referencedDeclaration": 70407,
                          "src": "1105:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (contract IERC20,uint256) returns (uint256)"
                          }
                        },
                        "id": 80088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1105:14:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80080,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [2399, 2416, 2519],
                      "referencedDeclaration": 2416,
                      "src": "1084:4:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 80089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1084:36:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80090,
                  "nodeType": "ExpressionStatement",
                  "src": "1084:36:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80093,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "1133:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 80092,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "1131:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 80094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1131:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 80095,
                        "name": "taker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80011,
                        "src": "1140:5:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 80097,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "1152:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          },
                          {
                            "hexValue": "3130305f303030",
                            "id": 80098,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1158:7:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000_by_1",
                              "typeString": "int_const 100000"
                            },
                            "value": "100_000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            },
                            {
                              "typeIdentifier": "t_rational_100000_by_1",
                              "typeString": "int_const 100000"
                            }
                          ],
                          "id": 80096,
                          "name": "cash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [70407, 70429],
                          "referencedDeclaration": 70407,
                          "src": "1147:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (contract IERC20,uint256) returns (uint256)"
                          }
                        },
                        "id": 80099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1147:19:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80091,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [2399, 2416, 2519],
                      "referencedDeclaration": 2416,
                      "src": "1126:4:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 80100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1126:41:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80101,
                  "nodeType": "ExpressionStatement",
                  "src": "1126:41:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80105,
                        "name": "taker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80011,
                        "src": "1245:5:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 80102,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1231:2:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5021,
                      "src": "1231:13:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 80106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1231:20:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80107,
                  "nodeType": "ExpressionStatement",
                  "src": "1231:20:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80112,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "1272:3:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 80111,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70446,
                          "src": "1270:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 80113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1270:6:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 80116,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1283:4:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 80115,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "1283:4:116",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 80114,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1278:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 80117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1278:10:116",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 80118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "1278:14:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 80108,
                        "name": "weth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80004,
                        "src": "1257:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 80110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75145,
                      "src": "1257:12:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 80119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1257:36:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 80120,
                  "nodeType": "ExpressionStatement",
                  "src": "1257:36:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80125,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "1314:3:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 80124,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70446,
                          "src": "1312:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 80126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1312:6:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 80129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1325:4:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 80128,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "1325:4:116",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 80127,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1320:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 80130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1320:10:116",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 80131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "1320:14:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 80121,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80007,
                        "src": "1299:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 80123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75145,
                      "src": "1299:12:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 80132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1299:36:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 80133,
                  "nodeType": "ExpressionStatement",
                  "src": "1299:36:116"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 80134,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1341:2:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5038,
                      "src": "1341:12:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 80137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1341:14:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80138,
                  "nodeType": "ExpressionStatement",
                  "src": "1341:14:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80142,
                        "name": "maker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80009,
                        "src": "1376:5:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 80139,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1362:2:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5021,
                      "src": "1362:13:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 80143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1362:20:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80144,
                  "nodeType": "ExpressionStatement",
                  "src": "1362:20:116"
                },
                {
                  "expression": {
                    "id": 80169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 80145,
                      "name": "mgo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80014,
                      "src": "1388:3:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Mango_$41268",
                        "typeString": "contract Mango"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 80151,
                                  "name": "mgv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69379,
                                  "src": "1429:3:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                                    "typeString": "contract AbstractMangrove"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                                    "typeString": "contract AbstractMangrove"
                                  }
                                ],
                                "id": 80150,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  70446, 70463, 70480, 70497, 70514
                                ],
                                "referencedDeclaration": 70446,
                                "src": "1427:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                                  "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                                }
                              },
                              "id": 80152,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1427:6:116",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 80149,
                            "name": "IMangrove",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23446,
                            "src": "1417:9:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IMangrove_$23446_$",
                              "typeString": "type(contract IMangrove)"
                            }
                          },
                          "id": 80153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1417:17:116",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IMangrove_$23446",
                            "typeString": "contract IMangrove"
                          }
                        },
                        {
                          "id": 80154,
                          "name": "weth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80004,
                          "src": "1486:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestToken_$76251",
                            "typeString": "contract TestToken"
                          }
                        },
                        {
                          "id": 80155,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80007,
                          "src": "1505:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestToken_$76251",
                            "typeString": "contract TestToken"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 80157,
                              "name": "weth",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80004,
                              "src": "1530:4:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            },
                            {
                              "hexValue": "3334",
                              "id": 80158,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1536:2:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_34_by_1",
                                "typeString": "int_const 34"
                              },
                              "value": "34"
                            },
                            {
                              "hexValue": "32",
                              "id": 80159,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1540:1:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              },
                              {
                                "typeIdentifier": "t_rational_34_by_1",
                                "typeString": "int_const 34"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "id": 80156,
                            "name": "cash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [70407, 70429],
                            "referencedDeclaration": 70429,
                            "src": "1525:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (contract IERC20,uint256,uint256) returns (uint256)"
                            }
                          },
                          "id": 80160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1525:17:116",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 80162,
                              "name": "usdc",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80007,
                              "src": "1564:4:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            },
                            {
                              "hexValue": "31303030",
                              "id": 80163,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1570:4:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              },
                              "value": "1000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              },
                              {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              }
                            ],
                            "id": 80161,
                            "name": "cash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [70407, 70429],
                            "referencedDeclaration": 70407,
                            "src": "1559:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (contract IERC20,uint256) returns (uint256)"
                            }
                          },
                          "id": 80164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1559:16:116",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 80165,
                          "name": "NSLOTS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79994,
                          "src": "1591:6:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 80166,
                          "name": "DELTA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80001,
                          "src": "1617:5:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 80167,
                          "name": "maker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80009,
                          "src": "1640:5:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IMangrove_$23446",
                            "typeString": "contract IMangrove"
                          },
                          {
                            "typeIdentifier": "t_contract$_TestToken_$76251",
                            "typeString": "contract TestToken"
                          },
                          {
                            "typeIdentifier": "t_contract$_TestToken_$76251",
                            "typeString": "contract TestToken"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 80148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1394:9:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IMangrove_$23446_$_t_contract$_IERC20_$24851_$_t_contract$_IERC20_$24851_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_contract$_Mango_$41268_$",
                          "typeString": "function (contract IMangrove,contract IERC20,contract IERC20,uint256,uint256,uint256,uint256,address) returns (contract Mango)"
                        },
                        "typeName": {
                          "id": 80147,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 80146,
                            "name": "Mango",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 41268,
                            "src": "1398:5:116"
                          },
                          "referencedDeclaration": 41268,
                          "src": "1398:5:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Mango_$41268",
                            "typeString": "contract Mango"
                          }
                        }
                      },
                      "id": 80168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [
                        "mgv",
                        "base",
                        "quote",
                        "base_0",
                        "quote_0",
                        "nslots",
                        "price_incr",
                        "deployer"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1394:258:116",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Mango_$41268",
                        "typeString": "contract Mango"
                      }
                    },
                    "src": "1388:264:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Mango_$41268",
                      "typeString": "contract Mango"
                    }
                  },
                  "id": 80170,
                  "nodeType": "ExpressionStatement",
                  "src": "1388:264:116"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 80171,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1658:2:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5038,
                      "src": "1658:12:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 80174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1658:14:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80175,
                  "nodeType": "ExpressionStatement",
                  "src": "1658:14:116"
                }
              ]
            },
            "baseFunctions": [69507],
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "659:5:116",
            "overrides": {
              "id": 80016,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "674:8:116"
            },
            "parameters": {
              "id": 80015,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "664:2:116"
            },
            "returnParameters": {
              "id": 80017,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "683:0:116"
            },
            "scope": 82054,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 80208,
            "nodeType": "FunctionDefinition",
            "src": "1741:266:116",
            "body": {
              "id": 80207,
              "nodeType": "Block",
              "src": "1768:239:116",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 80180,
                      "name": "part_deploy_strat",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80365,
                      "src": "1774:17:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 80181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1774:19:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80182,
                  "nodeType": "ExpressionStatement",
                  "src": "1774:19:116"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 80183,
                      "name": "part_market_order",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80590,
                      "src": "1799:17:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 80184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1799:19:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80185,
                  "nodeType": "ExpressionStatement",
                  "src": "1799:19:116"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 80186,
                      "name": "part_negative_shift",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80681,
                      "src": "1824:19:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 80187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1824:21:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80188,
                  "nodeType": "ExpressionStatement",
                  "src": "1824:21:116"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 80189,
                      "name": "part_positive_shift",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80779,
                      "src": "1851:19:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 80190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1851:21:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80191,
                  "nodeType": "ExpressionStatement",
                  "src": "1851:21:116"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 80192,
                      "name": "part_partial_fill",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81034,
                      "src": "1878:17:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 80193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1878:19:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80194,
                  "nodeType": "ExpressionStatement",
                  "src": "1878:19:116"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 80195,
                      "name": "part_text_residual_1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81371,
                      "src": "1903:20:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 80196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1903:22:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80197,
                  "nodeType": "ExpressionStatement",
                  "src": "1903:22:116"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 80198,
                      "name": "part_text_residual_2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81632,
                      "src": "1931:20:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 80199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1931:22:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80200,
                  "nodeType": "ExpressionStatement",
                  "src": "1931:22:116"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 80201,
                      "name": "part_kill",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81758,
                      "src": "1959:9:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 80202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1959:11:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80203,
                  "nodeType": "ExpressionStatement",
                  "src": "1959:11:116"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 80204,
                      "name": "part_restart_fixed_shift",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81857,
                      "src": "1976:24:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 80205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1976:26:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80206,
                  "nodeType": "ExpressionStatement",
                  "src": "1976:26:116"
                }
              ]
            },
            "functionSelector": "a7465fca",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_all",
            "nameLocation": "1750:8:116",
            "parameters": {
              "id": 80178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1758:2:116"
            },
            "returnParameters": {
              "id": 80179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1768:0:116"
            },
            "scope": 82054,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 80365,
            "nodeType": "FunctionDefinition",
            "src": "2011:1039:116",
            "body": {
              "id": 80364,
              "nodeType": "Block",
              "src": "2060:990:116",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 80218,
                                "name": "mgo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80014,
                                "src": "2217:3:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Mango_$41268",
                                  "typeString": "contract Mango"
                                }
                              },
                              "id": 80219,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "router",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 33716,
                              "src": "2217:10:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_AbstractRouter_$39424_$",
                                "typeString": "function () view external returns (contract AbstractRouter)"
                              }
                            },
                            "id": 80220,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2217:12:116",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractRouter_$39424",
                              "typeString": "contract AbstractRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractRouter_$39424",
                              "typeString": "contract AbstractRouter"
                            }
                          ],
                          "id": 80217,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70463,
                          "src": "2215:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AccessControlled_$43417_$returns$_t_address_payable_$",
                            "typeString": "function (contract AccessControlled) pure returns (address payable)"
                          }
                        },
                        "id": 80221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2215:15:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 80224,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2237:4:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 80223,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "2237:4:116",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 80222,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "2232:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 80225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2232:10:116",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 80226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "2232:14:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 80214,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80007,
                        "src": "2202:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 80216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75145,
                      "src": "2202:12:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 80227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2202:45:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 80228,
                  "nodeType": "ExpressionStatement",
                  "src": "2202:45:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 80233,
                                "name": "mgo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80014,
                                "src": "2268:3:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Mango_$41268",
                                  "typeString": "contract Mango"
                                }
                              },
                              "id": 80234,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "router",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 33716,
                              "src": "2268:10:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_AbstractRouter_$39424_$",
                                "typeString": "function () view external returns (contract AbstractRouter)"
                              }
                            },
                            "id": 80235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2268:12:116",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractRouter_$39424",
                              "typeString": "contract AbstractRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractRouter_$39424",
                              "typeString": "contract AbstractRouter"
                            }
                          ],
                          "id": 80232,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70463,
                          "src": "2266:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AccessControlled_$43417_$returns$_t_address_payable_$",
                            "typeString": "function (contract AccessControlled) pure returns (address payable)"
                          }
                        },
                        "id": 80236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2266:15:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 80239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2288:4:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 80238,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "2288:4:116",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 80237,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "2283:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 80240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2283:10:116",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 80241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "2283:14:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 80229,
                        "name": "weth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80004,
                        "src": "2253:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 80231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75145,
                      "src": "2253:12:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 80242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2253:45:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 80243,
                  "nodeType": "ExpressionStatement",
                  "src": "2253:45:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80246,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "2433:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 80245,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "2431:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 80247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2431:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 80248,
                        "name": "maker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80009,
                        "src": "2440:5:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 80250,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "2452:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          },
                          {
                            "hexValue": "3137",
                            "id": 80251,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2458:2:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_17_by_1",
                              "typeString": "int_const 17"
                            },
                            "value": "17"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            },
                            {
                              "typeIdentifier": "t_rational_17_by_1",
                              "typeString": "int_const 17"
                            }
                          ],
                          "id": 80249,
                          "name": "cash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [70407, 70429],
                          "referencedDeclaration": 70407,
                          "src": "2447:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (contract IERC20,uint256) returns (uint256)"
                          }
                        },
                        "id": 80252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2447:14:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80244,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [2399, 2416, 2519],
                      "referencedDeclaration": 2416,
                      "src": "2426:4:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 80253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2426:36:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80254,
                  "nodeType": "ExpressionStatement",
                  "src": "2426:36:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80257,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "2475:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 80256,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "2473:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 80258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2473:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 80259,
                        "name": "maker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80009,
                        "src": "2482:5:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 80261,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "2494:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          },
                          {
                            "hexValue": "3530303030",
                            "id": 80262,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2500:5:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_50000_by_1",
                              "typeString": "int_const 50000"
                            },
                            "value": "50000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            },
                            {
                              "typeIdentifier": "t_rational_50000_by_1",
                              "typeString": "int_const 50000"
                            }
                          ],
                          "id": 80260,
                          "name": "cash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [70407, 70429],
                          "referencedDeclaration": 70407,
                          "src": "2489:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (contract IERC20,uint256) returns (uint256)"
                          }
                        },
                        "id": 80263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2489:17:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80255,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [2399, 2416, 2519],
                      "referencedDeclaration": 2416,
                      "src": "2468:4:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 80264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2468:39:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80265,
                  "nodeType": "ExpressionStatement",
                  "src": "2468:39:116"
                },
                {
                  "assignments": [80267],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80267,
                      "mutability": "mutable",
                      "name": "prov",
                      "nameLocation": "2519:4:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 80364,
                      "src": "2514:9:116",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80266,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2514:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80278,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 80270,
                        "name": "weth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80004,
                        "src": "2572:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "id": 80271,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80007,
                        "src": "2597:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 80272,
                            "name": "mgo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80014,
                            "src": "2617:3:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Mango_$41268",
                              "typeString": "contract Mango"
                            }
                          },
                          "id": 80273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ofr_gasreq",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33464,
                          "src": "2617:14:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 80274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2617:16:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 80275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2651:1:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 80276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2669:1:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 80268,
                        "name": "mgo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80014,
                        "src": "2526:3:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Mango_$41268",
                          "typeString": "contract Mango"
                        }
                      },
                      "id": 80269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getMissingProvision",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34176,
                      "src": "2526:23:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$24851_$_t_contract$_IERC20_$24851_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (contract IERC20,contract IERC20,uint256,uint256,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 80277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [
                      "outbound_tkn",
                      "inbound_tkn",
                      "gasreq",
                      "gasprice",
                      "offerId"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "2526:151:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2514:163:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80287,
                            "name": "mgo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80014,
                            "src": "2713:3:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Mango_$41268",
                              "typeString": "contract Mango"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Mango_$41268",
                              "typeString": "contract Mango"
                            }
                          ],
                          "id": 80286,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70463,
                          "src": "2711:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AccessControlled_$43417_$returns$_t_address_payable_$",
                            "typeString": "function (contract AccessControlled) pure returns (address payable)"
                          }
                        },
                        "id": 80288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2711:6:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "expression": {
                          "id": 80279,
                          "name": "mgv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69379,
                          "src": "2684:3:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                            "typeString": "contract AbstractMangrove"
                          }
                        },
                        "id": 80281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "fund",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25387,
                        "src": "2684:8:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 80285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["value"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 80284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 80282,
                            "name": "prov",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80267,
                            "src": "2700:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "3230",
                            "id": 80283,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2707:2:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_20_by_1",
                              "typeString": "int_const 20"
                            },
                            "value": "20"
                          },
                          "src": "2700:9:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "2684:26:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 80289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2684:34:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80290,
                  "nodeType": "ExpressionStatement",
                  "src": "2684:34:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80293,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "2735:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          },
                          {
                            "hexValue": "31303030",
                            "id": 80294,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2741:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            },
                            {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            }
                          ],
                          "id": 80292,
                          "name": "cash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [70407, 70429],
                          "referencedDeclaration": 70407,
                          "src": "2730:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (contract IERC20,uint256) returns (uint256)"
                          }
                        },
                        "id": 80295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2730:16:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 80297,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "2753:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          },
                          {
                            "hexValue": "33",
                            "id": 80298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2759:1:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          {
                            "hexValue": "31",
                            "id": 80299,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2762:1:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            },
                            {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 80296,
                          "name": "cash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [70407, 70429],
                          "referencedDeclaration": 70429,
                          "src": "2748:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (contract IERC20,uint256,uint256) returns (uint256)"
                          }
                        },
                        "id": 80300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2748:16:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80291,
                      "name": "init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82053,
                      "src": "2725:4:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 80301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2725:40:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80302,
                  "nodeType": "ExpressionStatement",
                  "src": "2725:40:116"
                },
                {
                  "assignments": [80305],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80305,
                      "mutability": "mutable",
                      "name": "book",
                      "nameLocation": "2784:4:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 80364,
                      "src": "2772:16:116",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Book_$79981_memory_ptr",
                        "typeString": "struct MangoTest.Book"
                      },
                      "typeName": {
                        "id": 80304,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 80303,
                          "name": "Book",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 79981,
                          "src": "2772:4:116"
                        },
                        "referencedDeclaration": 79981,
                        "src": "2772:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Book_$79981_storage_ptr",
                          "typeString": "struct MangoTest.Book"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80309,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 80307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2802:5:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 80306,
                      "name": "get_offers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81887,
                      "src": "2791:10:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_struct$_Book_$79981_memory_ptr_$",
                        "typeString": "function (bool) view returns (struct MangoTest.Book memory)"
                      }
                    },
                    "id": 80308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2791:17:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Book_$79981_memory_ptr",
                      "typeString": "struct MangoTest.Book memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2772:36:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80312,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "2832:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 80311,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "2830:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 80313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2830:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 80315,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "2847:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 80314,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "2845:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 80316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2845:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 80317,
                          "name": "book",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80305,
                          "src": "2860:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Book_$79981_memory_ptr",
                            "typeString": "struct MangoTest.Book memory"
                          }
                        },
                        "id": 80318,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "bids",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79977,
                        "src": "2860:9:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "31",
                                    "id": 80322,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2890:1:116",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "id": 80321,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2886:3:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_int256_$",
                                    "typeString": "type(int256)"
                                  },
                                  "typeName": {
                                    "id": 80320,
                                    "name": "int",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2886:3:116",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 80323,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2886:6:116",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              {
                                "hexValue": "32",
                                "id": 80324,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2894:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              {
                                "hexValue": "33",
                                "id": 80325,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2897:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3_by_1",
                                  "typeString": "int_const 3"
                                },
                                "value": "3"
                              },
                              {
                                "hexValue": "34",
                                "id": 80326,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2900:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_4_by_1",
                                  "typeString": "int_const 4"
                                },
                                "value": "4"
                              },
                              {
                                "hexValue": "35",
                                "id": 80327,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2903:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_5_by_1",
                                  "typeString": "int_const 5"
                                },
                                "value": "5"
                              },
                              {
                                "hexValue": "30",
                                "id": 80328,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2906:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 80329,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2909:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 80330,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2912:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 80331,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2915:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 80332,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2918:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "id": 80333,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2885:35:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_int256_$10_memory_ptr",
                              "typeString": "int256[10] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_int256_$10_memory_ptr",
                              "typeString": "int256[10] memory"
                            }
                          ],
                          "id": 80319,
                          "name": "dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            71448, 71482, 71516, 71550, 71584, 71618, 71652,
                            71686, 71720, 71754, 71788, 71822, 71856, 71890,
                            71924, 71958, 71992, 72026, 72060, 72094, 72131,
                            72168, 72205, 72242, 72279, 72316, 72353, 72390,
                            72427, 72464
                          ],
                          "referencedDeclaration": 72094,
                          "src": "2877:7:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_int256_$10_memory_ptr_$returns$_t_array$_t_int256_$dyn_memory_ptr_$",
                            "typeString": "function (int256[10] memory) pure returns (int256[] memory)"
                          }
                        },
                        "id": 80334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2877:44:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[] memory"
                        }
                      ],
                      "id": 80310,
                      "name": "checkOB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81960,
                      "src": "2815:7:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_int256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256[] memory,int256[] memory)"
                      }
                    },
                    "id": 80335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2815:112:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80336,
                  "nodeType": "ExpressionStatement",
                  "src": "2815:112:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80339,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "2950:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 80338,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "2948:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 80340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2948:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 80342,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "2965:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 80341,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "2963:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 80343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2963:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 80344,
                          "name": "book",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80305,
                          "src": "2978:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Book_$79981_memory_ptr",
                            "typeString": "struct MangoTest.Book memory"
                          }
                        },
                        "id": 80345,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "asks",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79980,
                        "src": "2978:9:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 80349,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3008:1:116",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 80348,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3004:3:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_int256_$",
                                    "typeString": "type(int256)"
                                  },
                                  "typeName": {
                                    "id": 80347,
                                    "name": "int",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3004:3:116",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 80350,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3004:6:116",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 80351,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3012:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 80352,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3015:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 80353,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3018:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 80354,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3021:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "31",
                                "id": 80355,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3024:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "32",
                                "id": 80356,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3027:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              {
                                "hexValue": "33",
                                "id": 80357,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3030:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3_by_1",
                                  "typeString": "int_const 3"
                                },
                                "value": "3"
                              },
                              {
                                "hexValue": "34",
                                "id": 80358,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3033:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_4_by_1",
                                  "typeString": "int_const 4"
                                },
                                "value": "4"
                              },
                              {
                                "hexValue": "35",
                                "id": 80359,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3036:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_5_by_1",
                                  "typeString": "int_const 5"
                                },
                                "value": "5"
                              }
                            ],
                            "id": 80360,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3003:35:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_int256_$10_memory_ptr",
                              "typeString": "int256[10] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_int256_$10_memory_ptr",
                              "typeString": "int256[10] memory"
                            }
                          ],
                          "id": 80346,
                          "name": "dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            71448, 71482, 71516, 71550, 71584, 71618, 71652,
                            71686, 71720, 71754, 71788, 71822, 71856, 71890,
                            71924, 71958, 71992, 72026, 72060, 72094, 72131,
                            72168, 72205, 72242, 72279, 72316, 72353, 72390,
                            72427, 72464
                          ],
                          "referencedDeclaration": 72094,
                          "src": "2995:7:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_int256_$10_memory_ptr_$returns$_t_array$_t_int256_$dyn_memory_ptr_$",
                            "typeString": "function (int256[10] memory) pure returns (int256[] memory)"
                          }
                        },
                        "id": 80361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2995:44:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[] memory"
                        }
                      ],
                      "id": 80337,
                      "name": "checkOB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81960,
                      "src": "2933:7:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_int256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256[] memory,int256[] memory)"
                      }
                    },
                    "id": 80362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2933:112:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80363,
                  "nodeType": "ExpressionStatement",
                  "src": "2933:112:116"
                }
              ]
            },
            "functionSelector": "c8e617c2",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 80211,
                    "name": "maker",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 80009,
                    "src": "2053:5:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 80212,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 80210,
                  "name": "prank",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 70653,
                  "src": "2047:5:116"
                },
                "nodeType": "ModifierInvocation",
                "src": "2047:12:116"
              }
            ],
            "name": "part_deploy_strat",
            "nameLocation": "2020:17:116",
            "parameters": {
              "id": 80209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2037:2:116"
            },
            "returnParameters": {
              "id": 80213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2060:0:116"
            },
            "scope": 82054,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 80590,
            "nodeType": "FunctionDefinition",
            "src": "3054:1255:116",
            "body": {
              "id": 80589,
              "nodeType": "Block",
              "src": "3103:1206:116",
              "statements": [
                {
                  "assignments": [80372, 80374, 80376, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80372,
                      "mutability": "mutable",
                      "name": "got",
                      "nameLocation": "3115:3:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 80589,
                      "src": "3110:8:116",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80371,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3110:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 80374,
                      "mutability": "mutable",
                      "name": "gave",
                      "nameLocation": "3125:4:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 80589,
                      "src": "3120:9:116",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80373,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3120:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 80376,
                      "mutability": "mutable",
                      "name": "bounty",
                      "nameLocation": "3136:6:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 80589,
                      "src": "3131:11:116",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80375,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3131:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 80396,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80380,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "3173:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 80379,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "3171:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 80381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3171:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 80383,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "3188:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 80382,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "3186:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 80384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3186:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 80386,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "3206:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          },
                          {
                            "hexValue": "35",
                            "id": 80387,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3212:1:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            },
                            "value": "5"
                          },
                          {
                            "hexValue": "31",
                            "id": 80388,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3215:1:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            },
                            {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 80385,
                          "name": "cash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [70407, 70429],
                          "referencedDeclaration": 70429,
                          "src": "3201:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (contract IERC20,uint256,uint256) returns (uint256)"
                          }
                        },
                        "id": 80389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3201:16:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 80391,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "3230:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          },
                          {
                            "hexValue": "33303030",
                            "id": 80392,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3236:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3000_by_1",
                              "typeString": "int_const 3000"
                            },
                            "value": "3000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            },
                            {
                              "typeIdentifier": "t_rational_3000_by_1",
                              "typeString": "int_const 3000"
                            }
                          ],
                          "id": 80390,
                          "name": "cash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [70407, 70429],
                          "referencedDeclaration": 70407,
                          "src": "3225:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (contract IERC20,uint256) returns (uint256)"
                          }
                        },
                        "id": 80393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3225:16:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 80394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3249:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 80377,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "3148:3:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 80378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26236,
                      "src": "3148:15:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 80395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3148:111:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3109:150:116"
                },
                {
                  "assignments": [80399],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80399,
                      "mutability": "mutable",
                      "name": "book",
                      "nameLocation": "3278:4:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 80589,
                      "src": "3266:16:116",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Book_$79981_memory_ptr",
                        "typeString": "struct MangoTest.Book"
                      },
                      "typeName": {
                        "id": 80398,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 80397,
                          "name": "Book",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 79981,
                          "src": "3266:4:116"
                        },
                        "referencedDeclaration": 79981,
                        "src": "3266:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Book_$79981_storage_ptr",
                          "typeString": "struct MangoTest.Book"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80403,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 80401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3296:5:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 80400,
                      "name": "get_offers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81887,
                      "src": "3285:10:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_struct$_Book_$79981_memory_ptr_$",
                        "typeString": "function (bool) view returns (struct MangoTest.Book memory)"
                      }
                    },
                    "id": 80402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3285:17:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Book_$79981_memory_ptr",
                      "typeString": "struct MangoTest.Book memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3266:36:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80405,
                        "name": "got",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80372,
                        "src": "3324:3:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 80408,
                                "name": "weth",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80004,
                                "src": "3346:4:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 80407,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70514,
                              "src": "3344:1:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 80409,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3344:7:116",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 80411,
                                "name": "usdc",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80007,
                                "src": "3355:4:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 80410,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70514,
                              "src": "3353:1:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 80412,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3353:7:116",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "hexValue": "302e35",
                            "id": 80413,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3362:9:116",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_500000000000000000_by_1",
                              "typeString": "int_const 500000000000000000"
                            },
                            "value": "0.5"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_rational_500000000000000000_by_1",
                              "typeString": "int_const 500000000000000000"
                            }
                          ],
                          "id": 80406,
                          "name": "minusFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69929,
                          "src": "3335:8:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,address,uint256) view returns (uint256)"
                          }
                        },
                        "id": 80414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3335:37:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "696e636f727265637420726563656976656420616d6f756e74",
                        "id": 80415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3380:27:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0a55e15152489140b0f9fc34e4d424b2469cac1aff982fd020f24d2d01cc5ea4",
                          "typeString": "literal_string \"incorrect received amount\""
                        },
                        "value": "incorrect received amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0a55e15152489140b0f9fc34e4d424b2469cac1aff982fd020f24d2d01cc5ea4",
                          "typeString": "literal_string \"incorrect received amount\""
                        }
                      ],
                      "id": 80404,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "3308:8:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 80416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3308:105:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80417,
                  "nodeType": "ExpressionStatement",
                  "src": "3308:105:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80419,
                        "name": "bounty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80376,
                        "src": "3428:6:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 80420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3436:1:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "74616b65722073686f756c64206e6f74207265636569766520626f756e7479",
                        "id": 80421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3439:33:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d510b4b9241b71bce5a360863e3effa05ed8cc00d2111c83e0ef6c3f92a352c1",
                          "typeString": "literal_string \"taker should not receive bounty\""
                        },
                        "value": "taker should not receive bounty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d510b4b9241b71bce5a360863e3effa05ed8cc00d2111c83e0ef6c3f92a352c1",
                          "typeString": "literal_string \"taker should not receive bounty\""
                        }
                      ],
                      "id": 80418,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "3419:8:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 80422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3419:54:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80423,
                  "nodeType": "ExpressionStatement",
                  "src": "3419:54:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80426,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "3496:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 80425,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "3494:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 80427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3494:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 80429,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "3511:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 80428,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "3509:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 80430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3509:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 80431,
                          "name": "book",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80399,
                          "src": "3524:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Book_$79981_memory_ptr",
                            "typeString": "struct MangoTest.Book memory"
                          }
                        },
                        "id": 80432,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "bids",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79977,
                        "src": "3524:9:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "31",
                                    "id": 80436,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3554:1:116",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "id": 80435,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3550:3:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_int256_$",
                                    "typeString": "type(int256)"
                                  },
                                  "typeName": {
                                    "id": 80434,
                                    "name": "int",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3550:3:116",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 80437,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3550:6:116",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              {
                                "hexValue": "32",
                                "id": 80438,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3558:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              {
                                "hexValue": "33",
                                "id": 80439,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3561:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3_by_1",
                                  "typeString": "int_const 3"
                                },
                                "value": "3"
                              },
                              {
                                "hexValue": "34",
                                "id": 80440,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3564:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_4_by_1",
                                  "typeString": "int_const 4"
                                },
                                "value": "4"
                              },
                              {
                                "hexValue": "35",
                                "id": 80441,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3567:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_5_by_1",
                                  "typeString": "int_const 5"
                                },
                                "value": "5"
                              },
                              {
                                "hexValue": "36",
                                "id": 80442,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3570:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              {
                                "hexValue": "30",
                                "id": 80443,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3573:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 80444,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3576:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 80445,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3579:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 80446,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3582:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "id": 80447,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3549:35:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_int256_$10_memory_ptr",
                              "typeString": "int256[10] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_int256_$10_memory_ptr",
                              "typeString": "int256[10] memory"
                            }
                          ],
                          "id": 80433,
                          "name": "dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            71448, 71482, 71516, 71550, 71584, 71618, 71652,
                            71686, 71720, 71754, 71788, 71822, 71856, 71890,
                            71924, 71958, 71992, 72026, 72060, 72094, 72131,
                            72168, 72205, 72242, 72279, 72316, 72353, 72390,
                            72427, 72464
                          ],
                          "referencedDeclaration": 72094,
                          "src": "3541:7:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_int256_$10_memory_ptr_$returns$_t_array$_t_int256_$dyn_memory_ptr_$",
                            "typeString": "function (int256[10] memory) pure returns (int256[] memory)"
                          }
                        },
                        "id": 80448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3541:44:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[] memory"
                        }
                      ],
                      "id": 80424,
                      "name": "checkOB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81960,
                      "src": "3479:7:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_int256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256[] memory,int256[] memory)"
                      }
                    },
                    "id": 80449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3479:112:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80450,
                  "nodeType": "ExpressionStatement",
                  "src": "3479:112:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80453,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "3614:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 80452,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "3612:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 80454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3612:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 80456,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "3629:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 80455,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "3627:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 80457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3627:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 80458,
                          "name": "book",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80399,
                          "src": "3642:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Book_$79981_memory_ptr",
                            "typeString": "struct MangoTest.Book memory"
                          }
                        },
                        "id": 80459,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "asks",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79980,
                        "src": "3642:9:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 80463,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3672:1:116",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 80462,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3668:3:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_int256_$",
                                    "typeString": "type(int256)"
                                  },
                                  "typeName": {
                                    "id": 80461,
                                    "name": "int",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3668:3:116",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 80464,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3668:6:116",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 80465,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3676:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 80466,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3679:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 80467,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3682:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 80468,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3685:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "id": 80470,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "3688:2:116",
                                "subExpression": {
                                  "hexValue": "31",
                                  "id": 80469,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3689:1:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_minus_1_by_1",
                                  "typeString": "int_const -1"
                                }
                              },
                              {
                                "hexValue": "32",
                                "id": 80471,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3692:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              {
                                "hexValue": "33",
                                "id": 80472,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3695:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3_by_1",
                                  "typeString": "int_const 3"
                                },
                                "value": "3"
                              },
                              {
                                "hexValue": "34",
                                "id": 80473,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3698:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_4_by_1",
                                  "typeString": "int_const 4"
                                },
                                "value": "4"
                              },
                              {
                                "hexValue": "35",
                                "id": 80474,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3701:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_5_by_1",
                                  "typeString": "int_const 5"
                                },
                                "value": "5"
                              }
                            ],
                            "id": 80475,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3667:36:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_int256_$10_memory_ptr",
                              "typeString": "int256[10] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_int256_$10_memory_ptr",
                              "typeString": "int256[10] memory"
                            }
                          ],
                          "id": 80460,
                          "name": "dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            71448, 71482, 71516, 71550, 71584, 71618, 71652,
                            71686, 71720, 71754, 71788, 71822, 71856, 71890,
                            71924, 71958, 71992, 72026, 72060, 72094, 72131,
                            72168, 72205, 72242, 72279, 72316, 72353, 72390,
                            72427, 72464
                          ],
                          "referencedDeclaration": 72094,
                          "src": "3659:7:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_int256_$10_memory_ptr_$returns$_t_array$_t_int256_$dyn_memory_ptr_$",
                            "typeString": "function (int256[10] memory) pure returns (int256[] memory)"
                          }
                        },
                        "id": 80476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3659:45:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[] memory"
                        }
                      ],
                      "id": 80451,
                      "name": "checkOB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81960,
                      "src": "3597:7:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_int256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256[] memory,int256[] memory)"
                      }
                    },
                    "id": 80477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3597:113:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80478,
                  "nodeType": "ExpressionStatement",
                  "src": "3597:113:116"
                },
                {
                  "expression": {
                    "id": 80502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 80479,
                          "name": "got",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80372,
                          "src": "3718:3:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 80480,
                          "name": "gave",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80374,
                          "src": "3723:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 80481,
                          "name": "bounty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80376,
                          "src": "3729:6:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        null
                      ],
                      "id": 80482,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "3717:21:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$__$",
                        "typeString": "tuple(uint256,uint256,uint256,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 80486,
                              "name": "usdc",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80007,
                              "src": "3766:4:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 80485,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "3764:1:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 80487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3764:7:116",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 80489,
                              "name": "weth",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80004,
                              "src": "3781:4:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 80488,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "3779:1:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 80490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3779:7:116",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 80492,
                              "name": "usdc",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80007,
                              "src": "3799:4:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            },
                            {
                              "hexValue": "33353030",
                              "id": 80493,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3805:4:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3500_by_1",
                                "typeString": "int_const 3500"
                              },
                              "value": "3500"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              },
                              {
                                "typeIdentifier": "t_rational_3500_by_1",
                                "typeString": "int_const 3500"
                              }
                            ],
                            "id": 80491,
                            "name": "cash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [70407, 70429],
                            "referencedDeclaration": 70407,
                            "src": "3794:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (contract IERC20,uint256) returns (uint256)"
                            }
                          },
                          "id": 80494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3794:16:116",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 80496,
                              "name": "weth",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80004,
                              "src": "3823:4:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            },
                            {
                              "hexValue": "3135",
                              "id": 80497,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3829:2:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_15_by_1",
                                "typeString": "int_const 15"
                              },
                              "value": "15"
                            },
                            {
                              "hexValue": "31",
                              "id": 80498,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3833:1:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              },
                              {
                                "typeIdentifier": "t_rational_15_by_1",
                                "typeString": "int_const 15"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 80495,
                            "name": "cash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [70407, 70429],
                            "referencedDeclaration": 70429,
                            "src": "3818:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (contract IERC20,uint256,uint256) returns (uint256)"
                            }
                          },
                          "id": 80499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3818:17:116",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 80500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3843:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 80483,
                          "name": "mgv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69379,
                          "src": "3741:3:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                            "typeString": "contract AbstractMangrove"
                          }
                        },
                        "id": 80484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "marketOrder",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 26236,
                        "src": "3741:15:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                        }
                      },
                      "id": 80501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3741:112:116",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256,uint256,uint256)"
                      }
                    },
                    "src": "3717:136:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80503,
                  "nodeType": "ExpressionStatement",
                  "src": "3717:136:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80505,
                        "name": "got",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80372,
                        "src": "3876:3:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 80508,
                                "name": "usdc",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80007,
                                "src": "3898:4:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 80507,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70514,
                              "src": "3896:1:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 80509,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3896:7:116",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 80511,
                                "name": "weth",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80004,
                                "src": "3907:4:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 80510,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70514,
                              "src": "3905:1:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 80512,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3905:7:116",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 80514,
                                "name": "usdc",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80007,
                                "src": "3919:4:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              },
                              {
                                "hexValue": "33353030",
                                "id": 80515,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3925:4:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3500_by_1",
                                  "typeString": "int_const 3500"
                                },
                                "value": "3500"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                },
                                {
                                  "typeIdentifier": "t_rational_3500_by_1",
                                  "typeString": "int_const 3500"
                                }
                              ],
                              "id": 80513,
                              "name": "cash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [70407, 70429],
                              "referencedDeclaration": 70407,
                              "src": "3914:4:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (contract IERC20,uint256) returns (uint256)"
                              }
                            },
                            "id": 80516,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3914:16:116",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 80506,
                          "name": "minusFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69929,
                          "src": "3887:8:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,address,uint256) view returns (uint256)"
                          }
                        },
                        "id": 80517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3887:44:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "696e636f727265637420726563656976656420616d6f756e74",
                        "id": 80518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3939:27:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0a55e15152489140b0f9fc34e4d424b2469cac1aff982fd020f24d2d01cc5ea4",
                          "typeString": "literal_string \"incorrect received amount\""
                        },
                        "value": "incorrect received amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0a55e15152489140b0f9fc34e4d424b2469cac1aff982fd020f24d2d01cc5ea4",
                          "typeString": "literal_string \"incorrect received amount\""
                        }
                      ],
                      "id": 80504,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "3860:8:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 80519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3860:112:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80520,
                  "nodeType": "ExpressionStatement",
                  "src": "3860:112:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80522,
                        "name": "bounty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80376,
                        "src": "3988:6:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 80523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3996:1:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "74616b65722073686f756c64206e6f74207265636569766520626f756e7479",
                        "id": 80524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3999:33:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d510b4b9241b71bce5a360863e3effa05ed8cc00d2111c83e0ef6c3f92a352c1",
                          "typeString": "literal_string \"taker should not receive bounty\""
                        },
                        "value": "taker should not receive bounty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d510b4b9241b71bce5a360863e3effa05ed8cc00d2111c83e0ef6c3f92a352c1",
                          "typeString": "literal_string \"taker should not receive bounty\""
                        }
                      ],
                      "id": 80521,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "3979:8:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 80525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3979:54:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80526,
                  "nodeType": "ExpressionStatement",
                  "src": "3979:54:116"
                },
                {
                  "expression": {
                    "id": 80531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 80527,
                      "name": "book",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80399,
                      "src": "4040:4:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Book_$79981_memory_ptr",
                        "typeString": "struct MangoTest.Book memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "66616c7365",
                          "id": 80529,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4058:5:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 80528,
                        "name": "get_offers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81887,
                        "src": "4047:10:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_struct$_Book_$79981_memory_ptr_$",
                          "typeString": "function (bool) view returns (struct MangoTest.Book memory)"
                        }
                      },
                      "id": 80530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4047:17:116",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Book_$79981_memory_ptr",
                        "typeString": "struct MangoTest.Book memory"
                      }
                    },
                    "src": "4040:24:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Book_$79981_memory_ptr",
                      "typeString": "struct MangoTest.Book memory"
                    }
                  },
                  "id": 80532,
                  "nodeType": "ExpressionStatement",
                  "src": "4040:24:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80535,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "4088:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 80534,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "4086:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 80536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4086:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 80538,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "4103:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 80537,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "4101:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 80539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4101:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 80540,
                          "name": "book",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80399,
                          "src": "4116:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Book_$79981_memory_ptr",
                            "typeString": "struct MangoTest.Book memory"
                          }
                        },
                        "id": 80541,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "bids",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79977,
                        "src": "4116:9:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "31",
                                    "id": 80545,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4146:1:116",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "id": 80544,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4142:3:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_int256_$",
                                    "typeString": "type(int256)"
                                  },
                                  "typeName": {
                                    "id": 80543,
                                    "name": "int",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4142:3:116",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 80546,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4142:6:116",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              {
                                "hexValue": "32",
                                "id": 80547,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4150:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              {
                                "hexValue": "33",
                                "id": 80548,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4153:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3_by_1",
                                  "typeString": "int_const 3"
                                },
                                "value": "3"
                              },
                              {
                                "hexValue": "34",
                                "id": 80549,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4156:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_4_by_1",
                                  "typeString": "int_const 4"
                                },
                                "value": "4"
                              },
                              {
                                "id": 80551,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "4159:2:116",
                                "subExpression": {
                                  "hexValue": "35",
                                  "id": 80550,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4160:1:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_5_by_1",
                                    "typeString": "int_const 5"
                                  },
                                  "value": "5"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_minus_5_by_1",
                                  "typeString": "int_const -5"
                                }
                              },
                              {
                                "id": 80553,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "4163:2:116",
                                "subExpression": {
                                  "hexValue": "36",
                                  "id": 80552,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4164:1:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_6_by_1",
                                    "typeString": "int_const 6"
                                  },
                                  "value": "6"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_minus_6_by_1",
                                  "typeString": "int_const -6"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 80554,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4167:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 80555,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4170:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 80556,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4173:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 80557,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4176:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "id": 80558,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4141:37:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_int256_$10_memory_ptr",
                              "typeString": "int256[10] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_int256_$10_memory_ptr",
                              "typeString": "int256[10] memory"
                            }
                          ],
                          "id": 80542,
                          "name": "dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            71448, 71482, 71516, 71550, 71584, 71618, 71652,
                            71686, 71720, 71754, 71788, 71822, 71856, 71890,
                            71924, 71958, 71992, 72026, 72060, 72094, 72131,
                            72168, 72205, 72242, 72279, 72316, 72353, 72390,
                            72427, 72464
                          ],
                          "referencedDeclaration": 72094,
                          "src": "4133:7:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_int256_$10_memory_ptr_$returns$_t_array$_t_int256_$dyn_memory_ptr_$",
                            "typeString": "function (int256[10] memory) pure returns (int256[] memory)"
                          }
                        },
                        "id": 80559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4133:46:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[] memory"
                        }
                      ],
                      "id": 80533,
                      "name": "checkOB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81960,
                      "src": "4071:7:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_int256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256[] memory,int256[] memory)"
                      }
                    },
                    "id": 80560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4071:114:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80561,
                  "nodeType": "ExpressionStatement",
                  "src": "4071:114:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80564,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "4209:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 80563,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "4207:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 80565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4207:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 80567,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "4224:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 80566,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "4222:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 80568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4222:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 80569,
                          "name": "book",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80399,
                          "src": "4237:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Book_$79981_memory_ptr",
                            "typeString": "struct MangoTest.Book memory"
                          }
                        },
                        "id": 80570,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "asks",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79980,
                        "src": "4237:9:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 80574,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4267:1:116",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 80573,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4263:3:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_int256_$",
                                    "typeString": "type(int256)"
                                  },
                                  "typeName": {
                                    "id": 80572,
                                    "name": "int",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4263:3:116",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 80575,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4263:6:116",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 80576,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4271:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 80577,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4274:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 80578,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4277:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "36",
                                "id": 80579,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4280:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              {
                                "hexValue": "31",
                                "id": 80580,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4283:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "32",
                                "id": 80581,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4286:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              {
                                "hexValue": "33",
                                "id": 80582,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4289:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3_by_1",
                                  "typeString": "int_const 3"
                                },
                                "value": "3"
                              },
                              {
                                "hexValue": "34",
                                "id": 80583,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4292:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_4_by_1",
                                  "typeString": "int_const 4"
                                },
                                "value": "4"
                              },
                              {
                                "hexValue": "35",
                                "id": 80584,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4295:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_5_by_1",
                                  "typeString": "int_const 5"
                                },
                                "value": "5"
                              }
                            ],
                            "id": 80585,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4262:35:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_int256_$10_memory_ptr",
                              "typeString": "int256[10] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_int256_$10_memory_ptr",
                              "typeString": "int256[10] memory"
                            }
                          ],
                          "id": 80571,
                          "name": "dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            71448, 71482, 71516, 71550, 71584, 71618, 71652,
                            71686, 71720, 71754, 71788, 71822, 71856, 71890,
                            71924, 71958, 71992, 72026, 72060, 72094, 72131,
                            72168, 72205, 72242, 72279, 72316, 72353, 72390,
                            72427, 72464
                          ],
                          "referencedDeclaration": 72094,
                          "src": "4254:7:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_int256_$10_memory_ptr_$returns$_t_array$_t_int256_$dyn_memory_ptr_$",
                            "typeString": "function (int256[10] memory) pure returns (int256[] memory)"
                          }
                        },
                        "id": 80586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4254:44:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[] memory"
                        }
                      ],
                      "id": 80562,
                      "name": "checkOB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81960,
                      "src": "4192:7:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_int256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256[] memory,int256[] memory)"
                      }
                    },
                    "id": 80587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4192:112:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80588,
                  "nodeType": "ExpressionStatement",
                  "src": "4192:112:116"
                }
              ]
            },
            "functionSelector": "b23ae37c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 80368,
                    "name": "taker",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 80011,
                    "src": "3096:5:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 80369,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 80367,
                  "name": "prank",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 70653,
                  "src": "3090:5:116"
                },
                "nodeType": "ModifierInvocation",
                "src": "3090:12:116"
              }
            ],
            "name": "part_market_order",
            "nameLocation": "3063:17:116",
            "parameters": {
              "id": 80366,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3080:2:116"
            },
            "returnParameters": {
              "id": 80370,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3103:0:116"
            },
            "scope": 82054,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 80681,
            "nodeType": "FunctionDefinition",
            "src": "4313:466:116",
            "body": {
              "id": 80680,
              "nodeType": "Block",
              "src": "4364:415:116",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "-",
                        "prefix": true,
                        "src": "4395:2:116",
                        "subExpression": {
                          "hexValue": "32",
                          "id": 80599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4396:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_minus_2_by_1",
                          "typeString": "int_const -2"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 80601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4415:5:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "arguments": [
                                  {
                                    "id": 80604,
                                    "name": "usdc",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 80007,
                                    "src": "4451:4:116",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestToken_$76251",
                                      "typeString": "contract TestToken"
                                    }
                                  },
                                  {
                                    "hexValue": "31303030",
                                    "id": 80605,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4457:4:116",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1000_by_1",
                                      "typeString": "int_const 1000"
                                    },
                                    "value": "1000"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestToken_$76251",
                                      "typeString": "contract TestToken"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_1000_by_1",
                                      "typeString": "int_const 1000"
                                    }
                                  ],
                                  "id": 80603,
                                  "name": "cash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [70407, 70429],
                                  "referencedDeclaration": 70407,
                                  "src": "4446:4:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (contract IERC20,uint256) returns (uint256)"
                                  }
                                },
                                "id": 80606,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4446:16:116",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 80608,
                                    "name": "usdc",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 80007,
                                    "src": "4469:4:116",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestToken_$76251",
                                      "typeString": "contract TestToken"
                                    }
                                  },
                                  {
                                    "hexValue": "31303030",
                                    "id": 80609,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4475:4:116",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1000_by_1",
                                      "typeString": "int_const 1000"
                                    },
                                    "value": "1000"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestToken_$76251",
                                      "typeString": "contract TestToken"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_1000_by_1",
                                      "typeString": "int_const 1000"
                                    }
                                  ],
                                  "id": 80607,
                                  "name": "cash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [70407, 70429],
                                  "referencedDeclaration": 70407,
                                  "src": "4464:4:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (contract IERC20,uint256) returns (uint256)"
                                  }
                                },
                                "id": 80610,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4464:16:116",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 80611,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4445:36:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "id": 80602,
                          "name": "dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            71448, 71482, 71516, 71550, 71584, 71618, 71652,
                            71686, 71720, 71754, 71788, 71822, 71856, 71890,
                            71924, 71958, 71992, 72026, 72060, 72094, 72131,
                            72168, 72205, 72242, 72279, 72316, 72353, 72390,
                            72427, 72464
                          ],
                          "referencedDeclaration": 71482,
                          "src": "4437:7:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[2] memory) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 80612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4437:45:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_minus_2_by_1",
                          "typeString": "int_const -2"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 80596,
                        "name": "mgo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80014,
                        "src": "4370:3:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Mango_$41268",
                          "typeString": "contract Mango"
                        }
                      },
                      "id": 80598,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "set_shift",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40890,
                      "src": "4370:13:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_int256_$_t_bool_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (int256,bool,uint256[] memory) external"
                      }
                    },
                    "id": 80613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": ["s", "withBase", "amounts"],
                    "nodeType": "FunctionCall",
                    "src": "4370:119:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80614,
                  "nodeType": "ExpressionStatement",
                  "src": "4370:119:116"
                },
                {
                  "assignments": [80617],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80617,
                      "mutability": "mutable",
                      "name": "book",
                      "nameLocation": "4508:4:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 80680,
                      "src": "4496:16:116",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Book_$79981_memory_ptr",
                        "typeString": "struct MangoTest.Book"
                      },
                      "typeName": {
                        "id": 80616,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 80615,
                          "name": "Book",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 79981,
                          "src": "4496:4:116"
                        },
                        "referencedDeclaration": 79981,
                        "src": "4496:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Book_$79981_storage_ptr",
                          "typeString": "struct MangoTest.Book"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80621,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 80619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4526:5:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 80618,
                      "name": "get_offers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81887,
                      "src": "4515:10:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_struct$_Book_$79981_memory_ptr_$",
                        "typeString": "function (bool) view returns (struct MangoTest.Book memory)"
                      }
                    },
                    "id": 80620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4515:17:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Book_$79981_memory_ptr",
                      "typeString": "struct MangoTest.Book memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4496:36:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80624,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "4556:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 80623,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "4554:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 80625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4554:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 80627,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "4571:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 80626,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "4569:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 80628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4569:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 80629,
                          "name": "book",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80617,
                          "src": "4584:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Book_$79981_memory_ptr",
                            "typeString": "struct MangoTest.Book memory"
                          }
                        },
                        "id": 80630,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "bids",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79977,
                        "src": "4584:9:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "38",
                                    "id": 80634,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4614:1:116",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_8_by_1",
                                      "typeString": "int_const 8"
                                    },
                                    "value": "8"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_8_by_1",
                                      "typeString": "int_const 8"
                                    }
                                  ],
                                  "id": 80633,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4610:3:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_int256_$",
                                    "typeString": "type(int256)"
                                  },
                                  "typeName": {
                                    "id": 80632,
                                    "name": "int",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4610:3:116",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 80635,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4610:6:116",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              {
                                "hexValue": "37",
                                "id": 80636,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4618:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_7_by_1",
                                  "typeString": "int_const 7"
                                },
                                "value": "7"
                              },
                              {
                                "hexValue": "31",
                                "id": 80637,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4621:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "32",
                                "id": 80638,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4624:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              {
                                "hexValue": "33",
                                "id": 80639,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4627:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3_by_1",
                                  "typeString": "int_const 3"
                                },
                                "value": "3"
                              },
                              {
                                "hexValue": "34",
                                "id": 80640,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4630:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_4_by_1",
                                  "typeString": "int_const 4"
                                },
                                "value": "4"
                              },
                              {
                                "id": 80642,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "4633:2:116",
                                "subExpression": {
                                  "hexValue": "35",
                                  "id": 80641,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4634:1:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_5_by_1",
                                    "typeString": "int_const 5"
                                  },
                                  "value": "5"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_minus_5_by_1",
                                  "typeString": "int_const -5"
                                }
                              },
                              {
                                "id": 80644,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "4637:2:116",
                                "subExpression": {
                                  "hexValue": "36",
                                  "id": 80643,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4638:1:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_6_by_1",
                                    "typeString": "int_const 6"
                                  },
                                  "value": "6"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_minus_6_by_1",
                                  "typeString": "int_const -6"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 80645,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4641:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 80646,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4644:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "id": 80647,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4609:37:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_int256_$10_memory_ptr",
                              "typeString": "int256[10] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_int256_$10_memory_ptr",
                              "typeString": "int256[10] memory"
                            }
                          ],
                          "id": 80631,
                          "name": "dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            71448, 71482, 71516, 71550, 71584, 71618, 71652,
                            71686, 71720, 71754, 71788, 71822, 71856, 71890,
                            71924, 71958, 71992, 72026, 72060, 72094, 72131,
                            72168, 72205, 72242, 72279, 72316, 72353, 72390,
                            72427, 72464
                          ],
                          "referencedDeclaration": 72094,
                          "src": "4601:7:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_int256_$10_memory_ptr_$returns$_t_array$_t_int256_$dyn_memory_ptr_$",
                            "typeString": "function (int256[10] memory) pure returns (int256[] memory)"
                          }
                        },
                        "id": 80648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4601:46:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[] memory"
                        }
                      ],
                      "id": 80622,
                      "name": "checkOB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81960,
                      "src": "4539:7:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_int256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256[] memory,int256[] memory)"
                      }
                    },
                    "id": 80649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4539:114:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80650,
                  "nodeType": "ExpressionStatement",
                  "src": "4539:114:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80653,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "4677:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 80652,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "4675:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 80654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4675:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 80656,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "4692:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 80655,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "4690:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 80657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4690:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 80658,
                          "name": "book",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80617,
                          "src": "4705:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Book_$79981_memory_ptr",
                            "typeString": "struct MangoTest.Book memory"
                          }
                        },
                        "id": 80659,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "asks",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79980,
                        "src": "4705:9:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "arguments": [
                                  {
                                    "id": 80664,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "-",
                                    "prefix": true,
                                    "src": "4735:2:116",
                                    "subExpression": {
                                      "hexValue": "34",
                                      "id": 80663,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4736:1:116",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_4_by_1",
                                        "typeString": "int_const 4"
                                      },
                                      "value": "4"
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_minus_4_by_1",
                                      "typeString": "int_const -4"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_minus_4_by_1",
                                      "typeString": "int_const -4"
                                    }
                                  ],
                                  "id": 80662,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4731:3:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_int256_$",
                                    "typeString": "type(int256)"
                                  },
                                  "typeName": {
                                    "id": 80661,
                                    "name": "int",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4731:3:116",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 80665,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4731:7:116",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              {
                                "id": 80667,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "4740:2:116",
                                "subExpression": {
                                  "hexValue": "35",
                                  "id": 80666,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4741:1:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_5_by_1",
                                    "typeString": "int_const 5"
                                  },
                                  "value": "5"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_minus_5_by_1",
                                  "typeString": "int_const -5"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 80668,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4744:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 80669,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4747:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 80670,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4750:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 80671,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4753:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "36",
                                "id": 80672,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4756:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              {
                                "hexValue": "31",
                                "id": 80673,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4759:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "32",
                                "id": 80674,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4762:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              {
                                "hexValue": "33",
                                "id": 80675,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4765:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3_by_1",
                                  "typeString": "int_const 3"
                                },
                                "value": "3"
                              }
                            ],
                            "id": 80676,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4730:37:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_int256_$10_memory_ptr",
                              "typeString": "int256[10] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_int256_$10_memory_ptr",
                              "typeString": "int256[10] memory"
                            }
                          ],
                          "id": 80660,
                          "name": "dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            71448, 71482, 71516, 71550, 71584, 71618, 71652,
                            71686, 71720, 71754, 71788, 71822, 71856, 71890,
                            71924, 71958, 71992, 72026, 72060, 72094, 72131,
                            72168, 72205, 72242, 72279, 72316, 72353, 72390,
                            72427, 72464
                          ],
                          "referencedDeclaration": 72094,
                          "src": "4722:7:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_int256_$10_memory_ptr_$returns$_t_array$_t_int256_$dyn_memory_ptr_$",
                            "typeString": "function (int256[10] memory) pure returns (int256[] memory)"
                          }
                        },
                        "id": 80677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4722:46:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[] memory"
                        }
                      ],
                      "id": 80651,
                      "name": "checkOB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81960,
                      "src": "4660:7:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_int256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256[] memory,int256[] memory)"
                      }
                    },
                    "id": 80678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4660:114:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80679,
                  "nodeType": "ExpressionStatement",
                  "src": "4660:114:116"
                }
              ]
            },
            "functionSelector": "c002f5ee",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 80593,
                    "name": "maker",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 80009,
                    "src": "4357:5:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 80594,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 80592,
                  "name": "prank",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 70653,
                  "src": "4351:5:116"
                },
                "nodeType": "ModifierInvocation",
                "src": "4351:12:116"
              }
            ],
            "name": "part_negative_shift",
            "nameLocation": "4322:19:116",
            "parameters": {
              "id": 80591,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4341:2:116"
            },
            "returnParameters": {
              "id": 80595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4364:0:116"
            },
            "scope": 82054,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 80779,
            "nodeType": "FunctionDefinition",
            "src": "4783:483:116",
            "body": {
              "id": 80778,
              "nodeType": "Block",
              "src": "4834:432:116",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "33",
                        "id": 80690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4865:1:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 80691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4884:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "arguments": [
                                  {
                                    "id": 80694,
                                    "name": "weth",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 80004,
                                    "src": "4919:4:116",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestToken_$76251",
                                      "typeString": "contract TestToken"
                                    }
                                  },
                                  {
                                    "hexValue": "33",
                                    "id": 80695,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4925:1:116",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_3_by_1",
                                      "typeString": "int_const 3"
                                    },
                                    "value": "3"
                                  },
                                  {
                                    "hexValue": "31",
                                    "id": 80696,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4928:1:116",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestToken_$76251",
                                      "typeString": "contract TestToken"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_3_by_1",
                                      "typeString": "int_const 3"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "id": 80693,
                                  "name": "cash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [70407, 70429],
                                  "referencedDeclaration": 70429,
                                  "src": "4914:4:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (contract IERC20,uint256,uint256) returns (uint256)"
                                  }
                                },
                                "id": 80697,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4914:16:116",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 80699,
                                    "name": "weth",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 80004,
                                    "src": "4937:4:116",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestToken_$76251",
                                      "typeString": "contract TestToken"
                                    }
                                  },
                                  {
                                    "hexValue": "33",
                                    "id": 80700,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4943:1:116",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_3_by_1",
                                      "typeString": "int_const 3"
                                    },
                                    "value": "3"
                                  },
                                  {
                                    "hexValue": "31",
                                    "id": 80701,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4946:1:116",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestToken_$76251",
                                      "typeString": "contract TestToken"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_3_by_1",
                                      "typeString": "int_const 3"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "id": 80698,
                                  "name": "cash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [70407, 70429],
                                  "referencedDeclaration": 70429,
                                  "src": "4932:4:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (contract IERC20,uint256,uint256) returns (uint256)"
                                  }
                                },
                                "id": 80702,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4932:16:116",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 80704,
                                    "name": "weth",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 80004,
                                    "src": "4955:4:116",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestToken_$76251",
                                      "typeString": "contract TestToken"
                                    }
                                  },
                                  {
                                    "hexValue": "33",
                                    "id": 80705,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4961:1:116",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_3_by_1",
                                      "typeString": "int_const 3"
                                    },
                                    "value": "3"
                                  },
                                  {
                                    "hexValue": "31",
                                    "id": 80706,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4964:1:116",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestToken_$76251",
                                      "typeString": "contract TestToken"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_3_by_1",
                                      "typeString": "int_const 3"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "id": 80703,
                                  "name": "cash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [70407, 70429],
                                  "referencedDeclaration": 70429,
                                  "src": "4950:4:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (contract IERC20,uint256,uint256) returns (uint256)"
                                  }
                                },
                                "id": 80707,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4950:16:116",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 80708,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4913:54:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                              "typeString": "uint256[3] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                              "typeString": "uint256[3] memory"
                            }
                          ],
                          "id": 80692,
                          "name": "dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            71448, 71482, 71516, 71550, 71584, 71618, 71652,
                            71686, 71720, 71754, 71788, 71822, 71856, 71890,
                            71924, 71958, 71992, 72026, 72060, 72094, 72131,
                            72168, 72205, 72242, 72279, 72316, 72353, 72390,
                            72427, 72464
                          ],
                          "referencedDeclaration": 71516,
                          "src": "4905:7:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$3_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[3] memory) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 80709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4905:63:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 80687,
                        "name": "mgo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80014,
                        "src": "4840:3:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Mango_$41268",
                          "typeString": "contract Mango"
                        }
                      },
                      "id": 80689,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "set_shift",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40890,
                      "src": "4840:13:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_int256_$_t_bool_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (int256,bool,uint256[] memory) external"
                      }
                    },
                    "id": 80710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": ["s", "withBase", "amounts"],
                    "nodeType": "FunctionCall",
                    "src": "4840:135:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80711,
                  "nodeType": "ExpressionStatement",
                  "src": "4840:135:116"
                },
                {
                  "assignments": [80714],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80714,
                      "mutability": "mutable",
                      "name": "book",
                      "nameLocation": "4994:4:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 80778,
                      "src": "4982:16:116",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Book_$79981_memory_ptr",
                        "typeString": "struct MangoTest.Book"
                      },
                      "typeName": {
                        "id": 80713,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 80712,
                          "name": "Book",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 79981,
                          "src": "4982:4:116"
                        },
                        "referencedDeclaration": 79981,
                        "src": "4982:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Book_$79981_storage_ptr",
                          "typeString": "struct MangoTest.Book"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80718,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 80716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5012:5:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 80715,
                      "name": "get_offers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81887,
                      "src": "5001:10:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_struct$_Book_$79981_memory_ptr_$",
                        "typeString": "function (bool) view returns (struct MangoTest.Book memory)"
                      }
                    },
                    "id": 80717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5001:17:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Book_$79981_memory_ptr",
                      "typeString": "struct MangoTest.Book memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4982:36:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80721,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "5042:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 80720,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "5040:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 80722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5040:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 80724,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "5057:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 80723,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "5055:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 80725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5055:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 80726,
                          "name": "book",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80714,
                          "src": "5070:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Book_$79981_memory_ptr",
                            "typeString": "struct MangoTest.Book memory"
                          }
                        },
                        "id": 80727,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "bids",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79977,
                        "src": "5070:9:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "32",
                                    "id": 80731,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5100:1:116",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    }
                                  ],
                                  "id": 80730,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5096:3:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_int256_$",
                                    "typeString": "type(int256)"
                                  },
                                  "typeName": {
                                    "id": 80729,
                                    "name": "int",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5096:3:116",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 80732,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5096:6:116",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              {
                                "hexValue": "33",
                                "id": 80733,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5104:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3_by_1",
                                  "typeString": "int_const 3"
                                },
                                "value": "3"
                              },
                              {
                                "hexValue": "34",
                                "id": 80734,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5107:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_4_by_1",
                                  "typeString": "int_const 4"
                                },
                                "value": "4"
                              },
                              {
                                "id": 80736,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "5110:2:116",
                                "subExpression": {
                                  "hexValue": "35",
                                  "id": 80735,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5111:1:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_5_by_1",
                                    "typeString": "int_const 5"
                                  },
                                  "value": "5"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_minus_5_by_1",
                                  "typeString": "int_const -5"
                                }
                              },
                              {
                                "id": 80738,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "5114:2:116",
                                "subExpression": {
                                  "hexValue": "36",
                                  "id": 80737,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5115:1:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_6_by_1",
                                    "typeString": "int_const 6"
                                  },
                                  "value": "6"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_minus_6_by_1",
                                  "typeString": "int_const -6"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 80739,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5118:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 80740,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5121:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "id": 80742,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "5124:2:116",
                                "subExpression": {
                                  "hexValue": "38",
                                  "id": 80741,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5125:1:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_8_by_1",
                                    "typeString": "int_const 8"
                                  },
                                  "value": "8"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_minus_8_by_1",
                                  "typeString": "int_const -8"
                                }
                              },
                              {
                                "id": 80744,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "5128:2:116",
                                "subExpression": {
                                  "hexValue": "37",
                                  "id": 80743,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5129:1:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_7_by_1",
                                    "typeString": "int_const 7"
                                  },
                                  "value": "7"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_minus_7_by_1",
                                  "typeString": "int_const -7"
                                }
                              },
                              {
                                "id": 80746,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "5132:2:116",
                                "subExpression": {
                                  "hexValue": "31",
                                  "id": 80745,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5133:1:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_minus_1_by_1",
                                  "typeString": "int_const -1"
                                }
                              }
                            ],
                            "id": 80747,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "5095:40:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_int256_$10_memory_ptr",
                              "typeString": "int256[10] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_int256_$10_memory_ptr",
                              "typeString": "int256[10] memory"
                            }
                          ],
                          "id": 80728,
                          "name": "dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            71448, 71482, 71516, 71550, 71584, 71618, 71652,
                            71686, 71720, 71754, 71788, 71822, 71856, 71890,
                            71924, 71958, 71992, 72026, 72060, 72094, 72131,
                            72168, 72205, 72242, 72279, 72316, 72353, 72390,
                            72427, 72464
                          ],
                          "referencedDeclaration": 72094,
                          "src": "5087:7:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_int256_$10_memory_ptr_$returns$_t_array$_t_int256_$dyn_memory_ptr_$",
                            "typeString": "function (int256[10] memory) pure returns (int256[] memory)"
                          }
                        },
                        "id": 80748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5087:49:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[] memory"
                        }
                      ],
                      "id": 80719,
                      "name": "checkOB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81960,
                      "src": "5025:7:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_int256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256[] memory,int256[] memory)"
                      }
                    },
                    "id": 80749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5025:117:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80750,
                  "nodeType": "ExpressionStatement",
                  "src": "5025:117:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80753,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "5166:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 80752,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "5164:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 80754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5164:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 80756,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "5181:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 80755,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "5179:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 80757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5179:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 80758,
                          "name": "book",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80714,
                          "src": "5194:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Book_$79981_memory_ptr",
                            "typeString": "struct MangoTest.Book memory"
                          }
                        },
                        "id": 80759,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "asks",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79980,
                        "src": "5194:9:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 80763,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5224:1:116",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 80762,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5220:3:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_int256_$",
                                    "typeString": "type(int256)"
                                  },
                                  "typeName": {
                                    "id": 80761,
                                    "name": "int",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5220:3:116",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 80764,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5220:6:116",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 80765,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5228:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 80766,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5231:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "36",
                                "id": 80767,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5234:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              {
                                "hexValue": "31",
                                "id": 80768,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5237:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "32",
                                "id": 80769,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5240:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              {
                                "hexValue": "33",
                                "id": 80770,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5243:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3_by_1",
                                  "typeString": "int_const 3"
                                },
                                "value": "3"
                              },
                              {
                                "hexValue": "34",
                                "id": 80771,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5246:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_4_by_1",
                                  "typeString": "int_const 4"
                                },
                                "value": "4"
                              },
                              {
                                "hexValue": "35",
                                "id": 80772,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5249:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_5_by_1",
                                  "typeString": "int_const 5"
                                },
                                "value": "5"
                              },
                              {
                                "hexValue": "37",
                                "id": 80773,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5252:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_7_by_1",
                                  "typeString": "int_const 7"
                                },
                                "value": "7"
                              }
                            ],
                            "id": 80774,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "5219:35:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_int256_$10_memory_ptr",
                              "typeString": "int256[10] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_int256_$10_memory_ptr",
                              "typeString": "int256[10] memory"
                            }
                          ],
                          "id": 80760,
                          "name": "dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            71448, 71482, 71516, 71550, 71584, 71618, 71652,
                            71686, 71720, 71754, 71788, 71822, 71856, 71890,
                            71924, 71958, 71992, 72026, 72060, 72094, 72131,
                            72168, 72205, 72242, 72279, 72316, 72353, 72390,
                            72427, 72464
                          ],
                          "referencedDeclaration": 72094,
                          "src": "5211:7:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_int256_$10_memory_ptr_$returns$_t_array$_t_int256_$dyn_memory_ptr_$",
                            "typeString": "function (int256[10] memory) pure returns (int256[] memory)"
                          }
                        },
                        "id": 80775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5211:44:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[] memory"
                        }
                      ],
                      "id": 80751,
                      "name": "checkOB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81960,
                      "src": "5149:7:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_int256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256[] memory,int256[] memory)"
                      }
                    },
                    "id": 80776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5149:112:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80777,
                  "nodeType": "ExpressionStatement",
                  "src": "5149:112:116"
                }
              ]
            },
            "functionSelector": "2d552ef6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 80684,
                    "name": "maker",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 80009,
                    "src": "4827:5:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 80685,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 80683,
                  "name": "prank",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 70653,
                  "src": "4821:5:116"
                },
                "nodeType": "ModifierInvocation",
                "src": "4821:12:116"
              }
            ],
            "name": "part_positive_shift",
            "nameLocation": "4792:19:116",
            "parameters": {
              "id": 80682,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4811:2:116"
            },
            "returnParameters": {
              "id": 80686,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4834:0:116"
            },
            "scope": 82054,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 81034,
            "nodeType": "FunctionDefinition",
            "src": "5270:1622:116",
            "body": {
              "id": 81033,
              "nodeType": "Block",
              "src": "5306:1586:116",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80786,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "5597:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 80785,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "5595:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 80787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5595:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 80789,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "5606:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 80788,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "5604:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 80790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5604:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 80792,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "5618:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 80793,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5624:1:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 80791,
                          "name": "cash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [70407, 70429],
                          "referencedDeclaration": 70407,
                          "src": "5613:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (contract IERC20,uint256) returns (uint256)"
                          }
                        },
                        "id": 80794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5613:13:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 80782,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "5580:3:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 80784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setDensity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23952,
                      "src": "5580:14:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 80795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5580:47:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80796,
                  "nodeType": "ExpressionStatement",
                  "src": "5580:47:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80800,
                        "name": "taker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80011,
                        "src": "5643:5:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 80797,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "5634:2:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80799,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5016,
                      "src": "5634:8:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 80801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5634:15:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80802,
                  "nodeType": "ExpressionStatement",
                  "src": "5634:15:116"
                },
                {
                  "assignments": [80804, 80806, 80808, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80804,
                      "mutability": "mutable",
                      "name": "got",
                      "nameLocation": "5661:3:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 81033,
                      "src": "5656:8:116",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80803,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5656:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 80806,
                      "mutability": "mutable",
                      "name": "gave",
                      "nameLocation": "5671:4:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 81033,
                      "src": "5666:9:116",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80805,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5666:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 80808,
                      "mutability": "mutable",
                      "name": "bounty",
                      "nameLocation": "5682:6:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 81033,
                      "src": "5677:11:116",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80807,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5677:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 80828,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80812,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "5719:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 80811,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "5717:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 80813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5717:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 80815,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "5734:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 80814,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "5732:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 80816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5732:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 80818,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "5752:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 80819,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5758:1:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          {
                            "hexValue": "32",
                            "id": 80820,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5761:1:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "id": 80817,
                          "name": "cash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [70407, 70429],
                          "referencedDeclaration": 70429,
                          "src": "5747:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (contract IERC20,uint256,uint256) returns (uint256)"
                          }
                        },
                        "id": 80821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5747:16:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 80823,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "5776:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 80824,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5782:1:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 80822,
                          "name": "cash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [70407, 70429],
                          "referencedDeclaration": 70407,
                          "src": "5771:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (contract IERC20,uint256) returns (uint256)"
                          }
                        },
                        "id": 80825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5771:13:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 80826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5792:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 80809,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "5694:3:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 80810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26236,
                      "src": "5694:15:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 80827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5694:108:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5655:147:116"
                },
                {
                  "assignments": [80830],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80830,
                      "mutability": "mutable",
                      "name": "best_id",
                      "nameLocation": "5814:7:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 81033,
                      "src": "5809:12:116",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80829,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5809:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80840,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80834,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "5835:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 80833,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "5833:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 80835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5833:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 80837,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "5844:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 80836,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "5842:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 80838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5842:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 80831,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "5824:3:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 80832,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "best",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24245,
                      "src": "5824:8:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 80839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5824:26:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5809:41:116"
                },
                {
                  "assignments": [80846],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80846,
                      "mutability": "mutable",
                      "name": "best_offer",
                      "nameLocation": "5866:10:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 81033,
                      "src": "5856:20:116",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                        "typeString": "t"
                      },
                      "typeName": {
                        "id": 80845,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 80844,
                          "name": "P.Offer.t",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 32167,
                          "src": "5856:9:116"
                        },
                        "referencedDeclaration": 32167,
                        "src": "5856:9:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                          "typeString": "t"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80857,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80850,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "5892:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 80849,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "5890:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 80851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5890:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 80853,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "5901:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 80852,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "5899:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 80854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5899:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 80855,
                        "name": "best_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80830,
                        "src": "5908:7:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 80847,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "5879:3:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 80848,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "offers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24205,
                      "src": "5879:10:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_userDefinedValueType$_t_$32167_$",
                        "typeString": "function (address,address,uint256) view external returns (t)"
                      }
                    },
                    "id": 80856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5879:37:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                      "typeString": "t"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5856:60:116"
                },
                {
                  "assignments": [80859],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80859,
                      "mutability": "mutable",
                      "name": "old_gives",
                      "nameLocation": "5927:9:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 81033,
                      "src": "5922:14:116",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80858,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5922:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80863,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 80860,
                        "name": "best_offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80846,
                        "src": "5939:10:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                          "typeString": "t"
                        }
                      },
                      "id": 80861,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "gives",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32588,
                      "src": "5939:16:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$32167_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$32167_$",
                        "typeString": "function (t) pure returns (uint256)"
                      }
                    },
                    "id": 80862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5939:18:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5922:35:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80867,
                        "name": "maker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80009,
                        "src": "5973:5:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 80864,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "5964:2:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5016,
                      "src": "5964:8:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 80868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5964:15:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80869,
                  "nodeType": "ExpressionStatement",
                  "src": "5964:15:116"
                },
                {
                  "assignments": [80871],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80871,
                      "mutability": "mutable",
                      "name": "pendingBase",
                      "nameLocation": "5990:11:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 81033,
                      "src": "5985:16:116",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80870,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5985:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80877,
                  "initialValue": {
                    "baseExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 80872,
                          "name": "mgo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80014,
                          "src": "6004:3:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Mango_$41268",
                            "typeString": "contract Mango"
                          }
                        },
                        "id": 80873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pending",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40758,
                        "src": "6004:11:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$",
                          "typeString": "function () view external returns (uint256[2] memory)"
                        }
                      },
                      "id": 80874,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6004:13:116",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                        "typeString": "uint256[2] memory"
                      }
                    },
                    "id": 80876,
                    "indexExpression": {
                      "hexValue": "30",
                      "id": 80875,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6018:1:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6004:16:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5985:35:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80879,
                        "name": "pendingBase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80871,
                        "src": "6036:11:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 80880,
                        "name": "gave",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80806,
                        "src": "6049:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "54616b6572206c69717569646974792073686f756c642062652070656e64696e67",
                        "id": 80881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6055:35:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_54b48724a0183378be8f4eaa4bae4e9077c3ebd11c5ec29c5fb522fc43ba4c3e",
                          "typeString": "literal_string \"Taker liquidity should be pending\""
                        },
                        "value": "Taker liquidity should be pending"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_54b48724a0183378be8f4eaa4bae4e9077c3ebd11c5ec29c5fb522fc43ba4c3e",
                          "typeString": "literal_string \"Taker liquidity should be pending\""
                        }
                      ],
                      "id": 80878,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "6027:8:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 80882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6027:64:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80883,
                  "nodeType": "ExpressionStatement",
                  "src": "6027:64:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80887,
                        "name": "taker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80011,
                        "src": "6107:5:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 80884,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "6098:2:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80886,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5016,
                      "src": "6098:8:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 80888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6098:15:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80889,
                  "nodeType": "ExpressionStatement",
                  "src": "6098:15:116"
                },
                {
                  "expression": {
                    "id": 80913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 80890,
                          "name": "got",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80804,
                          "src": "6120:3:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 80891,
                          "name": "gave",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80806,
                          "src": "6125:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 80892,
                          "name": "bounty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80808,
                          "src": "6131:6:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        null
                      ],
                      "id": 80893,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "6119:21:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$__$",
                        "typeString": "tuple(uint256,uint256,uint256,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 80897,
                              "name": "usdc",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80007,
                              "src": "6168:4:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 80896,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "6166:1:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 80898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6166:7:116",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 80900,
                              "name": "weth",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80004,
                              "src": "6183:4:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 80899,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "6181:1:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 80901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6181:7:116",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 80903,
                              "name": "usdc",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80007,
                              "src": "6201:4:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            },
                            {
                              "hexValue": "31",
                              "id": 80904,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6207:1:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            {
                              "hexValue": "32",
                              "id": 80905,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6210:1:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "id": 80902,
                            "name": "cash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [70407, 70429],
                            "referencedDeclaration": 70429,
                            "src": "6196:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (contract IERC20,uint256,uint256) returns (uint256)"
                            }
                          },
                          "id": 80906,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6196:16:116",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 80908,
                              "name": "weth",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80004,
                              "src": "6225:4:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            },
                            {
                              "hexValue": "31",
                              "id": 80909,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6231:1:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 80907,
                            "name": "cash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [70407, 70429],
                            "referencedDeclaration": 70407,
                            "src": "6220:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (contract IERC20,uint256) returns (uint256)"
                            }
                          },
                          "id": 80910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6220:13:116",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 80911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6241:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 80894,
                          "name": "mgv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69379,
                          "src": "6143:3:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                            "typeString": "contract AbstractMangrove"
                          }
                        },
                        "id": 80895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "marketOrder",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 26236,
                        "src": "6143:15:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                        }
                      },
                      "id": 80912,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6143:108:116",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256,uint256,uint256)"
                      }
                    },
                    "src": "6119:132:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80914,
                  "nodeType": "ExpressionStatement",
                  "src": "6119:132:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80918,
                        "name": "maker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80009,
                        "src": "6267:5:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 80915,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "6258:2:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80917,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5016,
                      "src": "6258:8:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 80919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6258:15:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80920,
                  "nodeType": "ExpressionStatement",
                  "src": "6258:15:116"
                },
                {
                  "assignments": [80922],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80922,
                      "mutability": "mutable",
                      "name": "pendingBase_",
                      "nameLocation": "6284:12:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 81033,
                      "src": "6279:17:116",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80921,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6279:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80928,
                  "initialValue": {
                    "baseExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 80923,
                          "name": "mgo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80014,
                          "src": "6299:3:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Mango_$41268",
                            "typeString": "contract Mango"
                          }
                        },
                        "id": 80924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pending",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40758,
                        "src": "6299:11:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$",
                          "typeString": "function () view external returns (uint256[2] memory)"
                        }
                      },
                      "id": 80925,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6299:13:116",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                        "typeString": "uint256[2] memory"
                      }
                    },
                    "id": 80927,
                    "indexExpression": {
                      "hexValue": "30",
                      "id": 80926,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6313:1:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6299:16:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6279:36:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80930,
                        "name": "pendingBase_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80922,
                        "src": "6331:12:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 80933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 80931,
                          "name": "pendingBase",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80871,
                          "src": "6345:11:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 80932,
                          "name": "gave",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80806,
                          "src": "6359:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6345:18:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "4d697373696e672070656e64696e672062617365",
                        "id": 80934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6365:22:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d67359e5a25f8c1f165dfce7659ea1b0e01b4afee318ceb0c817eabe37dbeb7",
                          "typeString": "literal_string \"Missing pending base\""
                        },
                        "value": "Missing pending base"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d67359e5a25f8c1f165dfce7659ea1b0e01b4afee318ceb0c817eabe37dbeb7",
                          "typeString": "literal_string \"Missing pending base\""
                        }
                      ],
                      "id": 80929,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "6322:8:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 80935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6322:66:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80936,
                  "nodeType": "ExpressionStatement",
                  "src": "6322:66:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80941,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "6412:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 80940,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "6410:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 80942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6410:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 80944,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "6421:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 80943,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "6419:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 80945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6419:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 80946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6428:3:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "id": 80937,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "6395:3:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 80939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setDensity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23952,
                      "src": "6395:14:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 80947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6395:37:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80948,
                  "nodeType": "ExpressionStatement",
                  "src": "6395:37:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80952,
                        "name": "taker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80011,
                        "src": "6448:5:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 80949,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "6439:2:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5016,
                      "src": "6439:8:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 80953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6439:15:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80954,
                  "nodeType": "ExpressionStatement",
                  "src": "6439:15:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80959,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "6478:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 80958,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "6476:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 80960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6476:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 80962,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "6487:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 80961,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "6485:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 80963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6485:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 80965,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "6499:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 80966,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6505:1:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          {
                            "hexValue": "32",
                            "id": 80967,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6508:1:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "id": 80964,
                          "name": "cash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [70407, 70429],
                          "referencedDeclaration": 70429,
                          "src": "6494:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (contract IERC20,uint256,uint256) returns (uint256)"
                          }
                        },
                        "id": 80968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6494:16:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 80970,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "6517:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 80971,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6523:1:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 80969,
                          "name": "cash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [70407, 70429],
                          "referencedDeclaration": 70407,
                          "src": "6512:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (contract IERC20,uint256) returns (uint256)"
                          }
                        },
                        "id": 80972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6512:13:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 80973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6527:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 80955,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "6460:3:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 80957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26236,
                      "src": "6460:15:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 80974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6460:72:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 80975,
                  "nodeType": "ExpressionStatement",
                  "src": "6460:72:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80979,
                        "name": "maker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80009,
                        "src": "6548:5:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 80976,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "6539:2:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5016,
                      "src": "6539:8:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 80980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6539:15:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80981,
                  "nodeType": "ExpressionStatement",
                  "src": "6539:15:116"
                },
                {
                  "assignments": [80983],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80983,
                      "mutability": "mutable",
                      "name": "pendingBase__",
                      "nameLocation": "6565:13:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 81033,
                      "src": "6560:18:116",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80982,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6560:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80989,
                  "initialValue": {
                    "baseExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 80984,
                          "name": "mgo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80014,
                          "src": "6581:3:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Mango_$41268",
                            "typeString": "contract Mango"
                          }
                        },
                        "id": 80985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pending",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40758,
                        "src": "6581:11:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$",
                          "typeString": "function () view external returns (uint256[2] memory)"
                        }
                      },
                      "id": 80986,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6581:13:116",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                        "typeString": "uint256[2] memory"
                      }
                    },
                    "id": 80988,
                    "indexExpression": {
                      "hexValue": "30",
                      "id": 80987,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6595:1:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6581:16:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6560:37:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80991,
                        "name": "pendingBase__",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80983,
                        "src": "6613:13:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 80992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6628:1:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "54686572652073686f756c64206265206e6f206d6f72652070656e64696e672062617365",
                        "id": 80993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6631:38:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_10bdc7a48bfd0f1c8a0346432aca122084258460ab2db9e6de4ca88b81492ad4",
                          "typeString": "literal_string \"There should be no more pending base\""
                        },
                        "value": "There should be no more pending base"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_10bdc7a48bfd0f1c8a0346432aca122084258460ab2db9e6de4ca88b81492ad4",
                          "typeString": "literal_string \"There should be no more pending base\""
                        }
                      ],
                      "id": 80990,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "6604:8:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 80994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6604:66:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80995,
                  "nodeType": "ExpressionStatement",
                  "src": "6604:66:116"
                },
                {
                  "expression": {
                    "id": 81006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 80996,
                      "name": "best_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80830,
                      "src": "6677:7:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 81000,
                              "name": "weth",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80004,
                              "src": "6698:4:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 80999,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "6696:1:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 81001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6696:7:116",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 81003,
                              "name": "usdc",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80007,
                              "src": "6707:4:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 81002,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "6705:1:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 81004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6705:7:116",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "expression": {
                          "id": 80997,
                          "name": "mgv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69379,
                          "src": "6687:3:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                            "typeString": "contract AbstractMangrove"
                          }
                        },
                        "id": 80998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "best",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24245,
                        "src": "6687:8:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address,address) view external returns (uint256)"
                        }
                      },
                      "id": 81005,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6687:26:116",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6677:36:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 81007,
                  "nodeType": "ExpressionStatement",
                  "src": "6677:36:116"
                },
                {
                  "expression": {
                    "id": 81019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 81008,
                      "name": "best_offer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80846,
                      "src": "6719:10:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                        "typeString": "t"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 81012,
                              "name": "weth",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80004,
                              "src": "6745:4:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 81011,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "6743:1:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 81013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6743:7:116",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 81015,
                              "name": "usdc",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80007,
                              "src": "6754:4:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 81014,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "6752:1:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 81016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6752:7:116",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "id": 81017,
                          "name": "best_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80830,
                          "src": "6761:7:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 81009,
                          "name": "mgv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69379,
                          "src": "6732:3:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                            "typeString": "contract AbstractMangrove"
                          }
                        },
                        "id": 81010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offers",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24205,
                        "src": "6732:10:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_userDefinedValueType$_t_$32167_$",
                          "typeString": "function (address,address,uint256) view external returns (t)"
                        }
                      },
                      "id": 81018,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6732:37:116",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                        "typeString": "t"
                      }
                    },
                    "src": "6719:50:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                      "typeString": "t"
                    }
                  },
                  "id": 81020,
                  "nodeType": "ExpressionStatement",
                  "src": "6719:50:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 81022,
                            "name": "best_offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80846,
                            "src": "6792:10:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                              "typeString": "t"
                            }
                          },
                          "id": 81023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "gives",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32588,
                          "src": "6792:16:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$32167_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$32167_$",
                            "typeString": "function (t) pure returns (uint256)"
                          }
                        },
                        "id": 81024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6792:18:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 81029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 81027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 81025,
                            "name": "old_gives",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80859,
                            "src": "6818:9:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 81026,
                            "name": "pendingBase_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80922,
                            "src": "6830:12:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6818:24:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 81028,
                          "name": "gave",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80806,
                          "src": "6845:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6818:31:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f727265637420676976656e20616d6f756e74",
                        "id": 81030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6857:24:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_039fafcac676912bf2bca3e57e4e048a38c9273ff0741c9944a2fd2fb498611d",
                          "typeString": "literal_string \"Incorrect given amount\""
                        },
                        "value": "Incorrect given amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_039fafcac676912bf2bca3e57e4e048a38c9273ff0741c9944a2fd2fb498611d",
                          "typeString": "literal_string \"Incorrect given amount\""
                        }
                      ],
                      "id": 81021,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "6776:8:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 81031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6776:111:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81032,
                  "nodeType": "ExpressionStatement",
                  "src": "6776:111:116"
                }
              ]
            },
            "functionSelector": "1dff3591",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "part_partial_fill",
            "nameLocation": "5279:17:116",
            "parameters": {
              "id": 80780,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5296:2:116"
            },
            "returnParameters": {
              "id": 80781,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5306:0:116"
            },
            "scope": 82054,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 81371,
            "nodeType": "FunctionDefinition",
            "src": "6896:2376:116",
            "body": {
              "id": 81370,
              "nodeType": "Block",
              "src": "6935:2337:116",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81041,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "6958:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 81040,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "6956:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 81042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6956:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 81044,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "6967:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 81043,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "6965:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 81045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6965:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 81047,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "6979:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 81048,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6985:1:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 81046,
                          "name": "cash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [70407, 70429],
                          "referencedDeclaration": 70407,
                          "src": "6974:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (contract IERC20,uint256) returns (uint256)"
                          }
                        },
                        "id": 81049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6974:13:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 81037,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "6941:3:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 81039,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setDensity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23952,
                      "src": "6941:14:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 81050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6941:47:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81051,
                  "nodeType": "ExpressionStatement",
                  "src": "6941:47:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81056,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "7011:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 81055,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "7009:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 81057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7009:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 81059,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "7020:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 81058,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "7018:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 81060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7018:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 81062,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "7032:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 81063,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7038:1:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 81061,
                          "name": "cash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [70407, 70429],
                          "referencedDeclaration": 70407,
                          "src": "7027:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (contract IERC20,uint256) returns (uint256)"
                          }
                        },
                        "id": 81064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7027:13:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 81052,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "6994:3:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 81054,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setDensity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23952,
                      "src": "6994:14:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 81065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6994:47:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81066,
                  "nodeType": "ExpressionStatement",
                  "src": "6994:47:116"
                },
                {
                  "assignments": [81068],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81068,
                      "mutability": "mutable",
                      "name": "best_id",
                      "nameLocation": "7108:7:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 81370,
                      "src": "7103:12:116",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 81067,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7103:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81078,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81072,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "7129:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 81071,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "7127:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 81073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7127:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 81075,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "7138:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 81074,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "7136:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 81076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7136:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 81069,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "7118:3:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 81070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "best",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24245,
                      "src": "7118:8:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 81077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7118:26:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7103:41:116"
                },
                {
                  "assignments": [81084],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81084,
                      "mutability": "mutable",
                      "name": "best_offer",
                      "nameLocation": "7160:10:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 81370,
                      "src": "7150:20:116",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                        "typeString": "t"
                      },
                      "typeName": {
                        "id": 81083,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 81082,
                          "name": "P.Offer.t",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 32167,
                          "src": "7150:9:116"
                        },
                        "referencedDeclaration": 32167,
                        "src": "7150:9:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                          "typeString": "t"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81095,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81088,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "7186:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 81087,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "7184:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 81089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7184:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 81091,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "7195:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 81090,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "7193:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 81092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7193:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 81093,
                        "name": "best_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81068,
                        "src": "7202:7:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 81085,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "7173:3:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 81086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "offers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24205,
                      "src": "7173:10:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_userDefinedValueType$_t_$32167_$",
                        "typeString": "function (address,address,uint256) view external returns (t)"
                      }
                    },
                    "id": 81094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7173:37:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                      "typeString": "t"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7150:60:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81099,
                        "name": "taker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80011,
                        "src": "7226:5:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 81096,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "7217:2:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81098,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5016,
                      "src": "7217:8:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7217:15:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81101,
                  "nodeType": "ExpressionStatement",
                  "src": "7217:15:116"
                },
                {
                  "assignments": [81103, 81105, 81107, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81103,
                      "mutability": "mutable",
                      "name": "got",
                      "nameLocation": "7244:3:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 81370,
                      "src": "7239:8:116",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 81102,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7239:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 81105,
                      "mutability": "mutable",
                      "name": "gave",
                      "nameLocation": "7254:4:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 81370,
                      "src": "7249:9:116",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 81104,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7249:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 81107,
                      "mutability": "mutable",
                      "name": "bounty",
                      "nameLocation": "7265:6:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 81370,
                      "src": "7260:11:116",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 81106,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7260:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 81126,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81111,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "7302:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 81110,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "7300:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 81112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7300:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 81114,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "7317:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 81113,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "7315:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 81115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7315:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 81117,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "7335:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          },
                          {
                            "hexValue": "313030",
                            "id": 81118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7341:3:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            },
                            {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            }
                          ],
                          "id": 81116,
                          "name": "cash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [70407, 70429],
                          "referencedDeclaration": 70407,
                          "src": "7330:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (contract IERC20,uint256) returns (uint256)"
                          }
                        },
                        "id": 81119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7330:15:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 81121,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "7358:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 81122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7364:1:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 81120,
                          "name": "cash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [70407, 70429],
                          "referencedDeclaration": 70407,
                          "src": "7353:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (contract IERC20,uint256) returns (uint256)"
                          }
                        },
                        "id": 81123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7353:13:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 81124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7374:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 81108,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "7277:3:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 81109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26236,
                      "src": "7277:15:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 81125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7277:107:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7238:146:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81130,
                        "name": "maker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80009,
                        "src": "7676:5:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 81127,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "7662:2:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5021,
                      "src": "7662:13:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7662:20:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81132,
                  "nodeType": "ExpressionStatement",
                  "src": "7662:20:116"
                },
                {
                  "assignments": [81134],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81134,
                      "mutability": "mutable",
                      "name": "pendingBase",
                      "nameLocation": "7693:11:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 81370,
                      "src": "7688:16:116",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 81133,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7688:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81140,
                  "initialValue": {
                    "baseExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 81135,
                          "name": "mgo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80014,
                          "src": "7707:3:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Mango_$41268",
                            "typeString": "contract Mango"
                          }
                        },
                        "id": 81136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pending",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40758,
                        "src": "7707:11:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$",
                          "typeString": "function () view external returns (uint256[2] memory)"
                        }
                      },
                      "id": 81137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7707:13:116",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                        "typeString": "uint256[2] memory"
                      }
                    },
                    "id": 81139,
                    "indexExpression": {
                      "hexValue": "30",
                      "id": 81138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7721:1:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7707:16:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7688:35:116"
                },
                {
                  "assignments": [81142],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81142,
                      "mutability": "mutable",
                      "name": "pendingQuote",
                      "nameLocation": "7734:12:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 81370,
                      "src": "7729:17:116",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 81141,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7729:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81148,
                  "initialValue": {
                    "baseExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 81143,
                          "name": "mgo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80014,
                          "src": "7749:3:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Mango_$41268",
                            "typeString": "contract Mango"
                          }
                        },
                        "id": 81144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pending",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40758,
                        "src": "7749:11:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$",
                          "typeString": "function () view external returns (uint256[2] memory)"
                        }
                      },
                      "id": 81145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7749:13:116",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                        "typeString": "uint256[2] memory"
                      }
                    },
                    "id": 81147,
                    "indexExpression": {
                      "hexValue": "31",
                      "id": 81146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7763:1:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7749:16:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7729:36:116"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 81149,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "7771:2:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5038,
                      "src": "7771:12:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 81152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7771:14:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81153,
                  "nodeType": "ExpressionStatement",
                  "src": "7771:14:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81155,
                        "name": "gave",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81105,
                        "src": "7801:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 81156,
                        "name": "pendingBase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81134,
                        "src": "7807:11:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "6761766520776173206e6f7420616464656420746f2070656e64696e67206261736520706f6f6c",
                        "id": 81157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7820:41:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5d61ed5211164399ba20925337a7ab4bfb8cac92e40a8cc01e340101941c26b0",
                          "typeString": "literal_string \"gave was not added to pending base pool\""
                        },
                        "value": "gave was not added to pending base pool"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5d61ed5211164399ba20925337a7ab4bfb8cac92e40a8cc01e340101941c26b0",
                          "typeString": "literal_string \"gave was not added to pending base pool\""
                        }
                      ],
                      "id": 81154,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "7792:8:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 81158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7792:70:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81159,
                  "nodeType": "ExpressionStatement",
                  "src": "7792:70:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 81168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 81161,
                              "name": "best_offer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81084,
                              "src": "7885:10:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                                "typeString": "t"
                              }
                            },
                            "id": 81162,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "gives",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32588,
                            "src": "7885:16:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$32167_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$32167_$",
                              "typeString": "function (t) pure returns (uint256)"
                            }
                          },
                          "id": 81163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7885:18:116",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 81165,
                              "name": "usdc",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80007,
                              "src": "7911:4:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            },
                            {
                              "hexValue": "313030",
                              "id": 81166,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7917:3:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              },
                              {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              }
                            ],
                            "id": 81164,
                            "name": "cash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [70407, 70429],
                            "referencedDeclaration": 70407,
                            "src": "7906:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (contract IERC20,uint256) returns (uint256)"
                            }
                          },
                          "id": 81167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7906:15:116",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7885:36:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 81169,
                        "name": "pendingQuote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81142,
                        "src": "7929:12:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "526573696475616c20776173206e6f7420616464656420746f2070656e64696e672071756f746520706f6f6c",
                        "id": 81170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7949:46:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a8ea1de144459a5ca1ac4c336fac42209f90115f2c273a40cdd2def85a6e555d",
                          "typeString": "literal_string \"Residual was not added to pending quote pool\""
                        },
                        "value": "Residual was not added to pending quote pool"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a8ea1de144459a5ca1ac4c336fac42209f90115f2c273a40cdd2def85a6e555d",
                          "typeString": "literal_string \"Residual was not added to pending quote pool\""
                        }
                      ],
                      "id": 81160,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "7869:8:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 81171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7869:132:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81172,
                  "nodeType": "ExpressionStatement",
                  "src": "7869:132:116"
                },
                {
                  "expression": {
                    "id": 81183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 81173,
                      "name": "best_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81068,
                      "src": "8125:7:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 81177,
                              "name": "usdc",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80007,
                              "src": "8146:4:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 81176,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "8144:1:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 81178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8144:7:116",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 81180,
                              "name": "weth",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80004,
                              "src": "8155:4:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 81179,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "8153:1:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 81181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8153:7:116",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "expression": {
                          "id": 81174,
                          "name": "mgv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69379,
                          "src": "8135:3:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                            "typeString": "contract AbstractMangrove"
                          }
                        },
                        "id": 81175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "best",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24245,
                        "src": "8135:8:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address,address) view external returns (uint256)"
                        }
                      },
                      "id": 81182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8135:26:116",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8125:36:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 81184,
                  "nodeType": "ExpressionStatement",
                  "src": "8125:36:116"
                },
                {
                  "expression": {
                    "id": 81196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 81185,
                      "name": "best_offer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81084,
                      "src": "8167:10:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                        "typeString": "t"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 81189,
                              "name": "usdc",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80007,
                              "src": "8193:4:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 81188,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "8191:1:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 81190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8191:7:116",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 81192,
                              "name": "weth",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80004,
                              "src": "8202:4:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 81191,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "8200:1:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 81193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8200:7:116",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "id": 81194,
                          "name": "best_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81068,
                          "src": "8209:7:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 81186,
                          "name": "mgv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69379,
                          "src": "8180:3:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                            "typeString": "contract AbstractMangrove"
                          }
                        },
                        "id": 81187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offers",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24205,
                        "src": "8180:10:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_userDefinedValueType$_t_$32167_$",
                          "typeString": "function (address,address,uint256) view external returns (t)"
                        }
                      },
                      "id": 81195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8180:37:116",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                        "typeString": "t"
                      }
                    },
                    "src": "8167:50:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                      "typeString": "t"
                    }
                  },
                  "id": 81197,
                  "nodeType": "ExpressionStatement",
                  "src": "8167:50:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81201,
                        "name": "taker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80011,
                        "src": "8233:5:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 81198,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "8224:2:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5016,
                      "src": "8224:8:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8224:15:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81203,
                  "nodeType": "ExpressionStatement",
                  "src": "8224:15:116"
                },
                {
                  "expression": {
                    "id": 81226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 81204,
                          "name": "got",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81103,
                          "src": "8246:3:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 81205,
                          "name": "gave",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81105,
                          "src": "8251:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 81206,
                          "name": "bounty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81107,
                          "src": "8257:6:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        null
                      ],
                      "id": 81207,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "8245:21:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$__$",
                        "typeString": "tuple(uint256,uint256,uint256,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 81211,
                              "name": "usdc",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80007,
                              "src": "8294:4:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 81210,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "8292:1:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 81212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8292:7:116",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 81214,
                              "name": "weth",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80004,
                              "src": "8309:4:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 81213,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "8307:1:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 81215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8307:7:116",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 81217,
                              "name": "usdc",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80007,
                              "src": "8327:4:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            },
                            {
                              "hexValue": "313030",
                              "id": 81218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8333:3:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              },
                              {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              }
                            ],
                            "id": 81216,
                            "name": "cash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [70407, 70429],
                            "referencedDeclaration": 70407,
                            "src": "8322:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (contract IERC20,uint256) returns (uint256)"
                            }
                          },
                          "id": 81219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8322:15:116",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 81221,
                              "name": "weth",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80004,
                              "src": "8350:4:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            },
                            {
                              "hexValue": "31",
                              "id": 81222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8356:1:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 81220,
                            "name": "cash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [70407, 70429],
                            "referencedDeclaration": 70407,
                            "src": "8345:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (contract IERC20,uint256) returns (uint256)"
                            }
                          },
                          "id": 81223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8345:13:116",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 81224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8366:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 81208,
                          "name": "mgv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69379,
                          "src": "8269:3:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                            "typeString": "contract AbstractMangrove"
                          }
                        },
                        "id": 81209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "marketOrder",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 26236,
                        "src": "8269:15:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                        }
                      },
                      "id": 81225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8269:107:116",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256,uint256,uint256)"
                      }
                    },
                    "src": "8245:131:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81227,
                  "nodeType": "ExpressionStatement",
                  "src": "8245:131:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81231,
                        "name": "maker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80009,
                        "src": "8397:5:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 81228,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "8383:2:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5021,
                      "src": "8383:13:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8383:20:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81233,
                  "nodeType": "ExpressionStatement",
                  "src": "8383:20:116"
                },
                {
                  "assignments": [81235],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81235,
                      "mutability": "mutable",
                      "name": "pendingBase_",
                      "nameLocation": "8414:12:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 81370,
                      "src": "8409:17:116",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 81234,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8409:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81241,
                  "initialValue": {
                    "baseExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 81236,
                          "name": "mgo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80014,
                          "src": "8429:3:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Mango_$41268",
                            "typeString": "contract Mango"
                          }
                        },
                        "id": 81237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pending",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40758,
                        "src": "8429:11:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$",
                          "typeString": "function () view external returns (uint256[2] memory)"
                        }
                      },
                      "id": 81238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8429:13:116",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                        "typeString": "uint256[2] memory"
                      }
                    },
                    "id": 81240,
                    "indexExpression": {
                      "hexValue": "30",
                      "id": 81239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8443:1:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8429:16:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8409:36:116"
                },
                {
                  "assignments": [81243],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81243,
                      "mutability": "mutable",
                      "name": "pendingQuote_",
                      "nameLocation": "8456:13:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 81370,
                      "src": "8451:18:116",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 81242,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8451:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81249,
                  "initialValue": {
                    "baseExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 81244,
                          "name": "mgo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80014,
                          "src": "8472:3:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Mango_$41268",
                            "typeString": "contract Mango"
                          }
                        },
                        "id": 81245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pending",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40758,
                        "src": "8472:11:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$",
                          "typeString": "function () view external returns (uint256[2] memory)"
                        }
                      },
                      "id": 81246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8472:13:116",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                        "typeString": "uint256[2] memory"
                      }
                    },
                    "id": 81248,
                    "indexExpression": {
                      "hexValue": "31",
                      "id": 81247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8486:1:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8472:16:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8451:37:116"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 81250,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "8494:2:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81252,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5038,
                      "src": "8494:12:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 81253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8494:14:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81254,
                  "nodeType": "ExpressionStatement",
                  "src": "8494:14:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 81258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 81256,
                          "name": "pendingBase",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81134,
                          "src": "8531:11:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 81257,
                          "name": "gave",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81105,
                          "src": "8545:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8531:18:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 81259,
                        "name": "pendingBase_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81235,
                        "src": "8557:12:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "6761766520776173206e6f7420616464656420746f2070656e64696e67206261736520706f6f6c",
                        "id": 81260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8577:41:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5d61ed5211164399ba20925337a7ab4bfb8cac92e40a8cc01e340101941c26b0",
                          "typeString": "literal_string \"gave was not added to pending base pool\""
                        },
                        "value": "gave was not added to pending base pool"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5d61ed5211164399ba20925337a7ab4bfb8cac92e40a8cc01e340101941c26b0",
                          "typeString": "literal_string \"gave was not added to pending base pool\""
                        }
                      ],
                      "id": 81255,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "8515:8:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 81261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8515:109:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81262,
                  "nodeType": "ExpressionStatement",
                  "src": "8515:109:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 81273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 81271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 81264,
                                "name": "best_offer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 81084,
                                "src": "8646:10:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                                  "typeString": "t"
                                }
                              },
                              "id": 81265,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "gives",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 32588,
                              "src": "8646:16:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$32167_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$32167_$",
                                "typeString": "function (t) pure returns (uint256)"
                              }
                            },
                            "id": 81266,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8646:18:116",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 81268,
                                "name": "usdc",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80007,
                                "src": "8672:4:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              },
                              {
                                "hexValue": "313030",
                                "id": 81269,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8678:3:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                },
                                {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                }
                              ],
                              "id": 81267,
                              "name": "cash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [70407, 70429],
                              "referencedDeclaration": 70407,
                              "src": "8667:4:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (contract IERC20,uint256) returns (uint256)"
                              }
                            },
                            "id": 81270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8667:15:116",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8646:36:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 81272,
                          "name": "pendingQuote",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81142,
                          "src": "8685:12:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8646:51:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 81274,
                        "name": "pendingQuote_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81243,
                        "src": "8705:13:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "526573696475616c20776173206e6f7420616464656420746f2070656e64696e672071756f746520706f6f6c",
                        "id": 81275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8726:46:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a8ea1de144459a5ca1ac4c336fac42209f90115f2c273a40cdd2def85a6e555d",
                          "typeString": "literal_string \"Residual was not added to pending quote pool\""
                        },
                        "value": "Residual was not added to pending quote pool"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a8ea1de144459a5ca1ac4c336fac42209f90115f2c273a40cdd2def85a6e555d",
                          "typeString": "literal_string \"Residual was not added to pending quote pool\""
                        }
                      ],
                      "id": 81263,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "8630:8:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 81276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8630:148:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81277,
                  "nodeType": "ExpressionStatement",
                  "src": "8630:148:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81282,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "8840:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 81281,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "8838:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 81283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8838:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 81285,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "8849:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 81284,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "8847:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 81286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8847:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 81287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8856:3:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "id": 81278,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "8823:3:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 81280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setDensity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23952,
                      "src": "8823:14:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 81288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8823:37:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81289,
                  "nodeType": "ExpressionStatement",
                  "src": "8823:37:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81294,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "8883:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 81293,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "8881:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 81295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8881:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 81297,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "8892:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 81296,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "8890:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 81298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8890:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 81299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8899:3:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "id": 81290,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "8866:3:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 81292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setDensity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23952,
                      "src": "8866:14:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 81300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8866:37:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81301,
                  "nodeType": "ExpressionStatement",
                  "src": "8866:37:116"
                },
                {
                  "assignments": [81304],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81304,
                      "mutability": "mutable",
                      "name": "book",
                      "nameLocation": "9000:4:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 81370,
                      "src": "8988:16:116",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Book_$79981_memory_ptr",
                        "typeString": "struct MangoTest.Book"
                      },
                      "typeName": {
                        "id": 81303,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 81302,
                          "name": "Book",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 79981,
                          "src": "8988:4:116"
                        },
                        "referencedDeclaration": 79981,
                        "src": "8988:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Book_$79981_storage_ptr",
                          "typeString": "struct MangoTest.Book"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81308,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 81306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9018:5:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 81305,
                      "name": "get_offers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81887,
                      "src": "9007:10:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_struct$_Book_$79981_memory_ptr_$",
                        "typeString": "function (bool) view returns (struct MangoTest.Book memory)"
                      }
                    },
                    "id": 81307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9007:17:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Book_$79981_memory_ptr",
                      "typeString": "struct MangoTest.Book memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8988:36:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81311,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "9047:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 81310,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "9045:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 81312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9045:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 81314,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "9062:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 81313,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "9060:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 81315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9060:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 81316,
                          "name": "book",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81304,
                          "src": "9075:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Book_$79981_memory_ptr",
                            "typeString": "struct MangoTest.Book memory"
                          }
                        },
                        "id": 81317,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "bids",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79977,
                        "src": "9075:9:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "32",
                                    "id": 81321,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9105:1:116",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    }
                                  ],
                                  "id": 81320,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "9101:3:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_int256_$",
                                    "typeString": "type(int256)"
                                  },
                                  "typeName": {
                                    "id": 81319,
                                    "name": "int",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9101:3:116",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 81322,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9101:6:116",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              {
                                "id": 81324,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "9109:2:116",
                                "subExpression": {
                                  "hexValue": "33",
                                  "id": 81323,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9110:1:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_3_by_1",
                                    "typeString": "int_const 3"
                                  },
                                  "value": "3"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_minus_3_by_1",
                                  "typeString": "int_const -3"
                                }
                              },
                              {
                                "id": 81326,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "9113:2:116",
                                "subExpression": {
                                  "hexValue": "34",
                                  "id": 81325,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9114:1:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_4_by_1",
                                    "typeString": "int_const 4"
                                  },
                                  "value": "4"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_minus_4_by_1",
                                  "typeString": "int_const -4"
                                }
                              },
                              {
                                "id": 81328,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "9117:2:116",
                                "subExpression": {
                                  "hexValue": "35",
                                  "id": 81327,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9118:1:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_5_by_1",
                                    "typeString": "int_const 5"
                                  },
                                  "value": "5"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_minus_5_by_1",
                                  "typeString": "int_const -5"
                                }
                              },
                              {
                                "id": 81330,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "9121:2:116",
                                "subExpression": {
                                  "hexValue": "36",
                                  "id": 81329,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9122:1:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_6_by_1",
                                    "typeString": "int_const 6"
                                  },
                                  "value": "6"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_minus_6_by_1",
                                  "typeString": "int_const -6"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 81331,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9125:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 81332,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9128:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "id": 81334,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "9131:2:116",
                                "subExpression": {
                                  "hexValue": "38",
                                  "id": 81333,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9132:1:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_8_by_1",
                                    "typeString": "int_const 8"
                                  },
                                  "value": "8"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_minus_8_by_1",
                                  "typeString": "int_const -8"
                                }
                              },
                              {
                                "id": 81336,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "9135:2:116",
                                "subExpression": {
                                  "hexValue": "37",
                                  "id": 81335,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9136:1:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_7_by_1",
                                    "typeString": "int_const 7"
                                  },
                                  "value": "7"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_minus_7_by_1",
                                  "typeString": "int_const -7"
                                }
                              },
                              {
                                "id": 81338,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "9139:2:116",
                                "subExpression": {
                                  "hexValue": "31",
                                  "id": 81337,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9140:1:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_minus_1_by_1",
                                  "typeString": "int_const -1"
                                }
                              }
                            ],
                            "id": 81339,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "9100:42:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_int256_$10_memory_ptr",
                              "typeString": "int256[10] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_int256_$10_memory_ptr",
                              "typeString": "int256[10] memory"
                            }
                          ],
                          "id": 81318,
                          "name": "dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            71448, 71482, 71516, 71550, 71584, 71618, 71652,
                            71686, 71720, 71754, 71788, 71822, 71856, 71890,
                            71924, 71958, 71992, 72026, 72060, 72094, 72131,
                            72168, 72205, 72242, 72279, 72316, 72353, 72390,
                            72427, 72464
                          ],
                          "referencedDeclaration": 72094,
                          "src": "9092:7:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_int256_$10_memory_ptr_$returns$_t_array$_t_int256_$dyn_memory_ptr_$",
                            "typeString": "function (int256[10] memory) pure returns (int256[] memory)"
                          }
                        },
                        "id": 81340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9092:51:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[] memory"
                        }
                      ],
                      "id": 81309,
                      "name": "checkOB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81960,
                      "src": "9030:7:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_int256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256[] memory,int256[] memory)"
                      }
                    },
                    "id": 81341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9030:119:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81342,
                  "nodeType": "ExpressionStatement",
                  "src": "9030:119:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81345,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "9172:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 81344,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "9170:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 81346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9170:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 81348,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "9187:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 81347,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "9185:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 81349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9185:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 81350,
                          "name": "book",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81304,
                          "src": "9200:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Book_$79981_memory_ptr",
                            "typeString": "struct MangoTest.Book memory"
                          }
                        },
                        "id": 81351,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "asks",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79980,
                        "src": "9200:9:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 81355,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9230:1:116",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 81354,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "9226:3:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_int256_$",
                                    "typeString": "type(int256)"
                                  },
                                  "typeName": {
                                    "id": 81353,
                                    "name": "int",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9226:3:116",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 81356,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9226:6:116",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 81357,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9234:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 81358,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9237:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "36",
                                "id": 81359,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9240:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              {
                                "hexValue": "31",
                                "id": 81360,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9243:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "32",
                                "id": 81361,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9246:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              {
                                "hexValue": "33",
                                "id": 81362,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9249:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3_by_1",
                                  "typeString": "int_const 3"
                                },
                                "value": "3"
                              },
                              {
                                "hexValue": "34",
                                "id": 81363,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9252:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_4_by_1",
                                  "typeString": "int_const 4"
                                },
                                "value": "4"
                              },
                              {
                                "hexValue": "35",
                                "id": 81364,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9255:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_5_by_1",
                                  "typeString": "int_const 5"
                                },
                                "value": "5"
                              },
                              {
                                "hexValue": "37",
                                "id": 81365,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9258:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_7_by_1",
                                  "typeString": "int_const 7"
                                },
                                "value": "7"
                              }
                            ],
                            "id": 81366,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "9225:35:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_int256_$10_memory_ptr",
                              "typeString": "int256[10] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_int256_$10_memory_ptr",
                              "typeString": "int256[10] memory"
                            }
                          ],
                          "id": 81352,
                          "name": "dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            71448, 71482, 71516, 71550, 71584, 71618, 71652,
                            71686, 71720, 71754, 71788, 71822, 71856, 71890,
                            71924, 71958, 71992, 72026, 72060, 72094, 72131,
                            72168, 72205, 72242, 72279, 72316, 72353, 72390,
                            72427, 72464
                          ],
                          "referencedDeclaration": 72094,
                          "src": "9217:7:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_int256_$10_memory_ptr_$returns$_t_array$_t_int256_$dyn_memory_ptr_$",
                            "typeString": "function (int256[10] memory) pure returns (int256[] memory)"
                          }
                        },
                        "id": 81367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9217:44:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[] memory"
                        }
                      ],
                      "id": 81343,
                      "name": "checkOB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81960,
                      "src": "9155:7:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_int256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256[] memory,int256[] memory)"
                      }
                    },
                    "id": 81368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9155:112:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81369,
                  "nodeType": "ExpressionStatement",
                  "src": "9155:112:116"
                }
              ]
            },
            "functionSelector": "35d75d3b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "part_text_residual_1",
            "nameLocation": "6905:20:116",
            "parameters": {
              "id": 81035,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6925:2:116"
            },
            "returnParameters": {
              "id": 81036,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6935:0:116"
            },
            "scope": 82054,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 81632,
            "nodeType": "FunctionDefinition",
            "src": "9276:1763:116",
            "body": {
              "id": 81631,
              "nodeType": "Block",
              "src": "9315:1724:116",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81377,
                        "name": "maker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80009,
                        "src": "9335:5:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 81374,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "9321:2:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5021,
                      "src": "9321:13:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9321:20:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81379,
                  "nodeType": "ExpressionStatement",
                  "src": "9321:20:116"
                },
                {
                  "assignments": [81381],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81381,
                      "mutability": "mutable",
                      "name": "pendingBase_",
                      "nameLocation": "9352:12:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 81631,
                      "src": "9347:17:116",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 81380,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9347:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81387,
                  "initialValue": {
                    "baseExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 81382,
                          "name": "mgo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80014,
                          "src": "9367:3:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Mango_$41268",
                            "typeString": "contract Mango"
                          }
                        },
                        "id": 81383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pending",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40758,
                        "src": "9367:11:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$",
                          "typeString": "function () view external returns (uint256[2] memory)"
                        }
                      },
                      "id": 81384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9367:13:116",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                        "typeString": "uint256[2] memory"
                      }
                    },
                    "id": 81386,
                    "indexExpression": {
                      "hexValue": "30",
                      "id": 81385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9381:1:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9367:16:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9347:36:116"
                },
                {
                  "assignments": [81389],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81389,
                      "mutability": "mutable",
                      "name": "pendingQuote_",
                      "nameLocation": "9394:13:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 81631,
                      "src": "9389:18:116",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 81388,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9389:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81395,
                  "initialValue": {
                    "baseExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 81390,
                          "name": "mgo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80014,
                          "src": "9410:3:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Mango_$41268",
                            "typeString": "contract Mango"
                          }
                        },
                        "id": 81391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pending",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40758,
                        "src": "9410:11:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$",
                          "typeString": "function () view external returns (uint256[2] memory)"
                        }
                      },
                      "id": 81392,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9410:13:116",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                        "typeString": "uint256[2] memory"
                      }
                    },
                    "id": 81394,
                    "indexExpression": {
                      "hexValue": "31",
                      "id": 81393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9424:1:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9410:16:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9389:37:116"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 81396,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "9432:2:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5038,
                      "src": "9432:12:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 81399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9432:14:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81400,
                  "nodeType": "ExpressionStatement",
                  "src": "9432:14:116"
                },
                {
                  "assignments": [81406],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81406,
                      "mutability": "mutable",
                      "name": "old_offer2",
                      "nameLocation": "9819:10:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 81631,
                      "src": "9809:20:116",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                        "typeString": "t"
                      },
                      "typeName": {
                        "id": 81405,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 81404,
                          "name": "P.Offer.t",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 32167,
                          "src": "9809:9:116"
                        },
                        "referencedDeclaration": 32167,
                        "src": "9809:9:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                          "typeString": "t"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81417,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81410,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "9845:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 81409,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "9843:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 81411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9843:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 81413,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "9854:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 81412,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "9852:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 81414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9852:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 81415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9861:1:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "expression": {
                        "id": 81407,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "9832:3:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 81408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "offers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24205,
                      "src": "9832:10:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_userDefinedValueType$_t_$32167_$",
                        "typeString": "function (address,address,uint256) view external returns (t)"
                      }
                    },
                    "id": 81416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9832:31:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                      "typeString": "t"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9809:54:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81421,
                        "name": "taker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80011,
                        "src": "9879:5:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 81418,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "9870:2:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5016,
                      "src": "9870:8:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9870:15:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81423,
                  "nodeType": "ExpressionStatement",
                  "src": "9870:15:116"
                },
                {
                  "assignments": [null, 81425, null, null],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 81425,
                      "mutability": "mutable",
                      "name": "gave",
                      "nameLocation": "9899:4:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 81631,
                      "src": "9894:9:116",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 81424,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9894:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 81444,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81429,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "9936:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 81428,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "9934:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 81430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9934:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 81432,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "9951:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 81431,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "9949:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 81433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9949:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 81435,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "9969:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          },
                          {
                            "hexValue": "313030",
                            "id": 81436,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9975:3:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            },
                            {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            }
                          ],
                          "id": 81434,
                          "name": "cash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [70407, 70429],
                          "referencedDeclaration": 70407,
                          "src": "9964:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (contract IERC20,uint256) returns (uint256)"
                          }
                        },
                        "id": 81437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9964:15:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 81439,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "9992:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 81440,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9998:1:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 81438,
                          "name": "cash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [70407, 70429],
                          "referencedDeclaration": 70407,
                          "src": "9987:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (contract IERC20,uint256) returns (uint256)"
                          }
                        },
                        "id": 81441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9987:13:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 81442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10008:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 81426,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "9911:3:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 81427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26236,
                      "src": "9911:15:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 81443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9911:107:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9891:127:116"
                },
                {
                  "assignments": [81447],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81447,
                      "mutability": "mutable",
                      "name": "book",
                      "nameLocation": "10037:4:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 81631,
                      "src": "10025:16:116",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Book_$79981_memory_ptr",
                        "typeString": "struct MangoTest.Book"
                      },
                      "typeName": {
                        "id": 81446,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 81445,
                          "name": "Book",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 79981,
                          "src": "10025:4:116"
                        },
                        "referencedDeclaration": 79981,
                        "src": "10025:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Book_$79981_storage_ptr",
                          "typeString": "struct MangoTest.Book"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81451,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 81449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10055:5:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 81448,
                      "name": "get_offers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81887,
                      "src": "10044:10:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_struct$_Book_$79981_memory_ptr_$",
                        "typeString": "function (bool) view returns (struct MangoTest.Book memory)"
                      }
                    },
                    "id": 81450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10044:17:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Book_$79981_memory_ptr",
                      "typeString": "struct MangoTest.Book memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10025:36:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81454,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "10084:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 81453,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "10082:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 81455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10082:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 81457,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "10099:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 81456,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "10097:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 81458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10097:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 81459,
                          "name": "book",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81447,
                          "src": "10112:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Book_$79981_memory_ptr",
                            "typeString": "struct MangoTest.Book memory"
                          }
                        },
                        "id": 81460,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "bids",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79977,
                        "src": "10112:9:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "32",
                                    "id": 81464,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10142:1:116",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    }
                                  ],
                                  "id": 81463,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10138:3:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_int256_$",
                                    "typeString": "type(int256)"
                                  },
                                  "typeName": {
                                    "id": 81462,
                                    "name": "int",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10138:3:116",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 81465,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10138:6:116",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              {
                                "id": 81467,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "10146:2:116",
                                "subExpression": {
                                  "hexValue": "33",
                                  "id": 81466,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10147:1:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_3_by_1",
                                    "typeString": "int_const 3"
                                  },
                                  "value": "3"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_minus_3_by_1",
                                  "typeString": "int_const -3"
                                }
                              },
                              {
                                "id": 81469,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "10150:2:116",
                                "subExpression": {
                                  "hexValue": "34",
                                  "id": 81468,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10151:1:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_4_by_1",
                                    "typeString": "int_const 4"
                                  },
                                  "value": "4"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_minus_4_by_1",
                                  "typeString": "int_const -4"
                                }
                              },
                              {
                                "id": 81471,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "10154:2:116",
                                "subExpression": {
                                  "hexValue": "35",
                                  "id": 81470,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10155:1:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_5_by_1",
                                    "typeString": "int_const 5"
                                  },
                                  "value": "5"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_minus_5_by_1",
                                  "typeString": "int_const -5"
                                }
                              },
                              {
                                "id": 81473,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "10158:2:116",
                                "subExpression": {
                                  "hexValue": "36",
                                  "id": 81472,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10159:1:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_6_by_1",
                                    "typeString": "int_const 6"
                                  },
                                  "value": "6"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_minus_6_by_1",
                                  "typeString": "int_const -6"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 81474,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10162:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 81475,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10165:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "id": 81477,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "10168:2:116",
                                "subExpression": {
                                  "hexValue": "38",
                                  "id": 81476,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10169:1:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_8_by_1",
                                    "typeString": "int_const 8"
                                  },
                                  "value": "8"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_minus_8_by_1",
                                  "typeString": "int_const -8"
                                }
                              },
                              {
                                "id": 81479,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "10172:2:116",
                                "subExpression": {
                                  "hexValue": "37",
                                  "id": 81478,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10173:1:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_7_by_1",
                                    "typeString": "int_const 7"
                                  },
                                  "value": "7"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_minus_7_by_1",
                                  "typeString": "int_const -7"
                                }
                              },
                              {
                                "id": 81481,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "10176:2:116",
                                "subExpression": {
                                  "hexValue": "31",
                                  "id": 81480,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10177:1:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_minus_1_by_1",
                                  "typeString": "int_const -1"
                                }
                              }
                            ],
                            "id": 81482,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "10137:42:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_int256_$10_memory_ptr",
                              "typeString": "int256[10] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_int256_$10_memory_ptr",
                              "typeString": "int256[10] memory"
                            }
                          ],
                          "id": 81461,
                          "name": "dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            71448, 71482, 71516, 71550, 71584, 71618, 71652,
                            71686, 71720, 71754, 71788, 71822, 71856, 71890,
                            71924, 71958, 71992, 72026, 72060, 72094, 72131,
                            72168, 72205, 72242, 72279, 72316, 72353, 72390,
                            72427, 72464
                          ],
                          "referencedDeclaration": 72094,
                          "src": "10129:7:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_int256_$10_memory_ptr_$returns$_t_array$_t_int256_$dyn_memory_ptr_$",
                            "typeString": "function (int256[10] memory) pure returns (int256[] memory)"
                          }
                        },
                        "id": 81483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10129:51:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[] memory"
                        }
                      ],
                      "id": 81452,
                      "name": "checkOB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81960,
                      "src": "10067:7:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_int256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256[] memory,int256[] memory)"
                      }
                    },
                    "id": 81484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10067:119:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81485,
                  "nodeType": "ExpressionStatement",
                  "src": "10067:119:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81488,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "10209:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 81487,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "10207:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 81489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10207:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 81491,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "10224:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 81490,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "10222:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 81492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10222:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 81493,
                          "name": "book",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81447,
                          "src": "10237:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Book_$79981_memory_ptr",
                            "typeString": "struct MangoTest.Book memory"
                          }
                        },
                        "id": 81494,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "asks",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79980,
                        "src": "10237:9:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 81498,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10267:1:116",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 81497,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10263:3:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_int256_$",
                                    "typeString": "type(int256)"
                                  },
                                  "typeName": {
                                    "id": 81496,
                                    "name": "int",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10263:3:116",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 81499,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10263:6:116",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              {
                                "hexValue": "38",
                                "id": 81500,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10271:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_8_by_1",
                                  "typeString": "int_const 8"
                                },
                                "value": "8"
                              },
                              {
                                "hexValue": "30",
                                "id": 81501,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10274:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "36",
                                "id": 81502,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10277:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              {
                                "hexValue": "31",
                                "id": 81503,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10280:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "32",
                                "id": 81504,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10283:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              {
                                "hexValue": "33",
                                "id": 81505,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10286:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3_by_1",
                                  "typeString": "int_const 3"
                                },
                                "value": "3"
                              },
                              {
                                "hexValue": "34",
                                "id": 81506,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10289:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_4_by_1",
                                  "typeString": "int_const 4"
                                },
                                "value": "4"
                              },
                              {
                                "hexValue": "35",
                                "id": 81507,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10292:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_5_by_1",
                                  "typeString": "int_const 5"
                                },
                                "value": "5"
                              },
                              {
                                "hexValue": "37",
                                "id": 81508,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10295:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_7_by_1",
                                  "typeString": "int_const 7"
                                },
                                "value": "7"
                              }
                            ],
                            "id": 81509,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "10262:35:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_int256_$10_memory_ptr",
                              "typeString": "int256[10] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_int256_$10_memory_ptr",
                              "typeString": "int256[10] memory"
                            }
                          ],
                          "id": 81495,
                          "name": "dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            71448, 71482, 71516, 71550, 71584, 71618, 71652,
                            71686, 71720, 71754, 71788, 71822, 71856, 71890,
                            71924, 71958, 71992, 72026, 72060, 72094, 72131,
                            72168, 72205, 72242, 72279, 72316, 72353, 72390,
                            72427, 72464
                          ],
                          "referencedDeclaration": 72094,
                          "src": "10254:7:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_int256_$10_memory_ptr_$returns$_t_array$_t_int256_$dyn_memory_ptr_$",
                            "typeString": "function (int256[10] memory) pure returns (int256[] memory)"
                          }
                        },
                        "id": 81510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10254:44:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[] memory"
                        }
                      ],
                      "id": 81486,
                      "name": "checkOB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81960,
                      "src": "10192:7:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_int256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256[] memory,int256[] memory)"
                      }
                    },
                    "id": 81511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10192:112:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81512,
                  "nodeType": "ExpressionStatement",
                  "src": "10192:112:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81516,
                        "name": "maker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80009,
                        "src": "10325:5:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 81513,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "10311:2:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81515,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5021,
                      "src": "10311:13:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10311:20:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81518,
                  "nodeType": "ExpressionStatement",
                  "src": "10311:20:116"
                },
                {
                  "assignments": [81520],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81520,
                      "mutability": "mutable",
                      "name": "pendingBase__",
                      "nameLocation": "10342:13:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 81631,
                      "src": "10337:18:116",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 81519,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10337:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81526,
                  "initialValue": {
                    "baseExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 81521,
                          "name": "mgo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80014,
                          "src": "10358:3:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Mango_$41268",
                            "typeString": "contract Mango"
                          }
                        },
                        "id": 81522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pending",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40758,
                        "src": "10358:11:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$",
                          "typeString": "function () view external returns (uint256[2] memory)"
                        }
                      },
                      "id": 81523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10358:13:116",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                        "typeString": "uint256[2] memory"
                      }
                    },
                    "id": 81525,
                    "indexExpression": {
                      "hexValue": "30",
                      "id": 81524,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10372:1:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10358:16:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10337:37:116"
                },
                {
                  "assignments": [81528],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81528,
                      "mutability": "mutable",
                      "name": "pendingQuote__",
                      "nameLocation": "10385:14:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 81631,
                      "src": "10380:19:116",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 81527,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10380:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81534,
                  "initialValue": {
                    "baseExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 81529,
                          "name": "mgo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80014,
                          "src": "10402:3:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Mango_$41268",
                            "typeString": "contract Mango"
                          }
                        },
                        "id": 81530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pending",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40758,
                        "src": "10402:11:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$",
                          "typeString": "function () view external returns (uint256[2] memory)"
                        }
                      },
                      "id": 81531,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10402:13:116",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                        "typeString": "uint256[2] memory"
                      }
                    },
                    "id": 81533,
                    "indexExpression": {
                      "hexValue": "31",
                      "id": 81532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10416:1:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10402:16:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10380:38:116"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 81535,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "10424:2:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81537,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5038,
                      "src": "10424:12:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 81538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10424:14:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81539,
                  "nodeType": "ExpressionStatement",
                  "src": "10424:14:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81541,
                        "name": "pendingBase__",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81520,
                        "src": "10454:13:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 81542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10469:1:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "50656e64696e67206261736520706f6f6c2073686f756c6420626520656d707479",
                        "id": 81543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10472:35:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c0fd4c14ead25c2e8beb574be8691dbecc3d6adb0ff95fdf80c7bc2e40c846a7",
                          "typeString": "literal_string \"Pending base pool should be empty\""
                        },
                        "value": "Pending base pool should be empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c0fd4c14ead25c2e8beb574be8691dbecc3d6adb0ff95fdf80c7bc2e40c846a7",
                          "typeString": "literal_string \"Pending base pool should be empty\""
                        }
                      ],
                      "id": 81540,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "10445:8:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 81544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10445:63:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81545,
                  "nodeType": "ExpressionStatement",
                  "src": "10445:63:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81547,
                        "name": "pendingQuote__",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81528,
                        "src": "10523:14:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 81548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10539:1:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "50656e64696e672071756f746520706f6f6c2073686f756c6420626520656d707479",
                        "id": 81549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10542:36:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a0373f65caacf86457b1a8db0a2710bca8969ae29ef998f4034f90a427dfe68c",
                          "typeString": "literal_string \"Pending quote pool should be empty\""
                        },
                        "value": "Pending quote pool should be empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a0373f65caacf86457b1a8db0a2710bca8969ae29ef998f4034f90a427dfe68c",
                          "typeString": "literal_string \"Pending quote pool should be empty\""
                        }
                      ],
                      "id": 81546,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "10514:8:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 81550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10514:65:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81551,
                  "nodeType": "ExpressionStatement",
                  "src": "10514:65:116"
                },
                {
                  "assignments": [81553],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81553,
                      "mutability": "mutable",
                      "name": "best_id",
                      "nameLocation": "10591:7:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 81631,
                      "src": "10586:12:116",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 81552,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10586:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81563,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81557,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "10612:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 81556,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "10610:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 81558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10610:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 81560,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "10621:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 81559,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "10619:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 81561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10619:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 81554,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "10601:3:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 81555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "best",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24245,
                      "src": "10601:8:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 81562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10601:26:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10586:41:116"
                },
                {
                  "assignments": [81569],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81569,
                      "mutability": "mutable",
                      "name": "offer8",
                      "nameLocation": "10643:6:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 81631,
                      "src": "10633:16:116",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                        "typeString": "t"
                      },
                      "typeName": {
                        "id": 81568,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 81567,
                          "name": "P.Offer.t",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 32167,
                          "src": "10633:9:116"
                        },
                        "referencedDeclaration": 32167,
                        "src": "10633:9:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                          "typeString": "t"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81580,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81573,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "10665:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 81572,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "10663:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 81574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10663:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 81576,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "10674:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 81575,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "10672:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 81577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10672:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 81578,
                        "name": "best_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81553,
                        "src": "10681:7:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 81570,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "10652:3:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 81571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "offers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24205,
                      "src": "10652:10:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_userDefinedValueType$_t_$32167_$",
                        "typeString": "function (address,address,uint256) view external returns (t)"
                      }
                    },
                    "id": 81579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10652:37:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                      "typeString": "t"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10633:56:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81582,
                        "name": "best_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81553,
                        "src": "10704:7:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "38",
                        "id": 81583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10713:1:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_8_by_1",
                          "typeString": "int_const 8"
                        },
                        "value": "8"
                      },
                      {
                        "hexValue": "42657374206f66666572206f6e20574554482c55534443206f66666572206c6973742073686f756c64206265202338",
                        "id": 81584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10716:49:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fcc6e4ab34b09ba6f2eadaeabb70006a8a3eeddf4bd9afb4df7fce41c38f1402",
                          "typeString": "literal_string \"Best offer on WETH,USDC offer list should be #8\""
                        },
                        "value": "Best offer on WETH,USDC offer list should be #8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_8_by_1",
                          "typeString": "int_const 8"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fcc6e4ab34b09ba6f2eadaeabb70006a8a3eeddf4bd9afb4df7fce41c38f1402",
                          "typeString": "literal_string \"Best offer on WETH,USDC offer list should be #8\""
                        }
                      ],
                      "id": 81581,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "10695:8:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 81585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10695:71:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81586,
                  "nodeType": "ExpressionStatement",
                  "src": "10695:71:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 81588,
                            "name": "offer8",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 81569,
                            "src": "10782:6:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                              "typeString": "t"
                            }
                          },
                          "id": 81589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "gives",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32588,
                          "src": "10782:12:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$32167_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$32167_$",
                            "typeString": "function (t) pure returns (uint256)"
                          }
                        },
                        "id": 81590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10782:14:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 81593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 81591,
                          "name": "gave",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81425,
                          "src": "10798:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 81592,
                          "name": "pendingBase_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81381,
                          "src": "10805:12:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10798:19:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374206f66666572206769766573",
                        "id": 81594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10819:23:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5494759a76a70ce695598d29bb8fe24446d757ff0b0f4ebf4d75dd6a09fe6ade",
                          "typeString": "literal_string \"Incorrect offer gives\""
                        },
                        "value": "Incorrect offer gives"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5494759a76a70ce695598d29bb8fe24446d757ff0b0f4ebf4d75dd6a09fe6ade",
                          "typeString": "literal_string \"Incorrect offer gives\""
                        }
                      ],
                      "id": 81587,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "10773:8:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 81595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10773:70:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81596,
                  "nodeType": "ExpressionStatement",
                  "src": "10773:70:116"
                },
                {
                  "assignments": [81602],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81602,
                      "mutability": "mutable",
                      "name": "offer2",
                      "nameLocation": "10860:6:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 81631,
                      "src": "10850:16:116",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                        "typeString": "t"
                      },
                      "typeName": {
                        "id": 81601,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 81600,
                          "name": "P.Offer.t",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 32167,
                          "src": "10850:9:116"
                        },
                        "referencedDeclaration": 32167,
                        "src": "10850:9:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                          "typeString": "t"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81613,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81606,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "10882:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 81605,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "10880:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 81607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10880:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 81609,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "10891:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 81608,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "10889:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 81610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10889:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 81611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10898:1:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "expression": {
                        "id": 81603,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "10869:3:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 81604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "offers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24205,
                      "src": "10869:10:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_userDefinedValueType$_t_$32167_$",
                        "typeString": "function (address,address,uint256) view external returns (t)"
                      }
                    },
                    "id": 81612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10869:31:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                      "typeString": "t"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10850:50:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 81615,
                            "name": "offer2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 81602,
                            "src": "10923:6:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                              "typeString": "t"
                            }
                          },
                          "id": 81616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "gives",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32588,
                          "src": "10923:12:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$32167_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$32167_$",
                            "typeString": "function (t) pure returns (uint256)"
                          }
                        },
                        "id": 81617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10923:14:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 81627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 81622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 81618,
                            "name": "pendingQuote_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 81389,
                            "src": "10945:13:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 81619,
                                "name": "old_offer2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 81406,
                                "src": "10961:10:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                                  "typeString": "t"
                                }
                              },
                              "id": 81620,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "gives",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 32588,
                              "src": "10961:16:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$32167_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$32167_$",
                                "typeString": "function (t) pure returns (uint256)"
                              }
                            },
                            "id": 81621,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10961:18:116",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10945:34:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 81624,
                              "name": "usdc",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80007,
                              "src": "10987:4:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            },
                            {
                              "hexValue": "313030",
                              "id": 81625,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10993:3:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              },
                              {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              }
                            ],
                            "id": 81623,
                            "name": "cash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [70407, 70429],
                            "referencedDeclaration": 70407,
                            "src": "10982:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (contract IERC20,uint256) returns (uint256)"
                            }
                          },
                          "id": 81626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10982:15:116",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10945:52:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374206f66666572206769766573",
                        "id": 81628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11005:23:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5494759a76a70ce695598d29bb8fe24446d757ff0b0f4ebf4d75dd6a09fe6ade",
                          "typeString": "literal_string \"Incorrect offer gives\""
                        },
                        "value": "Incorrect offer gives"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5494759a76a70ce695598d29bb8fe24446d757ff0b0f4ebf4d75dd6a09fe6ade",
                          "typeString": "literal_string \"Incorrect offer gives\""
                        }
                      ],
                      "id": 81614,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "10907:8:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 81629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10907:127:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81630,
                  "nodeType": "ExpressionStatement",
                  "src": "10907:127:116"
                }
              ]
            },
            "functionSelector": "a9b0690b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "part_text_residual_2",
            "nameLocation": "9285:20:116",
            "parameters": {
              "id": 81372,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9305:2:116"
            },
            "returnParameters": {
              "id": 81373,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9315:0:116"
            },
            "scope": 82054,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 81758,
            "nodeType": "FunctionDefinition",
            "src": "11043:611:116",
            "body": {
              "id": 81757,
              "nodeType": "Block",
              "src": "11071:583:116",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81638,
                        "name": "maker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80009,
                        "src": "11086:5:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 81635,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "11077:2:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5016,
                      "src": "11077:8:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11077:15:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81640,
                  "nodeType": "ExpressionStatement",
                  "src": "11077:15:116"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 81641,
                        "name": "mgo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80014,
                        "src": "11098:3:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Mango_$41268",
                          "typeString": "contract Mango"
                        }
                      },
                      "id": 81643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "pause",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41009,
                      "src": "11098:9:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 81644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11098:11:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81645,
                  "nodeType": "ExpressionStatement",
                  "src": "11098:11:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81649,
                        "name": "taker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80011,
                        "src": "11125:5:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 81646,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "11116:2:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81648,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5016,
                      "src": "11116:8:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11116:15:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81651,
                  "nodeType": "ExpressionStatement",
                  "src": "11116:15:116"
                },
                {
                  "assignments": [81653, 81655, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81653,
                      "mutability": "mutable",
                      "name": "got",
                      "nameLocation": "11143:3:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 81757,
                      "src": "11138:8:116",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 81652,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11138:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 81655,
                      "mutability": "mutable",
                      "name": "gave",
                      "nameLocation": "11153:4:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 81757,
                      "src": "11148:9:116",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 81654,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11148:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 81675,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81659,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "11190:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 81658,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "11188:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 81660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11188:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 81662,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "11205:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 81661,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "11203:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 81663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11203:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 81665,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "11223:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          },
                          {
                            "hexValue": "32353030",
                            "id": 81666,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11229:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2500_by_1",
                              "typeString": "int_const 2500"
                            },
                            "value": "2500"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            },
                            {
                              "typeIdentifier": "t_rational_2500_by_1",
                              "typeString": "int_const 2500"
                            }
                          ],
                          "id": 81664,
                          "name": "cash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [70407, 70429],
                          "referencedDeclaration": 70407,
                          "src": "11218:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (contract IERC20,uint256) returns (uint256)"
                          }
                        },
                        "id": 81667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11218:16:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 81669,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "11247:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          },
                          {
                            "hexValue": "3135",
                            "id": 81670,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11253:2:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_15_by_1",
                              "typeString": "int_const 15"
                            },
                            "value": "15"
                          },
                          {
                            "hexValue": "31",
                            "id": 81671,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11257:1:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            },
                            {
                              "typeIdentifier": "t_rational_15_by_1",
                              "typeString": "int_const 15"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 81668,
                          "name": "cash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [70407, 70429],
                          "referencedDeclaration": 70429,
                          "src": "11242:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (contract IERC20,uint256,uint256) returns (uint256)"
                          }
                        },
                        "id": 81672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11242:17:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 81673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11267:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 81656,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "11165:3:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 81657,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26236,
                      "src": "11165:15:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 81674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11165:112:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11137:140:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81677,
                        "name": "got",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81653,
                        "src": "11293:3:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 81678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11298:1:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "676f742073686f756c642062652030",
                        "id": 81679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11301:17:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a708337ba394b1ffe4a12faa6a71f00b36ae604887a30eb90b9f0f7450fdd801",
                          "typeString": "literal_string \"got should be 0\""
                        },
                        "value": "got should be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a708337ba394b1ffe4a12faa6a71f00b36ae604887a30eb90b9f0f7450fdd801",
                          "typeString": "literal_string \"got should be 0\""
                        }
                      ],
                      "id": 81676,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "11284:8:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 81680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11284:35:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81681,
                  "nodeType": "ExpressionStatement",
                  "src": "11284:35:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81683,
                        "name": "gave",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81655,
                        "src": "11334:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 81684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11340:1:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "676176652073686f756c642062652030",
                        "id": 81685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11343:18:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_217a8ace00b9455b88994520db31131e0c3ed8364eafef9ea0d53bbffa29f10a",
                          "typeString": "literal_string \"gave should be 0\""
                        },
                        "value": "gave should be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_217a8ace00b9455b88994520db31131e0c3ed8364eafef9ea0d53bbffa29f10a",
                          "typeString": "literal_string \"gave should be 0\""
                        }
                      ],
                      "id": 81682,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "11325:8:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 81686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11325:37:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81687,
                  "nodeType": "ExpressionStatement",
                  "src": "11325:37:116"
                },
                {
                  "assignments": [81690],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81690,
                      "mutability": "mutable",
                      "name": "book",
                      "nameLocation": "11381:4:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 81757,
                      "src": "11369:16:116",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Book_$79981_memory_ptr",
                        "typeString": "struct MangoTest.Book"
                      },
                      "typeName": {
                        "id": 81689,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 81688,
                          "name": "Book",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 79981,
                          "src": "11369:4:116"
                        },
                        "referencedDeclaration": 79981,
                        "src": "11369:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Book_$79981_storage_ptr",
                          "typeString": "struct MangoTest.Book"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81694,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 81692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11399:5:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 81691,
                      "name": "get_offers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81887,
                      "src": "11388:10:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_struct$_Book_$79981_memory_ptr_$",
                        "typeString": "function (bool) view returns (struct MangoTest.Book memory)"
                      }
                    },
                    "id": 81693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11388:17:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Book_$79981_memory_ptr",
                      "typeString": "struct MangoTest.Book memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11369:36:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81697,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "11428:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 81696,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "11426:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 81698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11426:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 81700,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "11443:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 81699,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "11441:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 81701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11441:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 81702,
                          "name": "book",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81690,
                          "src": "11456:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Book_$79981_memory_ptr",
                            "typeString": "struct MangoTest.Book memory"
                          }
                        },
                        "id": 81703,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "bids",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79977,
                        "src": "11456:9:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "arguments": [
                                  {
                                    "id": 81708,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "-",
                                    "prefix": true,
                                    "src": "11486:2:116",
                                    "subExpression": {
                                      "hexValue": "32",
                                      "id": 81707,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "11487:1:116",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2_by_1",
                                        "typeString": "int_const 2"
                                      },
                                      "value": "2"
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_minus_2_by_1",
                                      "typeString": "int_const -2"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_minus_2_by_1",
                                      "typeString": "int_const -2"
                                    }
                                  ],
                                  "id": 81706,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "11482:3:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_int256_$",
                                    "typeString": "type(int256)"
                                  },
                                  "typeName": {
                                    "id": 81705,
                                    "name": "int",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11482:3:116",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 81709,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11482:7:116",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              {
                                "id": 81711,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "11491:2:116",
                                "subExpression": {
                                  "hexValue": "33",
                                  "id": 81710,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11492:1:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_3_by_1",
                                    "typeString": "int_const 3"
                                  },
                                  "value": "3"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_minus_3_by_1",
                                  "typeString": "int_const -3"
                                }
                              },
                              {
                                "id": 81713,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "11495:2:116",
                                "subExpression": {
                                  "hexValue": "34",
                                  "id": 81712,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11496:1:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_4_by_1",
                                    "typeString": "int_const 4"
                                  },
                                  "value": "4"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_minus_4_by_1",
                                  "typeString": "int_const -4"
                                }
                              },
                              {
                                "id": 81715,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "11499:2:116",
                                "subExpression": {
                                  "hexValue": "35",
                                  "id": 81714,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11500:1:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_5_by_1",
                                    "typeString": "int_const 5"
                                  },
                                  "value": "5"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_minus_5_by_1",
                                  "typeString": "int_const -5"
                                }
                              },
                              {
                                "id": 81717,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "11503:2:116",
                                "subExpression": {
                                  "hexValue": "36",
                                  "id": 81716,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11504:1:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_6_by_1",
                                    "typeString": "int_const 6"
                                  },
                                  "value": "6"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_minus_6_by_1",
                                  "typeString": "int_const -6"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 81718,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11507:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 81719,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11510:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "id": 81721,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "11513:2:116",
                                "subExpression": {
                                  "hexValue": "38",
                                  "id": 81720,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11514:1:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_8_by_1",
                                    "typeString": "int_const 8"
                                  },
                                  "value": "8"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_minus_8_by_1",
                                  "typeString": "int_const -8"
                                }
                              },
                              {
                                "id": 81723,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "11517:2:116",
                                "subExpression": {
                                  "hexValue": "37",
                                  "id": 81722,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11518:1:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_7_by_1",
                                    "typeString": "int_const 7"
                                  },
                                  "value": "7"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_minus_7_by_1",
                                  "typeString": "int_const -7"
                                }
                              },
                              {
                                "id": 81725,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "11521:2:116",
                                "subExpression": {
                                  "hexValue": "31",
                                  "id": 81724,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11522:1:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_minus_1_by_1",
                                  "typeString": "int_const -1"
                                }
                              }
                            ],
                            "id": 81726,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "11481:43:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_int256_$10_memory_ptr",
                              "typeString": "int256[10] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_int256_$10_memory_ptr",
                              "typeString": "int256[10] memory"
                            }
                          ],
                          "id": 81704,
                          "name": "dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            71448, 71482, 71516, 71550, 71584, 71618, 71652,
                            71686, 71720, 71754, 71788, 71822, 71856, 71890,
                            71924, 71958, 71992, 72026, 72060, 72094, 72131,
                            72168, 72205, 72242, 72279, 72316, 72353, 72390,
                            72427, 72464
                          ],
                          "referencedDeclaration": 72094,
                          "src": "11473:7:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_int256_$10_memory_ptr_$returns$_t_array$_t_int256_$dyn_memory_ptr_$",
                            "typeString": "function (int256[10] memory) pure returns (int256[] memory)"
                          }
                        },
                        "id": 81727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11473:52:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[] memory"
                        }
                      ],
                      "id": 81695,
                      "name": "checkOB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81960,
                      "src": "11411:7:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_int256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256[] memory,int256[] memory)"
                      }
                    },
                    "id": 81728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11411:120:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81729,
                  "nodeType": "ExpressionStatement",
                  "src": "11411:120:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81732,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "11554:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 81731,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "11552:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 81733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11552:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 81735,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "11569:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 81734,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "11567:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 81736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11567:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 81737,
                          "name": "book",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81690,
                          "src": "11582:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Book_$79981_memory_ptr",
                            "typeString": "struct MangoTest.Book memory"
                          }
                        },
                        "id": 81738,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "asks",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79980,
                        "src": "11582:9:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 81742,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11612:1:116",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 81741,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "11608:3:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_int256_$",
                                    "typeString": "type(int256)"
                                  },
                                  "typeName": {
                                    "id": 81740,
                                    "name": "int",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11608:3:116",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 81743,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11608:6:116",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              {
                                "hexValue": "38",
                                "id": 81744,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11616:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_8_by_1",
                                  "typeString": "int_const 8"
                                },
                                "value": "8"
                              },
                              {
                                "hexValue": "30",
                                "id": 81745,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11619:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "36",
                                "id": 81746,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11622:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              {
                                "hexValue": "31",
                                "id": 81747,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11625:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "32",
                                "id": 81748,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11628:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              {
                                "hexValue": "33",
                                "id": 81749,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11631:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3_by_1",
                                  "typeString": "int_const 3"
                                },
                                "value": "3"
                              },
                              {
                                "hexValue": "34",
                                "id": 81750,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11634:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_4_by_1",
                                  "typeString": "int_const 4"
                                },
                                "value": "4"
                              },
                              {
                                "hexValue": "35",
                                "id": 81751,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11637:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_5_by_1",
                                  "typeString": "int_const 5"
                                },
                                "value": "5"
                              },
                              {
                                "hexValue": "37",
                                "id": 81752,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11640:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_7_by_1",
                                  "typeString": "int_const 7"
                                },
                                "value": "7"
                              }
                            ],
                            "id": 81753,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "11607:35:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_int256_$10_memory_ptr",
                              "typeString": "int256[10] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_int256_$10_memory_ptr",
                              "typeString": "int256[10] memory"
                            }
                          ],
                          "id": 81739,
                          "name": "dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            71448, 71482, 71516, 71550, 71584, 71618, 71652,
                            71686, 71720, 71754, 71788, 71822, 71856, 71890,
                            71924, 71958, 71992, 72026, 72060, 72094, 72131,
                            72168, 72205, 72242, 72279, 72316, 72353, 72390,
                            72427, 72464
                          ],
                          "referencedDeclaration": 72094,
                          "src": "11599:7:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_int256_$10_memory_ptr_$returns$_t_array$_t_int256_$dyn_memory_ptr_$",
                            "typeString": "function (int256[10] memory) pure returns (int256[] memory)"
                          }
                        },
                        "id": 81754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11599:44:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[] memory"
                        }
                      ],
                      "id": 81730,
                      "name": "checkOB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81960,
                      "src": "11537:7:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_int256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256[] memory,int256[] memory)"
                      }
                    },
                    "id": 81755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11537:112:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81756,
                  "nodeType": "ExpressionStatement",
                  "src": "11537:112:116"
                }
              ]
            },
            "functionSelector": "423c0f1e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "part_kill",
            "nameLocation": "11052:9:116",
            "parameters": {
              "id": 81633,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11061:2:116"
            },
            "returnParameters": {
              "id": 81634,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11071:0:116"
            },
            "scope": 82054,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 81857,
            "nodeType": "FunctionDefinition",
            "src": "11658:444:116",
            "body": {
              "id": 81856,
              "nodeType": "Block",
              "src": "11701:401:116",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81764,
                        "name": "maker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80009,
                        "src": "11721:5:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 81761,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "11707:2:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81763,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5021,
                      "src": "11707:13:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 81765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11707:20:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81766,
                  "nodeType": "ExpressionStatement",
                  "src": "11707:20:116"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 81767,
                        "name": "mgo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80014,
                        "src": "11733:3:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Mango_$41268",
                          "typeString": "contract Mango"
                        }
                      },
                      "id": 81769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "restart",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41023,
                      "src": "11733:11:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 81770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11733:13:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81771,
                  "nodeType": "ExpressionStatement",
                  "src": "11733:13:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81774,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "11762:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          },
                          {
                            "hexValue": "353030",
                            "id": 81775,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11768:3:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_500_by_1",
                              "typeString": "int_const 500"
                            },
                            "value": "500"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            },
                            {
                              "typeIdentifier": "t_rational_500_by_1",
                              "typeString": "int_const 500"
                            }
                          ],
                          "id": 81773,
                          "name": "cash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [70407, 70429],
                          "referencedDeclaration": 70407,
                          "src": "11757:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (contract IERC20,uint256) returns (uint256)"
                          }
                        },
                        "id": 81776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11757:15:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 81778,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "11779:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          },
                          {
                            "hexValue": "3135",
                            "id": 81779,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11785:2:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_15_by_1",
                              "typeString": "int_const 15"
                            },
                            "value": "15"
                          },
                          {
                            "hexValue": "32",
                            "id": 81780,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11789:1:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            },
                            {
                              "typeIdentifier": "t_rational_15_by_1",
                              "typeString": "int_const 15"
                            },
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "id": 81777,
                          "name": "cash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [70407, 70429],
                          "referencedDeclaration": 70429,
                          "src": "11774:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$24851_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (contract IERC20,uint256,uint256) returns (uint256)"
                          }
                        },
                        "id": 81781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11774:17:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 81772,
                      "name": "init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82053,
                      "src": "11752:4:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 81782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11752:40:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81783,
                  "nodeType": "ExpressionStatement",
                  "src": "11752:40:116"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 81784,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "11798:2:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 81786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5038,
                      "src": "11798:12:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 81787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11798:14:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81788,
                  "nodeType": "ExpressionStatement",
                  "src": "11798:14:116"
                },
                {
                  "assignments": [81791],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81791,
                      "mutability": "mutable",
                      "name": "book",
                      "nameLocation": "11831:4:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 81856,
                      "src": "11819:16:116",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Book_$79981_memory_ptr",
                        "typeString": "struct MangoTest.Book"
                      },
                      "typeName": {
                        "id": 81790,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 81789,
                          "name": "Book",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 79981,
                          "src": "11819:4:116"
                        },
                        "referencedDeclaration": 79981,
                        "src": "11819:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Book_$79981_storage_ptr",
                          "typeString": "struct MangoTest.Book"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81795,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 81793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11849:5:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 81792,
                      "name": "get_offers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81887,
                      "src": "11838:10:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_struct$_Book_$79981_memory_ptr_$",
                        "typeString": "function (bool) view returns (struct MangoTest.Book memory)"
                      }
                    },
                    "id": 81794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11838:17:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Book_$79981_memory_ptr",
                      "typeString": "struct MangoTest.Book memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11819:36:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81798,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "11878:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 81797,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "11876:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 81799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11876:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 81801,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "11893:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 81800,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "11891:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 81802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11891:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 81803,
                          "name": "book",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81791,
                          "src": "11906:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Book_$79981_memory_ptr",
                            "typeString": "struct MangoTest.Book memory"
                          }
                        },
                        "id": 81804,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "bids",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79977,
                        "src": "11906:9:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "32",
                                    "id": 81808,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11936:1:116",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    }
                                  ],
                                  "id": 81807,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "11932:3:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_int256_$",
                                    "typeString": "type(int256)"
                                  },
                                  "typeName": {
                                    "id": 81806,
                                    "name": "int",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11932:3:116",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 81809,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11932:6:116",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              {
                                "hexValue": "33",
                                "id": 81810,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11940:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3_by_1",
                                  "typeString": "int_const 3"
                                },
                                "value": "3"
                              },
                              {
                                "hexValue": "34",
                                "id": 81811,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11943:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_4_by_1",
                                  "typeString": "int_const 4"
                                },
                                "value": "4"
                              },
                              {
                                "hexValue": "35",
                                "id": 81812,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11946:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_5_by_1",
                                  "typeString": "int_const 5"
                                },
                                "value": "5"
                              },
                              {
                                "hexValue": "36",
                                "id": 81813,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11949:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              {
                                "hexValue": "30",
                                "id": 81814,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11952:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 81815,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11955:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "id": 81817,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "11958:2:116",
                                "subExpression": {
                                  "hexValue": "38",
                                  "id": 81816,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11959:1:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_8_by_1",
                                    "typeString": "int_const 8"
                                  },
                                  "value": "8"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_minus_8_by_1",
                                  "typeString": "int_const -8"
                                }
                              },
                              {
                                "id": 81819,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "11962:2:116",
                                "subExpression": {
                                  "hexValue": "37",
                                  "id": 81818,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11963:1:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_7_by_1",
                                    "typeString": "int_const 7"
                                  },
                                  "value": "7"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_minus_7_by_1",
                                  "typeString": "int_const -7"
                                }
                              },
                              {
                                "id": 81821,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "11966:2:116",
                                "subExpression": {
                                  "hexValue": "31",
                                  "id": 81820,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11967:1:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_minus_1_by_1",
                                  "typeString": "int_const -1"
                                }
                              }
                            ],
                            "id": 81822,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "11931:38:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_int256_$10_memory_ptr",
                              "typeString": "int256[10] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_int256_$10_memory_ptr",
                              "typeString": "int256[10] memory"
                            }
                          ],
                          "id": 81805,
                          "name": "dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            71448, 71482, 71516, 71550, 71584, 71618, 71652,
                            71686, 71720, 71754, 71788, 71822, 71856, 71890,
                            71924, 71958, 71992, 72026, 72060, 72094, 72131,
                            72168, 72205, 72242, 72279, 72316, 72353, 72390,
                            72427, 72464
                          ],
                          "referencedDeclaration": 72094,
                          "src": "11923:7:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_int256_$10_memory_ptr_$returns$_t_array$_t_int256_$dyn_memory_ptr_$",
                            "typeString": "function (int256[10] memory) pure returns (int256[] memory)"
                          }
                        },
                        "id": 81823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11923:47:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[] memory"
                        }
                      ],
                      "id": 81796,
                      "name": "checkOB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81960,
                      "src": "11861:7:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_int256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256[] memory,int256[] memory)"
                      }
                    },
                    "id": 81824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11861:115:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81825,
                  "nodeType": "ExpressionStatement",
                  "src": "11861:115:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81828,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80004,
                            "src": "11999:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 81827,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "11997:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 81829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11997:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 81831,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "12014:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 81830,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "12012:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 81832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12012:7:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 81833,
                          "name": "book",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81791,
                          "src": "12027:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Book_$79981_memory_ptr",
                            "typeString": "struct MangoTest.Book memory"
                          }
                        },
                        "id": 81834,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "asks",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79980,
                        "src": "12027:9:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 81838,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12057:1:116",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 81837,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "12053:3:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_int256_$",
                                    "typeString": "type(int256)"
                                  },
                                  "typeName": {
                                    "id": 81836,
                                    "name": "int",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12053:3:116",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 81839,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12053:6:116",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              {
                                "id": 81841,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "12061:2:116",
                                "subExpression": {
                                  "hexValue": "38",
                                  "id": 81840,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12062:1:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_8_by_1",
                                    "typeString": "int_const 8"
                                  },
                                  "value": "8"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_minus_8_by_1",
                                  "typeString": "int_const -8"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 81842,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12065:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "id": 81844,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "12068:2:116",
                                "subExpression": {
                                  "hexValue": "36",
                                  "id": 81843,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12069:1:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_6_by_1",
                                    "typeString": "int_const 6"
                                  },
                                  "value": "6"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_minus_6_by_1",
                                  "typeString": "int_const -6"
                                }
                              },
                              {
                                "id": 81846,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "12072:2:116",
                                "subExpression": {
                                  "hexValue": "31",
                                  "id": 81845,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12073:1:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_minus_1_by_1",
                                  "typeString": "int_const -1"
                                }
                              },
                              {
                                "hexValue": "32",
                                "id": 81847,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12076:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              {
                                "hexValue": "33",
                                "id": 81848,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12079:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3_by_1",
                                  "typeString": "int_const 3"
                                },
                                "value": "3"
                              },
                              {
                                "hexValue": "34",
                                "id": 81849,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12082:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_4_by_1",
                                  "typeString": "int_const 4"
                                },
                                "value": "4"
                              },
                              {
                                "hexValue": "35",
                                "id": 81850,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12085:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_5_by_1",
                                  "typeString": "int_const 5"
                                },
                                "value": "5"
                              },
                              {
                                "hexValue": "37",
                                "id": 81851,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12088:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_7_by_1",
                                  "typeString": "int_const 7"
                                },
                                "value": "7"
                              }
                            ],
                            "id": 81852,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "12052:38:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_int256_$10_memory_ptr",
                              "typeString": "int256[10] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_int256_$10_memory_ptr",
                              "typeString": "int256[10] memory"
                            }
                          ],
                          "id": 81835,
                          "name": "dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            71448, 71482, 71516, 71550, 71584, 71618, 71652,
                            71686, 71720, 71754, 71788, 71822, 71856, 71890,
                            71924, 71958, 71992, 72026, 72060, 72094, 72131,
                            72168, 72205, 72242, 72279, 72316, 72353, 72390,
                            72427, 72464
                          ],
                          "referencedDeclaration": 72094,
                          "src": "12044:7:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_int256_$10_memory_ptr_$returns$_t_array$_t_int256_$dyn_memory_ptr_$",
                            "typeString": "function (int256[10] memory) pure returns (int256[] memory)"
                          }
                        },
                        "id": 81853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12044:47:116",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[] memory"
                        }
                      ],
                      "id": 81826,
                      "name": "checkOB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81960,
                      "src": "11982:7:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_int256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256[] memory,int256[] memory)"
                      }
                    },
                    "id": 81854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11982:115:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81855,
                  "nodeType": "ExpressionStatement",
                  "src": "11982:115:116"
                }
              ]
            },
            "functionSelector": "48980f64",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "part_restart_fixed_shift",
            "nameLocation": "11667:24:116",
            "parameters": {
              "id": 81759,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11691:2:116"
            },
            "returnParameters": {
              "id": 81760,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11701:0:116"
            },
            "scope": 82054,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 81887,
            "nodeType": "FunctionDefinition",
            "src": "12195:176:116",
            "body": {
              "id": 81886,
              "nodeType": "Block",
              "src": "12266:105:116",
              "statements": [
                {
                  "assignments": [81871],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81871,
                      "mutability": "mutable",
                      "name": "res",
                      "nameLocation": "12289:3:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 81886,
                      "src": "12272:20:116",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$2_memory_ptr",
                        "typeString": "uint256[][2]"
                      },
                      "typeName": {
                        "baseType": {
                          "baseType": {
                            "id": 81868,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "12272:4:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 81869,
                          "nodeType": "ArrayTypeName",
                          "src": "12272:6:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "id": 81870,
                        "length": {
                          "hexValue": "32",
                          "id": 81867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12279:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "12272:9:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$2_storage_ptr",
                          "typeString": "uint256[][2]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81876,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 81874,
                        "name": "liveOnly",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81859,
                        "src": "12310:8:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 81872,
                        "name": "mgo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80014,
                        "src": "12295:3:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Mango_$41268",
                          "typeString": "contract Mango"
                        }
                      },
                      "id": 81873,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "get_offers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40995,
                      "src": "12295:14:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bool_$returns$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$2_memory_ptr_$",
                        "typeString": "function (bool) view external returns (uint256[] memory[2] memory)"
                      }
                    },
                    "id": 81875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12295:24:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$2_memory_ptr",
                      "typeString": "uint256[] memory[2] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12272:47:116"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 81878,
                          "name": "res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81871,
                          "src": "12344:3:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$2_memory_ptr",
                            "typeString": "uint256[] memory[2] memory"
                          }
                        },
                        "id": 81880,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 81879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12348:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12344:6:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 81881,
                          "name": "res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81871,
                          "src": "12358:3:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$2_memory_ptr",
                            "typeString": "uint256[] memory[2] memory"
                          }
                        },
                        "id": 81883,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 81882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12362:1:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12358:6:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 81877,
                      "name": "Book",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79981,
                      "src": "12332:4:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Book_$79981_storage_ptr_$",
                        "typeString": "type(struct MangoTest.Book storage pointer)"
                      }
                    },
                    "id": 81884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": ["bids", "asks"],
                    "nodeType": "FunctionCall",
                    "src": "12332:34:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Book_$79981_memory_ptr",
                      "typeString": "struct MangoTest.Book memory"
                    }
                  },
                  "functionReturnParameters": 81864,
                  "id": 81885,
                  "nodeType": "Return",
                  "src": "12325:41:116"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get_offers",
            "nameLocation": "12204:10:116",
            "parameters": {
              "id": 81860,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81859,
                  "mutability": "mutable",
                  "name": "liveOnly",
                  "nameLocation": "12220:8:116",
                  "nodeType": "VariableDeclaration",
                  "scope": 81887,
                  "src": "12215:13:116",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 81858,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12215:4:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12214:15:116"
            },
            "returnParameters": {
              "id": 81864,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81863,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 81887,
                  "src": "12253:11:116",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Book_$79981_memory_ptr",
                    "typeString": "struct MangoTest.Book"
                  },
                  "typeName": {
                    "id": 81862,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 81861,
                      "name": "Book",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 79981,
                      "src": "12253:4:116"
                    },
                    "referencedDeclaration": 79981,
                    "src": "12253:4:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Book_$79981_storage_ptr",
                      "typeString": "struct MangoTest.Book"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12252:13:116"
            },
            "scope": 82054,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 81960,
            "nodeType": "FunctionDefinition",
            "src": "12531:450:116",
            "body": {
              "id": 81959,
              "nodeType": "Block",
              "src": "12656:325:116",
              "statements": [
                {
                  "assignments": [81901],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81901,
                      "mutability": "mutable",
                      "name": "sid",
                      "nameLocation": "12666:3:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 81959,
                      "src": "12662:7:116",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 81900,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "12662:3:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81902,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12662:7:116"
                },
                {
                  "body": {
                    "id": 81957,
                    "nodeType": "Block",
                    "src": "12724:253:116",
                    "statements": [
                      {
                        "expression": {
                          "id": 81918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 81914,
                            "name": "sid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 81901,
                            "src": "12732:3:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 81915,
                              "name": "offerStatuses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81897,
                              "src": "12738:13:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                                "typeString": "int256[] memory"
                              }
                            },
                            "id": 81917,
                            "indexExpression": {
                              "id": 81916,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81904,
                              "src": "12752:1:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12738:16:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "12732:22:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 81919,
                        "nodeType": "ExpressionStatement",
                        "src": "12732:22:116"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 81932,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 81923,
                                        "name": "$out",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 81889,
                                        "src": "12791:4:116",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 81924,
                                        "name": "$in",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 81891,
                                        "src": "12797:3:116",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "id": 81926,
                                            "name": "sid",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 81901,
                                            "src": "12806:3:116",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_int256",
                                              "typeString": "int256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_int256",
                                              "typeString": "int256"
                                            }
                                          ],
                                          "id": 81925,
                                          "name": "abs",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 72489,
                                          "src": "12802:3:116",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
                                            "typeString": "function (int256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 81927,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "12802:8:116",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 81921,
                                        "name": "mgv",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 69379,
                                        "src": "12780:3:116",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                                          "typeString": "contract AbstractMangrove"
                                        }
                                      },
                                      "id": 81922,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "offers",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 24205,
                                      "src": "12780:10:116",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_userDefinedValueType$_t_$32167_$",
                                        "typeString": "function (address,address,uint256) view external returns (t)"
                                      }
                                    },
                                    "id": 81928,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "12780:31:116",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                                      "typeString": "t"
                                    }
                                  },
                                  "id": 81929,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "gives",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 32588,
                                  "src": "12780:37:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$32167_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$32167_$",
                                    "typeString": "function (t) pure returns (uint256)"
                                  }
                                },
                                "id": 81930,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12780:39:116",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 81931,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12822:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "12780:43:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              "id": 81935,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 81933,
                                "name": "sid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 81901,
                                "src": "12833:3:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 81934,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12839:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "12833:7:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "77726f6e67206f666665722073746174757320",
                                  "id": 81939,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12864:21:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_a4308b7c4a72ba02badb2fba800d5d950635cd2eb11817aae4cc66c0acb79d45",
                                    "typeString": "literal_string \"wrong offer status \""
                                  },
                                  "value": "wrong offer status "
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 81942,
                                      "name": "sid",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 81901,
                                      "src": "12899:3:116",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 81940,
                                      "name": "vm",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1817,
                                      "src": "12887:2:116",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Vm_$5425",
                                        "typeString": "contract Vm"
                                      }
                                    },
                                    "id": 81941,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "toString",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 5265,
                                    "src": "12887:11:116",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_pure$_t_int256_$returns$_t_string_memory_ptr_$",
                                      "typeString": "function (int256) pure external returns (string memory)"
                                    }
                                  },
                                  "id": 81943,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "12887:16:116",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_a4308b7c4a72ba02badb2fba800d5d950635cd2eb11817aae4cc66c0acb79d45",
                                    "typeString": "literal_string \"wrong offer status \""
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 81937,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "12850:6:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                    "typeString": "type(string storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 81936,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12850:6:116",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 81938,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "concat",
                                "nodeType": "MemberAccess",
                                "src": "12850:13:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                                  "typeString": "function () pure returns (string memory)"
                                }
                              },
                              "id": 81944,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12850:54:116",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 81920,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996,
                              3033, 3070, 320, 345, 375, 400, 459, 484, 514,
                              539, 1639, 1674
                            ],
                            "referencedDeclaration": 2804,
                            "src": "12762:8:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,bool,string memory)"
                            }
                          },
                          "id": 81945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12762:150:116",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 81946,
                        "nodeType": "ExpressionStatement",
                        "src": "12762:150:116"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 81948,
                                "name": "offerIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 81894,
                                "src": "12929:8:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 81950,
                              "indexExpression": {
                                "id": 81949,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 81904,
                                "src": "12938:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12929:11:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 81952,
                                  "name": "sid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 81901,
                                  "src": "12946:3:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                ],
                                "id": 81951,
                                "name": "abs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 72489,
                                "src": "12942:3:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
                                  "typeString": "function (int256) pure returns (uint256)"
                                }
                              },
                              "id": 81953,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12942:8:116",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "4f66666572206d6973706c61636564",
                              "id": 81954,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12952:17:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7e7fbd31a9e5374ad1331decd706b6380e4fda17e31ea6ccd7f59a72ac045e61",
                                "typeString": "literal_string \"Offer misplaced\""
                              },
                              "value": "Offer misplaced"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7e7fbd31a9e5374ad1331decd706b6380e4fda17e31ea6ccd7f59a72ac045e61",
                                "typeString": "literal_string \"Offer misplaced\""
                              }
                            ],
                            "id": 81947,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996,
                              3033, 3070, 320, 345, 375, 400, 459, 484, 514,
                              539, 1639, 1674
                            ],
                            "referencedDeclaration": 539,
                            "src": "12920:8:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 81955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12920:50:116",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 81956,
                        "nodeType": "ExpressionStatement",
                        "src": "12920:50:116"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 81910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 81907,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81904,
                      "src": "12693:1:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 81908,
                        "name": "offerStatuses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81897,
                        "src": "12697:13:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[] memory"
                        }
                      },
                      "id": 81909,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "12697:20:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12693:24:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 81958,
                  "initializationExpression": {
                    "assignments": [81904],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 81904,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "12686:1:116",
                        "nodeType": "VariableDeclaration",
                        "scope": 81958,
                        "src": "12681:6:116",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 81903,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12681:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 81906,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 81905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12690:1:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "12681:10:116"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 81912,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "12719:3:116",
                      "subExpression": {
                        "id": 81911,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81904,
                        "src": "12719:1:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 81913,
                    "nodeType": "ExpressionStatement",
                    "src": "12719:3:116"
                  },
                  "nodeType": "ForStatement",
                  "src": "12676:301:116"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkOB",
            "nameLocation": "12540:7:116",
            "parameters": {
              "id": 81898,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81889,
                  "mutability": "mutable",
                  "name": "$out",
                  "nameLocation": "12561:4:116",
                  "nodeType": "VariableDeclaration",
                  "scope": 81960,
                  "src": "12553:12:116",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 81888,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12553:7:116",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81891,
                  "mutability": "mutable",
                  "name": "$in",
                  "nameLocation": "12579:3:116",
                  "nodeType": "VariableDeclaration",
                  "scope": 81960,
                  "src": "12571:11:116",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 81890,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12571:7:116",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81894,
                  "mutability": "mutable",
                  "name": "offerIds",
                  "nameLocation": "12602:8:116",
                  "nodeType": "VariableDeclaration",
                  "scope": 81960,
                  "src": "12588:22:116",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 81892,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "12588:4:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 81893,
                    "nodeType": "ArrayTypeName",
                    "src": "12588:6:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81897,
                  "mutability": "mutable",
                  "name": "offerStatuses",
                  "nameLocation": "12629:13:116",
                  "nodeType": "VariableDeclaration",
                  "scope": 81960,
                  "src": "12616:26:116",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                    "typeString": "int256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 81895,
                      "name": "int",
                      "nodeType": "ElementaryTypeName",
                      "src": "12616:3:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "id": 81896,
                    "nodeType": "ArrayTypeName",
                    "src": "12616:5:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
                      "typeString": "int256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12547:99:116"
            },
            "returnParameters": {
              "id": 81899,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12656:0:116"
            },
            "scope": 82054,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 82053,
            "nodeType": "FunctionDefinition",
            "src": "13023:564:116",
            "body": {
              "id": 82052,
              "nodeType": "Block",
              "src": "13078:509:116",
              "statements": [
                {
                  "assignments": [81968],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81968,
                      "mutability": "mutable",
                      "name": "slice",
                      "nameLocation": "13089:5:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 82052,
                      "src": "13084:10:116",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 81967,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13084:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81972,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 81971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 81969,
                      "name": "NSLOTS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79994,
                      "src": "13097:6:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "32",
                      "id": 81970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13106:1:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "13097:10:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13084:23:116"
                },
                {
                  "assignments": [81977],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81977,
                      "mutability": "mutable",
                      "name": "pivotIds",
                      "nameLocation": "13152:8:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 82052,
                      "src": "13138:22:116",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 81975,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13138:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 81976,
                        "nodeType": "ArrayTypeName",
                        "src": "13138:6:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81983,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 81981,
                        "name": "NSLOTS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79994,
                        "src": "13174:6:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 81980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "13163:10:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 81978,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13167:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 81979,
                        "nodeType": "ArrayTypeName",
                        "src": "13167:6:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 81982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13163:18:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13138:43:116"
                },
                {
                  "assignments": [81988],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81988,
                      "mutability": "mutable",
                      "name": "amounts",
                      "nameLocation": "13201:7:116",
                      "nodeType": "VariableDeclaration",
                      "scope": 82052,
                      "src": "13187:21:116",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 81986,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13187:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 81987,
                        "nodeType": "ArrayTypeName",
                        "src": "13187:6:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81994,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 81992,
                        "name": "NSLOTS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79994,
                        "src": "13222:6:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 81991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "13211:10:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 81989,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13215:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 81990,
                        "nodeType": "ArrayTypeName",
                        "src": "13215:6:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 81993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13211:18:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13187:42:116"
                },
                {
                  "body": {
                    "id": 82018,
                    "nodeType": "Block",
                    "src": "13269:66:116",
                    "statements": [
                      {
                        "expression": {
                          "id": 82016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 82005,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81988,
                              "src": "13277:7:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 82007,
                            "indexExpression": {
                              "id": 82006,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81996,
                              "src": "13285:1:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "13277:10:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 82012,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 82008,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 81996,
                                "src": "13290:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 82011,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 82009,
                                  "name": "NSLOTS",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 79994,
                                  "src": "13294:6:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "32",
                                  "id": 82010,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13303:1:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "13294:10:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "13290:14:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseExpression": {
                              "id": 82014,
                              "name": "askAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81964,
                              "src": "13319:9:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 82015,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "Conditional",
                            "src": "13290:38:116",
                            "trueExpression": {
                              "id": 82013,
                              "name": "bidAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81962,
                              "src": "13307:9:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13277:51:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 82017,
                        "nodeType": "ExpressionStatement",
                        "src": "13277:51:116"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 82001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 81999,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81996,
                      "src": "13252:1:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 82000,
                      "name": "NSLOTS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79994,
                      "src": "13256:6:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13252:10:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 82019,
                  "initializationExpression": {
                    "assignments": [81996],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 81996,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "13245:1:116",
                        "nodeType": "VariableDeclaration",
                        "scope": 82019,
                        "src": "13240:6:116",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 81995,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13240:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 81998,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 81997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13249:1:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "13240:10:116"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 82003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "13264:3:116",
                      "subExpression": {
                        "id": 82002,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81996,
                        "src": "13264:1:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 82004,
                    "nodeType": "ExpressionStatement",
                    "src": "13264:3:116"
                  },
                  "nodeType": "ForStatement",
                  "src": "13235:100:116"
                },
                {
                  "body": {
                    "id": 82050,
                    "nodeType": "Block",
                    "src": "13370:213:116",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "74727565",
                              "id": 82033,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13410:4:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "hexValue": "34",
                              "id": 82034,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13441:1:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              },
                              "value": "4"
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 82037,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 82035,
                                "name": "slice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 81968,
                                "src": "13458:5:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 82036,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82021,
                                "src": "13466:1:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "13458:9:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 82043,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 82038,
                                "name": "slice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 81968,
                                "src": "13481:5:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 82041,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 82039,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 82021,
                                      "src": "13490:1:116",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 82040,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "13494:1:116",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "13490:5:116",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 82042,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "13489:7:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "13481:15:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 82044,
                                  "name": "pivotIds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 81977,
                                  "src": "13517:8:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                {
                                  "id": 82045,
                                  "name": "pivotIds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 81977,
                                  "src": "13527:8:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                }
                              ],
                              "id": 82046,
                              "isConstant": false,
                              "isInlineArray": true,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "13516:20:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$2_memory_ptr",
                                "typeString": "uint256[] memory[2] memory"
                              }
                            },
                            {
                              "id": 82047,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81988,
                              "src": "13560:7:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$2_memory_ptr",
                                "typeString": "uint256[] memory[2] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            ],
                            "expression": {
                              "id": 82030,
                              "name": "mgo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80014,
                              "src": "13378:3:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Mango_$41268",
                                "typeString": "contract Mango"
                              }
                            },
                            "id": 82032,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "initialize",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40663,
                            "src": "13378:14:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$2_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (bool,uint256,uint256,uint256,uint256[] memory[2] memory,uint256[] memory) external"
                            }
                          },
                          "id": 82048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [
                            "reset",
                            "lastBidPosition",
                            "from",
                            "to",
                            "pivotIds",
                            "tokenAmounts"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "13378:198:116",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 82049,
                        "nodeType": "ExpressionStatement",
                        "src": "13378:198:116"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 82026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 82024,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82021,
                      "src": "13358:1:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "32",
                      "id": 82025,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13362:1:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "13358:5:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 82051,
                  "initializationExpression": {
                    "assignments": [82021],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 82021,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "13351:1:116",
                        "nodeType": "VariableDeclaration",
                        "scope": 82051,
                        "src": "13346:6:116",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 82020,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13346:4:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 82023,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 82022,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13355:1:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "13346:10:116"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 82028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "13365:3:116",
                      "subExpression": {
                        "id": 82027,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82021,
                        "src": "13365:1:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 82029,
                    "nodeType": "ExpressionStatement",
                    "src": "13365:3:116"
                  },
                  "nodeType": "ForStatement",
                  "src": "13341:242:116"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "init",
            "nameLocation": "13032:4:116",
            "parameters": {
              "id": 81965,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81962,
                  "mutability": "mutable",
                  "name": "bidAmount",
                  "nameLocation": "13042:9:116",
                  "nodeType": "VariableDeclaration",
                  "scope": 82053,
                  "src": "13037:14:116",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81961,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "13037:4:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81964,
                  "mutability": "mutable",
                  "name": "askAmount",
                  "nameLocation": "13058:9:116",
                  "nodeType": "VariableDeclaration",
                  "scope": 82053,
                  "src": "13053:14:116",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81963,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "13053:4:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13036:32:116"
            },
            "returnParameters": {
              "id": 81966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13078:0:116"
            },
            "scope": 82054,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 79973,
              "name": "MangroveTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 70515,
              "src": "251:12:116"
            },
            "id": 79974,
            "nodeType": "InheritanceSpecifier",
            "src": "251:12:116"
          }
        ],
        "canonicalName": "MangoTest",
        "contractDependencies": [
          23581, 23707, 41268, 72689, 73404, 73996, 76251
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          82054, 70515, 24715, 70890, 72490, 3455, 2022, 1786
        ],
        "name": "MangoTest",
        "nameLocation": "238:9:116",
        "scope": 82055,
        "usedErrors": []
      }
    ],
    "license": "AGPL-3.0"
  },
  "id": 116
}
